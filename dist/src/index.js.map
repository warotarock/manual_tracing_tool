{"version":3,"file":"index.js","sources":["../../vite/modulepreload-polyfill","../../node_modules/object-assign/index.js","../../node_modules/react/cjs/react.production.min.js","../../node_modules/react/index.js","../../node_modules/scheduler/cjs/scheduler.production.min.js","../../node_modules/scheduler/index.js","../../node_modules/react-dom/cjs/react-dom.production.min.js","../../node_modules/react-dom/index.js","../../src/app/common-logics/math.ts","../../src/app/common-logics/color.ts","../../src/app/common-logics/conversion.ts","../../src/app/common-logics/layout.ts","../../src/app/common-logics/points.ts","../../src/app/common-logics/rectangle-area.ts","../../src/platform/platform.ts","../../src/platform/user-strage.ts","../../src/app/command/command-history.ts","../../src/app/document-data/animation.ts","../../src/app/document-data/layer.ts","../../src/app/document-data/fill-drawable.ts","../../src/app/document-rendering/gpu-line.ts","../../src/app/render/render2d.ts","../../src/app/render/render3d.ts","../../src/app/document-rendering/rendering-shaders.ts","../../src/app/tool/clip-board.ts","../../src/app/tool/constants.ts","../../src/app/tool/sub-tool.ts","../../src/app/tool/main-tool.ts","../../src/app/tool/tool-pointer-event.ts","../../src/app/document-drawing/drawing-vector-layer.ts","../../src/app/document-rendering/rendering-vector-layer.ts","../../src/app/document-data/stroke-drawable.ts","../../src/app/document-data/vector_layer.ts","../../src/app/document-data/auto-fill-layer.ts","../../src/app/document-data/palette.ts","../../src/app/document-data/document-data.ts","../../src/app/document-data/group-layer.ts","../../src/app/posing3d/posing3d-logic.ts","../../src/app/posing3d/posing3d-model.ts","../../src/app/posing3d/posing3d-view.ts","../../src/app/document-data/image-file-reference-layer.ts","../../src/app/document-data/posing-layer.ts","../../src/app/document-data/vector-layer-reference-layer.ts","../../src/app/deffered-process/deffered-process-flagging.ts","../../src/app/deffered-process/lazy-update-state.ts","../../src/app/view/layer-highlighting.ts","../../src/app/view/view-pointer_event.ts","../../src/app/view/view-coordinate.ts","../../src/app/view/pointer-input.ts","../../src/app/view/view-keyframe.ts","../../src/app/view/view-layer-list.ts","../../src/app/view/view-operation.ts","../../src/app/document-logic/vector-stroke-hittest.ts","../../src/app/document-logic/vector-layer-hittest.ts","../../src/app/document-logic/vector-layer.ts","../../src/app/document-logic/vector-point.ts","../../src/app/document-logic/vector-stroke.ts","../../src/app/document-logic/auto-fill.ts","../../src/app/document-migration/migration-v000101.ts","../../src/app/document-migration/migration-v000102.ts","../../src/app/document-migration/migration-v000103.ts","../../src/app/document-logic/deserializing.ts","../../src/app/document-logic/edit-animation-frame.ts","../../src/app/document-logic/eyes-symmetry.ts","../../src/app/document-logic/file-name.ts","../../src/app/document-logic/layer.ts","../../src/app/document-logic/refference-updating.ts","../../src/app/document-logic/selector.ts","../../src/app/document-logic/serializing.ts","../../src/app/command/command.ts","../../src/app/commands/add-stroke.ts","../../src/app/commands/edit-animation.ts","../../src/app/commands/edit-copy.ts","../../src/app/commands/edit-layer.ts","../../src/app/commands/image-reference-layer.ts","../../src/app/commands/vector-layer-delete-base.ts","../../src/app/commands/vector-layer-delete-empties.ts","../../src/app/commands/vector-layer-delete-selected.ts","../../src/app/loading/document-loader.ts","../../src/app/loading/resource-loader.ts","../../src/app/loading/document-loading.ts","../../src/app/loading/system-resource-loading.ts","../../src/app/ui/color-mixer-window.ts","../../src/app/ui/constants.ts","../../src/app/ui/dialog-screen.ts","../../src/app/ui/footer-window.ts","../../src/app/ui/header-window.ts","../../src/app/ui/layer-window.ts","../../src/app/ui/modal-window.ts","../../src/app/ui/palette-selector-window.ts","../../src/app/dom/dom-element-id.ts","../../src/app/dom/dom-value.ts","../../src/app/dom/dom-resizing.ts","../../src/app/dom/dom.ts","../../src/app/ui-common-controls/icon-material-icon.tsx","../../src/app/ui-common-controls/checkbox.tsx","../../src/app/ui-common-controls/color-slider.tsx","../../src/app/ui-common-controls/command-button.tsx","../../src/app/ui-common-controls/command-buttons.tsx","../../src/app/ui-common-controls/number-input.tsx","../../src/app/ui-common-controls/number-spinner.tsx","../../src/app/ui-common-controls/radiobutton.tsx","../../src/app/ui-common-controls/scroll-view.tsx","../../src/app/ui-popover/popover-container.tsx","../../src/app/ui-popover/brush-property-box.tsx","../../src/app/ui-popover/main-menu-button.tsx","../../src/app/ui-popover/selectbox.tsx","../../src/app/ui-popover/popover-router.tsx","../../src/app/ui/popover.ts","../../src/app/ui/ribbon-ui-window.ts","../../src/app/ui/subtool-window.ts","../../src/app/ui/timeline-window.ts","../../src/app/user-setting/local-setting.ts","../../src/app/user-setting/shortcut-key.ts","../../src/app/user-setting/user-setting-file.ts","../../src/app/user-setting/user-ui-state.ts","../../src/app/app-document.ts","../../src/app/document-drawing/draw-path-buffer.ts","../../src/app/document-drawing/draw-path-render-cache.ts","../../src/app/document-drawing/draw-path.ts","../../src/app/document-drawing/draw-path-buffering.ts","../../src/app/document-drawing/draw-path-step.ts","../../src/app/document-drawing/draw-path-collecting.ts","../../src/app/document-drawing/drawing-eyes-symmetry.ts","../../src/app/document-drawing/drawing-image-file-reference-layer.ts","../../src/app/document-drawing/drawing-point-brush.ts","../../src/app/document-drawing/drawing-posing3d.ts","../../src/app/document-drawing/drawing-stroke.ts","../../src/app/document-drawing/drawing-style.ts","../../src/app/editor/canvas-frame.ts","../../src/app/editor/canvas-ruler.ts","../../src/app/editor/editor-drawer.ts","../../src/app/resource-files/svg.ts","../../src/app/editor/operation-panel.ts","../../src/app/editor/operator-cursor.ts","../../src/app/app-drawing.ts","../../src/app/ui-dialog-screen/dialog-screen-conatiner.tsx","../../src/app/ui-dialog-screen/dialog-document-filer.tsx","../../src/app/ui-dialog-screen/dialog-shortcut-keys.tsx","../../src/app/app-event.ts","../../src/app/app-deffered-process.ts","../../src/app/tools-main-tab/auto-fill.ts","../../src/app/tools-main-tab/document.ts","../../src/app/tools-main-tab/drawing.ts","../../src/app/tools-main-tab/edit-disabled.ts","../../src/app/tools-main-tab/edit.ts","../../src/app/tools-main-tab/group.ts","../../src/app/tools-main-tab/image-file-reference.ts","../../src/app/tools-main-tab/layer.ts","../../src/app/tools-main-tab/point-brush-fill.ts","../../src/app/tools-main-tab/posing3d.ts","../../src/app/tools-main-tab/view.ts","../../src/app/tools-main/auto-fill-layer.ts","../../src/app/tools-main/group-layer.ts","../../src/app/tools-main/image-file-reference-layer.ts","../../src/app/tools-main/point-brush-fill-layer.ts","../../src/app/tools-main/posing3d-layer.ts","../../src/app/tools-main/vector-layer.ts","../../src/app/tools-sub/select-brush-select.ts","../../src/app/tools-sub/delete-points-divide-line.ts","../../src/app/tools-sub/draw-line.ts","../../src/app/tools-sub/draw-point-brush.ts","../../src/app/tools-sub/edit-auto-fill.ts","../../src/app/tools-sub/transform-lattice.ts","../../src/app/tools-sub/edit-document-frame.ts","../../src/app/tools-sub/edit-image-file-ref.ts","../../src/app/tools-sub/transform-line-point.ts","../../src/app/tools-sub/edit-mode-main.ts","../../src/app/tools-sub/edit-points.ts","../../src/app/tools-sub/locate-operator-cursor.ts","../../src/app/tools-sub/no-operation.ts","../../src/app/tools-sub/posing3d.ts","../../src/app/tools-sub/resample-segment.ts","../../src/app/tools-sub/scratch-line.ts","../../src/app/tools-sub/scratch-line-draw.ts","../../src/app/tools-sub/scratch-line-width.ts","../../src/app/tools-sub/select-points-all.ts","../../src/app/app-tool.ts","../../src/app/app-user-setting.ts","../../src/app/app-view.ts","../../src/app/context/document-context.ts","../../src/app/context/subtool-context.ts","../../src/app/context/subtool-drawing-context.ts","../../src/app/app-main.ts","../../src/app/ui-ribbon/ribbon-controls.tsx","../../src/app/ui-ribbon/ribbon-auto-fill-layer.tsx","../../src/app/ui-ribbon/ribbon-document.tsx","../../src/app/ui-ribbon/ribbon-edit.tsx","../../src/app/ui-ribbon/ribbon-home.tsx","../../src/app/ui-ribbon/ribbon-layer-vector-layer.tsx","../../src/app/ui-ribbon/ribbon-layer.tsx","../../src/app/ui-ribbon/ribbon-main-drawing.tsx","../../src/app/ui-ribbon/ribbon-main-group.tsx","../../src/app/ui-ribbon/ribbon-main-image-file-ref.tsx","../../src/app/ui-ribbon/ribbon-ui-tabs.tsx","../../src/app/ui-ribbon/ribbon-view.tsx","../../src/app/ui-ribbon/subtool-window.tsx","../../src/app/ui-ribbon/ribbon-point-brush-fill.tsx","../../src/app/ui-ribbon/ribbon-ui.tsx","../../src/app/ui-modal-window/modal-window-container.tsx","../../src/app/ui-modal-window/modal-export-image.tsx","../../src/app/ui-modal-window/modal-image-file-ref.tsx","../../src/app/ui-modal-window/modal-radio-selection.tsx","../../src/app/ui-panel/footer-operation-panel.tsx","../../src/app/ui-panel/header-window.tsx","../../src/app/ui-panel/time-line-window.tsx","../../src/app/ui-sidebar/color-mixer-window.tsx","../../src/app/ui-sidebar/layer-window.tsx","../../src/app/ui-sidebar/palette-selector-window.tsx","../../src/app/ui-sidebar/side-bar-container.tsx","../../src/index.ts"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","﻿import { float } from './conversion'\n\nexport class Maths {\n\n  // GLSL like math functions\n  static clamp(x: float, a: float, b: float): float {\n\n    return (x < a ? a : (x > b ? b : x))\n  }\n\n  static lerp(x: float, a: float, b: float): float {\n\n    return a + x * (b - a)\n  }\n\n  static fract(x: float): float {\n\n    return x - Math.floor(x)\n  }\n\n  static step(edge: float, x: float): float {\n\n    return x < edge ? 0.0 : 1.0\n  }\n\n  static smoothstep(edge0: float, edge1: float, x: float): float {\n\n    const t = Maths.clamp((x - edge0) / (edge1 - edge0), 0, 1)\n\n    return t * t * (3 - 2 * t)\n  }\n\n  // Guassian\n  private static gaussian(x: float, eRange: float): float {\n\n    const d = eRange * eRange\n    const timeScale = 0.5\n    const r = 1 + 2 * x\n\n    return Math.exp(-timeScale * r * r / d)\n  }\n\n  // Sigmoid input x=0.0～1.0 returns almost 0.0～1.0 value\n  static sigmoid10(x: float): float {\n\n    const a = 1.0 / (1.0 + Math.exp(-20 * (x - 0.5)))\n\n    return a\n  }\n\n  // Half of sigmoid10 (part of after x=0.5)\n  static sigmoid10half(x: float): float {\n\n    return (Maths.sigmoid10(0.5 + x * 0.5) - 0.5) * 2.0\n  }\n\n  static pointToLineSegment_SorroundingDistance(x0: float, y0: float, x1: float, y1: float, x2: float, y2: float): float {\n\n    // from: https://zenn.dev/boiledorange73/articles/0037-js-distance-pt-seg\n\n    const a = x2 - x1\n    const b = y2 - y1\n    const a2 = a * a\n    const b2 = b * b\n    const r2 = a2 + b2\n\n    if (r2 < 0.000001) {\n\n      return (x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1)\n    }\n\n    const tt = -(a * (x1 - x0) + b * (y1 - y0))\n\n    if (tt < 0) {\n\n      return (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0)\n    }\n\n    if (tt > r2) {\n\n      return (x2 - x0) * (x2 - x0) + (y2 - y0) * (y2 - y0)\n    }\n\n    const f1 = a * (y1 - y0) - b * (x1 - x0)\n\n    return (f1 * f1) / r2\n  }\n\n  static pointToLine_Distance(P_x: float, P_y: float, A_x: float, A_y: float, B_x: float, B_y: float): float {\n\n    // from: http://www.sousakuba.com/Programming/gs_dot_line_distance.html\n\n    const AB_x = B_x - A_x\n    const AB_y = B_y - A_y\n    const AP_x = P_x - A_x\n    const AP_y = P_y - A_y\n\n    //ベクトルAB、APの外積の絶対値が平行四辺形Dの面積になる\n    const D = Math.abs(AB_x * AP_y - AB_y * AP_x)\n\n    const L = Math.sqrt((B_x - A_x) * (B_x - A_x) + (B_y - A_y) * (B_y - A_y))\t//AB間の距離\n\n    const H = D / L\n\n    return H\n  }\n\n  static pointToLine_NearestPointNormalizedPosition(P_x: float, P_y: float, A_x: float, A_y: float, B_x: float, B_y: float): float {\n\n    // from: http://www.sousakuba.com/Programming/gs_near_pos_on_line.html\n\n    const AB_x = B_x - A_x\n    const AB_y = B_y - A_y\n    const AP_x = P_x - A_x\n    const AP_y = P_y - A_y\n\n    //ABの単位ベクトルを計算\n    const len = Math.sqrt(AB_x * AB_x + AB_y * AB_y)\n    if (len <= 0.0) {\n      return null\n    }\n    const nAB_x = AB_x / len\n    const nAB_y = AB_y / len\n\n    //Aから線上最近点までの距離（ABベクトルの後ろにあるときはマイナス値）\n    const dist_AX = (nAB_x * AP_x + nAB_y * AP_y)\n\n    return dist_AX / len\n  }\n\n  static pointToLine_NearestPoint(result: Vec3, P_x: float, P_y: float, A_x: float, A_y: float, B_x: float, B_y: float): Vec3 {\n\n    // from: http://www.sousakuba.com/Programming/gs_near_pos_on_line.html\n\n    const AB_x = B_x - A_x\n    const AB_y = B_y - A_y\n    const AP_x = P_x - A_x\n    const AP_y = P_y - A_y\n\n    //ABの単位ベクトルを計算\n    const len = Math.sqrt(AB_x * AB_x + AB_y * AB_y)\n    if (len <= 0.0) {\n      return null\n    }\n    const nAB_x = AB_x / len\n    const nAB_y = AB_y / len\n\n    //Aから線上最近点までの距離（ABベクトルの後ろにあるときはマイナス値）\n    const dist_AX = (nAB_x * AP_x + nAB_y * AP_y)\n\n    //線上最近点\n    result[0] = A_x + (nAB_x * dist_AX)\n    result[1] = A_y + (nAB_y * dist_AX)\n\n    return result\n  }\n\n  static lineToLine_CrossPoint(result: Vec3, L1_x: float, L1_y: float, L2_x: float, L2_y: float, L3_x: float, L3_y: float, L4_x: float, L4_y: float): boolean {\n\n    // from: https://mf-atelier.sakura.ne.jp/mf-atelier2/a1/\n\n    let ksi = (L4_y - L3_y) * (L4_x - L1_x) - (L4_x - L3_x) * (L4_y - L1_y)\n    let eta = (L2_x - L1_x) * (L4_y - L1_y) - (L2_y - L1_y) * (L4_x - L1_x)\n    let delta = (L2_x - L1_x) * (L4_y - L3_y) - (L2_y - L1_y) * (L4_x - L3_x)\n\n    let ramda = ksi / delta;\n    let mu = eta / delta;\n\n    // console.log(`crossing?`, L1_x, L1_y, L2_x, L2_y, L3_x, L3_y, L4_x, L4_y)\n\n    if ((ramda >= 0 && ramda <= 1) && (mu >= 0 && mu <= 1)) {\n\n      result[0] = L1_x + ramda * (L2_x - L1_x)\n      result[1] = L1_y + ramda * (L2_y - L1_y)\n\n      // console.log(`  is crossing`, result[0], result[1])\n      return true;\n    }\n\n    return false;\n  }\n\n  static copyTranslation(result: Vec3, matrix: Mat4) {\n\n    result[0] = matrix[12]\n    result[1] = matrix[13]\n    result[2] = matrix[14]\n  }\n\n  static mat4SetVectors(result: Mat4, vecX: Vec3, vecY: Vec3, vecZ: Vec3) {\n\n    result[0] = vecX[0]\n    result[1] = vecX[1]\n    result[2] = vecX[2]\n    result[3] = 0.0\n\n    result[4] = vecY[0]\n    result[5] = vecY[1]\n    result[6] = vecY[2]\n    result[7] = 0.0\n\n    result[8] = vecZ[0]\n    result[9] = vecZ[1]\n    result[10] = vecZ[2]\n    result[11] = 0.0\n  }\n\n  static mat4SegmentMat(result: Mat4, resultNormalVec: Vec4, locationFrom: Vec3, locationTo: Vec3) {\n\n    vec3.subtract(resultNormalVec, locationTo, locationFrom)\n    vec3.normalize(resultNormalVec, resultNormalVec)\n\n    result[0] = resultNormalVec[0]\n    result[1] = resultNormalVec[1]\n    result[2] = 0.0\n    result[3] = 0.0\n\n    result[4] = -resultNormalVec[1]\n    result[5] = resultNormalVec[0]\n    result[6] = 0.0\n    result[7] = 0.0\n\n    result[8] = 0.0\n    result[9] = 0.0\n    result[10] = 1.0\n    result[11] = 1.0\n\n    result[12] = locationFrom[0]\n    result[13] = locationFrom[1]\n    result[14] = 0.0\n    result[15] = 1.0\n  }\n\n  static getRoundedAngle(angle: float): float {\n\n    if (angle <= -Math.PI) {// TODO: 共通化する\n      angle += Math.PI * 2\n    }\n    if (angle >= Math.PI) {\n      angle -= Math.PI * 2\n    }\n\n    return angle\n  }\n}\n","﻿import { float } from './conversion'\nimport { Maths } from './math'\n\nexport class ColorLogic {\n\n    private static floatToHex2String(v: float) {\n\n        return (('00' + v.toString(16)).substr(-2))\n    }\n\n    static rgbToHex2String(color: Vec4) {\n\n        return `${this.floatToHex2String(Math.floor(color[0] * 255.0))}${this.floatToHex2String(Math.floor(color[1] * 255.0))}${this.floatToHex2String(Math.floor(color[2] * 255.0))}`\n    }\n\n    static rgbaToRgbaString(color: Vec4) {\n\n      return `${(color[0] * 255.0).toFixed(0)},${(color[1] * 255.0).toFixed(0)},${(color[2] * 255.0).toFixed(0)},${color[3].toFixed(3)}`\n    }\n\n    static hex2StringToRGB(result: Vec4, colorString: string): Vec4 {\n\n        result[0] = parseInt(colorString.substring(1, 3), 16) / 255.0\n        result[1] = parseInt(colorString.substring(3, 5), 16) / 255.0\n        result[2] = parseInt(colorString.substring(5, 7), 16) / 255.0\n\n        return result\n    }\n\n    private static hsvToRGB_Element(h: float, s: float, v: float, baseElement: float): float {\n\n        return ((Maths.clamp(Math.abs(Maths.fract(h + baseElement / 3.0) * 6.0 - 3.0) - 1.0, 0.0, 1.0) - 1.0) * s + 1.0) * v\n    }\n\n    static hsvToRGB(out: Vec4, h: float, s: float, v: float) {\n\n        out[0] = this.hsvToRGB_Element(h, s, v, 0.0)\n        out[1] = this.hsvToRGB_Element(h, s, v, 2.0)\n        out[2] = this.hsvToRGB_Element(h, s, v, 1.0)\n    }\n\n    static hsvToRGBv(out: Vec4, hsv: Vec4) {\n\n      this.hsvToRGB(out, hsv[0], hsv[1], hsv[2])\n    }\n\n    private static rgbToHSV_bgKwz = vec4.create()\n    private static rgbToHSV_gbKxy = vec4.create()\n    private static rgbToHSV_p = vec4.create()\n    private static rgbToHSV_Pxywr = vec4.create()\n    private static rgbToHSV_rPyzx = vec4.create()\n    private static rgbToHSV_q = vec4.create()\n\n    static rgbToHSV(result: Vec4, r: float, g: float, b: float) {\n\n        const Kx = 0.0\n        const Ky = -1.0 / 3.0\n        const Kz = 2.0 / 3.0\n        const Kw = -1.0\n\n        vec4.set(this.rgbToHSV_bgKwz, b, g, Kw, Kz)\n        vec4.set(this.rgbToHSV_gbKxy, g, b, Kx, Ky)\n        vec4.lerp(this.rgbToHSV_p, this.rgbToHSV_bgKwz, this.rgbToHSV_gbKxy, Maths.step(b, g))\n\n        const px = this.rgbToHSV_p[0]\n        const py = this.rgbToHSV_p[1]\n        const pz = this.rgbToHSV_p[2]\n        const pw = this.rgbToHSV_p[3]\n\n        vec4.set(this.rgbToHSV_Pxywr, px, py, pw, r)\n        vec4.set(this.rgbToHSV_rPyzx, r, py, pz, px)\n        vec4.lerp(this.rgbToHSV_q, this.rgbToHSV_Pxywr, this.rgbToHSV_rPyzx, Maths.step(px, r))\n\n        const qx = this.rgbToHSV_q[0]\n        const qy = this.rgbToHSV_q[1]\n        const qz = this.rgbToHSV_q[2]\n        const qw = this.rgbToHSV_q[3]\n\n        const d = qx - Math.min(qw, qy)\n\n        const e = 1.0e-10\n\n        result[0] = Math.abs(qz + (qw - qy) / (6.0 * d + e))\n        result[1] = d / (qx + e)\n        result[2] = qx\n    }\n\n    static rgbToHSVv(out: Vec4, rgb: Vec4) {\n\n      this.rgbToHSV(out, rgb[0], rgb[1], rgb[2])\n    }\n}\n","﻿\nexport type int = number\nexport type float = number\n\nexport class Lists {\n\n  static addRange<T>(destList: T[], addList: T[]) {\n\n    Array.prototype.push.apply(destList, addList)\n  }\n\n  static getRange<T>(srcList: T[], index: int, length: int): T[] {\n\n    return srcList.slice(index, index + length)\n  }\n\n  static getRangeToLast<T>(srcList: T[], index: int): T[] {\n\n    return srcList.slice(index, srcList.length)\n  }\n\n  static insertRangeToTop<T>(destList: T[], addList: T[]): T[] {\n\n    return [...addList, ...destList]\n  }\n\n  static insertAt<T>(destList: T[], index: int, item: T) {\n\n    destList.splice(index, 0, item)\n  }\n\n  static removeAt<T>(destList: T[], index: int) {\n\n    destList.splice(index, 1)\n  }\n\n  static clone<T>(list: T[]): T[] {\n\n    return list.slice()\n  }\n\n  static reverse<T>(list: T[]): T[] {\n\n    return list.reverse()\n  }\n\n  static cloneReversed<T>(list: T[]): T[] {\n\n    return Lists.clone(list).reverse()\n  }\n}\n\nexport class Strings {\n\n  static isNullOrEmpty(str: string): boolean {\n\n    return (str === null || str === undefined || str === \"\")\n  }\n\n  static indexOf(str: string, searchString: string, startPosition?: int): int {\n\n    if (startPosition == -1) {\n\n      startPosition = undefined\n    }\n\n    return str.indexOf(searchString, startPosition)\n  }\n\n  static lastIndexOf(str: string, searchString: string): int {\n\n    return str.lastIndexOf(searchString)\n  }\n\n  static substring(text: string, startIndex: int, length?: int): string {\n\n    if (length) {\n\n      if (length > 0) {\n\n        if (length >= text.length) {\n          return ''\n        }\n\n        return text.substring(startIndex, startIndex + length)\n      }\n      else if (length < 0) {\n\n        if (-length >= text.length) {\n          return ''\n        }\n\n        return text.substring(startIndex, text.length - 1 + length)\n      }\n      else {\n\n        return ''\n      }\n    }\n    else {\n\n      return text.substring(startIndex)\n    }\n  }\n\n  static startsWith(text: string, searchString: string): boolean {\n\n    return (text.indexOf(searchString) == 0)\n  }\n\n  static endsWith(text: string, searchString: string): boolean {\n\n    return (text.lastIndexOf(searchString) == (text.length - searchString.length))\n  }\n\n  static contains(text: string, searchString: string): boolean {\n\n    return (text.indexOf(searchString) != -1)\n  }\n\n  static replaceAll(text: string, removeString: string, replaceString): string {\n\n    return text.replace(new RegExp(removeString, 'g'), replaceString)\n  }\n}\n","﻿import { float, int } from './conversion'\nimport { CanvasWindow } from '../render'\n\nexport class RectangleLayoutArea {\n\n  index = -1\n  iconID = -1\n\n  marginTop = 0.0\n  marginRight = 0.0\n  marginBottom = 0.0\n  marginLeft = 0.0\n\n  paddingTop = 0.0\n  paddingRight = 0.0\n  paddingBottom = 0.0\n  paddingLeft = 0.0\n\n  colSpan = 1\n  rowSpan = 1\n\n  width = 0.0\n  height = 0.0\n\n  top = 0.0\n  right = 0.0\n  bottom = 0.0\n  left = 0.0\n\n  gridLayoutOptions: GridLayoutOptions | null = null\n\n  children: RectangleLayoutArea[] = []\n\n  hover = false\n  hover_before = false\n\n  constructor(children?: RectangleLayoutArea[]) {\n\n    if (children) {\n\n      this.children = children\n    }\n  }\n\n  setChildren(children: RectangleLayoutArea[]): RectangleLayoutArea {\n\n    this.children = children\n\n    return this\n  }\n\n  setIndex(index: int): RectangleLayoutArea {\n\n    this.index = index\n\n    return this\n  }\n\n  setIcon(index: int): RectangleLayoutArea {\n\n    this.iconID = index\n\n    return this\n  }\n\n  setSize(width: float, height: float): RectangleLayoutArea{\n\n    this.width = width // [px]\n    this.height = height // [px]\n\n    return this\n  }\n\n  setPadding({left, top, right, bottom}: { left?: float, top?: float, right?: float, bottom?: float }): RectangleLayoutArea {\n\n    if (left) {\n      this.paddingLeft = left\n    }\n\n    if (top) {\n      this.paddingTop = top\n    }\n\n    if (right) {\n      this.paddingRight = right\n    }\n\n    if (bottom) {\n      this.paddingBottom = bottom\n    }\n\n    return this\n  }\n\n  setCellSpan(colSpan: number, rowSpan: number): RectangleLayoutArea {\n\n    this.colSpan = colSpan\n    this.rowSpan = rowSpan\n\n    return this\n  }\n\n  setGridLayout(options: GridLayoutOptions): RectangleLayoutArea {\n\n    this.gridLayoutOptions =  { ...options }\n\n    return this\n  }\n\n\n  getWidth(): float {\n\n    return (this.right - this.left + 1.0)\n  }\n\n  getHeight(): float {\n\n    return (this.bottom - this.top + 1.0)\n  }\n\n  saveState() {\n\n    this.hover_before = this.hover\n  }\n\n  isChanged(): boolean {\n\n    return (this.hover_before != this.hover)\n  }\n\n  copyRectangle(canvasWindow: CanvasWindow) {\n\n    this.left = 0.0\n    this.top = 0.0\n    this.right = canvasWindow.width - 1.0\n    this.bottom = canvasWindow.width - 1.0\n  }\n}\n\ninterface GridLayoutCell {\n\n  layoutArea: RectangleLayoutArea\n  left: float\n  top: float\n  right: float\n  bottom: float\n}\n\ninterface GridLayoutOptions {\n\n  columns: int\n  columnGap: float\n  rows: int\n  rowGap: float\n}\n\nexport class LayoutLogic {\n\n  static calculateGridLayout(layoutArea: RectangleLayoutArea, options: GridLayoutOptions) {\n\n    if (layoutArea.children.length == 0) {\n      return\n    }\n\n    const style = {\n      ...{\n        columns: 1,\n        columnGap: 0,\n        rows: 1,\n        rowGap: 0\n      },\n      ...options\n    }\n\n    const left = layoutArea.left + layoutArea.paddingLeft\n    const right = layoutArea.right - layoutArea.paddingRight\n\n    const top = layoutArea.top + layoutArea.paddingTop\n    const bottom = layoutArea.bottom - layoutArea.paddingBottom\n\n    const columnGaps = (style.columns - 1) * style.columnGap\n    const cellWidth = ((right - left) - columnGaps) / style.columns\n\n    const rowGaps = (style.rows - 1) * style.columnGap\n    const cellHeight = ((bottom - top) - rowGaps) / style.rows\n\n    const cells: GridLayoutCell[][] = []\n    let y = top\n    for (let row = 0; row < style.rows; row++) {\n\n      const row: GridLayoutCell[] = []\n      let x = left\n      for (let col = 0; col < style.columns; col++) {\n\n        row.push({\n          layoutArea: null,\n          left: x,\n          top: y,\n          right: x + cellWidth - 1,\n          bottom: y + cellHeight - 1\n        })\n\n        x += style.columnGap + cellWidth\n      }\n\n      cells.push(row)\n\n      y += cellHeight + style.rowGap\n    }\n\n    let childIndex = 0\n    for (let rowIndex = 0; rowIndex < style.rows; rowIndex++) {\n\n      if (childIndex >= layoutArea.children.length) {\n        break\n      }\n\n      for (let columnIndex = 0; columnIndex < style.columns; columnIndex++) {\n\n        if (childIndex >= layoutArea.children.length) {\n          break\n        }\n\n        const cell = cells[rowIndex][columnIndex]\n\n        const child = layoutArea.children[childIndex]\n\n        if (cell.layoutArea == null) {\n\n          child.left = cell.left\n          child.top = cell.top\n\n          for (let row = 0; row < child.rowSpan; row++) {\n\n            for (let col = 0; col < child.colSpan; col++) {\n\n              const span_cell = cells[rowIndex + row][columnIndex + col]\n\n              child.right = span_cell.right\n              child.bottom = span_cell.bottom\n\n              span_cell.layoutArea = child\n            }\n          }\n\n          child.width = child.getWidth()\n          child.height = child.getHeight()\n\n          childIndex++\n        }\n      }\n    }\n  }\n\n  static hitTestLayout(areas: RectangleLayoutArea[] | RectangleLayoutArea, x: float, y: float): RectangleLayoutArea {\n\n    if (areas instanceof Array) {\n\n      for (const area of areas) {\n\n        if (this.hitTestLayoutRectangle(area, x, y)) {\n\n          return area\n        }\n      }\n    }\n    else if (areas instanceof RectangleLayoutArea){\n\n      if (this.hitTestLayoutRectangle(areas, x, y)) {\n\n        return areas\n      }\n    }\n\n    return null\n  }\n\n  static hitTestLayoutRectangle(area: RectangleLayoutArea, x: float, y: float): boolean {\n\n    if (x >= area.left\n      && x <= area.right\n      && y >= area.top\n      && y <= area.bottom) {\n\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  static isChanged(area: RectangleLayoutArea) {\n\n    return (area != null && area.isChanged())\n  }\n}\n","﻿import { float } from './conversion'\nimport { Maths } from './math'\n\nexport class Logic_Points {\n\n  static segmentMat_DifferenceVec = vec3.create()\n\n  // 2 points angle calculation\n  static angle(fromPoint: Vec3, ToPoint: Vec3): float {\n\n    const vx = ToPoint[0] - fromPoint[0]\n    const vy = ToPoint[1] - fromPoint[1]\n\n    const angle = Math.atan2(vy, vx)\n\n    return angle\n  }\n\n  // 3 points angle calculation\n  static angleOfCorner(firstPoint: Vec3, centerPoint: Vec3, lastPoint: Vec3): float {\n\n    const ax = lastPoint[0] - centerPoint[0]\n    const ay = lastPoint[1] - centerPoint[1]\n    const bx = firstPoint[0] - centerPoint[0]\n    const by = firstPoint[1] - centerPoint[1]\n\n    const angle = Math.atan2(ax * by - bx * ay, ax * bx + ay * by)\n\n    return angle\n  }\n\n  // 3 points distance of angule calculation\n  static angleDistanceOfCorner(firstPoint: Vec3, centerPoint: Vec3, lastPoint: Vec3): float {\n\n    const angle = Logic_Points.angleOfCorner(firstPoint, centerPoint, lastPoint)\n\n    let curvature = -angle + Math.PI\n    if (curvature >= Math.PI) {\n\n      curvature = 2 * Math.PI - curvature\n    }\n\n    return curvature\n  }\n\n  // 3 points differnce of direction angle calculation\n  static directionAngleDifferenceOfCorner(firstPoint: Vec3, centerPoint: Vec3, lastPoint: Vec3): float {\n\n    const angle = Logic_Points.angleOfCorner(firstPoint, centerPoint, lastPoint)\n\n    let directionAngle = angle >= 0.0 ? Math.PI - angle : -Math.PI - angle\n\n    return directionAngle\n  }\n\n  // returns true if angle of 3 points is clocwise\n  static isClockwise(firstPoint: Vec3, centerPoint: Vec3, lastPoint: Vec3): boolean {\n\n    const ax = lastPoint[0] - centerPoint[0]\n    const ay = lastPoint[1] - centerPoint[1]\n    const bx = firstPoint[0] - centerPoint[0]\n    const by = firstPoint[1] - centerPoint[1]\n\n    const crossProduct = ax * by - ay * bx\n\n    return (crossProduct > 0)\n  }\n\n  static segmentMat(result: Mat4, locationFrom: Vec3, locationTo: Vec3) {\n\n    vec3.subtract(this.segmentMat_DifferenceVec, locationTo, locationFrom)\n    vec3.normalize(this.segmentMat_DifferenceVec, this.segmentMat_DifferenceVec)\n    mat4.identity(result)\n    result[0] = this.segmentMat_DifferenceVec[0]\n    result[1] = this.segmentMat_DifferenceVec[1]\n    result[4] = -this.segmentMat_DifferenceVec[1]\n    result[5] = this.segmentMat_DifferenceVec[0]\n    result[12] = locationFrom[0]\n    result[13] = locationFrom[1]\n  }\n\n  // Point to point: distance calculation\n  static pointToPoint_DistanceSQ(point1: Vec3, point2: Vec3): float {\n\n    return Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2)\n  }\n\n  // Point to line segment: distance calculation\n  static pointToLineSegment_SorroundingDistanceSQ(point1: Vec3, point2: Vec3, targetPoint: Vec3): float {\n\n    return Maths.pointToLineSegment_SorroundingDistance(\n      targetPoint[0],\n      targetPoint[1],\n      point1[0],\n      point1[1],\n      point2[0],\n      point2[1])\n  }\n\n  static pointToLineSegment_SorroundingDistance(point1: Vec3, point2: Vec3, targetPoint: Vec3): float {\n\n    const distanceSQ = this.pointToLineSegment_SorroundingDistanceSQ(point1, point2, targetPoint)\n\n    return Math.sqrt(distanceSQ)\n  }\n\n  // Point to line segment: if targetPoint is before point1, return value is < 0.0, if targetPoint is agter point2, retuen value is > 1.0\n  static pointToLineSegment_NormalizedPosition(segmentPoint1: Vec3, segmentPoint2: Vec3, targetPoint: Vec3): float {\n\n    return Maths.pointToLine_NearestPointNormalizedPosition(\n      targetPoint[0],\n      targetPoint[1],\n      segmentPoint1[0],\n      segmentPoint1[1],\n      segmentPoint2[0],\n      segmentPoint2[1])\n  }\n\n  // Point to endless line: distance calculation\n  static pointToLine_Distance(point1: Vec3, point2: Vec3, targetPoint: Vec3): float {\n\n    return Maths.pointToLine_Distance(\n      targetPoint[0],\n      targetPoint[1],\n      point1[0],\n      point1[1],\n      point2[0],\n      point2[1])\n  }\n\n  // Point to endless line: nearest location calculation\n  static pointToLine_NearestLocation(result: Vec3, linePoint1: Vec3, linePoint2: Vec3, targetPoint: Vec3): boolean {\n\n    return Maths.pointToLine_NearestPoint(\n      result,\n      targetPoint[0],\n      targetPoint[1],\n      linePoint1[0],\n      linePoint1[1],\n      linePoint2[0],\n      linePoint2[1]) != null\n  }\n\n  // Line segment to Line segment: crossing location calculation\n  static lineSegmentToLineSegment_CrossPoint(result: Vec3, L1: Vec3, L2: Vec3, L3: Vec3, L4: Vec3): boolean {\n\n    return Maths.lineToLine_CrossPoint(\n      result,\n      L1[0],\n      L1[1],\n      L2[0],\n      L2[1],\n      L3[0],\n      L3[1],\n      L4[0],\n      L4[1]\n    )\n  }\n}\n","﻿import { float } from '../common-logics'\n\nexport class RectangleArea {\n\n  static INFINIT_POSITION_VALUE = 999999.0\n  static MINIMUM_POSITION_VALUE = 0.0001\n\n  top = 0.0\n  right = 0.0\n  bottom = 0.0\n  left = 0.0\n  range = 0.0\n  centerLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  static createMinumumValueRectangle(): RectangleArea {\n\n    return (new RectangleArea()).setMinimumValue()\n  }\n\n  static calculateSurroundingRectangle(result: RectangleArea, rectangle1: RectangleArea, rectangle2: RectangleArea) {\n\n    result.left = Math.min(rectangle1.left, rectangle2.left)\n    result.top = Math.min(rectangle1.top, rectangle2.top)\n    result.right = Math.max(rectangle1.right, rectangle2.right)\n    result.bottom = Math.max(rectangle1.bottom, rectangle2.bottom)\n  }\n\n  copyTo(destination: RectangleArea) {\n\n    destination.top = this.top\n    destination.right = this.right\n    destination.bottom = this.bottom\n    destination.left = this.left\n    destination.range = this.range\n    vec3.copy(destination.centerLocation, this.centerLocation)\n  }\n\n  calculateParams() {\n\n    vec3.set(this.centerLocation,\n      this.left + this.getWidth() / 2.0,\n      this.top + this.getHeight() / 2.0,\n      0.0\n    )\n\n    this.range = Math.sqrt(Math.pow(this.getWidth() / 2.0, 2) + Math.pow(this.getHeight() / 2.0, 2))\n  }\n\n  getWidth(): float {\n\n    return Math.abs(this.right - this.left)\n  }\n\n  getHeight(): float {\n\n    return Math.abs(this.bottom - this.top)\n  }\n\n  getBitmapWidth(): float {\n\n    return Math.floor(this.getWidth() + 0.5)\n  }\n\n  getBitmapHeight(): float {\n\n    return Math.floor(this.getHeight() + 0.5)\n  }\n\n  getMedianHrizontalPosition(): float {\n\n    return this.left + this.getHeight() / 2\n  }\n\n  getMedianVerticalPosition(): float {\n\n    return this.top + this.getHeight() / 2\n  }\n\n  getHorizontalPositionRate(x: float) {\n\n    const width = this.getWidth()\n\n    if (width == 0.0) {\n\n      return 0.0\n    }\n\n    return (x - this.left) / width\n  }\n\n  getVerticalPositionRate(y: float) {\n\n    const height = this.getHeight()\n\n    if (height == 0.0) {\n\n      return 0.0\n    }\n\n    return (y - this.top) / height\n  }\n\n  setMinimumValue(): RectangleArea {\n\n    this.left = RectangleArea.INFINIT_POSITION_VALUE\n    this.top = RectangleArea.INFINIT_POSITION_VALUE\n    this.right = -RectangleArea.INFINIT_POSITION_VALUE\n    this.bottom = -RectangleArea.INFINIT_POSITION_VALUE\n\n    return this\n  }\n\n  isValidArea(): boolean {\n\n    return (this.left != RectangleArea.INFINIT_POSITION_VALUE\n      && this.top != RectangleArea.INFINIT_POSITION_VALUE\n      && this.right != -RectangleArea.INFINIT_POSITION_VALUE\n      && this.bottom != -RectangleArea.INFINIT_POSITION_VALUE)\n  }\n\n  existsValidArea(): boolean {\n\n    return (this.isValidArea()\n      && this.getBitmapWidth() > RectangleArea.MINIMUM_POSITION_VALUE\n      && this.getBitmapHeight() > RectangleArea.MINIMUM_POSITION_VALUE)\n  }\n\n  expandByLocation(x: float, y: float) {\n\n    this.left = Math.min(x, this.left)\n    this.top = Math.min(y, this.top)\n\n    this.right = Math.max(x, this.right)\n    this.bottom = Math.max(y, this.bottom)\n  }\n\n  expandByRectangle(rectangle: RectangleArea) {\n\n    RectangleArea.calculateSurroundingRectangle(this, this, rectangle)\n  }\n\n  hittestLocationWithRadius(location: Vec3, radius: float): boolean {\n\n    return (\n      location[0] >= this.left - radius\n      && location[0] <= this.right + radius\n      && location[1] >= this.top - radius\n      && location[1] <= this.bottom + radius\n    )\n  }\n}\n\n","import { Strings } from \"../app/common-logics\"\n\ninterface PlatformFS {\n\n  writeFile(filePath: string, data: string, format: 'base64' | 'utf8'): Promise<void>\n  getFileInfos(directoryPath: string): Promise<{ name: string, path: string}[]>\n  getUserDefaultDocumentDirectory(): Promise<string>\n  readUserDataFile(fileName: string): Promise<string>\n  writeUserDataFile(fileName: string, data: string): Promise<void>\n  openFileDialog(defaultPath: string): Promise<string | null>\n}\n\ninterface PlatformClipboard {\n\n  writeText(text: string): Promise<void>\n  readText(): Promise<string>\n  availableFormats(): Promise<string[]>\n}\n\ninterface PlatformDialog {\n\n  openFileDialog(defaultPath: string)\n}\n\ndeclare global {\n  interface Window {\n    api: PlatformAPI\n  }\n}\n\nexport type PlatformAPI = {\n  fs: PlatformFS\n  clipboard: PlatformClipboard\n  path: PlatformPath\n  dialog: PlatformDialog\n}\n\nclass PlatformPath {\n\n  platFormIndependentPathJoinLetter = '/'\n\n  getPlatformPathJoinLetter(): string {\n\n    // TODO: 実装する\n    return '\\\\'\n  }\n\n  getPlatformOrientedPath(targetPath: string): string {\n\n    const joinLetter = this.getPlatformPathJoinLetter()\n\n    if (joinLetter == '\\\\') {\n\n      return Strings.replaceAll(targetPath, this.platFormIndependentPathJoinLetter, '\\\\')\n    }\n    else if (joinLetter == this.platFormIndependentPathJoinLetter) {\n\n      return Strings.replaceAll(targetPath, '\\\\\\\\', this.platFormIndependentPathJoinLetter)\n    }\n    else {\n\n      return targetPath\n    }\n  }\n\n  getPlatformIndependentPath(targetPath: string): string {\n\n    return Strings.replaceAll(targetPath, '\\\\\\\\', this.platFormIndependentPathJoinLetter)\n  }\n\n  getFileName(targetPath: string): string {\n\n    const piPath = this.getPlatformIndependentPath(targetPath)\n\n    const lastIndex = Strings.lastIndexOf(piPath, this.platFormIndependentPathJoinLetter)\n\n    if (lastIndex == -1) {\n\n      return targetPath\n    }\n    else {\n\n      return Strings.substring(piPath, lastIndex + 1)\n    }\n  }\n\n  getDirectoryPath(targetPath: string): string {\n\n    const piPath = this.getPlatformIndependentPath(targetPath)\n\n    const lastIndex = Strings.lastIndexOf(piPath, this.platFormIndependentPathJoinLetter)\n\n    if (lastIndex == -1) {\n\n      return targetPath\n    }\n    else {\n\n      return Strings.substring(piPath, 0, lastIndex)\n    }\n  }\n\n  isRelativePath(targetPath: string): boolean {\n\n    const piPath = this.getPlatformIndependentPath(targetPath)\n\n    const lastIndex = Strings.lastIndexOf(piPath, this.platFormIndependentPathJoinLetter)\n\n    if (lastIndex == -1) {\n\n      return true\n    }\n    else {\n\n      return Strings.startsWith(targetPath, './')\n    }\n  }\n\n  getRelativePath(from: string, to: string): string {\n\n    // TODO: 実装する\n    return to\n  }\n\n  resolveRelativePath(baseDirectoryPath: string, targetPath: string): string {\n\n    if (this.isRelativePath(targetPath)) {\n\n      let localPath = targetPath\n\n      if (Strings.startsWith(targetPath, './')) {\n\n        localPath = Strings.substring(targetPath, 2)\n      }\n\n      return this.join(baseDirectoryPath, localPath)\n    }\n    else {\n\n      return ''\n    }\n  }\n\n  join(path1: string, path2: string): string {\n\n    return `${path1}${this.platFormIndependentPathJoinLetter}${path2}`\n  }\n}\n\nexport class Platform {\n\n  static supportsNative(): boolean {\n\n    return (typeof (window.api) != 'undefined')\n  }\n\n  static getCurrentTime(): number {\n\n    return performance.now()\n  }\n\n  static readonly clipboard: PlatformClipboard = Platform.supportsNative() ? window.api.clipboard : {\n\n    async writeText(text: string) {\n\n      window.localStorage.setItem('clipboard', text)\n    },\n\n    async readText() {\n\n      return window.localStorage.getItem('clipboard')\n    },\n\n    async availableFormats() {\n\n      return window.localStorage.getItem('clipboard') ? ['text/plain'] : null\n    }\n  }\n\n  static readonly path = new PlatformPath()\n\n  static readonly fileSystem: PlatformFS = Platform.supportsNative() ? window.api.fs : {\n\n    async writeFile(filePath: string, data: string, format: 'base64' | 'utf8') {\n\n      if (format == 'base64') {\n\n        const link = document.createElement(\"a\")\n        link.download = filePath\n        link.href = data\n        link.click()\n      }\n      else {\n\n        const blob = new Blob([data], {type: 'text/plain'});\n        const url = URL.createObjectURL(blob);\n\n        const link = document.createElement(\"a\")\n        link.download = filePath\n        link.href = url\n        link.click()\n      }\n    },\n\n    async getFileInfos(_directoryPath: string) {\n\n      return []\n    },\n\n    async getUserDefaultDocumentDirectory(): Promise<string> {\n\n      return './'\n    },\n\n    async readUserDataFile(fileName: string): Promise<string> {\n\n      return window.localStorage.getItem(fileName)\n    },\n\n    async writeUserDataFile(fileName: string, data: string) {\n\n      window.localStorage.setItem(fileName, data)\n    },\n\n    async openFileDialog(defaultPath: string): Promise<string | null> {\n\n      return null\n    }\n  }\n}\n","import { Platform } from './platform'\n\nexport interface UserStorageData {\n\n  version: string\n}\n\nexport class UserStorage {\n\n  static readonly userDataFilePath = 'user-data.json'\n\n  static data: UserStorageData = {\n    version: '0.0.0'\n  }\n\n  static async load(defaultData: UserStorageData) {\n\n    try {\n\n      const text = await Platform.fileSystem.readUserDataFile(this.userDataFilePath)\n\n      if (text == '' || text == null) {\n        throw new Error('ERROR 0061:User data does not exists.')\n      }\n\n      this.data = JSON.parse(text)\n\n      console.log('UserStrageData is loaded from native file.')\n    }\n    catch(e) {\n\n      this.data = defaultData\n\n      console.log('UserStrageData is initialized by default.', e)\n    }\n  }\n\n  static save() {\n\n    Platform.fileSystem.writeUserDataFile(this.userDataFilePath, JSON.stringify(this.data))\n      .then()\n  }\n\n  static setItem<T>(key: string, value: T) {\n\n    this.data[key] = value\n\n    this.save()\n  }\n\n  static getItem<T>(key: string): T | null {\n\n    if (key in this.data) {\n\n      return JSON.parse(JSON.stringify(this.data[key]))\n    }\n    else {\n\n      return null\n    }\n  }\n}\n","import { Lists } from '../common-logics'\nimport { SubToolContext } from '../context'\nimport { CommandBase } from './command'\n\nexport class CommandHistory {\n\n  maxHistory = 300\n\n  historyList: CommandBase[] = []\n  redoList: CommandBase[] = []\n\n  executeCommand(command: CommandBase, ctx: SubToolContext) {\n\n    command.execute(ctx)\n\n    command.defferedProcess.setFlags(ctx)\n\n    this.addCommand(command)\n  }\n\n  private addCommand(command: CommandBase) {\n\n    this.historyList.push(command)\n\n    if (this.historyList.length > this.maxHistory) {\n\n      Lists.removeAt(this.historyList, 0)\n    }\n\n    if (this.redoList.length > 0) {\n\n      this.redoList = []\n    }\n  }\n\n  private getUndoCommand(): CommandBase {\n\n    if (this.historyList.length == 0) {\n      return null\n    }\n\n    return this.historyList.at(-1)\n  }\n\n  private getRedoCommand(): CommandBase {\n\n    if (this.redoList.length == 0) {\n      return null\n    }\n\n    return this.redoList.at(-1)\n  }\n\n  undo(ctx: SubToolContext) {\n\n    let command: CommandBase = null\n\n    do {\n\n      command = this.getUndoCommand()\n\n      if (command == null) {\n        return\n      }\n\n      command.undo(ctx)\n\n      command.defferedProcess.setFlags(ctx)\n\n      this.redoList.push(command)\n      this.historyList.pop()\n    }\n    while (command.isContinued)\n  }\n\n  redo(ctx: SubToolContext) {\n\n    let command: CommandBase = null\n\n    do {\n\n      command = this.getRedoCommand()\n\n      if (command == null) {\n        return\n      }\n\n      command.redo(ctx)\n\n      command.defferedProcess.setFlags(ctx)\n\n      this.redoList.pop()\n      this.historyList.push(command)\n\n      command = this.getRedoCommand()\n    }\n    while (command != null && command.isContinued)\n  }\n}\n","﻿export enum OnionSkinMode {\n  none = 0,\n  disabled = 1,\n  showOnTopLayer = 2,\n  showOnLowestLayer = 3,\n}\n\nexport class AnimationSettingData {\n\n  static readonly MAX_ONION_SIKIN_FRAMES = 5\n\n  animationFrameParSecond = 24\n  loopStartFrame = 0\n  loopEndFrame = 24\n  maxFrame = 24\n\n  onionSkinMode = OnionSkinMode.disabled\n  onionSkinBackwardLevel = 1\n  onionSkinForwardLevel = 1\n\n  currentTimeFrame = 0.0\n\n  timeLineWindowScale = 1.0\n  timeLineWindowScaleMax = 10.0\n  timeLineWindowViewLocationX = 0.0\n}\n","﻿import { float, int } from '../common-logics'\n\nexport enum LayerTypeID {\n\n  none = 0,\n  rootLayer = 1,\n  vectorLayer = 2,\n  groupLayer = 3,\n  imageFileReferenceLayer = 4,\n  posingLayer = 5,\n  vectorLayerReferenceLayer = 6,\n  autoFillLayer = 7,\n  surroundingFillLayer = 8,\n  pointBrushFillLayer = 9,\n}\n\nexport class Layer_RuntimeProperty {\n\n  needsPostUpdate = false\n  needsLazyUpdate = false\n  isHierarchicalVisible = true\n  isHierarchicalListVisible = true\n  parentLayer: Layer = null\n}\n\nexport class Layer {\n\n  type = LayerTypeID.none\n  name: string = null\n  isVisible = true\n  isSelected = false\n  isRenderTarget = true\n  isMaskedByBelowLayer = false\n  isListExpanded = true\n\n  childLayers: Layer[] = []\n\n  layerColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n\n  // runtime\n  runtime = new Layer_RuntimeProperty()\n\n  // ID for React list\n  static hashIDCount = 1\n\n  static getHashID() {\n\n    return Layer.hashIDCount++\n  }\n\n  hashID = Layer.getHashID()\n\n  // file only\n  ID: int\n\n  static isRootLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && layer.type == LayerTypeID.rootLayer\n    )\n  }\n\n  static isEditTarget(layer: Layer): boolean {\n\n    return (Layer.isSelected(layer) && Layer.isVisible(layer))\n  }\n\n  static isSelected(layer: Layer): boolean {\n\n    return layer.isSelected\n  }\n\n  static isVisible(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && layer.isVisible\n      && layer.runtime.isHierarchicalVisible)\n  }\n\n  static isListVisible(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && layer.isVisible\n      && layer.runtime.isHierarchicalVisible)\n  }\n\n  static setLazyUpdateNeeded(layer: Layer) {\n\n    layer.runtime.needsLazyUpdate = true\n  }\n\n  static setPostUpdateNeeded(layer: Layer) {\n\n    layer.runtime.needsPostUpdate = true\n  }\n}\n","﻿import { int } from '../common-logics'\nimport { Layer } from './layer'\n\nexport enum FillAreaTypeID {\n\n  none = 1,\n  fillColor = 2,\n  paletteColor = 3,\n}\n\nexport interface FillDrawable {\n\n  fillAreaType: FillAreaTypeID\n  fillColor: Vec4\n  fill_PaletteColorIndex: int\n}\n\nexport class FillDrawableLayer extends Layer implements FillDrawable {\n\n  fillAreaType: FillAreaTypeID\n  fillColor: Vec4\n  fill_PaletteColorIndex: int\n}\n","﻿import { float, int } from \"../common-logics\"\nimport { VectorPoint, VectorStrokeGroup } from \"../document-data\"\nimport { WebGLRender } from \"../render\"\n\nexport class GPULinePoint {\n\n  location: Vec3 = vec3.fromValues(0.0, 0.0, 0.0)\n  width = 1.0\n  alpha = 1.0\n  isEndPoint = false\n\n  direction = vec3.fromValues(0.0, 0.0, 0.0)\n  controlPointCF = vec3.fromValues(0.0, 0.0, 0.0) // 正方向への制御点の位置\n  controlPointCB = vec3.fromValues(0.0, 0.0, 0.0) // 逆方向への制御点の位置\n\n  edgePointL = vec3.fromValues(0.0, 0.0, 0.0)     // 点の左側の頂点の位置\n  controlPointLF = vec3.fromValues(0.0, 0.0, 0.0) // 左側の頂点から正方向への制御点の位置\n  controlPointLB = vec3.fromValues(0.0, 0.0, 0.0) // 左側の頂点から負方向への制御点の位置\n\n  edgePointR = vec3.fromValues(0.0, 0.0, 0.0)     // 点の右側の頂点の位置\n  controlPointRF = vec3.fromValues(0.0, 0.0, 0.0) // 右側の頂点から正方向への制御点の位置\n  controlPointRB = vec3.fromValues(0.0, 0.0, 0.0) // 右側の頂点から負方向への制御点の位置\n\n  controlPointVertexLF = vec3.fromValues(0.0, 0.0, 0.0) // 曲線を囲むように配置したポリゴンの頂点座標\n  controlPointVertexLB = vec3.fromValues(0.0, 0.0, 0.0)\n  controlPointVertexRF = vec3.fromValues(0.0, 0.0, 0.0)\n  controlPointVertexRB = vec3.fromValues(0.0, 0.0, 0.0)\n\n  pointMat = mat4.create()\n  invMat = mat4.create()\n\n  copyFrom(linePoint: VectorPoint, lineWidthBiasRate: float, useAdjustingLocation: boolean) {\n\n    if (useAdjustingLocation) {\n\n      this.location[0] = linePoint.adjustingLocation[0]\n      this.location[1] = linePoint.adjustingLocation[1]\n      this.width = linePoint.adjustingLineWidth * lineWidthBiasRate\n      this.alpha = 1.0\n    }\n    else {\n\n      this.location[0] = linePoint.location[0]\n      this.location[1] = linePoint.location[1]\n      this.width = linePoint.lineWidth * lineWidthBiasRate\n      this.alpha = 1.0\n    }\n\n    this.isEndPoint = false\n  }\n}\n\nexport class GPULine {\n\n  points: GPULinePoint[] = []\n}\n\nexport class GPUVertexBuffer {\n\n  pointCount = 0\n  recyclePoints: GPULinePoint[] = []\n\n  lines: GPULine[] = []\n\n  dataArray: Float32Array = null\n  usedDataArraySize = 0\n\n  bufferSize = 0\n  buffer: WebGLBuffer = null\n  isStored = false\n}\n\nexport class Logic_GPULine {\n\n  // 省略しているアルファベットの意味\n  //   F: Forward, B: Backward, L: Left, R: Right, C: Center\n\n  // cur 対象となる点を指定する\n  //     1: Fromの点、2: Toの点\n  // loc その点の持つ座標値のどれを使用するか指定\n  //     1: location\n  //     2: edgePointL, 3: controlPointVertexLF, 4: controlPointVertexLB\n  //     5: edgePointR, 6: controlPointVertexRF, 7: controlPointVertexRB\n  solidLinePolygonMap = [\n    { cur: 1, loc: 2 }, { cur: 2, loc: 2 }, { cur: 1, loc: 5 },\n    { cur: 1, loc: 5 }, { cur: 2, loc: 2 }, { cur: 2, loc: 5 },\n  ]\n\n  // lr 左右どちらののポリゴンであるかを指定する\n  //    1: 左、2: 右\n  bezierPolygonMap = [\n    //{ lr: 1, cur: 1, loc: 3 }, { lr: 1, cur: 2, loc: 2 }, { lr: 1, cur: 2, loc: 5 },\n\n    //{ lr: 1, cur: 1, loc: 1 }, { lr: 1, cur: 2, loc: 2 }, { lr: 1, cur: 2, loc: 5 },\n    //{ lr: 1, cur: 2, loc: 5 }, { lr: 1, cur: 1, loc: 5 }, { lr: 1, cur: 1, loc: 1 },\n\n    // 左側\n    { lr: 1, cur: 1, loc: 1 }, { lr: 1, cur: 1, loc: 2 }, { lr: 1, cur: 1, loc: 3 },\n    { lr: 1, cur: 1, loc: 3 }, { lr: 1, cur: 2, loc: 4 }, { lr: 1, cur: 1, loc: 1 },\n    { lr: 1, cur: 1, loc: 1 }, { lr: 1, cur: 2, loc: 4 }, { lr: 1, cur: 2, loc: 1 },\n    { lr: 1, cur: 2, loc: 1 }, { lr: 1, cur: 2, loc: 4 }, { lr: 1, cur: 2, loc: 2 },\n    // 右側\n    { lr: 2, cur: 1, loc: 5 }, { lr: 2, cur: 1, loc: 1 }, { lr: 2, cur: 1, loc: 6 },\n    { lr: 2, cur: 1, loc: 6 }, { lr: 2, cur: 1, loc: 1 }, { lr: 2, cur: 2, loc: 7 },\n    { lr: 2, cur: 2, loc: 7 }, { lr: 2, cur: 1, loc: 1 }, { lr: 2, cur: 2, loc: 1 },\n    { lr: 2, cur: 2, loc: 1 }, { lr: 2, cur: 2, loc: 5 }, { lr: 2, cur: 2, loc: 7 },\n  ]\n\n  vec = vec3.create()\n  scale = vec3.create()\n  direction = vec3.create()\n  controlPointVec = vec3.create()\n  normal = vec3.create()\n  invMat = mat4.create()\n  tempMat = mat4.create()\n  calculateSegmentMat_Direction = vec3.create()\n\n  relativeVecA = vec3.create()\n  relativeVecB = vec3.create()\n  relativeVecC = vec3.create()\n  relativeVecD = vec3.create()\n  relativeEdgePointVecA = vec3.create()\n  relativeEdgePointVecB = vec3.create()\n  relativeVecCenterFrom = vec3.create()\n  relativeVecCenterTo = vec3.create()\n  relativeVecEdgeFrom = vec3.create()\n  relativeVecEdgeTo = vec3.create()\n\n  minimumSegmentDistance = 0.001\n\n  copyGroupPointDataToBuffer(group: VectorStrokeGroup, lineWidthBiasRate: float, useAdjustingLocation: boolean) {\n\n    const vertexBuffer = group.runtime.buffer\n\n    let pointCount = 0\n\n    vertexBuffer.lines = []\n\n    for (const line of group.lines) {\n\n      const gpuLine = new GPULine()\n\n      let lastLinePoint: VectorPoint = null\n\n      for (const linePoint of line.points) {\n\n        let gpuPoint: GPULinePoint\n\n        if (lastLinePoint != null\n          && vec3.distance(lastLinePoint.location, linePoint.location) < this.minimumSegmentDistance) {\n          continue\n        }\n\n        if (pointCount < vertexBuffer.recyclePoints.length) {\n\n          // 頂点データを再利用する\n          gpuPoint = vertexBuffer.recyclePoints[pointCount]\n        }\n        else {\n\n          gpuPoint = new GPULinePoint()\n          vertexBuffer.recyclePoints.push(gpuPoint)\n        }\n\n        gpuPoint.copyFrom(linePoint, lineWidthBiasRate, useAdjustingLocation)\n\n        gpuLine.points.push(gpuPoint)\n\n        pointCount++\n\n        lastLinePoint = linePoint\n      }\n\n      if (gpuLine.points.length < 2) {\n        continue\n      }\n\n      vertexBuffer.lines.push(gpuLine)\n    }\n\n    vertexBuffer.pointCount = pointCount\n  }\n\n  allocateBuffer(vertexBuffer: GPUVertexBuffer, vertexCount: int, vertexUnitSize: int, render: WebGLRender) {\n\n    const bufferSize = vertexCount * vertexUnitSize\n\n    if (vertexBuffer.buffer == null) {\n\n      vertexBuffer.buffer = render.createBuffer()\n      vertexBuffer.dataArray = new Float32Array(bufferSize)\n    }\n    else if (bufferSize > vertexBuffer.bufferSize) {\n\n      vertexBuffer.dataArray = new Float32Array(bufferSize)\n    }\n\n    vertexBuffer.bufferSize = bufferSize\n  }\n\n  // 1. エッジの位置の計算\n  calculateLinePointEdges(vertexBuffer: GPUVertexBuffer) {\n\n    const direction = this.direction\n    const normal = this.normal\n\n    // 点の左右の頂点位置を計算\n    for (const line of vertexBuffer.lines) {\n\n      const gpuPoints = line.points\n\n      for (let index = 0; index < gpuPoints.length; index++) {\n\n        const gpuPoint = gpuPoints[index]\n\n        let gpuPointPrev: GPULinePoint\n        let gpuPointNext: GPULinePoint\n        let width: float\n\n        if (index == 0) {\n\n          // 最初の点は最初の点から次の点へのベクトルから計算\n          gpuPointPrev = gpuPoints[index]\n          gpuPointNext = gpuPoints[index + 1]\n          width = gpuPointPrev.width\n        }\n        else if (index == gpuPoints.length - 1) {\n\n          // 最後の点は前の点から最後の点へのベクトルから計算\n          gpuPointPrev = gpuPoints[index - 1]\n          gpuPointNext = gpuPoints[index]\n          width = gpuPointNext.width\n\n          // 最後の点にはフラグを設定\n          gpuPoint.isEndPoint = true\n        }\n        else {\n\n          // 中間の点は前の点から次の点へのベクトルから計算\n          gpuPointPrev = gpuPoints[index - 1]\n          gpuPointNext = gpuPoints[index + 1]\n          width = gpuPoint.width\n        }\n\n        vec3.subtract(gpuPoint.direction, gpuPointNext.location, gpuPointPrev.location)\n        vec3.normalize(gpuPoint.direction, gpuPoint.direction)\n\n        vec3.set(normal, gpuPoint.direction[1], -gpuPoint.direction[0], 0.0) // 法線ベクトル\n        vec3.scale(normal, normal, width * 0.5)\n\n        vec3.subtract(gpuPoint.edgePointL, gpuPoint.location, normal)\n        vec3.add(gpuPoint.edgePointR, gpuPoint.location, normal)\n      }\n\n      if (gpuPoints.length >= 2) {\n\n        {\n          const point = gpuPoints[0]\n          const pointTo = gpuPoints[1]\n\n          vec3.subtract(direction, pointTo.location, point.location)\n          vec3.scale(direction, direction, 0.33)\n\n          vec3.add(point.controlPointCF, point.location, direction)\n          vec3.add(point.controlPointLF, point.edgePointL, direction)\n          vec3.add(point.controlPointRF, point.edgePointR, direction)\n        }\n\n        {\n          const point = gpuPoints[gpuPoints.length - 1]\n          const pointTo = gpuPoints[gpuPoints.length - 2]\n\n          vec3.subtract(direction, pointTo.location, point.location)\n          vec3.scale(direction, direction, 0.33)\n\n          vec3.add(point.controlPointCB, point.location, direction)\n          vec3.add(point.controlPointLB, point.edgePointL, direction)\n          vec3.add(point.controlPointRB, point.edgePointR, direction)\n        }\n      }\n    }\n  }\n\n  // 2. ベジエ曲線の制御点の位置の計算\n  calculateLinePointBezierLocation(vertexBuffer: GPUVertexBuffer) {\n\n    // 中間の点の制御点の位置を計算\n    for (const line of vertexBuffer.lines) {\n\n      const gpuPoints = line.points\n\n      for (let index = 0; index < gpuPoints.length - 1; index++) {\n\n        const linePoint = gpuPoints[index]\n\n        if (index + 1 < gpuPoints.length) {\n\n          const linePointNext = gpuPoints[index + 1]\n\n          this.calculateSegmentMat(linePoint.pointMat, linePoint.location, linePointNext.location)\n          mat4.invert(linePoint.invMat, linePoint.pointMat)\n        }\n\n        if (index - 1 >= 0 && index + 1 < gpuPoints.length) {\n\n          const linePointPrev = gpuPoints[index - 1]\n          const linePointNext = gpuPoints[index + 1]\n\n          this.calculateControlPoint(\n            linePoint.controlPointCF,\n            linePoint.controlPointCB,\n            linePoint.direction,\n            linePoint.location,\n            linePointPrev.location,\n            linePointNext.location\n          )\n\n          this.calculateControlPoint(\n            linePoint.controlPointLF,\n            linePoint.controlPointLB,\n            linePoint.direction,\n            linePoint.edgePointL,\n            linePointPrev.edgePointL,\n            linePointNext.edgePointL\n          )\n\n          this.calculateControlPoint(\n            linePoint.controlPointRF,\n            linePoint.controlPointRB,\n            linePoint.direction,\n            linePoint.edgePointR,\n            linePointPrev.edgePointR,\n            linePointNext.edgePointR\n          )\n        }\n      }\n\n      // 最初の点の制御点の位置を計算\n      if (gpuPoints.length > 2) {\n\n        // １つ次の点の正方向の制御点と対称にする\n        const linePoint = gpuPoints[0]\n        const linePointNext = gpuPoints[1]\n\n        this.calculateMirroredPoint(\n          linePoint.controlPointCF,\n          null,\n          linePoint.location,\n          linePoint.location,\n          linePoint.width,\n          linePointNext.location,\n          linePointNext.location,\n          linePointNext.controlPointCB,\n          linePoint.pointMat,\n          linePoint.invMat\n        )\n\n        this.calculateMirroredPoint(\n          linePoint.controlPointLF,\n          linePoint.edgePointL,\n          linePoint.location,\n          linePoint.edgePointL,\n          linePoint.width,\n          linePointNext.location,\n          linePointNext.edgePointL,\n          linePointNext.controlPointLB,\n          linePoint.pointMat,\n          linePoint.invMat\n        )\n\n        this.calculateMirroredPoint(\n          linePoint.controlPointRF,\n          linePoint.edgePointR,\n          linePoint.location,\n          linePoint.edgePointR,\n          linePoint.width,\n          linePointNext.location,\n          linePointNext.edgePointR,\n          linePointNext.controlPointRB,\n          linePoint.pointMat,\n          linePoint.invMat\n        )\n      }\n\n      // 最後の点の制御点の位置を計算\n      if (gpuPoints.length > 2) {\n\n        // １つ前の点の負方向の制御点と対称にする\n        const linePoint = gpuPoints[gpuPoints.length - 1]\n        const linePointNext = gpuPoints[gpuPoints.length - 2]\n\n        this.calculateMirroredPoint(\n          linePoint.controlPointCB,\n          null,\n          linePoint.location,\n          linePoint.location,\n          linePoint.width,\n          linePointNext.location,\n          linePointNext.location,\n          linePointNext.controlPointCF,\n          linePointNext.pointMat,\n          linePointNext.invMat\n        )\n\n        this.calculateMirroredPoint(\n          linePoint.controlPointLB,\n          linePoint.edgePointL,\n          linePoint.location,\n          linePoint.edgePointL,\n          linePoint.width,\n          linePointNext.location,\n          linePointNext.edgePointL,\n          linePointNext.controlPointLF,\n          linePointNext.pointMat,\n          linePointNext.invMat\n        )\n\n        this.calculateMirroredPoint(\n          linePoint.controlPointRB,\n          linePoint.edgePointR,\n          linePoint.location,\n          linePoint.edgePointR,\n          linePoint.width,\n          linePointNext.location,\n          linePointNext.edgePointR,\n          linePointNext.controlPointRF,\n          linePointNext.pointMat,\n          linePointNext.invMat\n        )\n      }\n    }\n  }\n\n  calculateSegmentMat(result: Mat4, locationFrom: Vec3, locationTo: Vec3) {\n\n    vec3.subtract(this.calculateSegmentMat_Direction, locationTo, locationFrom)\n    vec3.normalize(this.calculateSegmentMat_Direction, this.calculateSegmentMat_Direction)\n    mat4.identity(result)\n    result[0] = this.calculateSegmentMat_Direction[0]\n    result[1] = this.calculateSegmentMat_Direction[1]\n    result[4] = -this.calculateSegmentMat_Direction[1]\n    result[5] = this.calculateSegmentMat_Direction[0]\n    result[10] = 1.0\n    result[12] = locationFrom[0]\n    result[13] = locationFrom[1]\n  }\n\n  calculateControlPoint(resultF: Vec3, resultB: Vec3, direction: Vec3, edgePointC: Vec3, edgePointB: Vec3, edgePointF: Vec3) {\n\n    const distanceF = vec3.distance(edgePointF, edgePointC)\n    vec3.scale(this.controlPointVec, direction, distanceF * 0.33)\n    vec3.add(resultF, edgePointC, this.controlPointVec)\n\n    const distanceB = vec3.distance(edgePointB, edgePointC)\n    vec3.scale(this.controlPointVec, direction, -distanceB * 0.33)\n    vec3.add(resultB, edgePointC, this.controlPointVec)\n  }\n\n  calculateMirroredPoint(resultControlPoint: Vec3, resultEdgePoint: Vec3\n    , centerPointFrom: Vec3, edgePointfrom: Vec3, radiusFrom: float\n    , centerPointTo: Vec3, edgePointTo: Vec3, controlPointTo: Vec3\n    , pointMat: Mat4, invMat: Mat4) {\n\n    if (resultEdgePoint != null) {\n\n      vec3.transformMat4(this.relativeVecCenterTo, centerPointTo, invMat)\n      vec3.transformMat4(this.relativeVecCenterFrom, centerPointFrom, invMat)\n\n      vec3.transformMat4(this.relativeVecA, edgePointTo, invMat)\n\n      vec3.subtract(this.relativeVecB, this.relativeVecA, this.relativeVecCenterTo)\n      const length = vec3.length(this.relativeVecB)\n      if (length > 0) {\n\n        vec3.scale(this.relativeVecB, this.relativeVecB, radiusFrom / length)\n      }\n      else {\n\n        vec3.set(this.relativeVecB, 0.0, 0.0, 0.0)\n      }\n\n      this.relativeVecB[0] = this.relativeVecB[0] * -1 + this.relativeVecCenterFrom[0]\n      this.relativeVecB[1] = this.relativeVecB[1] + this.relativeVecCenterFrom[1]\n      this.relativeVecB[2] = 0.0\n      vec3.transformMat4(resultEdgePoint, this.relativeVecB, pointMat)\n    }\n\n    if (resultControlPoint != null) {\n\n      vec3.transformMat4(this.relativeVecEdgeTo, edgePointTo, invMat)\n      vec3.transformMat4(this.relativeVecEdgeFrom, edgePointfrom, invMat)\n\n      vec3.transformMat4(this.relativeVecA, controlPointTo, invMat)\n      this.relativeVecB[0] = (this.relativeVecA[0] - this.relativeVecEdgeTo[0]) * -1 + this.relativeVecEdgeFrom[0]\n      this.relativeVecB[1] = (this.relativeVecA[1] - this.relativeVecEdgeTo[1]) + this.relativeVecEdgeFrom[1]\n      this.relativeVecB[2] = 0.0\n      vec3.transformMat4(resultControlPoint, this.relativeVecB, pointMat)\n    }\n  }\n\n  // 3. ベジエ曲線を囲むポリゴンのうち制御点の頂点位置の計算\n  calculateControlPointVertexLocations(vertexBuffer: GPUVertexBuffer) {\n\n    for (const line of vertexBuffer.lines) {\n\n      // 前方向への制御点の位置を計算\n      for (let index = 0; index < line.points.length - 1; index++) {\n\n        const linePoint = line.points[index]\n        const linePointNext = line.points[index + 1]\n\n        this.calculateControlPointVertexLocation(\n          linePoint.controlPointVertexLF,\n          linePoint.edgePointL,\n          linePoint.controlPointLF,\n          linePointNext.edgePointL,\n          linePointNext.controlPointLB,\n          1.0\n        )\n\n        this.calculateControlPointVertexLocation(\n          linePoint.controlPointVertexRF,\n          linePoint.edgePointR,\n          linePoint.controlPointRF,\n          linePointNext.edgePointR,\n          linePointNext.controlPointRB,\n          -1.0\n        )\n      }\n\n      // 後方向への制御点の位置を計算\n      for (let index = 1; index < line.points.length; index++) {\n\n        const linePoint = line.points[index]\n        const linePointPrev = line.points[index - 1]\n\n        this.calculateControlPointVertexLocation(\n          linePoint.controlPointVertexLB,\n          linePoint.edgePointL,\n          linePoint.controlPointLB,\n          linePointPrev.edgePointL,\n          linePointPrev.controlPointLF,\n          -1.0\n        )\n\n        this.calculateControlPointVertexLocation(\n          linePoint.controlPointVertexRB,\n          linePoint.edgePointR,\n          linePoint.controlPointRB,\n          linePointPrev.edgePointR,\n          linePointPrev.controlPointRF,\n          1.0\n        )\n      }\n    }\n  }\n\n  calculateControlPointVertexLocation(controlPointVertexLF: Vec3, edgePointFrom: Vec3, controlPointFrom: Vec3, edgePointTo: Vec3, controlPointTo: Vec3, flipY: float) {\n\n    // セグメントの座標系\n    this.calculateSegmentMat(this.tempMat, edgePointFrom, edgePointTo)\n    mat4.invert(this.invMat, this.tempMat)\n\n    // セグメント座標\n    vec3.transformMat4(this.relativeEdgePointVecA, edgePointFrom, this.invMat)\n    vec3.transformMat4(this.relativeVecA, controlPointFrom, this.invMat)\n\n    vec3.transformMat4(this.relativeVecB, controlPointTo, this.invMat)\n    if (this.relativeVecB[1] * flipY < 0.0) {\n      vec3.transformMat4(this.relativeVecB, edgePointTo, this.invMat)\n    }\n\n    const tiltX = this.relativeVecB[0] - this.relativeEdgePointVecA[0]\n    const tiltY = this.relativeVecB[1] - this.relativeEdgePointVecA[1]\n\n    if (tiltX == 0.0) {\n      return\n    }\n\n    const deltaX = this.relativeVecA[0] - this.relativeEdgePointVecA[0]\n    const localY = (tiltY / tiltX) * deltaX + this.relativeEdgePointVecA[1]\n\n    if (this.relativeVecA[1] * flipY < localY * flipY) {\n\n      controlPointVertexLF[0] = this.relativeVecA[0]\n      controlPointVertexLF[1] = localY\n      controlPointVertexLF[2] = 0.0\n      vec3.transformMat4(controlPointVertexLF, controlPointVertexLF, this.tempMat)\n    }\n    else {\n\n      vec3.copy(controlPointVertexLF, controlPointFrom)\n    }\n  }\n\n  calculateBufferData_PloyLine(vertexBuffer: GPUVertexBuffer) {\n\n    const data = vertexBuffer.dataArray\n    let offset = 0\n\n    for (const line of vertexBuffer.lines) {\n\n      for (let index = 0; index < line.points.length - 1; index++) {\n\n        const linePoint = line.points[index]\n        const linePointNext = line.points[index + 1]\n\n        if (linePoint.isEndPoint) {\n          continue\n        }\n\n        for (const map of this.solidLinePolygonMap) {\n\n          let point: GPULinePoint\n          if (map.cur == 1) {\n            point = linePoint\n          }\n          else {\n            point = linePointNext\n          }\n\n          let vec: Vec3\n          if (map.loc == 1) {\n            vec = point.location\n          }\n          else if (map.loc == 2) {\n            vec = point.edgePointL\n          }\n          else if (map.loc == 5) {\n            vec = point.edgePointR\n          }\n\n          data[offset++] = vec[0]\n          data[offset++] = vec[1]\n        }\n      }\n    }\n\n    vertexBuffer.usedDataArraySize = offset\n  }\n\n  calculateBufferData_BezierLine(vertexBuffer: GPUVertexBuffer) {\n\n    const data = vertexBuffer.dataArray\n    let offset = 0\n\n    for (const line of vertexBuffer.lines) {\n\n      {\n        const linePoint = line.points[0]\n        const linePointNext = line.points[1]\n\n        offset = this.calculateBufferData_AddBezierCapPoints(data, offset, linePoint, linePointNext, true)\n      }\n\n      {\n        const linePoint = line.points[line.points.length - 2]\n        const linePointNext = line.points[line.points.length - 1]\n\n        offset = this.calculateBufferData_AddBezierCapPoints(data, offset, linePoint, linePointNext, false)\n      }\n\n      for (let index = 0; index < line.points.length - 1; index++) {\n\n        const linePoint = line.points[index]\n        const linePointNext = line.points[index + 1]\n\n        for (const map of this.bezierPolygonMap) {\n\n          let point: GPULinePoint\n          if (map.cur == 1) {\n            point = linePoint\n          }\n          else {\n            point = linePointNext\n          }\n\n          let vec: Vec3\n          if (map.loc == 1) {\n            vec = point.location\n          }\n          else if (map.loc == 2) {\n            vec = point.edgePointL\n          }\n          else if (map.loc == 3) {\n            vec = point.controlPointVertexLF\n          }\n          else if (map.loc == 4) {\n            vec = point.controlPointVertexLB\n          }\n          else if (map.loc == 5) {\n            vec = point.edgePointR\n          }\n          else if (map.loc == 6) {\n            vec = point.controlPointVertexRF\n          }\n          else if (map.loc == 7) {\n            vec = point.controlPointVertexRB\n          }\n\n          //let flipY = (map.lr == 1 ? 1.0 : -1.0)\n\n          offset = this.calculateBufferData_AddBezierPoint(data, offset, vec, linePoint, linePointNext, 1.0\n            , linePoint.width, linePointNext.width)\n        }\n      }\n    }\n\n    vertexBuffer.usedDataArraySize = offset\n  }\n\n  calculateBufferData_AddBezierPoint(data: Float32Array, offset: int, vec: Vec3\n    , linePoint: GPULinePoint, linePointNext: GPULinePoint, flipY: float\n    , widthFrom: float, widthTo: float): int {\n\n    // 頂点位置\n    data[offset++] = vec[0]\n    data[offset++] = vec[1]\n\n    // セグメントローカル座標 x, y、セグメントローカル t (0.0 -> 1.0)\n    vec3.transformMat4(this.relativeVecA, vec, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1] * flipY\n\n    const length = vec3.distance(linePoint.location, linePointNext.location)\n    data[offset++] = this.relativeVecA[0] / length\n\n    // 各制御点\n    // vec3.transformMat4(this.relativeVecA, linePoint.edgePointL, linePoint.invMat)\n    vec3.transformMat4(this.relativeVecA, linePoint.location, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    // vec3.transformMat4(this.relativeVecA, linePoint.controlPointLF, linePoint.invMat)\n    vec3.transformMat4(this.relativeVecA, linePoint.controlPointCF, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    // vec3.transformMat4(this.relativeVecA, linePointNext.controlPointLB, linePoint.invMat)\n    vec3.transformMat4(this.relativeVecA, linePointNext.controlPointCB, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    // vec3.transformMat4(this.relativeVecA, linePointNext.edgePointL, linePoint.invMat)\n    vec3.transformMat4(this.relativeVecA, linePointNext.location, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    vec3.transformMat4(this.relativeVecA, linePoint.edgePointR, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    vec3.transformMat4(this.relativeVecA, linePoint.controlPointRF, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    vec3.transformMat4(this.relativeVecA, linePointNext.controlPointRB, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    vec3.transformMat4(this.relativeVecA, linePointNext.edgePointR, linePoint.invMat)\n    data[offset++] = this.relativeVecA[0]\n    data[offset++] = this.relativeVecA[1]\n\n    // 幅\n    data[offset++] = widthFrom * 0.5\n    data[offset++] = widthTo * 0.5\n\n    return offset\n  }\n\n  calculateBufferData_AddBezierCapPoints(data: Float32Array, offset: int, linePoint: GPULinePoint, linePointNext: GPULinePoint, isTopCap: boolean): int {\n\n    const capPoint = (isTopCap ? linePoint : linePointNext)\n    const direction = (isTopCap ? 1.0 : -1.0)\n    const capTopRelativeX = -(capPoint.edgePointL[1] - capPoint.location[1]) * direction\n    const capTopRelativeY = (capPoint.edgePointL[0] - capPoint.location[0]) * direction\n\n    const leftTopX = capPoint.edgePointL[0] + capTopRelativeX\n    const leftTopY = capPoint.edgePointL[1] + capTopRelativeY\n    const rightTopX = capPoint.edgePointR[0] + capTopRelativeX\n    const rightTopY = capPoint.edgePointR[1] + capTopRelativeY\n\n    const width = (isTopCap ? linePoint.width : linePointNext.width)\n\n    // 1\n    vec3.set(this.vec, leftTopX, leftTopY, 0.0)\n    offset = this.calculateBufferData_AddBezierPoint(data, offset, this.vec, linePoint, linePointNext, 1.0, width, width)\n\n    vec3.set(this.vec, capPoint.edgePointL[0], capPoint.edgePointL[1], 0.0)\n    offset = this.calculateBufferData_AddBezierPoint(data, offset, this.vec, linePoint, linePointNext, 1.0, width, width)\n\n    vec3.set(this.vec, capPoint.edgePointR[0], capPoint.edgePointR[1], 0.0)\n    offset = this.calculateBufferData_AddBezierPoint(data, offset, this.vec, linePoint, linePointNext, 1.0, width, width)\n\n    // 2\n    vec3.set(this.vec, capPoint.edgePointR[0], capPoint.edgePointR[1], 0.0)\n    offset = this.calculateBufferData_AddBezierPoint(data, offset, this.vec, linePoint, linePointNext, 1.0, width, width)\n\n    vec3.set(this.vec, rightTopX, rightTopY, 0.0)\n    offset = this.calculateBufferData_AddBezierPoint(data, offset, this.vec, linePoint, linePointNext, 1.0, width, width)\n\n    vec3.set(this.vec, leftTopX, leftTopY, 0.0)\n    offset = this.calculateBufferData_AddBezierPoint(data, offset, this.vec, linePoint, linePointNext, 1.0, width, width)\n\n    return offset\n  }\n\n  bufferData(vertexBuffer: GPUVertexBuffer, render: WebGLRender) {\n\n    render.bufferDataOnce(vertexBuffer.buffer, vertexBuffer.dataArray)\n\n    vertexBuffer.isStored = true\n  }\n}\n","﻿import { float, int } from '../common-logics'\n\nexport class CanvasWindow {\n\n  canvas: HTMLCanvasElement = null\n  context: CanvasRenderingContext2D = null\n  devicePixelRatio: float = 1.0\n  width: float = 0.0\n  height: float = 0.0\n\n  viewLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  centerLocationRate = vec3.fromValues(0.0, 0.0, 0.0)\n  viewScale = 1.0\n  viewRotation = 0.0\n  mirrorX = false\n  mirrorY = false\n  maxViewScale = 50.0\n  minViewScale = 0.01\n  transformMatrix = mat4.create()\n\n  private tempVec3 = vec3.create()\n  private tmpMatrix = mat4.create()\n\n  createCanvas(width?: int, height?: int, willReadFrequently = false) {\n\n    this.attachCanvas(document.createElement('canvas'))\n\n    if (width && height) {\n\n      this.setCanvasSize(width, height)\n      this.initializeContext(willReadFrequently)\n    }\n  }\n\n  attachCanvas(canvas: HTMLCanvasElement) {\n\n    this.canvas = canvas\n    this.devicePixelRatio = window.devicePixelRatio\n    this.width = canvas.width\n    this.height = canvas.height\n  }\n\n  releaseCanvas(): HTMLCanvasElement {\n\n    const canvas = this.canvas\n\n    this.canvas = null\n\n    return canvas\n  }\n\n  setCanvasSize(width: int, height: int) {\n\n    this.canvas.width = width\n    this.canvas.height = height\n\n    this.width = width\n    this.height = height\n  }\n\n  initializeContext(willReadFrequently = false) {\n\n    this.context = <CanvasRenderingContext2D>this.canvas.getContext('2d', { willReadFrequently: willReadFrequently })\n  }\n\n  isInitialized(): boolean {\n\n    return (this.canvas != null && this.context != null)\n  }\n\n  isSameMetrics(targetWindow: CanvasWindow): boolean {\n\n    return (\n      this.isInitialized() &&\n      targetWindow.isInitialized() &&\n      targetWindow.width == this.width &&\n      targetWindow.height == this.height\n    )\n  }\n\n  copyTransformTo(targetWindow: CanvasWindow) {\n\n    vec3.copy(targetWindow.viewLocation, this.viewLocation)\n    vec3.copy(targetWindow.centerLocationRate, this.centerLocationRate)\n    targetWindow.viewScale = this.viewScale\n    targetWindow.viewRotation = this.viewRotation\n    targetWindow.mirrorX = this.mirrorX\n    targetWindow.mirrorY = this.mirrorY\n    mat4.copy(targetWindow.transformMatrix, this.transformMatrix)\n  }\n\n  addViewScale(addScale: float) {\n\n    this.viewScale *= addScale\n\n    this.fixViewScale()\n  }\n\n  fixViewRotation() {\n\n    if (this.viewRotation >= 360.0) {\n\n      this.viewRotation -= 360.0\n    }\n\n    if (this.viewRotation <= 0.0) {\n\n      this.viewRotation += 360.0\n    }\n  }\n\n  fixViewScale() {\n\n    if (this.viewScale >= this.maxViewScale) {\n\n      this.viewScale = this.maxViewScale\n    }\n\n    if (this.viewScale <= this.minViewScale) {\n\n      this.viewScale = this.minViewScale\n    }\n  }\n\n  updateViewMatrix() {\n\n    this.caluclateViewMatrix(this.transformMatrix)\n  }\n\n  caluclateViewMatrix(result: Mat4) {\n\n    mat4.identity(result)\n\n    mat4.translate(result, result, vec3.set(this.tempVec3, this.width * this.centerLocationRate[0], this.height * this.centerLocationRate[0], 0.0))\n\n    mat4.scale(result, result, vec3.set(this.tempVec3, this.viewScale, this.viewScale, 1.0))\n\n    if (this.mirrorX) {\n      mat4.scale(result, result, vec3.set(this.tempVec3, -1.0, 1.0, 1.0))\n    }\n\n    if (this.mirrorY) {\n      mat4.scale(result, result, vec3.set(this.tempVec3, 1.0, -1.0, 1.0))\n    }\n\n    mat4.rotateZ(result, result, this.viewRotation * Math.PI / 180.0)\n\n    mat4.translate(result, result, vec3.set(this.tempVec3, -this.viewLocation[0], -this.viewLocation[1], 0.0))\n  }\n\n  caluclateGLViewMatrix(result: Mat4) {\n\n    const viewScale = this.viewScale\n    const aspect = this.height / this.width\n\n    const real2DViewHalfWidth = this.width / 2 / viewScale\n    const real2DViewHalfHeight = this.height / 2 / viewScale\n\n    const viewOffsetX = -(this.viewLocation[0]) / real2DViewHalfWidth // Normalize to fit to ortho matrix range (0.0-1.0)\n    const viewOffsetY = (this.viewLocation[1]) / real2DViewHalfHeight\n\n    mat4.identity(this.tmpMatrix)\n\n    mat4.scale(this.tmpMatrix, this.tmpMatrix, vec3.set(this.tempVec3, aspect, 1.0, 1.0))\n\n    if (this.mirrorX) {\n\n      mat4.scale(this.tmpMatrix, this.tmpMatrix, vec3.set(this.tempVec3, -1.0, 1.0, 1.0))\n    }\n\n    if (this.mirrorY) {\n\n      mat4.scale(this.tmpMatrix, this.tmpMatrix, vec3.set(this.tempVec3, 1.0, -1.0, 1.0))\n    }\n\n    mat4.rotateZ(this.tmpMatrix, this.tmpMatrix, -this.viewRotation * Math.PI / 180.0)\n\n    mat4.translate(result, this.tmpMatrix, vec3.set(this.tempVec3, viewOffsetX / aspect, viewOffsetY, 0.0))\n  }\n\n  calculateViewUnitMatrix(result: Mat4) {\n\n    mat4.identity(result)\n    mat4.scale(result, result, vec3.set(this.tempVec3, this.viewScale, this.viewScale, 1.0))\n    mat4.rotateZ(result, result, this.viewRotation * Math.PI / 180.0)\n  }\n\n  getViewScaledLength(length: float) {\n\n    return length / this.viewScale\n  }\n}\n\nexport enum CanvasRenderBlendMode {\n\n  default, alphaOver, add,  sourceAtop, destinationIn\n}\n\nexport enum CanvasRenderLineCap {\n\n  butt, round, square\n}\n\nexport class CanvasRender {\n\n  private context: CanvasRenderingContext2D = null\n  private canvasWindow: CanvasWindow = null\n  private currentTransform = mat4.create()\n  private tempMat = mat4.create()\n  private lastFontHeight = 0.0\n  private strokeDashEmpty: float[] = []\n\n  get transformMatrix(): Mat4 {\n\n    return this.canvasWindow.transformMatrix\n  }\n\n  get canvasWidth(): int {\n\n    return this.canvasWindow.width\n  }\n\n  get canvasHeight(): int {\n\n    return this.canvasWindow.height\n  }\n\n  setContext(canvasWindow: CanvasWindow) {\n\n    this.context = canvasWindow.context\n    this.canvasWindow = canvasWindow\n    this.lastFontHeight = 0.0\n\n    canvasWindow.updateViewMatrix()\n\n    this.copyTransformFromWindow(canvasWindow)\n  }\n\n  getViewScale(): float {\n\n    return this.canvasWindow.viewScale\n  }\n\n  getViewScaledSize(size: float): float {\n\n    return size / this.canvasWindow.viewScale\n  }\n\n  resetTransform() {\n\n    mat4.identity(this.tempMat)\n\n    this.setTransformFromMatrix(this.tempMat)\n  }\n\n  copyTransformFromWindow(canvasWindow: CanvasWindow) {\n\n    mat4.copy(this.currentTransform, canvasWindow.transformMatrix)\n\n    this.setTransformFromMatrix(canvasWindow.transformMatrix)\n  }\n\n  setTransformFromMatrix(matrix: Mat4) {\n\n    CanvasRender.setTransformMat4(this.context, matrix)\n  }\n\n  static setTransformMat4(context: CanvasRenderingContext2D, matrix: Mat4) {\n\n    context.setTransform(\n      matrix[0], matrix[1],\n      matrix[4], matrix[5],\n      matrix[12], matrix[13]\n    )\n  }\n\n  setLocalTransform(matrix: Mat4) {\n\n    mat4.multiply(this.tempMat, this.currentTransform, matrix)\n\n    this.setTransformFromMatrix(this.tempMat)\n  }\n\n  cancelLocalTransform() {\n\n    this.setTransformFromMatrix(this.currentTransform)\n  }\n\n  isInViewRectangle(location: Vec3, range: float) {\n\n    const centerX = this.canvasWindow.viewLocation[0]\n    const centerY = this.canvasWindow.viewLocation[0]\n\n    const distance = Math.sqrt(Math.pow(location[0] - centerX, 2) + Math.pow(location[1] - centerY, 2))\n\n    const rangeX = Math.max(centerX , this.canvasWidth - centerX)\n    const rangeY = Math.max(centerY , this.canvasHeight - centerY)\n\n    const viewRange = Math.sqrt(rangeX * rangeX + rangeY * rangeY) / this.canvasWindow.viewScale\n\n    return ((distance - range) < viewRange)\n  }\n\n  private getColorStyleText(r: float, g: float, b: float, a: float) {\n\n    return 'rgba(' + (r * 255).toFixed(0) + ',' + (g * 255).toFixed(0) + ',' + (b * 255).toFixed(0) + ',' + (a).toFixed(2) + ')'\n  }\n\n  private getColorStyleTextV(color: Vec4) {\n\n    return this.getColorStyleText(color[0], color[1], color[2], color[3])\n  }\n\n  setFillColor(r: float, g: float, b: float, a: float) {\n\n    this.context.fillStyle = this.getColorStyleText(r, g, b, a)\n  }\n\n  setFillColorV(color: Vec4) {\n\n    this.setFillColor(color[0], color[1], color[2], color[3])\n  }\n\n  createRadialGradient(x: float, y: float, radius: float) {\n\n    return this.context.createRadialGradient(x, y, 0, x, y, radius)\n  }\n\n  setFillGradiaent(gradient: CanvasGradient) {\n\n    this.context.fillStyle = gradient\n  }\n\n  setFillLinearGradient(x0: float, y0: float, x1: float, y1: float, color1: Vec4, color2: Vec4) {\n\n    const grad = this.context.createLinearGradient(x0, y0, x1, y1)\n    grad.addColorStop(0.0, this.getColorStyleTextV(color1))\n    grad.addColorStop(1.0, this.getColorStyleTextV(color2))\n    this.context.fillStyle = grad\n  }\n\n  setFillRadialGradient(x: float, y: float, r1: float, r2: float, color1: Vec4, color2: Vec4) {\n\n    const grad = this.context.createRadialGradient(x, y, r1, x, y, r2)\n    grad.addColorStop(0.0, this.getColorStyleTextV(color1))\n    grad.addColorStop(1.0, this.getColorStyleTextV(color2))\n    this.context.fillStyle = grad\n  }\n\n  setStrokeWidth(width: float) {\n\n    this.context.lineWidth = width\n  }\n\n  setStrokeColor(r: float, g: float, b: float, a: float) {\n\n    this.context.strokeStyle = this.getColorStyleText(r, g, b, a)\n  }\n\n  setStrokeColorV(color: Vec4) {\n\n    this.setStrokeColor(color[0], color[1], color[2], color[3])\n  }\n\n  setLineDash(segments: float[]) {\n\n    this.context.setLineDash(segments)\n  }\n\n  clearLineDash() {\n\n    this.context.setLineDash(this.strokeDashEmpty)\n  }\n\n  setGlobalAlpha(a: float) {\n\n    this.context.globalAlpha = a\n  }\n\n  setBlendMode(blendMode: CanvasRenderBlendMode) {\n\n    switch (blendMode) {\n\n      case CanvasRenderBlendMode.default:\n      case CanvasRenderBlendMode.alphaOver:\n        this.context.globalCompositeOperation = 'source-over'\n        break\n\n      case CanvasRenderBlendMode.sourceAtop:\n        this.context.globalCompositeOperation = 'source-atop'\n        break\n\n      case CanvasRenderBlendMode.destinationIn:\n        this.context.globalCompositeOperation = 'destination-in'\n        break\n\n      case CanvasRenderBlendMode.add:\n        this.context.globalCompositeOperation = 'lighter'\n        break\n    }\n  }\n\n  setLineCap(lineCap: CanvasRenderLineCap) {\n\n    this.context.lineCap = <CanvasLineCap>(CanvasRenderLineCap[lineCap])\n  }\n\n  beginPath() {\n\n    this.context.beginPath()\n  }\n\n  closePath() {\n\n    this.context.closePath()\n  }\n\n  beginPathPoints(pathPoints: float[][]) {\n\n    this.beginPath()\n\n    this.pathPoints(pathPoints)\n  }\n\n  pathPoints(pathPoints: float[][]) {\n\n    this.moveToV(pathPoints[0])\n    for (const point of pathPoints) {\n\n      this.lineToV(point)\n    }\n  }\n\n  strokePath(pathPoints: float[][]) {\n\n    this.beginPathPoints(pathPoints)\n    this.stroke()\n  }\n\n  fillPath(pathPoints: float[][]) {\n\n    this.beginPathPoints(pathPoints)\n    this.fill()\n  }\n\n  stroke() {\n\n    this.context.stroke()\n  }\n\n  fill() {\n\n    this.context.fill()\n  }\n\n  moveTo(x: float, y: float) {\n\n    this.context.moveTo(x, y)\n  }\n\n  moveToV(location: Vec3) {\n\n    this.context.moveTo(location[0], location[1])\n  }\n\n  lineTo(x: float, y: float) {\n\n    this.context.lineTo(x, y)\n  }\n\n  lineToV(location: Vec3) {\n\n    this.context.lineTo(location[0], location[1])\n  }\n\n  clear() {\n\n    mat4.copy(this.tempMat, this.canvasWindow.transformMatrix)\n\n    this.context.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)\n\n    this.context.clearRect(0, 0, this.canvasWindow.width, this.canvasWindow.height)\n\n    this.setTransformFromMatrix(this.tempMat)\n  }\n\n  clearRect(left: int, top: int, width: int, height: int) {\n\n    this.context.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0)\n\n    this.context.clearRect(left, top, width, height)\n\n    this.cancelLocalTransform()\n  }\n\n  strokeRect(left: int, top: int, width: int, height: int) {\n\n    this.context.strokeRect(left, top, width, height)\n  }\n\n  fillRect(left: int, top: int, width: int, height: int) {\n\n    this.context.fillRect(left, top, width, height)\n  }\n\n  strokeRoundRect(x: float, y: float, width: float, height: float, rounded: float) {\n\n    this.pathRoundRect(x, y, width, height, rounded)\n\n    this.context.stroke()\n  }\n\n  fillRoundRect(x: float, y: float, width: float, height: float, rounded: float) {\n\n    this.pathRoundRect(x, y, width, height, rounded)\n\n    this.context.fill()\n  }\n\n  pathRoundRect(x: float, y: float, width: float, height: float, rounded: float) {\n\n    const halfRadians = (2 * Math.PI) / 2\n    const quarterRadians = (2 * Math.PI) / 4\n\n    this.context.beginPath()\n\n    this.context.arc(rounded + x, rounded + y, rounded, -quarterRadians, halfRadians, true)\n    this.context.lineTo(x, y + height - rounded)\n    this.context.arc(rounded + x, height - rounded + y, rounded, halfRadians, quarterRadians, true)\n    this.context.lineTo(x + width - rounded, y + height)\n    this.context.arc(x + width - rounded, y + height - rounded, rounded, quarterRadians, 0, true)\n    this.context.lineTo(x + width, y + rounded)\n    this.context.arc(x + width - rounded, y + rounded, rounded, 0, -quarterRadians, true)\n    this.context.closePath()\n  }\n\n  drawLine(x1: float, y1: float, x2: float, y2: float) {\n\n    this.context.beginPath()\n    this.context.moveTo(x1, y1)\n    this.context.lineTo(x2, y2)\n    this.context.stroke()\n  }\n\n  circle(x: float, y: float, radius: float) {\n\n    this.context.arc(x, y, radius, 0.0, Math.PI * 2.0)\n  }\n\n  drawImage(image: HTMLImageElement | HTMLCanvasElement, srcX: float, srcY: float, srcW: float, srcH: float, dstX: float, detY: float, dstW: float, dstH: float) {\n\n    this.context.drawImage(image, srcX, srcY, srcW, srcH, dstX, detY, dstW, dstH)\n  }\n\n  putImageData(imageData: ImageData, destX: int, destY: int) {\n\n    this.context.putImageData(imageData, destX, destY)\n  }\n\n  setFontSize(height: float) {\n\n    if (height != this.lastFontHeight) {\n\n      this.context.font = `${height.toFixed(0)}px 'MS Gothic', 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Osaka-Mono', 'Noto Sans JP', monospace`\n    }\n  }\n\n  fillText(text: string, x: float, y: float, horizontalCenter = false, verticalCenter = false) {\n\n    this.strokeOrFillText(true, text, x, y, horizontalCenter, verticalCenter)\n  }\n\n  strokeText(text: string, x: float, y: float, horizontalCenter = false, verticalCenter = false) {\n\n    this.strokeOrFillText(false, text, x, y, horizontalCenter, verticalCenter)\n  }\n\n  private strokeOrFillText(fill: boolean, text: string, x: float, y: float, horizontalCenter = false, verticalCenter = false) {\n\n    if (verticalCenter || horizontalCenter) {\n\n      const metrics = this.context.measureText(text)\n\n      if (horizontalCenter) {\n\n        x -= metrics.width / 2\n      }\n\n      if (verticalCenter) {\n\n        y += (metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent) / 2\n      }\n    }\n\n    if (fill) {\n\n      this.context.fillText(text, x, y)\n    }\n    else {\n\n      this.context.lineJoin = 'round';\n      this.context.strokeText(text, x, y)\n      this.context.lineJoin = 'miter';\n    }\n  }\n\n  pickColor(outColor: Vec4, x: float, y: float) {\n\n    const imageData = this.context.getImageData(Math.floor(x), Math.floor(y), 1, 1)\n\n    vec4.set(outColor,\n      imageData.data[0] / 255.0,\n      imageData.data[1] / 255.0,\n      imageData.data[2] / 255.0,\n      imageData.data[3] / 255.0\n    )\n  }\n}\n","import { float, int } from '../common-logics'\n\nexport class RenderModel {\n\n  vertexBuffer: WebGLBuffer = null\n  indexBuffer: WebGLBuffer = null\n\n  vertexData: float[] = null\n  indexData: float[] = null\n  indexCount = 0\n  vertexDataStride = 0\n}\n\nexport class RenderImage {\n\n  width = 0\n  height = 0\n\n  texture: WebGLTexture = null\n\n  imageData: HTMLImageElement = null\n}\n\nexport class RenderShader {\n\n  gl: WebGLRenderingContext\n\n  floatPrecisionDefinitionCode = ''\n  vertexShaderSourceCode = ''\n  fragmentShaderSourceCode = ''\n\n  vertexShader: WebGLShader = null\n  fragmentShader: WebGLShader = null\n  program: WebGLProgram = null\n\n  attribLocationList: int[] = []\n  vertexAttribPointerOffset = 0\n\n  uPMatrix: WebGLUniformLocation = null\n  uMVMatrix: WebGLUniformLocation = null\n\n  isAvailable(): boolean {\n\n    return (this.gl != null)\n  }\n\n  isDisabled(): boolean {\n\n    return (this.gl == null)\n  }\n\n  initializeSourceCode(precisionText: string) {\n\n    this.floatPrecisionDefinitionCode = '#ifdef GL_ES\\n precision ' + precisionText + ' float;\\n #endif\\n'\n\n    this.initializeVertexSourceCode()\n\n    this.initializeFragmentSourceCode()\n  }\n\n  protected initializeVertexSourceCode() { // @virtual\n\n    // Override method\n  }\n\n  protected initializeFragmentSourceCode() { // @virtual\n\n    // Override method\n  }\n\n  initializeAttributes() { // @virtual\n\n    this.initializeAttributes_RenderShader()\n  }\n\n  initializeAttributes_RenderShader() {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.uPMatrix = this.getUniformLocation('uPMatrix')\n    this.uMVMatrix = this.getUniformLocation('uMVMatrix')\n  }\n\n  protected getAttribLocation(name: string): int {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const attribLocation = this.gl.getAttribLocation(this.program, name)\n    this.attribLocationList.push(attribLocation)\n\n    return attribLocation\n  }\n\n  protected getUniformLocation(name: string): WebGLUniformLocation {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    return this.gl.getUniformLocation(this.program, name)\n  }\n\n  enableVertexAttributes() {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    for (const attribLocation of this.attribLocationList) {\n\n      this.gl.enableVertexAttribArray(attribLocation)\n    }\n  }\n\n  disableVertexAttributes() {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    for (const attribLocation of this.attribLocationList) {\n\n      this.gl.disableVertexAttribArray(attribLocation)\n    }\n  }\n\n  resetVertexAttribPointerOffset() {\n\n    this.vertexAttribPointerOffset = 0\n  }\n\n  vertexAttribPointer(indx: number, size: number, type: number, stride: number) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (type == gl.FLOAT || type == gl.INT) {\n\n      gl.vertexAttribPointer(indx, size, type, false, stride, this.vertexAttribPointerOffset)\n      this.vertexAttribPointerOffset += 4 * size\n    }\n  }\n\n  skipVertexAttribPointer(type: number, size: number) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (type == gl.FLOAT || type == gl.INT) {\n\n      this.vertexAttribPointerOffset += 4 * size\n    }\n  }\n\n  setProjectionMatrix(matrix: Mat4) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.uniformMatrix4fv(this.uPMatrix, false, matrix)\n  }\n\n  setModelViewMatrix(matrix: Mat4) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.uniformMatrix4fv(this.uMVMatrix, false, matrix)\n  }\n}\n\nexport enum WebGLRenderBlendType {\n  blend = 1,\n  add = 2,\n  src = 3,\n}\n\nexport class WebGLRender {\n\n  private gl: WebGLRenderingContext = null\n  private floatPrecisionText: string = ''\n  private currentShader: RenderShader = null\n\n  isAvailable(): boolean {\n\n    return (this.gl != null)\n  }\n\n  isDisabled(): boolean {\n\n    return (this.gl == null)\n  }\n\n  initializeWebGL(canvas: HTMLCanvasElement, antialias: boolean): boolean {\n\n    try {\n\n      const option = { preserveDrawingBuffer: true, antialias: antialias }\n\n      const gl = <WebGLRenderingContext>(\n        canvas.getContext('webgl', option)\n        || canvas.getContext('experimental-webgl', option)\n      )\n\n      if (gl != null) {\n\n        this.attach(gl)\n      }\n      else {\n\n        throw new Error('ERROR-0701:Faild to initialize WebGL.')\n      }\n    }\n    catch (e) {\n\n      return true\n    }\n\n    return false\n  }\n\n  attach(gl: WebGLRenderingContext) {\n\n    this.gl = gl\n\n    const format = this.gl.getShaderPrecisionFormat(this.gl.FRAGMENT_SHADER, this.gl.HIGH_FLOAT)\n    this.floatPrecisionText = format.precision != 0 ? 'highp' : 'mediump'\n\n    this.resetBasicParameters()\n  }\n\n  initializeModelBuffer(model: RenderModel, vertexData: float[], indexData: int[], vertexDataStride: int) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    model.vertexBuffer = this.createVertexBuffer(vertexData, this.gl)\n    model.indexBuffer = this.createIndexBuffer(indexData, this.gl)\n\n    model.vertexData = vertexData\n    model.indexData = indexData\n    model.indexCount = indexData.length\n    model.vertexDataStride = vertexDataStride\n  }\n\n  createBuffer(): WebGLBuffer {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    return this.gl.createBuffer()\n  }\n\n  deleteBuffer(buffer: WebGLBuffer) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.deleteBuffer(buffer)\n  }\n\n  bufferDataOnce(buffer: WebGLBuffer, dataArray: Float32Array) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n    gl.bufferData(gl.ARRAY_BUFFER, dataArray, gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n  }\n\n  private createVertexBuffer(data: float[], gl: WebGLRenderingContext): WebGLBuffer {\n\n    const glBuffer = gl.createBuffer()\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n    return glBuffer\n  }\n\n  private createIndexBuffer(data: int[], gl: WebGLRenderingContext): WebGLBuffer {\n\n    const glBuffer = gl.createBuffer()\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, glBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Int16Array(data), gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n    return glBuffer\n  }\n\n  releaseModelBuffer(model: RenderModel) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (model.vertexBuffer != null) {\n\n      this.gl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n      gl.deleteBuffer(model.vertexBuffer)\n\n      model.vertexBuffer = null\n    }\n\n    if (model.indexBuffer != null) {\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n      gl.deleteBuffer(model.indexBuffer)\n\n      model.indexBuffer = null\n    }\n  }\n\n  initializeImageTexture(image: RenderImage) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    const glTexture = gl.createTexture()\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1)\n    gl.bindTexture(gl.TEXTURE_2D, glTexture)\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image.imageData)\n\n    //gl.generateMipmap(gl.TEXTURE_2D)\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT)\n\n    gl.bindTexture(gl.TEXTURE_2D, null)\n\n    image.texture = glTexture\n    image.width = image.imageData.width\n    image.height = image.imageData.height\n  }\n\n  releaseImageTexture(image: RenderImage) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    if (image.texture == null) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.bindTexture(gl.TEXTURE_2D, null)\n\n    gl.deleteTexture(image.texture)\n\n    image.texture = null\n  }\n\n  setTextureImageFromCanvas(image: RenderImage, canvas: HTMLCanvasElement) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.bindTexture(gl.TEXTURE_2D, image.texture)\n\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, canvas)\n\n    gl.bindTexture(gl.TEXTURE_2D, null)\n  }\n\n  initializeShader(shader: RenderShader) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    shader.gl = gl\n\n    shader.initializeSourceCode(this.floatPrecisionText)\n\n    const program = gl.createProgram()\n    const vertexShader = this.createShader(String(shader.vertexShaderSourceCode), true, gl)\n    const fragmentShader = this.createShader(shader.fragmentShaderSourceCode, false, gl)\n\n    gl.attachShader(program, vertexShader)\n    gl.attachShader(program, fragmentShader)\n    gl.linkProgram(program)\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\n      shader.program = program\n      shader.vertexShader = vertexShader\n      shader.fragmentShader = fragmentShader\n\n      shader.initializeAttributes()\n    }\n    else {\n\n      throw new Error('ERROR-0702:' + gl.getProgramInfoLog(program))\n    }\n  }\n\n  private createShader(glslSourceCode: string, isVertexShader: boolean, gl: WebGLRenderingContext): WebGLShader {\n\n    let shader: WebGLShader\n    if (isVertexShader) {\n\n      shader = gl.createShader(gl.VERTEX_SHADER)\n    }\n    else {\n\n      shader = gl.createShader(gl.FRAGMENT_SHADER)\n    }\n\n    gl.shaderSource(shader, glslSourceCode)\n\n    gl.compileShader(shader)\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\n      return shader\n    }\n    else {\n\n      alert(gl.getShaderInfoLog(shader))\n    }\n  }\n\n  releaseShader(shader: RenderShader) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (shader.program != null) {\n\n      gl.useProgram(null)\n\n      gl.detachShader(shader.program, shader.vertexShader)\n      gl.deleteShader(shader.vertexShader)\n      shader.vertexShader = null\n\n      gl.detachShader(shader.program, shader.fragmentShader)\n      gl.deleteShader(shader.fragmentShader)\n      shader.fragmentShader = null\n\n      gl.deleteShader(shader.program)\n      shader.program = null\n    }\n  }\n\n  setShader(shader: RenderShader) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    const lastShader = this.currentShader\n\n    gl.useProgram(shader.program)\n    this.currentShader = shader\n\n    if (lastShader != null\n      && lastShader.attribLocationList.length != this.currentShader.attribLocationList.length) {\n\n      lastShader.disableVertexAttributes()\n    }\n  }\n\n  clearColorBufferDepthBuffer(r: float, g: float, b: float, a: float) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.clearColor(r, g, b, a)\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT)\n  }\n\n  clearDepthBuffer() {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.clear(this.gl.DEPTH_BUFFER_BIT)\n  }\n\n  setTextureFilterNearest() {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  }\n\n  setTextureFilterLinear() {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n  }\n\n  activeTexture(image: RenderImage) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.activeTexture(gl.TEXTURE0)\n    gl.bindTexture(gl.TEXTURE_2D, image.texture)\n  }\n\n  resetBasicParameters() {\n\n    this.setDepthTest(true)\n    this.setDepthMask(true)\n    this.setCulling(true)\n    this.setBlendType(WebGLRenderBlendType.blend)\n  }\n\n  setViewport(x: float, y: float, width: float, height: float) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.viewport(x, y, width, height)\n  }\n\n  setDepthTest(enable: boolean): WebGLRender {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (enable) {\n\n      gl.enable(gl.DEPTH_TEST)\n    }\n    else {\n\n      gl.disable(gl.DEPTH_TEST)\n    }\n\n    return this\n  }\n\n  setDepthMask(enable: boolean) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.depthMask(enable)\n  }\n\n  setCulling(enable: boolean) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (enable) {\n\n      gl.enable(gl.CULL_FACE)\n    }\n    else {\n\n      gl.disable(gl.CULL_FACE)\n    }\n  }\n\n  setCullingBackFace(cullBackFace: boolean): WebGLRender {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    if (cullBackFace) {\n\n      gl.cullFace(gl.BACK)\n    }\n    else {\n\n      gl.cullFace(gl.FRONT)\n    }\n  }\n\n  setBlendType(blendType: WebGLRenderBlendType) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.enable(gl.BLEND)\n\n    if (blendType == WebGLRenderBlendType.add) {\n\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE)\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD)\n    }\n    else if (blendType == WebGLRenderBlendType.src) {\n\n      gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO)\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD)\n    }\n    else {\n\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD)\n    }\n  }\n\n  drawElements(model: RenderModel) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.drawElements(this.gl.TRIANGLES, model.indexCount, this.gl.UNSIGNED_SHORT, 0)\n  }\n\n  drawArrayTriangles(tryangleCount: int) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, tryangleCount)\n  }\n}\n","import { int } from '../common-logics'\nimport { RenderShader } from '../render'\nimport { GPUVertexBuffer, Logic_GPULine } from './gpu-line'\n\nexport class GPULineShader extends RenderShader {\n\n  getVertexUnitSize(): int { // @virtual\n\n    return -1\n  }\n\n  getVertexCount(_pointCount: int, _lineCount: int): int { // @virtual\n\n    return -1\n  }\n\n  setBuffers(_buffer: WebGLBuffer, _color: Vec4) { // @virtual\n  }\n\n  calculateBufferData(_buffer: GPUVertexBuffer, _logic_GPULine: Logic_GPULine) { // @virtual\n\n  }\n\n  getDrawArrayTryanglesCount(bufferSize: int): int {\n\n    return bufferSize / this.getVertexUnitSize()\n  }\n}\n\nexport class PolyLineShader extends GPULineShader {\n\n  private uColor: WebGLUniformLocation = null\n\n  private aPosition = -1\n\n  getVertexUnitSize(): int { // @override\n\n    return (\n      2 // 頂点の位置 vec2\n    )\n  }\n\n  getVertexCount(pointCount: int, _lineCount: int): int { // @override\n\n    return (pointCount - 1) * (2 + 2) * 3 // 辺の数 * 左側２ポリゴン＋右側２ポリゴン * 3頂点\n\n  }\n\n  initializeVertexSourceCode() { // @override\n\n    this.vertexShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nattribute vec2 aPosition;\n\nuniform mat4 uPMatrix;\nuniform mat4 uMVMatrix;\n\nvoid main(void) {\n\n\t   gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 0.5, 1.0);\n}\n`\n  }\n\n  initializeFragmentSourceCode() { // @override\n\n    this.fragmentShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nuniform vec4 uColor;\n\nvoid main(void) {\n\n    gl_FragColor = uColor;\n}\n`\n  }\n\n  initializeAttributes() { // @override\n\n    this.initializeAttributes_RenderShader()\n    this.initializeAttributes_PolyLineShader()\n  }\n\n  initializeAttributes_PolyLineShader() {\n\n    this.uColor = this.getUniformLocation('uColor')\n    this.aPosition = this.getAttribLocation('aPosition')\n  }\n\n  setBuffers(buffer: WebGLBuffer, color: Vec4) { // @override\n\n    const gl = this.gl\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n    this.enableVertexAttributes()\n    this.resetVertexAttribPointerOffset()\n\n    gl.uniform4fv(this.uColor, color)\n\n    const vertexDataStride = 4 * this.getVertexUnitSize()\n\n    this.vertexAttribPointer(this.aPosition, 2, gl.FLOAT, vertexDataStride)\n  }\n\n  calculateBufferData(buffer: GPUVertexBuffer, logic_GPULine: Logic_GPULine) { // @override\n\n    logic_GPULine.calculateLinePointEdges(buffer)\n    logic_GPULine.calculateBufferData_PloyLine(buffer)\n  }\n}\n\nexport class BezierLineShader extends GPULineShader {\n\n  private uColor: WebGLUniformLocation = null\n\n  private aPosition = -1\n  private aLocalPosition = -1\n\n  private aLinePoint1 = -1\n  private aControlPoint1 = -1\n  private aLinePoint2 = -1\n  private aControlPoint2 = -1\n\n  private aLinePoint1R = -1\n  private aControlPoint1R = -1\n  private aLinePoint2R = -1\n  private aControlPoint2R = -1\n\n  private aWidth = -1\n  // private aAlpha = -1\n\n  getVertexUnitSize(): int { // @override\n\n    return (\n      2 // 頂点位置 vec2\n      + 3 // ローカル空間座標 vec3 (x, y, t)\n\n      + 2 // 頂点１ vec2\n      + 2 // 制御点１ vec2\n      + 2 // 制御点２ vec2\n      + 2 // 頂点２ vec2\n\n      + 2 // 頂点１R vec2\n      + 2 // 制御点１R vec2\n      + 2 // 制御点２R vec2\n      + 2 // 頂点２R vec2\n\n      + 2 // 太さ vec2 (from, to)\n      //+ 2 // 不透明度 vec2 (from, to)\n    )\n  }\n\n  getVertexCount(pointCount: int, _lineCount: int): int { // @override\n\n    return (pointCount - 1) * (4 + 4) * 3 // 辺の数 * (左側４ポリゴン＋右側４ポリゴン) * 3頂点\n  }\n\n  initializeVertexSourceCode() { // @override\n\n    this.vertexShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nattribute vec2 aPosition;\nattribute vec3 aLocalPosition;\n\nattribute vec2 aLinePoint1;\nattribute vec2 aControlPoint1;\nattribute vec2 aControlPoint2;\nattribute vec2 aLinePoint2;\n\nattribute vec2 aLinePoint1R;\nattribute vec2 aControlPoint1R;\nattribute vec2 aControlPoint2R;\nattribute vec2 aLinePoint2R;\n\nattribute vec2 aWidth;\n// attribute vec2 aAlpha;\n\nuniform mat4 uPMatrix;\nuniform mat4 uMVMatrix;\n\nvarying vec3 vLocalPosition;\n\nvarying vec2 vLinePoint1;\nvarying vec2 vControlPoint1;\nvarying vec2 vControlPoint2;\nvarying vec2 vLinePoint2;\n\nvarying vec2 vLinePoint1R;\nvarying vec2 vControlPoint1R;\nvarying vec2 vControlPoint2R;\nvarying vec2 vLinePoint2R;\n\nvarying vec2 vWidth;\n// varying vec2 vAlpha;\n\nvoid main(void) {\n\n    gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 0.5, 1.0);\n\n    vLocalPosition = aLocalPosition;\n\n    vLinePoint1 = aLinePoint1;\n    vControlPoint1 = aControlPoint1;\n    vControlPoint2 = aControlPoint2;\n    vLinePoint2 = aLinePoint2;\n\n    vLinePoint1R = aLinePoint1R;\n    vControlPoint1R = aControlPoint1R;\n    vControlPoint2R = aControlPoint2R;\n    vLinePoint2R = aLinePoint2R;\n\n    vWidth = aWidth;\n    // vAlpha = aAlpha;\n}\n`\n  }\n\n  initializeFragmentSourceCode() { // @override\n\n    this.fragmentShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nfloat cubeRoot(float x) {\n\n    float res = pow(abs(x), 1.0 / 3.0);\n    return (x >= 0.0) ? res : -res;\n}\n\nvoid solveQuadraticEquation(out vec3 solution, float a, float b, float c) {\n\n    float d;\n    float x1;\n    float x2;\n\n    if (a == 0.0) {\n\n        solution[0] = -c / b;\n        solution[1] = -1.0;\n        return;\n    }\n\n    d = b * b - 4.0 * a * c;\n\n    if (d > 0.0) {\n\n        if (b < 0.0) {\n\n            x1 = (-b - sqrt(d)) / 2.0 / a;\n            x2 = -b / a - x1;\n        }\n        else {\n\n            x1 = (-b + sqrt(d)) / 2.0 / a;\n            x2 = -b / a - x1;\n        }\n\n        solution[0] = x1;\n        solution[1]= x2;\n    }\n    else if (d == 0.0) {\n\n        solution[0] = -b / 2.0 / a;\n        solution[1] = -1.0;\n    }\n    else {\n\n        // imaginary root\n    }\n}\n\nvoid solveCubicEquation(out vec3 solution, float a, float b, float c, float d) {\n\n    float PI = 3.14159265358979323846264;\n    float p;\n    float q;\n    float t;\n    float a3;\n    float b3;\n\n    if (a == 0.0) {;\n        solveQuadraticEquation(solution, b, c, d);\n        return;\n    }\n\n    b /= 3.0 * a;\n    c /= a;\n    d /= a;\n    p = b * b - c / 3.0;\n    q = (b * (c - 2.0 * b * b) - d) / 2.0;\n\n    a = q * q - p * p * p;\n\n    if (a == 0.0) {\n\n        q = cubeRoot(q);\n        solution[0] = 2.0 * q - b;\n        solution[1] = -q - b;\n        solution[2] = -1.0;\n    }\n    else if (a > 0.0) {\n\n        float sign = 1.0;\n        if (q <= 0.0) { sign = -1.0; }\n        a3 = cubeRoot(q + (sign) * sqrt(a));\n        b3 = p / a3;\n        solution[0] = a3 + b3 - b;\n        solution[1] = -1.0;\n        solution[2] = -1.0;\n    }\n    else {\n\n        a = 2.0 * sqrt(p);\n        t = acos(q / (p * a / 2.0));\n        solution[0] = a * cos(t / 3.0) - b;\n        solution[1] = a * cos((t + 2.0 * PI) / 3.0) - b;\n        solution[2] = a * cos((t + 4.0 * PI) / 3.0) - b;\n    }\n}\n\nfloat calcBezierTimeInSection(float x1, float x2, float x3, float x4, float targetX) {\n\n    vec3 solution = vec3(0.0, 0.0, 0.0);\n    float a = x4 - 3.0 * (x3 - x2) - x1;\n    float b = 3.0 * (x3 - 2.0 * x2 + x1);\n    float c = 3.0 * (x2 - x1);\n    float d = x1 - targetX;\n\n    solveCubicEquation(solution, a, b, c, d);\n\n    if (solution[0] >= -0.1 && solution[0] <= 1.0) {\n\n        return solution[0];\n    }\n    else if (solution[1] >= 0.0 && solution[1] <= 1.0) {\n\n        return solution[1];\n    }\n    else if (solution[2] >= 0.0 && solution[2] <= 1.0) {\n\n        return solution[2];\n    }\n    else {\n\n        return -1.0;\n    }\n}\n\nfloat calcInterpolationBezier(float x1, float x2, float x3, float x4, float t) {\n\n    return (1.0 - t) * (1.0 - t) * (1.0 - t) * x1 +\n        3.0 * (1.0 - t) * (1.0 - t) * t * x2 +\n        3.0 * (1.0 - t) * t * t * x3 +\n        t * t * t * x4;\n}\n\nuniform vec4 uColor;\n\nvarying vec3 vLocalPosition;\n\nvarying vec2 vLinePoint1;\nvarying vec2 vControlPoint1;\nvarying vec2 vControlPoint2;\nvarying vec2 vLinePoint2;\n\nvarying vec2 vLinePoint1R;\nvarying vec2 vControlPoint1R;\nvarying vec2 vControlPoint2R;\nvarying vec2 vLinePoint2R;\n\nvarying vec2 vWidth;\n// varying vec2 vAlpha;\n\nvoid main(void) {\n\n    float t1 = calcBezierTimeInSection(\n        vLinePoint1.x,\n        vControlPoint1.x,\n        vControlPoint2.x,\n        vLinePoint2.x,\n        vLocalPosition.x\n    );\n\n    float y1;\n\n    if (t1 >= 0.0) {\n\n        y1 = calcInterpolationBezier(\n            vLinePoint1.y,\n            vControlPoint1.y,\n            vControlPoint2.y,\n            vLinePoint2.y,\n            t1\n        );\n    }\n    else {\n\n        y1 = vLocalPosition.y + 1.0;\n    }\n\n    float t2 = calcBezierTimeInSection(\n        vLinePoint1R.x,\n        vControlPoint1R.x,\n        vControlPoint2R.x,\n        vLinePoint2R.x,\n        vLocalPosition.x\n    );\n\n    float y2;\n\n    if (t2 >= 0.0) {\n\n        y2 = calcInterpolationBezier(\n            vLinePoint1R.y,\n            vControlPoint1R.y,\n            vControlPoint2R.y,\n            vLinePoint2R.y,\n            t2\n        );\n    }\n    else {\n\n        y2 = vLocalPosition.y - 1.0;\n    }\n\n    float col = (vLocalPosition.y <= y1 && vLocalPosition.y >= y2)? 1.0 : 0.0;\n\n    gl_FragColor = vec4(uColor.rgb, col * uColor.a);\n//    gl_FragColor = vec4(0.0, 0.0, 0.0, col * mix(vAlpha[0], vAlpha[1], vLocalPosition.z));\n//    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.1);\n}\n`\n  }\n\n  initializeAttributes() { // @override\n\n    this.initializeAttributes_RenderShader()\n    this.initializeAttributes_PolyLineShader()\n  }\n\n  initializeAttributes_PolyLineShader() {\n\n    this.uColor = this.getUniformLocation('uColor')\n\n    this.aPosition = this.getAttribLocation('aPosition')\n    this.aLocalPosition = this.getAttribLocation('aLocalPosition')\n\n    this.aLinePoint1 = this.getAttribLocation('aLinePoint1')\n    this.aControlPoint1 = this.getAttribLocation('aControlPoint1')\n    this.aControlPoint2 = this.getAttribLocation('aControlPoint2')\n    this.aLinePoint2 = this.getAttribLocation('aLinePoint2')\n\n    this.aLinePoint1R = this.getAttribLocation('aLinePoint1R')\n    this.aControlPoint1R = this.getAttribLocation('aControlPoint1R')\n    this.aControlPoint2R = this.getAttribLocation('aControlPoint2R')\n    this.aLinePoint2R = this.getAttribLocation('aLinePoint2R')\n\n    this.aWidth = this.getAttribLocation('aWidth')\n    // this.aAlpha = this.getAttribLocation('aAlpha')\n  }\n\n  setBuffers(buffer: WebGLBuffer, color: Vec4) { // @override\n\n    const gl = this.gl\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n    this.enableVertexAttributes()\n    this.resetVertexAttribPointerOffset()\n\n    gl.uniform4fv(this.uColor, color)\n\n    const vertexDataStride = 4 * this.getVertexUnitSize()\n\n    this.vertexAttribPointer(this.aPosition, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aLocalPosition, 3, gl.FLOAT, vertexDataStride)\n\n    this.vertexAttribPointer(this.aLinePoint1, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint1, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint2, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aLinePoint2, 2, gl.FLOAT, vertexDataStride)\n\n    this.vertexAttribPointer(this.aLinePoint1R, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint1R, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint2R, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aLinePoint2R, 2, gl.FLOAT, vertexDataStride)\n\n    this.vertexAttribPointer(this.aWidth, 2, gl.FLOAT, vertexDataStride)\n    // this.vertexAttribPointer(this.aAlpha, 2, gl.FLOAT, vertexDataStride)\n  }\n\n  calculateBufferData(buffer: GPUVertexBuffer, logic_GPULine: Logic_GPULine) { // @override\n\n    logic_GPULine.calculateLinePointEdges(buffer)\n    logic_GPULine.calculateLinePointBezierLocation(buffer)\n    logic_GPULine.calculateControlPointVertexLocations(buffer)\n\n    logic_GPULine.calculateBufferData_BezierLine(buffer)\n  }\n}\n\nexport class BezierDistanceLineShader extends GPULineShader {\n\n  private uColor: WebGLUniformLocation = null\n\n  private aPosition = -1\n  private aLocalPosition = -1\n\n  private aLinePoint1 = -1\n  private aControlPoint1 = -1\n  private aLinePoint2 = -1\n  private aControlPoint2 = -1\n\n  private aLinePoint1R = -1\n  private aControlPoint1R = -1\n  private aLinePoint2R = -1\n  private aControlPoint2R = -1\n\n  private aWidth = -1\n  // private aAlpha = -1\n\n  getVertexUnitSize(): int { // @override\n\n    return (\n      2 // 頂点位置 vec2\n      + 3 // ローカル空間座標 vec3 (x, y, t)\n\n      + 2 // 頂点１ vec2\n      + 2 // 制御点１ vec2\n      + 2 // 制御点２ vec2\n      + 2 // 頂点２ vec2\n\n      + 2 // 頂点１R vec2\n      + 2 // 制御点１R vec2\n      + 2 // 制御点２R vec2\n      + 2 // 頂点２R vec2\n\n      + 2 // 太さ vec2 (from, to)\n      //+ 2 // 不透明度 vec2 (from, to)\n    )\n  }\n\n  getVertexCount(pointCount: int, lineCount: int): int { // @override\n\n    return (pointCount - 1) * (4 + 4) * 3 + lineCount * (2 + 2) * 3 // 辺の数 * (左側４ポリゴン＋右側４ポリゴン) * 3頂点 + (線端用２ポリゴン＊２)* 3頂点\n  }\n\n  initializeVertexSourceCode() { // @override\n\n    this.vertexShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nattribute vec2 aPosition;\nattribute vec3 aLocalPosition;\n\nattribute vec2 aLinePoint1;\nattribute vec2 aControlPoint1;\nattribute vec2 aControlPoint2;\nattribute vec2 aLinePoint2;\n\nattribute vec2 aLinePoint1R;\nattribute vec2 aControlPoint1R;\nattribute vec2 aControlPoint2R;\nattribute vec2 aLinePoint2R;\n\nattribute vec2 aWidth;\n// attribute vec2 aAlpha;\n\nuniform mat4 uPMatrix;\nuniform mat4 uMVMatrix;\n\nvarying vec3 vLocalPosition;\n\nvarying vec2 vLinePoint1;\nvarying vec2 vControlPoint1;\nvarying vec2 vControlPoint2;\nvarying vec2 vLinePoint2;\n\nvarying vec2 vLinePoint1R;\nvarying vec2 vControlPoint1R;\nvarying vec2 vControlPoint2R;\nvarying vec2 vLinePoint2R;\n\nvarying vec2 vWidth;\n// varying vec2 vAlpha;\n\nvoid main(void) {\n\n    gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 0.5, 1.0);\n\n    vLocalPosition = aLocalPosition;\n\n    vLinePoint1 = aLinePoint1;\n    vControlPoint1 = aControlPoint1;\n    vControlPoint2 = aControlPoint2;\n    vLinePoint2 = aLinePoint2;\n\n    vLinePoint1R = aLinePoint1R;\n    vControlPoint1R = aControlPoint1R;\n    vControlPoint2R = aControlPoint2R;\n    vLinePoint2R = aLinePoint2R;\n\n    vWidth = aWidth;\n    // vAlpha = aAlpha;\n}\n`\n  }\n\n  initializeFragmentSourceCode() { // @override\n\n    this.fragmentShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\n// From https://www.shadertoy.com/view/4sXyDr\n\n#define CLAMP\n\nfloat distanceBezier(vec2 p, vec2 P0, vec2 P1, vec2 P2, vec2 P3, out float t)\n{\n    // Cubic Bezier curve\n    vec2 A = -P0 + 3.0 * P1 - 3.0 * P2 + P3;\n    vec2 B = 3.0 * (P0 - 2.0 * P1 + P2);\n    vec2 C = 3.0 * (P1 - P0);\n    vec2 D = P0;\n\n    float a5 =  6.0 * dot(A, A);\n    float a4 = 10.0 * dot(A, B);\n    float a3 =  8.0 * dot(A, C)     + 4.0 * dot(B, B);\n    float a2 =  6.0 * dot(A, D - p) + 6.0 * dot(B, C);\n    float a1 =  4.0 * dot(B, D - p) + 2.0 * dot(C, C);\n    float a0 =  2.0 * dot(C, D - p);\n\n    // calculate distances to the control points\n    float d0 = length(p - P0);\n    float d1 = length(p - P1);\n    float d2 = length(p - P2);\n    float d3 = length(p - P3);\n    float d = min(d0, min(d1, min(d2, d3)));\n\n    // Choose initial value of t\n    //float t;\n    if (abs(d3 - d) < 1.0e-5) {\n        t = 1.0;\n    }\n    else if (abs(d0 - d) < 1.0e-5) {\n        t = 0.0;\n    }\n    else {\n        t = 0.5;\n    }\n\n\t// iteration\n    for (int i = 0; i < 10; i++) {\n\n        float t2 = t*t;\n        float t3 = t2*t;\n        float t4 = t3*t;\n        float t5 = t4*t;\n\n        float f = a5*t5 + a4*t4 + a3*t3 + a2*t2 + a1*t + a0;\n        float df = 5.0*a5*t4 + 4.0*a4*t3 + 3.0*a3*t2 + 2.0*a2*t + a1;\n\n        t = t - f/df;\n    }\n\n    // clamp to edge of bezier segment\n#ifdef CLAMP\n    t = clamp(t, 0.0, 1.0);\n#endif\n\n    // get the point on the curve\n    vec2 P = A*t*t*t + B*t*t + C*t + D;\n\n    // return distance to the point on the curve\n    return min(length(p - P), min(d0, d3));\n}\n\nuniform vec4 uColor;\n\nvarying vec3 vLocalPosition;\n\nvarying vec2 vLinePoint1;\nvarying vec2 vControlPoint1;\nvarying vec2 vControlPoint2;\nvarying vec2 vLinePoint2;\n\nvarying vec2 vLinePoint1R;\nvarying vec2 vControlPoint1R;\nvarying vec2 vControlPoint2R;\nvarying vec2 vLinePoint2R;\n\nvarying vec2 vWidth;\n// varying vec2 vAlpha;\n\nvoid main(void) {\n\n\tvec2 p  = vLocalPosition.xy;\n  vec2 P0 = vLinePoint1;\n  vec2 P1 = vControlPoint1;\n  vec2 P2 = vControlPoint2;\n  vec2 P3 = vLinePoint2;\n\n  float t;\n  float distance = distanceBezier(p, P0, P1, P2, P3, t);\n  float width = mix(vWidth.x, vWidth.y, t);\n\n  if (distance > width) {\n\n    // gl_FragColor = vec4(1.0, 0.5, 0.0, 0.1);\n  \tdiscard;\n  }\n\telse {\n\n      float col = 1.0 - smoothstep(width - 0.08, width, distance);\n      //float col = distance * 0.1;\n\n      //gl_FragColor = vec4(0.0, 0.0, 0.0, 0.1);\n      //gl_FragColor = vec4(vLocalPosition.z, 0.0, 0.0, col);\n      //gl_FragColor = vec4(vWidth.y, 0.0, 0.0, col * uColor.a * 0.9 + 0.1);\n      gl_FragColor = vec4(uColor.rgb, col * uColor.a * 0.9 + 0.1);\n  }\n}\n`\n  }\n\n  initializeAttributes() { // @override\n\n    this.initializeAttributes_RenderShader()\n    this.initializeAttributes_PolyLineShader()\n  }\n\n  initializeAttributes_PolyLineShader() {\n\n    this.uColor = this.getUniformLocation('uColor')\n\n    this.aPosition = this.getAttribLocation('aPosition')\n    this.aLocalPosition = this.getAttribLocation('aLocalPosition')\n\n    this.aLinePoint1 = this.getAttribLocation('aLinePoint1')\n    this.aControlPoint1 = this.getAttribLocation('aControlPoint1')\n    this.aControlPoint2 = this.getAttribLocation('aControlPoint2')\n    this.aLinePoint2 = this.getAttribLocation('aLinePoint2')\n\n    this.aLinePoint1R = this.getAttribLocation('aLinePoint1R')\n    this.aControlPoint1R = this.getAttribLocation('aControlPoint1R')\n    this.aControlPoint2R = this.getAttribLocation('aControlPoint2R')\n    this.aLinePoint2R = this.getAttribLocation('aLinePoint2R')\n\n    this.aWidth = this.getAttribLocation('aWidth')\n    // this.aAlpha = this.getAttribLocation('aAlpha')\n  }\n\n  setBuffers(buffer: WebGLBuffer, color: Vec4) { // @override\n\n    const gl = this.gl\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n    this.enableVertexAttributes()\n    this.resetVertexAttribPointerOffset()\n\n    gl.uniform4fv(this.uColor, color)\n\n    const vertexDataStride = 4 * this.getVertexUnitSize()\n\n    this.vertexAttribPointer(this.aPosition, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aLocalPosition, 3, gl.FLOAT, vertexDataStride)\n\n    this.vertexAttribPointer(this.aLinePoint1, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint1, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint2, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aLinePoint2, 2, gl.FLOAT, vertexDataStride)\n\n    this.vertexAttribPointer(this.aLinePoint1R, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint1R, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aControlPoint2R, 2, gl.FLOAT, vertexDataStride)\n    this.vertexAttribPointer(this.aLinePoint2R, 2, gl.FLOAT, vertexDataStride)\n\n    this.vertexAttribPointer(this.aWidth, 2, gl.FLOAT, vertexDataStride)\n    // this.vertexAttribPointer(this.aAlpha, 2, gl.FLOAT, vertexDataStride)\n  }\n\n  calculateBufferData(buffer: GPUVertexBuffer, logic_GPULine: Logic_GPULine) { // @override\n\n    logic_GPULine.calculateLinePointEdges(buffer)\n    logic_GPULine.calculateLinePointBezierLocation(buffer)\n    logic_GPULine.calculateControlPointVertexLocations(buffer)\n\n    logic_GPULine.calculateBufferData_BezierLine(buffer)\n  }\n}\n","﻿import { VectorStrokeGroup } from '../document-data'\n\nexport class ToolClipboard {\n\n  copy_VectorGroup: VectorStrokeGroup = null\n}\n","﻿\nexport enum EditModeID {\n\n  editMode = 1,\n  drawMode\n}\n\nexport enum OperationUnitID {\n\n  none = 0,\n  strokePoint,\n  strokeSegment,\n  stroke,\n  layer,\n  countOfID,\n}\n\nexport enum OperationOriginTypeID {\n\n  none = 0,\n  medianCenter,\n  pivot,\n}\n","﻿import { SubToolContext, SubToolDrawingContext } from '../context'\nimport { InputSideID } from '../document-data'\nimport { float, int } from '../common-logics'\nimport { ImageResource } from '../posing3d'\nimport { ShortcutCommandID } from '../user-setting'\nimport { ToolPointerEvent } from './tool-pointer-event'\n\nexport enum SubToolID {\n\n  none = 0,\n\n  noOperation,\n\n  drawLine,\n  scratchLine,\n  extrudeLine,\n  overWriteLineWidth,\n  scratchLineWidth,\n  deletePointBrush,\n  editLinePointWidth_BrushSelect,\n\n  drawPointBrush,\n  pointBrush_extrudeLine,\n\n  editModeMain,\n  locateOperatorCursor,\n  brushSelect,\n  resampleSegment,\n\n  edit_GrabMove,\n  edit_Rotate,\n  edit_Scale,\n\n  editDocumentFrame,\n\n  addAutoFillPoint,\n  deleteAutoFillPoint,\n\n  image_GrabMove,\n  image_Rotate,\n  image_Scale,\n\n  p3d_locateHead,\n  p3d_rotateHead,\n  p3d_locateBody,\n  p3d_locateHips,\n  p3d_locateLeftShoulder,\n  p3d_locateLeftArm1,\n  p3d_locateLeftArm2,\n  p3d_locateRightShoulder,\n  p3d_locateRightArm1,\n  p3d_locateRightArm2,\n  p3d_locateLeftLeg1,\n  p3d_locateLeftLeg2,\n  p3d_locateRightLeg1,\n  p3d_locateRightLeg2,\n  p3d_twistHead,\n}\n\nexport enum PointerTypeID {\n\n  none = 0,\n  brush = 1,\n  circularRange = 2,\n  brushWithCircularRange = 3,\n}\n\nexport enum PointerParameterID {\n\n  none = 0,\n  extrudeLine = 1,\n  eracer = 2,\n  scratchLine = 3,\n  setLineWidth = 4,\n  scratchLineWidth = 5,\n  brushSelect = 6,\n}\n\nexport interface PointerParameter {\n\n  parameterID: PointerParameterID\n  baseSize: float\n  minSize: float\n}\n\nexport enum BrushParameterID {\n\n  none = 0,\n  solidStroke = 1,\n  pointBrush = 2,\n}\n\nexport enum BrushTypeID {\n\n  none = 0,\n  solidBrushStroke = 1,\n  radialBrush = 2,\n  bitmapBrush = 3,\n}\n\nexport interface BrushParameter {\n\n  parameterID: BrushParameterID\n  brushType: BrushTypeID\n  baseSize: float\n  minSize: float\n  stepRate: float\n}\n\nexport interface PaintParameter {\n\n  baseColor: Vec4\n}\n\nexport enum SubToolParameterID {\n\n  none = 0,\n  drawLine = 1,\n  extrudeLine = 2,\n  eracer = 3,\n  scratchLine = 4,\n  setLineWidth = 5,\n  scratchLineWidth = 6,\n  brushSelect = 7,\n  drawPointBrush = 8,\n  pointBrush_extrudeLine = 9,\n}\n\nexport interface SubToolParameter {\n\n  parameterID: SubToolParameterID\n  pointerType: PointerTypeID\n  pointerParameterID: PointerParameterID\n  brushParameterID?: BrushParameterID\n  pointer?: PointerParameter\n  brush?: BrushParameter\n}\n\nexport class SubTool {\n\n  isEditTool = false // @virtual\n  usesOperatorCursor = false // @virtual\n  usesHitTestToSelect = false // @virtual\n  helpText = '' // @virtual\n\n  subtoolID = SubToolID.none\n  subToolParameterID = SubToolParameterID.none\n  subToolParameter: SubToolParameter = null\n  toolBarImage: ImageResource = null\n  toolBarImageIndex = 0\n  inputOptionButtonCount = 0\n\n  isAvailable(_ctx: SubToolContext): boolean { // @virtual\n\n    return true\n  }\n\n  onActivated(_ctx: SubToolContext) { // @virtual\n  }\n\n  getOptionButtonState(_buttonIndex: int, _ctx: SubToolContext): InputSideID { // @virtual\n\n    return InputSideID.none\n  }\n\n  optionButton_Click(_buttonIndex: int, _ctx: SubToolContext): boolean { // @virtual\n\n    return false\n  }\n\n  mouseDown(_e: ToolPointerEvent, _ctx: SubToolContext) { // @virtual\n  }\n\n  mouseMove(_e: ToolPointerEvent, _ctx: SubToolContext) { // @virtual\n  }\n\n  mouseUp(_e: ToolPointerEvent, _ctx: SubToolContext) { // @virtual\n  }\n\n  keydown(_key: string, _commandID: ShortcutCommandID, _ctx: SubToolContext): boolean { // @virtual\n\n    return false\n  }\n\n  onDrawEditor(_ctx: SubToolContext, _drawing: SubToolDrawingContext) { // @virtual\n  }\n\n  toolWindowItemClick(_ctx: SubToolContext) { // @virtual\n  }\n}\n\nexport class Tool_None extends SubTool {\n\n}\n\nexport class ModalToolBase extends SubTool {\n\n  prepareModal(_e: ToolPointerEvent, _ctx: SubToolContext): boolean { // @virtual\n\n    return true\n  }\n\n  startModal(ctx: SubToolContext) { // @virtual\n\n    ctx.setRedrawEditorWindow()\n  }\n\n  endModal(ctx: SubToolContext) { // @virtual\n\n    ctx.setRedrawEditorWindow()\n  }\n\n  cancelModal(ctx: SubToolContext) { // @virtual\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { RibbonUIControlID } from '../ui'\nimport { ShortcutCommandID } from '../user-setting'\nimport { SubTool, SubToolID } from './sub-tool'\n\nexport enum MainToolID {\n\n  none = 0,\n  group,\n  vector,\n  posing3D,\n  imageFileReference,\n  autoFill,\n  pointBrushFill,\n}\n\nexport enum MainToolTabID {\n\n  none = 0,\n  group,\n  drawing,\n  imageFileReference,\n  autoFill,\n  pointBrushFill,\n  posing,\n  edit,\n  edit_disabled,\n  document,\n  layer,\n  view,\n}\n\nexport enum MainToolTabTypeID {\n\n  none = 0,\n  manipulatingTool,\n  editingTool,\n}\n\nexport interface MainToolTabSubToolCommand {\n\n  commandID: ShortcutCommandID\n  subToolID: SubToolID\n}\n\nexport class MainToolTab { // @virtual\n\n  tabID: MainToolTabID // @virtual\n  type = MainToolTabTypeID.manipulatingTool // @virtual\n  default_SubToolID = SubToolID.none // @virtual\n  disabled: boolean = false // @virtual\n\n  current_SubTool: SubTool = null\n\n  isAvailable(_ctx: SubToolContext): boolean { // @virtual\n    return false\n  }\n\n  keydown(_key: string, _commandID: ShortcutCommandID, _ctx: SubToolContext): boolean { // @virtual\n    return false\n  }\n\n  buttonClick(_id: RibbonUIControlID, _ctx: SubToolContext): boolean { // @virtual\n    return false\n  }\n\n  processSubToolKeyDown(commands: MainToolTabSubToolCommand[], commandID: ShortcutCommandID, ctx: SubToolContext) {\n\n    for (const command of commands) {\n\n      if (commandID == command.commandID) {\n\n        ctx.tool.changeCurrentSubToolForSubtoolID(command.subToolID)\n\n        return true\n      }\n    }\n\n    return false\n  }\n\n  processToggleSubTool(targetCommandID: ShortcutCommandID, changeTo_SubToolID: SubToolID, returnTo_SubToolID: SubToolID, commandID: ShortcutCommandID, ctx: SubToolContext) {\n\n    if (commandID == targetCommandID) {\n\n      if (ctx.currentSubtoolID != changeTo_SubToolID) {\n\n        ctx.tool.changeCurrentSubToolForSubtoolID(changeTo_SubToolID)\n      }\n      else {\n\n        ctx.tool.changeCurrentSubToolForSubtoolID(returnTo_SubToolID)\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n\nexport class MainToolCommonTabSet {\n\n  edit: MainToolTab\n  edit_disabled: MainToolTab\n  document: MainToolTab\n  layer: MainToolTab\n  view: MainToolTab\n}\n\nexport class MainTool { // @virtual\n\n  mainToolID = MainToolID.none // @virtual\n  mainToolTabs: MainToolTab[] = []\n  drawMode_MainToolTab: MainToolTab = null\n}\n","﻿import { float } from '../common-logics'\nimport { PointerInputWindow, ViewPointerEvent } from '../view'\n\nexport class ToolPointerEventProvider {\n\n  event: ViewPointerEvent = null\n\n  attach(wnd: PointerInputWindow): ToolPointerEventProvider {\n\n    this.event = wnd.pointerEvent\n\n    return this\n  }\n\n  get location(): Vec3 {\n    return this.event.location\n  }\n\n  get offsetX(): float {\n    return this.event.offsetX\n  }\n\n  get offsetY(): float {\n    return this.event.offsetY\n  }\n\n  get isLeftButtonPressing(): boolean {\n    return this.event.isLeftButtonPressing()\n  }\n\n  get isRightButtonPressing(): boolean {\n    return this.event.isRightButtonPressing()\n  }\n\n  get isCenterButtonPressing(): boolean {\n    return this.event.isCenterButtonPressing()\n  }\n\n  get isLeftButtonReleased(): boolean {\n    return this.event.isLeftButtonReleased()\n  }\n\n  get isRightButtonReleased(): boolean {\n    return this.event.isRightButtonReleased()\n  }\n\n  get isCenterButtonReleased(): boolean {\n    return this.event.isCenterButtonReleased()\n  }\n\n  get isPointerMoved(): boolean {\n    return this.event.isPointerMoved\n  }\n}\n\nexport interface ToolPointerEvent {\n\n  readonly location: Vec3\n  readonly offsetX: float\n  readonly offsetY: float\n  readonly isLeftButtonPressing: boolean\n  readonly isRightButtonPressing: boolean\n  readonly isCenterButtonPressing: boolean\n  readonly isLeftButtonReleased: boolean\n  readonly isRightButtonReleased: boolean\n  readonly isCenterButtonReleased: boolean\n  readonly isPointerMoved: boolean\n}\n\n","﻿import { float, int } from '../common-logics'\nimport {\n  DocumentData, DrawLineTypeID, FillAreaTypeID, FillDrawable, StrokeDrawable,\n  VectorLayer, VectorLayerGeometry, VectorStrokeModifyFlagID\n} from '../document-data'\nimport { MainCanvasEditorDrawer } from '../editor'\nimport { CanvasRender } from '../render'\nimport { OperationUnitID } from '../tool'\nimport { DrawPathRenderCache } from './draw-path-render-cache'\nimport { DrawingPointBrushLogic } from './drawing-point-brush'\nimport { DrawingStrokeLogic } from './drawing-stroke'\nimport { ToolDrawingStyle } from \"./drawing-style\"\n\nexport class DrawingVectorLayerLogic {\n\n  private canvasRender: CanvasRender = null\n  private drawStyle: ToolDrawingStyle = null\n  private drawingStroke: DrawingStrokeLogic = null\n  private drawingPointBrush: DrawingPointBrushLogic = null\n  private editorDrawer: MainCanvasEditorDrawer = null\n\n  private strokeColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private fillColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private tempColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n\n  link(canvasRender: CanvasRender, drawStyle: ToolDrawingStyle, drawingStroke: DrawingStrokeLogic, drawingPointBrush: DrawingPointBrushLogic, editorDrawer: MainCanvasEditorDrawer) {\n\n    this.canvasRender = canvasRender\n    this.drawStyle = drawStyle\n    this.drawingStroke = drawingStroke\n    this.drawingPointBrush = drawingPointBrush\n    this.editorDrawer = editorDrawer\n  }\n\n  getStrokeColor(\n    result: Vec4,\n    drawable: StrokeDrawable,\n    documentData: DocumentData,\n    isEditMode: boolean,\n    hideWhenEditMode: boolean\n  ): Vec4 {\n\n    let color: Vec4\n    if (drawable.drawLineType == DrawLineTypeID.layerColor) {\n\n      color = drawable.layerColor\n    }\n    else if (drawable.drawLineType == DrawLineTypeID.paletteColor) {\n\n      const paletteColor = documentData.paletteColors[drawable.line_PaletteColorIndex]\n      color = paletteColor.color\n    }\n    else {\n\n      color = drawable.layerColor\n    }\n\n    if (hideWhenEditMode && isEditMode) {\n\n      vec4.copy(this.tempColor, color)\n      this.tempColor[3] *= this.drawStyle.editModeOtherLayerAlphaAdjustRate\n\n      color = this.tempColor\n    }\n\n    vec4.copy(result, color)\n\n    return color\n  }\n\n  getOnionSkinStrokeColor(result: Vec4, onionSkinLevel: int, maxOnionSkinLevel: int): Vec4 {\n\n    vec4.copy(result, onionSkinLevel > 0 ? this.drawStyle.onionSkinForwardLineColor : this.drawStyle.onionSkinBackwardLineColor)\n\n    result[3] *= 1.0 - Math.abs(onionSkinLevel) / maxOnionSkinLevel * 0.3\n\n    return result\n  }\n\n  getFillColor(result: Vec4, drawable: FillDrawable, documentData: DocumentData, isEditMode: boolean, hideWhenEditMode: boolean) {\n\n    let color: Vec4\n    if (drawable.fillAreaType == FillAreaTypeID.fillColor) {\n\n      color = drawable.fillColor\n    }\n    else if (drawable.fillAreaType == FillAreaTypeID.paletteColor) {\n\n      const paletteColor = documentData.paletteColors[drawable.fill_PaletteColorIndex]\n      color = paletteColor.color\n    }\n    else {\n\n      color = drawable.fillColor\n    }\n\n    if (hideWhenEditMode && isEditMode) {\n\n      vec4.copy(this.tempColor, color)\n      this.tempColor[3] *= this.drawStyle.editModeOtherLayerAlphaAdjustRate\n\n      color = this.tempColor\n    }\n\n    vec4.copy(result, color)\n\n    return result\n  }\n\n  getWidthRate(drawable: StrokeDrawable, documentData: DocumentData): float {\n\n    return drawable.lineWidthBiasRate * documentData.lineWidthBiasRate\n  }\n\n  drawForeground(\n    render: CanvasRender,\n    drawable: StrokeDrawable,\n    geometry: VectorLayerGeometry,\n    renderCache: DrawPathRenderCache,\n    documentData: DocumentData,\n    isEditMode: boolean,\n    isExporting: boolean,\n    isModalToolRunning: boolean,\n    onionSkinLevel: int,\n    maxOnionSkinLevel: int\n    ) {\n\n    if (drawable.drawLineType == DrawLineTypeID.none) {\n      return\n    }\n\n    // DEBUG\n    // if (renderCache.isInitialized()) {\n    //   console.debug('drawForeground',\n    //     `(${geometry.runtime.area.centerLocation[0].toFixed(3)}, ${geometry.runtime.area.centerLocation[1].toFixed(3)}), ${geometry.runtime.area.range.toFixed(3)}`,\n    //     `${renderCache.width.toFixed(2)} x ${renderCache.height.toFixed(2)}`\n    //   )\n    // }\n\n    if (!render.isInViewRectangle(geometry.runtime.area.centerLocation, geometry.runtime.area.range)) {\n      // DEBUG\n      // console.debug('  範囲外')\n      return\n    }\n\n    const useAdjustingLocation = isModalToolRunning\n\n    const widthRate = this.getWidthRate(drawable, documentData)\n\n    if (onionSkinLevel == 0) {\n\n      this.getStrokeColor(this.strokeColor, drawable, documentData, isEditMode, true)\n    }\n    else {\n\n      this.getOnionSkinStrokeColor(this.strokeColor, onionSkinLevel, maxOnionSkinLevel)\n    }\n\n    if (renderCache.isInitialized()) {\n\n      renderCache.clearMaskData()\n\n      // DEBUG\n      // console.debug('drawForeground renderCache.clearMaskData', renderCache.width, renderCache.height)\n    }\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        if (!render.isInViewRectangle(group.runtime.area.centerLocation, group.runtime.area.range)) {\n          continue\n        }\n\n        if (VectorLayerGeometry.isStrokeDraw(geometry)) {\n\n          for (const stroke of group.lines) {\n\n            this.drawingStroke.drawVectorStroke(render, stroke, this.strokeColor, widthRate, 0.0, useAdjustingLocation, isExporting)\n          }\n        }\n        else if (VectorLayerGeometry.isPointBrushFill(geometry)) {\n\n          if (renderCache.isInitialized()) {\n\n            for (const stroke of group.lines) {\n\n              this.drawingPointBrush.drawPointBrushStroke(render, stroke, this.strokeColor, useAdjustingLocation, renderCache)\n            }\n\n            this.drawingPointBrush.drawRenderResult(render, renderCache)\n          }\n        }\n        else if (VectorLayerGeometry.isSurroundingFill(geometry)) {\n\n          this.drawingStroke.beginStroke(this.strokeColor, widthRate, 0.0, useAdjustingLocation, isExporting)\n\n          for (const stroke of group.lines) {\n\n            this.drawingStroke.processStroke(render, stroke)\n          }\n\n          this.drawingStroke.finishStroke(render)\n        }\n      }\n    }\n  }\n\n  drawBackground(\n    render: CanvasRender,\n    drawable: FillDrawable,\n    geometry: VectorLayerGeometry,\n    documentData: DocumentData,\n    isSelectedLayer: boolean,\n    isEditMode: boolean,\n    isExporting: boolean,\n    isModalToolRunning: boolean\n  ) {\n\n    if (drawable.fillAreaType == FillAreaTypeID.none) {\n      return\n    }\n\n    const useAdjustingLocation = isModalToolRunning\n\n    this.getFillColor(this.fillColor, drawable, documentData, isEditMode, !isSelectedLayer)\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        if (!render.isInViewRectangle(group.runtime.area.centerLocation, group.runtime.area.range)) {\n          continue\n        }\n\n        if (VectorLayerGeometry.isStrokeDraw(geometry)) {\n\n          for (const line of group.lines) {\n\n            this.drawingStroke.beginFill(this.fillColor, useAdjustingLocation)\n\n            this.drawingStroke.processFill(render, line)\n\n            this.drawingStroke.finishFill(render)\n          }\n        }\n        else if (VectorLayerGeometry.isSurroundingFill(geometry)) {\n\n          this.drawingStroke.beginFill(this.fillColor, useAdjustingLocation)\n\n          for (const line of group.lines) {\n\n            this.drawingStroke.processFill(render, line)\n          }\n\n          this.drawingStroke.finishFill(render)\n        }\n      }\n    }\n  }\n\n  drawForegroundForEditMode(\n    render: CanvasRender,\n    layer: VectorLayer,\n    geometry: VectorLayerGeometry,\n    documentData: DocumentData,\n    operationUnitID: OperationUnitID,\n    isEditMode: boolean,\n    isSelectedLayer: boolean,\n    drawStrokes: boolean,\n    drawPoints: boolean,\n    isModalToolRunning: boolean\n  ) {\n\n    // drawing parameters\n    const widthRate = this.getWidthRate(layer, documentData)\n\n    this.getStrokeColor(this.strokeColor, layer, documentData, isEditMode, !isSelectedLayer)\n\n    // drawing geometry lines\n\n    const useAdjustingLocation = isModalToolRunning\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        if (!render.isInViewRectangle(group.runtime.area.centerLocation, group.runtime.area.range)) {\n          continue\n        }\n\n        for (const stroke of group.lines) {\n\n          if (!isSelectedLayer) {\n\n            if (layer.drawLineType != DrawLineTypeID.none) {\n\n              this.drawingStroke.drawVectorStroke(render, stroke, this.strokeColor, widthRate, 0.0, useAdjustingLocation, false)\n            }\n          }\n          else {\n\n            if (operationUnitID == OperationUnitID.strokePoint) {\n\n              if (drawStrokes) {\n\n                this.drawingStroke.drawVectorStroke(render, stroke, this.strokeColor, widthRate, 0.0, useAdjustingLocation, false)\n              }\n\n              if (drawPoints) {\n\n                this.editorDrawer.drawVectorLinePoints(stroke, this.strokeColor, useAdjustingLocation)\n              }\n            }\n            else if (operationUnitID == OperationUnitID.strokeSegment) {\n\n              if (drawStrokes) {\n\n                this.drawingStroke.drawVectorStrokeSegment(this.canvasRender, stroke, this.strokeColor, this.drawStyle.selectedVectorLineColor, widthRate,  useAdjustingLocation)\n              }\n            }\n            else if (operationUnitID == OperationUnitID.stroke) {\n\n              if (drawStrokes) {\n\n                let color: Vec4\n                if ((stroke.isSelected && stroke.runtime.modifyFlag != VectorStrokeModifyFlagID.selectedToUnselected)\n                  || stroke.runtime.modifyFlag == VectorStrokeModifyFlagID.unselectedToSelected) {\n\n                  color = this.drawStyle.selectedVectorLineColor\n                }\n                else {\n\n                  color = this.strokeColor\n                }\n\n                const lineWidthBolding = this.editorDrawer.getCurrentViewScaleLineWidth(stroke.runtime.isCloseToMouse ? 2.0 : 0.0)\n\n                this.drawingStroke.drawVectorStroke(render, stroke, color, widthRate, lineWidthBolding, useAdjustingLocation, false)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  drawBackgroundExtra(\n    render: CanvasRender,\n    drawable: FillDrawable,\n    geometry: VectorLayerGeometry,\n    isSelectedLayer: boolean,\n    isEditMode: boolean,\n    isModalToolRunning: boolean\n  ) {\n\n    if (drawable.fillAreaType == FillAreaTypeID.none) {\n      return\n    }\n    if (!isSelectedLayer && isEditMode) {\n      return\n    }\n\n    const useAdjustingLocation = isModalToolRunning\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        if (!render.isInViewRectangle(group.runtime.area.centerLocation, group.runtime.area.range)) {\n          continue\n        }\n\n        for (const connectionInfo of group.runtime.connectionInfos) {\n\n          this.editorDrawer.drawVectorStrokeConnectionInfo(render, connectionInfo, useAdjustingLocation)\n        }\n      }\n    }\n  }\n}\n","﻿import { DocumentData, VectorLayer } from '../document-data'\nimport { CanvasWindow, WebGLRender } from '../render'\nimport { DrawingVectorLayerLogic } from '../document-drawing/drawing-vector-layer'\nimport { ViewKeyframeLayer } from '../view'\nimport { GPULineShader } from './rendering-shaders'\nimport { Logic_GPULine } from './gpu-line'\n\nexport class RenderingVectorLayerLogic {\n\n  private drawGPURender = new WebGLRender()\n  private lineShader = new GPULineShader()\n  private drawingVectorLayer = new DrawingVectorLayerLogic()\n  private logic_GPULine = new Logic_GPULine()\n\n  private strokeColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private tempMat4 = mat4.create()\n  private eyeLocation = vec3.create()\n  private lookatLocation = vec3.create()\n  private upVector = vec3.create()\n  private modelLocation = vec3.create()\n  private modelMatrix = mat4.create()\n  private viewMatrix = mat4.create()\n  private modelViewMatrix = mat4.create()\n  private projectionMatrix = mat4.create()\n\n  link(drawGPURender: WebGLRender, lineShader: GPULineShader, drawingVectorLayer: DrawingVectorLayerLogic, logic_GPULine: Logic_GPULine) {\n\n    this.drawGPURender = drawGPURender\n    this.lineShader = lineShader\n    this.drawingVectorLayer = drawingVectorLayer\n    this.logic_GPULine = logic_GPULine\n  }\n\n  renderClearBuffer(wnd: CanvasWindow) {\n\n    const render = this.drawGPURender\n\n    render.setViewport(0.0, 0.0, wnd.width, wnd.height)\n\n    render.setDepthTest(true)\n    render.setCulling(true)\n\n    render.clearColorBufferDepthBuffer(0.0, 0.0, 0.0, 0.0)\n  }\n\n  renderForeground_VectorLayer(wnd: CanvasWindow, viewKeyFrameLayer: ViewKeyframeLayer, documentData: DocumentData, isEditMode: boolean, useAdjustingLocation: boolean) {\n\n    const render = this.drawGPURender\n    const shader = this.lineShader\n\n    const keyframe = viewKeyFrameLayer.vectorLayerKeyframe\n    const layer = <VectorLayer>viewKeyFrameLayer.layer\n\n    render.setViewport(0.0, 0.0, wnd.width, wnd.height)\n\n    // Calculate camera matrix\n    vec3.set(this.lookatLocation, 0.0, 0.0, 0.0)\n    vec3.set(this.upVector, 0.0, 1.0, 0.0)\n    vec3.set(this.eyeLocation, 0.0, 0.0, 1.0)\n\n    mat4.lookAt(this.viewMatrix, this.eyeLocation, this.lookatLocation, this.upVector)\n\n    const aspect = wnd.height / wnd.width\n    const orthoWidth = wnd.width / 2 / wnd.viewScale * aspect // TODO: 計算が怪しい（なぜか縦横両方に同じ値を掛けないと合わない）ので後で検討する\n    mat4.ortho(this.projectionMatrix, -orthoWidth, orthoWidth, orthoWidth, -orthoWidth, 0.1, 1.0)\n\n    wnd.caluclateGLViewMatrix(this.tempMat4)\n    mat4.multiply(this.projectionMatrix, this.tempMat4, this.projectionMatrix)\n\n    render.setDepthTest(false)\n    render.setCulling(false)\n\n    render.setShader(shader)\n\n    // Set shader parameters\n    vec3.set(this.modelLocation, 0.0, 0.0, 0.0)\n\n    mat4.identity(this.modelMatrix)\n    mat4.translate(this.modelMatrix, this.modelMatrix, this.modelLocation)\n\n    mat4.multiply(this.modelViewMatrix, this.viewMatrix, this.modelMatrix)\n\n    shader.setModelViewMatrix(this.modelViewMatrix)\n    shader.setProjectionMatrix(this.projectionMatrix)\n\n    this.drawingVectorLayer.getStrokeColor(this.strokeColor, layer, documentData, isEditMode, false)\n\n    for (const unit of keyframe.geometry.units) {\n\n      for (const group of unit.groups) {\n\n        // Calculate line point buffer data\n\n        if (!group.runtime.buffer.isStored) {\n\n          // console.debug(`Calculate line point buffer data`)\n\n          this.logic_GPULine.copyGroupPointDataToBuffer(group, documentData.lineWidthBiasRate, useAdjustingLocation)\n\n          const vertexUnitSize = shader.getVertexUnitSize()\n          const vertexCount = shader.getVertexCount(group.runtime.buffer.pointCount, group.runtime.buffer.lines.length) // 本当は辺の数だけでよいので若干無駄は生じるが、計算を簡単にするためこれでよいことにする\n\n          this.logic_GPULine.allocateBuffer(group.runtime.buffer, vertexCount, vertexUnitSize, render)\n\n          shader.calculateBufferData(group.runtime.buffer, this.logic_GPULine)\n\n          if (group.runtime.buffer.usedDataArraySize > 0) {\n\n            this.logic_GPULine.bufferData(group.runtime.buffer, render)\n          }\n        }\n\n        // Draw lines\n\n        if (group.runtime.buffer.isStored) {\n\n          this.lineShader.setBuffers(group.runtime.buffer.buffer, this.strokeColor)\n\n          const drawCount = this.lineShader.getDrawArrayTryanglesCount(group.runtime.buffer.usedDataArraySize)\n\n          render.drawArrayTriangles(drawCount)\n        }\n      }\n    }\n  }\n}\n","﻿import { float, int } from '../common-logics'\nimport { Layer } from './layer'\n\nexport enum DrawLineTypeID {\n\n  none = 1,\n  layerColor = 2,\n  paletteColor = 3,\n}\n\nexport interface StrokeDrawable {\n\n  drawLineType: DrawLineTypeID\n  layerColor: Vec4\n  line_PaletteColorIndex: int\n  lineWidthBiasRate: float\n}\n\nexport class StrokeDrawableLayer extends Layer implements StrokeDrawable {\n\n  drawLineType: DrawLineTypeID\n  layerColor: Vec4\n  line_PaletteColorIndex: int\n  lineWidthBiasRate: float\n}\n","﻿import { float, int, RectangleArea } from \"../common-logics\"\nimport { GPUVertexBuffer } from \"../document-rendering\"\nimport { FillAreaTypeID, FillDrawable } from \"./fill-drawable\"\nimport { KeyframeDataObject, AnimatableDataObject } from \"./key-frame\"\nimport { Layer, LayerTypeID, Layer_RuntimeProperty } from \"./layer\"\nimport { PosingLayer } from \"./posing-layer\"\nimport { DrawLineTypeID, StrokeDrawable } from \"./stroke-drawable\"\n\nexport enum VectorPointModifyFlagID {\n\n  none = 0,\n  selectedToUnselected = 1,\n  unselectedToSelected = 2,\n  delete = 3,\n  edit = 4,\n}\n\nexport class VectorPoint {\n\n  // runtime\n  location = vec3.fromValues(0.0, 0.0, 0.0)\n  lineWidth = 1.0\n  isSelected = false\n  modifyFlag = VectorPointModifyFlagID.none\n  tempLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  adjustingLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  adjustingLineWidth = 0.0\n  adjustingLengthFrom = 1.0 // end position to draw segment of the side of this point (0.0 - 1.0)\n  adjustingLengthTo = 0.0 // start position to draw segment of the side of the next point (0.0 - 1.0)\n  totalLength = 0.0\n  curvature = 0.0\n  location3D = vec3.fromValues(0.0, 0.0, 0.0)\n\n  // file only\n  v: float[] // location\n  w: float   // lineWidth\n  s: int     // isSelected\n\n  static clone(srcPoint: VectorPoint): VectorPoint {\n\n    const point = new VectorPoint()\n\n    vec3.copy(point.location, srcPoint.location)\n    point.lineWidth = srcPoint.lineWidth\n\n    vec3.copy(point.adjustingLocation, point.location)\n    point.adjustingLineWidth = point.lineWidth\n\n    return point\n  }\n}\n\nexport enum VectorStrokeModifyFlagID {\n\n  none = 0,\n  selectedToUnselected = 1,\n  unselectedToSelected = 2,\n  delete = 3,\n  deletePoints = 4,\n  deleteLine = 5, // delete the line without operations per point\n  edit = 6,\n  transform = 7,\n  resampling = 8\n}\n\nexport class VectorStroke_RuntimeProperty {\n\n  modifyFlag = VectorStrokeModifyFlagID.none\n  isCloseToMouse = false\n  area = new RectangleArea()\n  innerArea = new RectangleArea()\n  totalLength = 0.0\n}\n\nexport class VectorStroke {\n\n  points: VectorPoint[] = []\n  isSelected = false\n\n  // runtime\n  runtime = new VectorStroke_RuntimeProperty()\n}\n\nexport enum VectorStrokeConnectionPosition {\n\n  none = 0,\n  head = 1,\n  tail = 2,\n}\n\nexport class VectorStrokeConnectionInfo {\n\n  from_Stroke: VectorStroke = null\n  from_Position = VectorStrokeConnectionPosition.none\n  to_Stroke: VectorStroke = null\n  to_Position = VectorStrokeConnectionPosition.none\n}\n\nexport enum VectorStrokeGroupModifyFlagID {\n\n  none = 0,\n  modifyLines = 1,\n  deleteLines = 2,\n  delete = 3,\n  edit = 4,\n}\n\nexport class VectorStrokeGroup_RuntimeProperty {\n\n  modifyFlag = VectorStrokeGroupModifyFlagID.none\n  linePointModifyFlag = VectorStrokeGroupModifyFlagID.none\n  buffer = new GPUVertexBuffer()\n  connectionInfos: VectorStrokeConnectionInfo[] = []\n  needsPostUpdate = false\n  needsLazyUpdate = false\n  area = new RectangleArea()\n}\n\nexport class VectorStrokeGroup {\n\n  lines: VectorStroke[] = []\n  isSelected = false\n\n  // runtime\n  runtime = new VectorStrokeGroup_RuntimeProperty()\n\n  static setPostUpdateNeeded(group: VectorStrokeGroup) {\n\n    group.runtime.needsPostUpdate = true\n  }\n\n  static setLazyUpdateNeeded(group: VectorStrokeGroup) {\n\n    group.runtime.needsPostUpdate = true\n    group.runtime.needsLazyUpdate = true\n    group.runtime.buffer.isStored = false\n  }\n}\n\nexport enum VectorStrokeDrawingUnitModifyFlagID {\n\n  none = 0,\n  delete = 1,\n  edit = 2,\n}\n\nexport class VectorStrokeDrawingUnit {\n\n  groups: VectorStrokeGroup[] = []\n\n  // runtime\n  modifyFlag = VectorStrokeDrawingUnitModifyFlagID.none\n}\n\nexport enum VectorLayerGeometryModifyFlagID {\n\n  none = 0,\n  delete = 1,\n  edit = 2,\n}\n\nexport class VectorLayerGeometry_RuntimeProperty {\n\n  modifyFlag = VectorLayerGeometryModifyFlagID.none\n  needsPostUpdate = false\n  area = new RectangleArea()\n}\n\nexport enum VectorLayerGeometryTypeID {\n\n  none = 0,\n  strokes = 1,\n  surroundingFill = 2,\n  pointBrushFill = 3,\n}\n\nexport class VectorLayerGeometry {\n\n  type = VectorLayerGeometryTypeID.none\n  units: VectorStrokeDrawingUnit[] = []\n\n  constructor(type: VectorLayerGeometryTypeID) {\n\n    this.type = type\n  }\n\n  // runtime\n  runtime = new VectorLayerGeometry_RuntimeProperty()\n\n  static initialize(geometry: VectorLayerGeometry) {\n\n    const unit = new VectorStrokeDrawingUnit()\n\n    unit.groups.push(new VectorStrokeGroup())\n\n    geometry.units.push(unit)\n  }\n\n  static isStrokeDraw(geometry: VectorLayerGeometry) {\n\n    return (geometry.type == VectorLayerGeometryTypeID.strokes)\n  }\n\n  static isSurroundingFill(geometry: VectorLayerGeometry) {\n\n    return (geometry.type == VectorLayerGeometryTypeID.surroundingFill)\n  }\n\n  static isPointBrushFill(geometry: VectorLayerGeometry) {\n\n    return (geometry.type == VectorLayerGeometryTypeID.pointBrushFill)\n  }\n\n  static getGeometryTypeForLayer(layer: Layer): VectorLayerGeometryTypeID {\n\n    if (VectorLayer.isPointBrushFillLayer(layer)) {\n\n      return VectorLayerGeometryTypeID.pointBrushFill\n    }\n    else if (VectorLayer.isSurroundingFillLayer(layer)) {\n\n      return VectorLayerGeometryTypeID.surroundingFill\n    }\n    else {\n\n      return VectorLayerGeometryTypeID.strokes\n    }\n  }\n\n  static forEachGroup(geometry: VectorLayerGeometry, loopBodyFunction: (group: VectorStrokeGroup, unit?: VectorStrokeDrawingUnit) => void) {\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        loopBodyFunction(group, unit)\n      }\n    }\n  }\n\n  static forEachStroke(geometry: VectorLayerGeometry, loopBodyFunction: (stroke: VectorStroke, group?: VectorStrokeGroup, unit?: VectorStrokeDrawingUnit) => void) {\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        for (const stroke of group.lines) {\n\n          loopBodyFunction(stroke, group, unit)\n        }\n      }\n    }\n  }\n\n  static forEachSegment(geometry: VectorLayerGeometry,\n    loopBodyFunction: (from_point: VectorPoint, to_point: VectorPoint, stroke?: VectorStroke, group?: VectorStrokeGroup, unit?: VectorStrokeDrawingUnit) => void) {\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        for (const stroke of group.lines) {\n\n          for (let index = 0; index < stroke.points.length - 1; index++) {\n\n            const from_point = stroke.points[index]\n            const to_point = stroke.points[index + 1]\n\n            loopBodyFunction(from_point, to_point,stroke, group, unit)\n          }\n        }\n      }\n    }\n  }\n\n  static forEachPoint(geometry: VectorLayerGeometry,\n    loopBodyFunction: (point: VectorPoint, stroke?: VectorStroke, group?: VectorStrokeGroup, unit?: VectorStrokeDrawingUnit) => void) {\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        for (const stroke of group.lines) {\n\n          for (const point of stroke.points) {\n\n            loopBodyFunction(point, stroke, group, unit)\n          }\n        }\n      }\n    }\n  }\n\n  static setPostUpdateNeeded(geometry: VectorLayerGeometry) {\n\n    geometry.runtime.needsPostUpdate = true\n  }\n}\n\nexport class VectorLayerKeyframe implements KeyframeDataObject {\n\n  frame = 0\n  geometry: VectorLayerGeometry\n\n  constructor(geometryType: VectorLayerGeometryTypeID) {\n\n    this.geometry = new VectorLayerGeometry(geometryType)\n  }\n\n  static createWithDefaultGeometry(geometryType: VectorLayerGeometryTypeID): VectorLayerKeyframe {\n\n    const keyframe = new VectorLayerKeyframe(geometryType)\n\n    VectorLayerGeometry.initialize(keyframe.geometry)\n\n    return keyframe\n  }\n}\n\nexport enum EyesSymmetryInputSideID {\n\n  none = 0,\n  left = 1,\n  right = 2,\n}\n\nexport class VectorLayer_RuntimeProperty extends Layer_RuntimeProperty {\n\n  eyesSymmetryGeometry: VectorLayerGeometry = null\n  posingLayer: PosingLayer = null\n}\n\nexport class VectorLayer extends Layer implements FillDrawable, StrokeDrawable, AnimatableDataObject<VectorLayerKeyframe> {\n\n  type = LayerTypeID.vectorLayer\n\n  keyframes: VectorLayerKeyframe[] = []\n\n  drawLineType = DrawLineTypeID.paletteColor\n  line_PaletteColorIndex = 0\n  lineWidthBiasRate = 1.0\n\n  fillAreaType = FillAreaTypeID.none\n  fillColor = vec4.fromValues(1.0, 1.0, 1.0, 1.0)\n  fill_PaletteColorIndex = 1\n\n  eyesSymmetryEnabled = false\n  eyesSymmetryInputSide = EyesSymmetryInputSideID.left\n\n  // file only\n  posingLayerID: int\n\n  // runtime\n  runtime = new VectorLayer_RuntimeProperty() // @override\n\n  static isVectorLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.vectorLayer\n        || layer.type == LayerTypeID.vectorLayerReferenceLayer\n        || layer.type == LayerTypeID.surroundingFillLayer\n        || layer.type == LayerTypeID.pointBrushFillLayer\n      )\n    )\n  }\n\n  static isVectorLayerWithOwnData(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.vectorLayer\n        || layer.type == LayerTypeID.surroundingFillLayer\n        || layer.type == LayerTypeID.pointBrushFillLayer\n      )\n    )\n  }\n\n  static isVectorStrokeLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.vectorLayer\n        || layer.type == LayerTypeID.vectorLayerReferenceLayer\n      )\n    )\n  }\n\n  static isSingleGroupVectorLayer(layer: Layer): boolean {\n\n    return (\n      this.isVectorLayerWithOwnData(layer)\n      && (layer.type == LayerTypeID.vectorLayer\n        || layer.type == LayerTypeID.pointBrushFillLayer\n      )\n    )\n  }\n\n  static isSurroundingFillLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.surroundingFillLayer\n      )\n    )\n  }\n\n  static isPointBrushFillLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.pointBrushFillLayer\n      )\n    )\n  }\n}\n\nexport class SurroundingFillLayer extends VectorLayer {\n\n  type = LayerTypeID.surroundingFillLayer\n}\n\nexport class PointBrushFillLayer extends VectorLayer {\n\n  type = LayerTypeID.pointBrushFillLayer\n}\n","﻿import { float, int } from '../common-logics';\nimport { FillAreaTypeID, FillDrawable } from './fill-drawable';\nimport { KeyframeDataObject, AnimatableDataObject } from './key-frame';\nimport { Layer, LayerTypeID } from './layer';\nimport { VectorLayerGeometryTypeID, VectorLayerGeometry, VectorStroke } from './vector_layer';\n\nexport class AutoFillPoint {\n\n  location = vec3.fromValues(0.0, 0.0, 0.0)\n  lookDirection = vec3.fromValues(0.0, 0.0, 0.0)\n  positionInStartStroke: float = 0.0;\n  minDistanceRange = 15.0\n}\n\nexport class AutoFillPointGroup {\n\n  fillPoints: AutoFillPoint[] = []\n}\n\nexport class AutoFillLayerKeyframe implements KeyframeDataObject {\n\n  frame = 0\n  groups: AutoFillPointGroup[] = []\n  geometry = new VectorLayerGeometry(VectorLayerGeometryTypeID.surroundingFill)\n\n  constructor() {\n\n    const group = new AutoFillPointGroup()\n    this.groups.push(group)\n\n    VectorLayerGeometry.initialize(this.geometry)\n  }\n}\n\nexport class AutoFillLayer extends Layer implements FillDrawable, AnimatableDataObject<AutoFillLayerKeyframe> {\n\n  type = LayerTypeID.autoFillLayer\n\n  keyframes: AutoFillLayerKeyframe[] = []\n\n  fillAreaType = FillAreaTypeID.paletteColor\n  fillColor = vec4.fromValues(1.0, 1.0, 1.0, 1.0)\n  fill_PaletteColorIndex = 1\n\n  // fillPoints: AutoFillPoint[] = []\n  // geometry = new VectorLayerGeometry()\n\n  constructor() {\n    super()\n\n    const keyframe = new AutoFillLayerKeyframe()\n    this.keyframes.push(keyframe)\n  }\n\n  static isAutoFillLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.autoFillLayer\n      )\n    )\n  }\n\n  static forEachFillPoint(\n    keyframe: AutoFillLayerKeyframe,\n    loopBodyFunction: (group: AutoFillPointGroup, fillPoint: AutoFillPoint, looping?: { break: boolean }) => void\n  ) {\n\n    const looping = { break: false }\n\n    for (const group of keyframe.groups) {\n\n      for (const fillPoint of group.fillPoints) {\n\n        loopBodyFunction(group, fillPoint, looping)\n\n        if (looping.break) {\n          break\n        }\n      }\n\n      if (looping.break) {\n        break\n      }\n    }\n  }\n}\n","﻿export class PaletteColor {\n\n  color = vec4.fromValues(1.0, 1.0, 1.0, 1.0)\n\n  // runtime\n  isSelected = false\n}\n","﻿import { float, int } from '../common-logics'\nimport { ModelFile } from '../posing3d'\nimport { Layer } from './layer'\nimport { PaletteColor } from './palette'\nimport { AnimationSettingData } from './animation'\n\nexport enum DocumentFileType {\n\n  none = 0,\n  json = 1,\n  ora = 2,\n}\n\nexport interface DocumentLayout {\n\n  left: int\n  top: int\n  width: int\n  height: int\n}\n\nexport enum ImageFileTypeID {\n\n  png = 1,\n  jpeg = 2,\n}\n\nexport enum DocumentBackGroundTypeID {\n\n  lastPaletteColor = 1,\n  transparent = 2,\n}\n\nexport class ExportImageSetting {\n\n  fileName = ''\n  exportDirectory = ''\n  imageFileType = ImageFileTypeID.png\n  backGroundType = DocumentBackGroundTypeID.lastPaletteColor\n  exportingCount = 1\n  autoNumberingEnabled = false\n  scale = 1.0\n}\n\nexport class DocumentData {\n\n  static maxPaletteColors = 50\n  static versionString = '0.1.3'\n\n  version = DocumentData.versionString\n\n  rootLayer = new Layer()\n\n  paletteColors: PaletteColor[] = []\n\n  documentFrame = vec4.fromValues(-500.0, -500.0, 499.0, 499.0)\n  documentFrame_HideOuterArea = true\n\n  animationSettingData = new AnimationSettingData()\n\n  defaultViewScale = 1.0\n  lineWidthBiasRate = 1.0\n\n  exportImageSetting = new ExportImageSetting()\n\n  loaded = false\n  hasErrorOnLoading = false\n\n  private static readonly defaultColors: Vec4[] = [\n    vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n    vec4.fromValues(1.0, 1.0, 1.0, 1.0),\n    vec4.fromValues(0.5, 0.0, 0.0, 1.0),\n    vec4.fromValues(0.0, 0.5, 0.0, 1.0),\n    vec4.fromValues(0.3, 0.3, 0.8, 1.0),\n\n    // Anime skin standard\n    vec4.fromValues(250 / 255.0, 221 / 255.0, 189 / 255.0, 1.0),\n    vec4.fromValues(220 / 255.0, 167 / 255.0, 125 / 255.0, 1.0),\n\n    // Anime skin cool\n    vec4.fromValues(249 / 255.0, 239 / 255.0, 229 / 255.0, 1.0),\n    vec4.fromValues(216 / 255.0, 177 / 255.0, 170 / 255.0, 1.0),\n    vec4.fromValues(198 / 255.0, 155 / 255.0, 148 / 255.0, 1.0),\n  ]\n\n  constructor() {\n\n    DocumentData.initializeDefaultPaletteColors(this)\n  }\n\n  static initializeDefaultPaletteColors(documentData: DocumentData) {\n\n    documentData.paletteColors = []\n\n    for (const color of DocumentData.defaultColors) {\n\n      const paletteColor = new PaletteColor()\n      vec4.copy(paletteColor.color, color)\n      documentData.paletteColors.push(paletteColor)\n    }\n\n    while (documentData.paletteColors.length < DocumentData.maxPaletteColors) {\n\n      const paletteColor = new PaletteColor()\n      vec4.set(paletteColor.color, 1.0, 1.0, 1.0, 1.0)\n      documentData.paletteColors.push(paletteColor)\n    }\n  }\n\n  static getDocumentLayout(documentData: DocumentData, scale: float): DocumentLayout {\n\n    const frameLeft = Math.floor(documentData.documentFrame[0])\n    const frameTop = Math.floor(documentData.documentFrame[1])\n\n    const frameWidth = Math.floor(documentData.documentFrame[2]) - frameLeft + 1\n    const frameHeight = Math.floor(documentData.documentFrame[3]) - frameTop + 1\n\n    const scaledWidth = Math.floor(frameWidth * scale)\n    const scaledHeight = Math.floor(frameHeight * scale)\n\n    return { left: frameLeft, top: frameTop, width: scaledWidth, height: scaledHeight }\n  }\n}\n","﻿import { Layer, LayerTypeID } from \"./layer\"\n\nexport class GroupLayer extends Layer {\n\n  type = LayerTypeID.groupLayer\n\n  static isGroupLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.groupLayer\n      )\n    )\n  }\n}\n","﻿import { DirectionInputData, EyesSymmetryInputSideID, InputSideID, JointPartInputData,\n  PosingData, PosingModel\n} from '../document-data'\nimport { float, Maths } from '../common-logics'\nimport { Posing3DView } from './posing3d-view'\n\nexport enum Posing3D_BodyLocateMode {\n\n  keepFrontUp = 1,\n  yawPitch = 2\n}\n\nexport class Posing3DLogic {\n\n  inputLocation = vec3.create()\n\n  upVector = vec3.create()\n  tmpMatrix = mat4.create()\n  invMatrix = mat4.create()\n  tmpVec3 = vec3.create()\n  vecX = vec3.create()\n  vecY = vec3.create()\n  vecZ = vec3.create()\n  eyeLocation = vec3.create()\n\n  headMatrix = mat4.create()\n  bodyRootMatrix = mat4.create()\n\n  relativeInputLocation = vec3.create()\n  relativeRotationMatrix = mat4.create()\n  rootLocation = vec3.create()\n  originVector = vec3.create()\n  bodyMatrix = mat4.create()\n\n  yawRotationMatrix = mat4.create()\n  pitchRotationMatrix = mat4.create()\n\n  hitTestResultLocation = mat4.create()\n\n  // Common caluculation methods for input\n\n  private tempTargetLocation = vec3.create()\n  private tempCenterLocation = vec3.create()\n  private tempLocalLocation = vec3.create()\n  private tempResultLocation = vec3.create()\n\n  hittest_sphere(result: Vec3, x: float, y: float, sphereRadius: float): boolean {\n\n    // r * r = x * x + y * y + z * z\n    // z * z = r * r - x * x - y * y\n    // z = sqrt(r * r - x * x - y * y)\n\n    const r = sphereRadius\n    const dist = r * r - x * x - y * y\n\n    let z = 0.0\n    let hited: boolean\n    if (dist >= 0) {\n\n      z = Math.sqrt(dist)\n      hited = true\n    }\n    else {\n\n      hited = false\n    }\n\n    result[0] = x\n    result[1] = y\n    result[2] = z\n\n    return hited\n  }\n\n  calculateInputLocation3D(result: Vec3, location2D: Vec3, inputSideID: InputSideID, targetData: DirectionInputData, posingData: PosingData, posing3DView: Posing3DView): boolean {\n\n    Maths.copyTranslation(this.tempCenterLocation, targetData.parentMatrix)\n\n    return this.calculateInputLocation3DForDoubleSide(\n      inputSideID == InputSideID.front ? result : null,\n      inputSideID == InputSideID.back ? result : null,\n      location2D,\n      this.tempCenterLocation,\n      targetData.hitTestSphereRadius,\n      posingData,\n      posing3DView\n    )\n  }\n\n  calculateInputLocation3DForDoubleSide(resultFront: Vec3 | null, resultBack: Vec3 | null, location2D: Vec3, centerLocation: Vec3, sphereRadius: float, posingData: PosingData, posing3DView: Posing3DView): boolean {\n\n    posing3DView.calculate3DLocationFrom2DLocation(\n      this.tempTargetLocation\n      , location2D\n      , posingData.real3DModelDistance\n      , posingData)\n\n    vec3.transformMat4(this.tempLocalLocation, this.tempTargetLocation, posing3DView.viewMatrix)\n\n    vec3.transformMat4(this.tempCenterLocation, centerLocation, posing3DView.viewMatrix)\n\n    const x = this.tempLocalLocation[0] - this.tempCenterLocation[0]\n    const y = this.tempLocalLocation[1] - this.tempCenterLocation[1]\n    const hited = this.hittest_sphere(this.hitTestResultLocation, x, y, sphereRadius)\n\n    this.tempResultLocation[0] = this.tempCenterLocation[0] + this.hitTestResultLocation[0]\n    this.tempResultLocation[1] = this.tempCenterLocation[1] + this.hitTestResultLocation[1]\n\n    if (resultFront != null) {\n\n      this.tempResultLocation[2] = this.tempCenterLocation[2] + this.hitTestResultLocation[2]\n      vec3.transformMat4(resultFront, this.tempResultLocation, posing3DView.cameraMatrix)\n    }\n\n    if (resultBack != null) {\n\n      this.tempResultLocation[2] = this.tempCenterLocation[2] - this.hitTestResultLocation[2]\n      vec3.transformMat4(resultBack, this.tempResultLocation, posing3DView.cameraMatrix)\n    }\n\n    return hited\n  }\n\n  private calculateBodyPartDirection(inputData: DirectionInputData, rootMatrix: Mat4, mode: Posing3D_BodyLocateMode, posingData: PosingData, posing3DView: Posing3DView) {\n\n    if (!inputData.directionInputDone) {\n\n      mat4.copy(inputData.matrix, rootMatrix)\n      return\n    }\n\n    this.calculateInputLocation3D(this.inputLocation,\n      inputData.inputLocation2D,\n      inputData.inputSideID,\n      inputData,\n      posingData,\n      posing3DView\n    )\n    //vec3.copy(this.inputLocation, inputData.inputLocation)\n\n    // Calculates relative location of input from root of body\n    mat4.copy(this.bodyRootMatrix, rootMatrix)\n    mat4.invert(this.tmpMatrix, this.bodyRootMatrix)\n    vec3.transformMat4(this.relativeInputLocation, this.inputLocation, this.tmpMatrix)\n    vec3.normalize(this.relativeInputLocation, this.relativeInputLocation)\n\n    if (mode == Posing3D_BodyLocateMode.keepFrontUp) {\n\n      // Calculates transform matrix from bodyRootMatrix to bodyMatris(=result)\n      vec3.set(this.upVector, 1.0, 0.0, 0.0)\n      vec3.set(this.originVector, 0.0, 0.0, 0.0)\n      mat4.lookAt(this.relativeRotationMatrix, this.originVector, this.relativeInputLocation, this.upVector)\n      mat4.invert(this.relativeRotationMatrix, this.relativeRotationMatrix)\n\n      mat4.multiply(this.bodyMatrix, rootMatrix, this.relativeRotationMatrix)\n      mat4.rotateZ(this.bodyMatrix, this.bodyMatrix, Math.PI / 2)\n    }\n    else {\n\n      // Calculates transform matrix from bodyRootMatrix to bodyMatris(=result)\n      vec3.set(this.vecZ, 0.0, 0.0, 1.0)\n      vec3.set(this.tmpVec3, this.relativeInputLocation[0], this.relativeInputLocation[1], 0.0)\n      vec3.normalize(this.vecY, this.tmpVec3)\n      vec3.cross(this.vecX, this.vecY, this.vecZ)\n      mat4.identity(this.yawRotationMatrix)\n      Maths.mat4SetVectors(this.yawRotationMatrix, this.vecX, this.vecY, this.vecZ)\n\n      mat4.invert(this.invMatrix, this.yawRotationMatrix)\n      vec3.transformMat4(this.vecY, this.relativeInputLocation, this.invMatrix)\n      vec3.set(this.vecX, 1.0, 0.0, 0.0)\n      vec3.cross(this.vecZ, this.vecX, this.vecY)\n      mat4.identity(this.pitchRotationMatrix)\n      Maths.mat4SetVectors(this.pitchRotationMatrix, this.vecX, this.vecY, this.vecZ)\n\n      mat4.multiply(this.bodyMatrix, rootMatrix, this.yawRotationMatrix)\n      mat4.multiply(this.bodyMatrix, this.bodyMatrix, this.pitchRotationMatrix)\n      mat4.rotateX(this.bodyMatrix, this.bodyMatrix, Math.PI / 2)\n    }\n\n    mat4.copy(inputData.matrix, this.bodyMatrix)\n\n    // Calculates location for roll input\n    if (!inputData.rollInputDone) {\n\n      //this.translationOf(this.rootLocation, rootMatrix)\n      //vec3.subtract(this.relativeInputLocation, this.inputLocation, this.rootLocation)\n      //vec3.scale(this.relativeInputLocation, this.relativeInputLocation, 0.5)\n      //vec3.set(this.vecY, 0.0, vec3.length(this.relativeInputLocation), 0.0)\n      //mat4.translate(inputData.rollInputRootMatrix, inputData.matrix, this.vecY)\n\n      //vec3.set(this.vecZ, 0.0, 0.0, -vec3.length(this.vecY))\n      //vec3.transformMat4(inputData.rollInputLocation, this.vecZ, inputData.rollInputRootMatrix)\n    }\n    else {\n\n      mat4.rotateZ(inputData.matrix, inputData.matrix, inputData.rollInputAngle)\n    }\n  }\n\n  // Caluculation methods for each part od body\n\n  calculateAll(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    mat4.identity(posingData.rootMatrix)\n\n    if (posingData.headLocationInputData.inputDone) {\n      this.calculateHeadLocation(posingData, posingModel)\n    }\n\n    if (posingData.headRotationInputData.inputDone) {\n      this.calculateHeadRotation(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.bodyLocationInputData.inputDone) {\n      this.calculateBodyLocation(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.bodyRotationInputData.inputDone) {\n      this.calculateBodyRotation(posingData, posingModel)\n    }\n\n    this.calculateLeftShoulderDirection(posingData, posingModel, posing3DView)\n\n    this.calculateRightShoulderDirection(posingData, posingModel, posing3DView)\n\n    if (posingData.hipsLocationInputData.inputDone) {\n      this.calculateHipsLocation(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.leftArm1LocationInputData.inputDone) {\n      this.calculateLeftArm1Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.leftArm2LocationInputData.inputDone) {\n      this.calculateLeftArm2Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.rightArm1LocationInputData.inputDone) {\n      this.calculateRightArm1Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.rightArm2LocationInputData.inputDone) {\n      this.calculateRightArm2Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.leftLeg1LocationInputData.inputDone) {\n      this.calculateLeftLeg1Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.leftLeg2LocationInputData.inputDone) {\n      this.calculateLeftLeg2Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.rightLeg1LocationInputData.inputDone) {\n      this.calculateRightLeg1Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.rightLeg2LocationInputData.inputDone) {\n      this.calculateRightLeg2Direction(posingData, posingModel, posing3DView)\n    }\n\n    if (posingData.headTwistInputData.inputDone) {\n      this.calculateHeadTwist(posingData, posing3DView)\n    }\n  }\n\n  calculateHeadLocation(posingData: PosingData, posingModel: PosingModel) {\n\n    const headLocationInputData = posingData.headLocationInputData\n\n    // Input matrix\n    mat4.identity(posingData.rootMatrix)\n    if (headLocationInputData.inputDone) {\n\n      mat4.translate(posingData.rootMatrix, posingData.rootMatrix, headLocationInputData.center)\n    }\n\n    // Result location\n    vec3.scale(this.tmpVec3, posingModel.headCenterLocation, -1.0)\n    mat4.translate(posingData.headMatrix, posingData.rootMatrix, this.tmpVec3)\n\n    mat4.translate(posingData.headTopMatrix, posingData.headMatrix, posingModel.headTopLocation)\n\n    mat4.translate(posingData.neckSphereMatrix, posingData.headMatrix, posingModel.neckSphereLocation)\n\n    // Sub locations\n    this.calculateHeadSubLocations(posingData, posingModel)\n  }\n\n  calculateHeadRotation(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    const headRotationInputData = posingData.headRotationInputData\n\n    // Input matrix\n    if (headRotationInputData.inputDone) {\n\n      this.calculateBodyPartDirection(\n        headRotationInputData\n        , posingData.neckSphereMatrix\n        , Posing3D_BodyLocateMode.keepFrontUp\n        , posingData\n        , posing3DView\n      )\n    }\n    else {\n\n      mat4.copy(headRotationInputData.matrix, posingData.neckSphereMatrix)\n    }\n\n    // Result location\n    mat4.translate(posingData.headMatrix, headRotationInputData.matrix, posingModel.neckSphereLocation)\n    mat4.rotateX(posingData.headMatrix, posingData.headMatrix, Math.PI)\n\n    // Sub locations\n    this.calculateHeadSubLocations(posingData, posingModel)\n  }\n\n  calculateHeadTwist(posingData: PosingData, posing3DView: Posing3DView) {\n\n    const headTwistInputData = posingData.headTwistInputData\n\n    const headLocationInputData = posingData.headLocationInputData\n    const headRotationInputData = posingData.headRotationInputData\n\n    // Main calculation\n    if (headTwistInputData.inputDone) {\n\n      mat4.invert(this.invMatrix, posingData.neckSphereMatrix)\n\n      vec3.transformMat4(this.relativeInputLocation, headTwistInputData.tempInputLocation, this.invMatrix)\n      vec3.scale(this.relativeInputLocation, this.relativeInputLocation, -1.0)\n      vec3.transformMat4(headTwistInputData.inputLocation, this.relativeInputLocation, posingData.neckSphereMatrix)\n\n      this.calculateBodyPartDirection(\n        headTwistInputData\n        , posingData.neckSphereMatrix\n        , Posing3D_BodyLocateMode.keepFrontUp\n        , posingData\n        , posing3DView\n      )\n\n      mat4.multiply(this.tmpMatrix, this.invMatrix, headRotationInputData.matrix)\n\n      mat4.multiply(headTwistInputData.matrix, headTwistInputData.matrix, this.tmpMatrix)\n    }\n    else {\n\n      mat4.copy(headTwistInputData.matrix, posingData.headRotationInputData.matrix)\n    }\n\n    // Calclates sub locations\n    //this.calculateHeadSubLocations(posingData, posingModel, headTwistInputData.matrix)\n    mat4.copy(headLocationInputData.headMatrix, headTwistInputData.matrix)\n  }\n\n  calculateHeadSubLocations(posingData: PosingData, posingModel: PosingModel) {\n\n    mat4.translate(posingData.chestRootMatrix, posingData.headMatrix, posingModel.neckSphereLocation)\n  }\n\n  calculateBodyLocation(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.bodyLocationInputData\n      , posingData.chestRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Result location\n    mat4.copy(posingData.chestMatrix, posingData.bodyLocationInputData.matrix)\n\n    // Calclates sub locations\n    this.calculateBodySubLocations(posingData, posingModel)\n  }\n\n  calculateBodyRotation(posingData: PosingData, posingModel: PosingModel) {\n\n    const bodyRotationInputData = posingData.bodyRotationInputData\n\n    // Main calculation\n    if (posingData.bodyRotationInputData.inputDone) {\n\n      vec3.copy(this.inputLocation, bodyRotationInputData.inputLocation)\n\n      mat4.invert(this.tmpMatrix, posingData.bodyRotationCenterMatrix)\n\n      vec3.transformMat4(this.relativeInputLocation, this.inputLocation, this.tmpMatrix)\n      this.relativeInputLocation[2] = 0.0\n      vec3.normalize(this.relativeInputLocation, this.relativeInputLocation)\n\n      vec3.set(this.vecZ, 0.0, 0.0, 1.0)\n      vec3.cross(this.vecX, this.relativeInputLocation, this.vecZ)\n\n      mat4.identity(this.relativeRotationMatrix)\n      Maths.mat4SetVectors(this.relativeRotationMatrix, this.vecX, this.relativeInputLocation, this.vecZ)\n\n      mat4.multiply(bodyRotationInputData.matrix, posingData.bodyLocationInputData.matrix, this.relativeRotationMatrix)\n    }\n    else {\n\n      mat4.copy(bodyRotationInputData.matrix, posingData.bodyLocationInputData.matrix)\n    }\n\n    // Calclates sub locations\n    this.calculateBodySubLocations(posingData, posingModel)\n  }\n\n  calculateHipsLocation(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.hipsLocationInputData\n      , posingData.hipsRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Result location\n    mat4.copy(posingData.hipsMatrix, posingData.hipsLocationInputData.matrix)\n\n    // Calclates sub locations\n    this.calculateBodySubLocations(posingData, posingModel)\n  }\n\n  calculateBodySubLocations(posingData: PosingData, posingModel: PosingModel) {\n\n    // Body rotation\n    mat4.translate(\n      posingData.bodyRotationCenterMatrix\n      , posingData.bodyLocationInputData.matrix\n      , posingModel.bodyRotationSphereLocation)\n\n    // Shoulder\n    mat4.translate(\n      posingData.shoulderRootMatrix\n      , posingData.chestMatrix\n      , posingModel.shoulderSphereLocation)\n\n    // Hips\n    mat4.translate(\n      posingData.hipsRootMatrix\n      , posingData.chestMatrix\n      , posingModel.bodyRotationSphereLocation)\n\n    // Left leg root\n    mat4.translate(\n      posingData.leftLeg1RootMatrix\n      , posingData.hipsMatrix\n      , posingModel.leftLeg1Location)\n\n    //mat4.rotateX(\n    //    posingData.bodyLocationInputData.leftLeg1RootMatrix\n    //    , posingData.bodyLocationInputData.leftLeg1RootMatrix\n    //    , -Math.PI / 2)\n\n    // Right leg root\n    mat4.translate(\n      posingData.rightLeg1RootMatrix\n      , posingData.hipsMatrix\n      , posingModel.rightLeg1Location)\n\n    //mat4.rotateX(\n    //    posingData.bodyLocationInputData.rightLeg1RootMatrix\n    //    , posingData.bodyLocationInputData.rightLeg1RootMatrix\n    //    , Math.PI / 2)\n  }\n\n  calculateLeftShoulderDirection(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    if (!posingData.leftShoulderLocationInputData.directionInputDone) {\n\n      mat4.translate(\n        this.tmpMatrix\n        , posingData.chestMatrix\n        , posingModel.leftArm1Location)\n\n      Maths.copyTranslation(posingData.leftShoulderLocationInputData.inputLocation, this.tmpMatrix)\n\n      posingData.leftShoulderLocationInputData.directionInputDone = true\n    }\n\n    this.calculateBodyPartDirection(\n      posingData.leftShoulderLocationInputData\n      , posingData.shoulderRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Result location\n    vec3.set(this.tmpVec3, 0.0, 0.0, -vec3.length(posingModel.leftArm1Location))\n    mat4.translate(posingData.leftArm1RootMatrix, posingData.leftShoulderLocationInputData.matrix, this.tmpVec3)\n  }\n\n  calculateRightShoulderDirection(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    if (!posingData.rightShoulderLocationInputData.directionInputDone) {\n\n      mat4.translate(\n        this.tmpMatrix\n        , posingData.chestMatrix\n        , posingModel.rightArm1Location)\n\n      Maths.copyTranslation(posingData.rightShoulderLocationInputData.inputLocation, this.tmpMatrix)\n\n      posingData.rightShoulderLocationInputData.directionInputDone = true\n    }\n\n    this.calculateBodyPartDirection(\n      posingData.rightShoulderLocationInputData\n      , posingData.shoulderRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Result location\n    vec3.set(this.tmpVec3, 0.0, 0.0, -vec3.length(posingModel.rightArm1Location))\n    mat4.translate(posingData.rightArm1RootMatrix, posingData.rightShoulderLocationInputData.matrix, this.tmpVec3)\n  }\n\n  calculateLeftArm1Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.leftArm1LocationInputData\n      , posingData.leftArm1RootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.leftArm1LocationInputData, posingModel.leftArm1HeadLocation)\n  }\n\n  calculateRightArm1Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.rightArm1LocationInputData\n      , posingData.rightArm1RootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.rightArm1LocationInputData, posingModel.rightArm1HeadLocation)\n  }\n\n  calculateLeftLeg1Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.leftLeg1LocationInputData\n      , posingData.leftLeg1RootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.leftLeg1LocationInputData, posingModel.leftLeg1HeadLocation)\n\n    if (!posingData.leftLeg2LocationInputData.inputDone) {\n\n      const frontDirectionValue = posingData.leftLeg1LocationInputData.matrix[5]\n\n      if (frontDirectionValue > 0.0) {\n        posingData.leftLeg2LocationInputData.inputSideID = InputSideID.back\n      }\n      else {\n        posingData.leftLeg2LocationInputData.inputSideID = InputSideID.front\n      }\n    }\n  }\n\n  calculateRightLeg1Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.rightLeg1LocationInputData\n      , posingData.rightLeg1RootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.rightLeg1LocationInputData, posingModel.rightLeg1HeadLocation)\n\n    if (!posingData.rightLeg2LocationInputData.inputDone) {\n\n      const frontDirectionValue = posingData.rightLeg1LocationInputData.matrix[5]\n\n      if (frontDirectionValue > 0.0) {\n        posingData.rightLeg2LocationInputData.inputSideID = InputSideID.back\n      }\n      else {\n        posingData.rightLeg2LocationInputData.inputSideID = InputSideID.front\n      }\n    }\n  }\n\n  calculateLeftArm2Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.leftArm2LocationInputData\n      , posingData.leftArm1LocationInputData.childJointRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.leftArm2LocationInputData, posingModel.leftArm2HeadLocation)\n  }\n\n  calculateRightArm2Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.rightArm2LocationInputData\n      , posingData.rightArm1LocationInputData.childJointRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.rightArm2LocationInputData, posingModel.rightArm2HeadLocation)\n  }\n\n  calculateLeftLeg2Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.leftLeg2LocationInputData\n      , posingData.leftLeg1LocationInputData.childJointRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.leftLeg2LocationInputData, posingModel.leftLeg2HeadLocation)\n  }\n\n  calculateRightLeg2Direction(posingData: PosingData, posingModel: PosingModel, posing3DView: Posing3DView) {\n\n    // Main calculation\n    this.calculateBodyPartDirection(\n      posingData.rightLeg2LocationInputData\n      , posingData.rightLeg1LocationInputData.childJointRootMatrix\n      , Posing3D_BodyLocateMode.keepFrontUp\n      , posingData\n      , posing3DView\n    )\n\n    // Calclates sub locations\n    this.calculateArmLegSubLocations(posingData.rightLeg2LocationInputData, posingModel.rightLeg2HeadLocation)\n  }\n\n  calculateArmLegSubLocations(parent: JointPartInputData, childLocation: Vec3) {\n\n    mat4.translate(\n      parent.childJointRootMatrix\n      , parent.matrix\n      , childLocation)\n  }\n\n  getEyeSphereLocation(result: Vec3, posingData: PosingData, eyesSymmetryInputSide: EyesSymmetryInputSideID) {\n\n    const side = (eyesSymmetryInputSide == EyesSymmetryInputSideID.left ? 1 : -1)\n    const horizontalPos = 0.023 // [m]\n    const verticalPos   = 0.074 // [m]\n    const forwardPos    = 0.040 // [m]\n    vec3.set(this.eyeLocation, horizontalPos * side, forwardPos, verticalPos)\n    vec3.transformMat4(result, this.eyeLocation, posingData.headMatrix)\n  }\n\n  getEyeSphereSize(): float {\n\n    const eyeSize = 0.045 // [m]\n\n    return eyeSize\n  }\n}\n","﻿import { PosingModel } from '../document-data'\nimport { Maths } from '../common-logics'\n\ntype BoneData = {\n  name: string,\n  matrix: Mat4,\n  worldMat: Mat4,\n  invMat: Mat4\n}\n\nexport class Posing3DModelLogic {\n\n  private tempVec3 = vec3.create()\n  private fromLocation = vec3.create()\n  private toLocation = vec3.create()\n  private upVector = vec3.create()\n\n  private tempMat4 = mat4.create()\n  private chestInvMat4 = mat4.create()\n  private hipsInvMat4 = mat4.create()\n\n  createPosingModel(modelData: { bones }): PosingModel {\n\n    const posingModel = new PosingModel()\n\n    for (let index = 0; index < modelData.bones.length; index++) {\n      const bone = modelData.bones[index]\n\n      bone.worldMat = mat4.create()\n      if (bone.parent == -1) {\n        mat4.copy(bone.worldMat, bone.matrix)\n      }\n      else {\n        mat4.multiply(bone.worldMat, modelData.bones[bone.parent].worldMat, bone.matrix)\n      }\n\n      bone.invMat = mat4.create()\n      mat4.invert(bone.invMat, bone.worldMat)\n    }\n\n    const head = this.findBone(modelData.bones, 'head')\n    const headCenter = this.findBone(modelData.bones, 'headCenter')\n    const headTop = this.findBone(modelData.bones, 'headTop')\n    const chest = this.findBone(modelData.bones, 'chest')\n    const hips = this.findBone(modelData.bones, 'hips')\n    const hipsTop = this.findBone(modelData.bones, 'hipsTop')\n    const hipL = this.findBone(modelData.bones, 'hip.L')\n    const neck1 = this.findBone(modelData.bones, 'neck1')\n    const neck2 = this.findBone(modelData.bones, 'neck2')\n\n    Maths.copyTranslation(this.toLocation, headCenter.worldMat)\n    vec3.transformMat4(posingModel.headCenterLocation, this.toLocation, head.invMat)\n\n    mat4.multiply(this.tempMat4, headTop.worldMat, head.invMat)\n    Maths.copyTranslation(posingModel.headTopLocation, this.tempMat4)\n\n    Maths.copyTranslation(this.toLocation, neck2.worldMat)\n    vec3.transformMat4(posingModel.neckSphereLocation, this.toLocation, head.invMat)\n\n    Maths.copyTranslation(this.fromLocation, headTop.worldMat)\n    Maths.copyTranslation(this.toLocation, neck2.worldMat)\n    vec3.subtract(posingModel.headTopToNeckVector, this.fromLocation, this.toLocation)\n\n    Maths.copyTranslation(this.fromLocation, neck2.worldMat)\n    Maths.copyTranslation(this.toLocation, chest.worldMat)\n    vec3.set(this.upVector, 0.0, 0.0, 1.0)\n    mat4.lookAt(this.chestInvMat4, this.fromLocation, this.toLocation, this.upVector)\n    mat4.multiply(posingModel.chestModelConvertMatrix, this.chestInvMat4, chest.worldMat)\n\n    Maths.copyTranslation(this.toLocation, hips.worldMat)\n    vec3.transformMat4(posingModel.bodyRotationSphereLocation, this.toLocation, this.chestInvMat4)\n\n    vec3.subtract(this.tempVec3, this.fromLocation, this.toLocation)\n    posingModel.bodySphereSize = vec3.length(this.tempVec3)\n\n    Maths.copyTranslation(this.fromLocation, hips.worldMat)\n    Maths.copyTranslation(this.toLocation, hipL.worldMat)\n    vec3.set(this.upVector, 0.0, 0.0, 1.0)\n    mat4.lookAt(this.hipsInvMat4, this.fromLocation, this.toLocation, this.upVector)\n    mat4.multiply(posingModel.hipsModelConvertMatrix, this.hipsInvMat4, hips.worldMat)\n    mat4.rotateY(posingModel.hipsModelConvertMatrix, posingModel.hipsModelConvertMatrix, Math.PI)\n\n    Maths.copyTranslation(this.fromLocation, hips.worldMat)\n    Maths.copyTranslation(this.toLocation, hipsTop.worldMat)\n    vec3.subtract(this.tempVec3, this.fromLocation, this.toLocation)\n    posingModel.hipsSphereSize = vec3.length(this.tempVec3)\n\n    Maths.copyTranslation(this.toLocation, neck1.worldMat)\n    vec3.transformMat4(posingModel.shoulderSphereLocation, this.toLocation, this.chestInvMat4)\n\n    const arm1L = this.findBone(modelData.bones, 'arm1.L')\n    Maths.copyTranslation(this.toLocation, arm1L.worldMat)\n    vec3.transformMat4(posingModel.leftArm1Location, this.toLocation, this.chestInvMat4)\n\n    const arm1R = this.findBone(modelData.bones, 'arm1.R')\n    Maths.copyTranslation(this.toLocation, arm1R.worldMat)\n    vec3.transformMat4(posingModel.rightArm1Location, this.toLocation, this.chestInvMat4)\n\n    const arm2L = this.findBone(modelData.bones, 'arm2.L')\n    posingModel.leftArm1HeadLocation[2] = -arm2L.matrix[13]\n\n    const arm2R = this.findBone(modelData.bones, 'arm2.R')\n    posingModel.rightArm1HeadLocation[2] = -arm2R.matrix[13]\n\n    const leg1L = this.findBone(modelData.bones, 'leg1.L')\n    Maths.copyTranslation(this.toLocation, leg1L.worldMat)\n    vec3.transformMat4(posingModel.leftLeg1Location, this.toLocation, this.hipsInvMat4)\n\n    const leg1R = this.findBone(modelData.bones, 'leg1.R')\n    Maths.copyTranslation(this.toLocation, leg1R.worldMat)\n    vec3.transformMat4(posingModel.rightLeg1Location, this.toLocation, this.hipsInvMat4)\n\n    const leg2L = this.findBone(modelData.bones, 'leg2.L')\n    posingModel.leftLeg1HeadLocation[2] = -leg2L.matrix[13]\n\n    const leg2R = this.findBone(modelData.bones, 'leg2.R')\n    posingModel.rightLeg1HeadLocation[2] = -leg2R.matrix[13]\n\n    return posingModel\n  }\n\n  private findBone(bones: BoneData[], boneName: string): BoneData {\n\n    for (const bone of bones) {\n\n      if (bone.name == boneName) {\n\n        return bone\n      }\n    }\n\n    return null\n  }\n}\n","import { DocumentContext } from '../context'\nimport { InputSideID, JointPartDrawingUnit, PosingData, PosingLayer, PosingModel } from '../document-data'\nimport { float, Maths } from '../common-logics'\nimport { CanvasWindow, RenderImage, RenderModel, RenderShader, WebGLRender, WebGLRenderBlendType } from '../render'\nimport { SubToolID } from '../tool'\n\nexport class ImageResource {\n\n  filePath: string = ''\n  image = new RenderImage()\n  isGLTexture = false\n  cssImageClassName = ''\n\n  loaded = false\n  error = false\n\n  set({ filePath, cssImageClassName, isGLTexture }: { filePath: string, cssImageClassName?: string, isGLTexture?: boolean }) {\n\n    this.filePath = filePath\n\n    if (cssImageClassName) {\n\n      this.cssImageClassName = cssImageClassName\n    }\n\n    if (isGLTexture) {\n\n      this.isGLTexture = isGLTexture\n    }\n\n    return this\n  }\n}\n\nexport class ModelResource {\n\n  modelName: string = null\n  model = new RenderModel()\n}\n\nexport class ModelFile {\n\n  fileName: string = null\n  modelResources: ModelResource[] = []\n  modelResourceDictionary = new Map<string, ModelResource>()\n  posingModelDictionary = new Map<string, PosingModel>()\n\n  loaded = false\n  error = false\n\n  file(fileName: string): ModelFile {\n\n    this.fileName = fileName\n\n    return this\n  }\n}\n\nenum DrawImageType {\n\n  visualImage = 1,\n  depthImage = 2\n}\n\nexport class Posing3DView {\n\n  render: WebGLRender = null\n  webglWindow: CanvasWindow = null\n  //pickingWindow: PickingWindow = null\n  posingFigureShader = new PosingFigureShader()\n  depthShader = new DepthShader()\n\n  imageResurces: ImageResource[] = []\n\n  axisModel: ModelResource = null\n  zTestShpereModel: ModelResource = null\n  zTestShpereEdgeModel: ModelResource = null\n  headModel: ModelResource = null\n  chestModel: ModelResource = null\n  leftSholderModel: ModelResource = null\n  rightSholderModel: ModelResource = null\n  hipsModel: ModelResource = null\n  leftArm1Model: ModelResource = null\n  leftArm2Model: ModelResource = null\n  rightArm1Model: ModelResource = null\n  rightArm2Model: ModelResource = null\n  leftLeg1Model: ModelResource = null\n  leftLeg2Model: ModelResource = null\n  rightLeg1Model: ModelResource = null\n  rightLeg2Model: ModelResource = null\n\n  eyeLocation = vec3.create()\n  lookatLocation = vec3.create()\n  upVector = vec3.create()\n\n  modelMatrix = mat4.create()\n  normalMatrix = mat4.create()\n  viewMatrix = mat4.create()\n  modelViewMatrix = mat4.create()\n  projectionMatrix = mat4.create()\n  projectionInvMatrix = mat4.create()\n  cameraMatrix = mat4.create()\n\n  real3DProjectionMatrix = mat4.create()\n\n  locationMatrix = mat4.create()\n  tempVec3 = vec3.create()\n  invProjectedVec3 = vec3.create()\n  tmpMatrix = mat4.create()\n  screenLocation = vec3.create()\n\n  initialize(render: WebGLRender, webglWindow: CanvasWindow) {\n\n    this.render = render\n    this.webglWindow = webglWindow\n    //this.pickingWindow = pickingWindow\n\n    this.render.initializeShader(this.posingFigureShader)\n    this.render.initializeShader(this.depthShader)\n\n    this.render.setShader(this.depthShader)\n    //this.depthShader.setMaxDepth(pickingWindow.maxDepth)\n  }\n\n  storeResources(modelFile: ModelFile, imageResurces: ImageResource[]) {\n\n    this.axisModel = modelFile.modelResourceDictionary.get('Axis')\n    this.zTestShpereModel = modelFile.modelResourceDictionary.get('ZTestSphere')\n    this.zTestShpereEdgeModel = modelFile.modelResourceDictionary.get('ZTestSphereEdge')\n\n    this.headModel = modelFile.modelResourceDictionary.get('Head02')\n    this.chestModel = modelFile.modelResourceDictionary.get('Chest')\n    this.leftSholderModel = modelFile.modelResourceDictionary.get('LeftShoulder')\n    this.rightSholderModel = modelFile.modelResourceDictionary.get('LeftShoulder')\n    this.hipsModel = modelFile.modelResourceDictionary.get('Hips')\n\n    this.leftArm1Model = modelFile.modelResourceDictionary.get('Arm1')\n    this.leftArm2Model = modelFile.modelResourceDictionary.get('Arm1')\n    this.rightArm1Model = modelFile.modelResourceDictionary.get('Arm1')\n    this.rightArm2Model = modelFile.modelResourceDictionary.get('Arm1')\n\n    this.leftLeg1Model = modelFile.modelResourceDictionary.get('Leg1')\n    this.leftLeg2Model = modelFile.modelResourceDictionary.get('Leg2')\n    this.rightLeg1Model = modelFile.modelResourceDictionary.get('Leg1')\n    this.rightLeg2Model = modelFile.modelResourceDictionary.get('Leg2')\n\n    this.imageResurces.push(imageResurces[0])\n  }\n\n  buildDrawingStructures(posingLayer: PosingLayer) {\n\n    const posingData = posingLayer.posingData\n    const posingModel = posingLayer.posingModel\n\n    const drawingUnits: JointPartDrawingUnit[] = []\n\n    // Head top to neck\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"headLocationInputData\"\n      unit.targetData = posingData.headRotationInputData\n      unit.dependentInputData = posingData.headLocationInputData\n      unit.subToolID = SubToolID.p3d_rotateHead\n      unit.modelResource = this.headModel\n      unit.drawModel = false\n      unit.targetData.parentMatrix = posingData.neckSphereMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.headTopToNeckVector)\n      drawingUnits.push(unit)\n    }\n\n    // Chest and hips\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"bodyLocationInputData\"\n      unit.targetData = posingData.bodyLocationInputData\n      unit.dependentInputData = posingData.headLocationInputData\n      unit.modelConvertMatrix = posingModel.chestModelConvertMatrix\n      unit.subToolID = SubToolID.p3d_locateBody\n      unit.modelResource = this.chestModel\n      unit.targetData.parentMatrix = posingData.chestRootMatrix\n      unit.targetData.hitTestSphereRadius = posingModel.bodySphereSize\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"hipsLocationInputData\"\n      unit.targetData = posingData.hipsLocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.modelConvertMatrix = posingModel.hipsModelConvertMatrix\n      unit.subToolID = SubToolID.p3d_locateHips\n      unit.modelResource = this.hipsModel\n      unit.targetData.parentMatrix = posingData.hipsRootMatrix\n      unit.targetData.hitTestSphereRadius = posingModel.hipsSphereSize\n      drawingUnits.push(unit)\n    }\n\n    // Left arms\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"leftShoulderLocationInputData\"\n      unit.targetData = posingData.leftShoulderLocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.subToolID = SubToolID.p3d_locateLeftShoulder\n      unit.modelResource = this.leftSholderModel\n      unit.targetData.parentMatrix = posingData.shoulderRootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.leftArm1Location)\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"leftArm1LocationInputData\"\n      unit.targetData = posingData.leftArm1LocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.subToolID = SubToolID.p3d_locateLeftArm1\n      unit.modelResource = this.leftArm1Model\n      unit.targetData.parentMatrix = posingData.leftArm1RootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.leftArm1HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"leftArm2LocationInputData\"\n      unit.targetData = posingData.leftArm2LocationInputData\n      unit.dependentInputData = posingData.leftArm1LocationInputData\n      unit.subToolID = SubToolID.p3d_locateLeftArm2\n      unit.modelResource = this.leftArm2Model\n      unit.targetData.parentMatrix = posingData.leftArm1LocationInputData.childJointRootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.leftArm2HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    // Right arm\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"rightShoulderLocationInputData\"\n      unit.targetData = posingData.rightShoulderLocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.subToolID = SubToolID.p3d_locateRightShoulder\n      unit.modelResource = this.rightSholderModel\n      unit.targetData.parentMatrix = posingData.shoulderRootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.rightArm1Location)\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"rightArm1LocationInputData\"\n      unit.targetData = posingData.rightArm1LocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.subToolID = SubToolID.p3d_locateRightArm1\n      unit.modelResource = this.rightArm1Model\n      unit.targetData.parentMatrix = posingData.rightArm1RootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.rightArm1HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"rightArm2LocationInputData\"\n      unit.targetData = posingData.rightArm2LocationInputData\n      unit.dependentInputData = posingData.rightArm1LocationInputData\n      unit.subToolID = SubToolID.p3d_locateRightArm2\n      unit.modelResource = this.rightArm2Model\n      unit.targetData.parentMatrix = posingData.rightArm1LocationInputData.childJointRootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.rightArm2HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    // Left leg\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"leftLeg1LocationInputData\"\n      unit.targetData = posingData.leftLeg1LocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.subToolID = SubToolID.p3d_locateLeftLeg1\n      unit.modelResource = this.leftLeg1Model\n      unit.targetData.parentMatrix = posingData.leftLeg1RootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.leftLeg1HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"rightLeg2LocationInputData\"\n      unit.targetData = posingData.leftLeg2LocationInputData\n      unit.dependentInputData = posingData.leftLeg1LocationInputData\n      unit.subToolID = SubToolID.p3d_locateLeftLeg2\n      unit.modelResource = this.leftLeg2Model\n      unit.targetData.parentMatrix = posingData.leftLeg1LocationInputData.childJointRootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.leftLeg2HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    // Right leg\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"rightLeg1LocationInputData\"\n      unit.targetData = posingData.rightLeg1LocationInputData\n      unit.dependentInputData = posingData.bodyLocationInputData\n      unit.subToolID = SubToolID.p3d_locateRightLeg1\n      unit.modelResource = this.rightLeg1Model\n      unit.targetData.parentMatrix = posingData.rightLeg1RootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.rightLeg1HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"rightLeg2LocationInputData\"\n      unit.targetData = posingData.rightLeg2LocationInputData\n      unit.dependentInputData = posingData.rightLeg1LocationInputData\n      unit.subToolID = SubToolID.p3d_locateRightLeg2\n      unit.modelResource = this.rightLeg2Model\n      unit.targetData.parentMatrix = posingData.rightLeg1LocationInputData.childJointRootMatrix\n      unit.targetData.hitTestSphereRadius = vec3.length(posingModel.rightLeg2HeadLocation)\n      drawingUnits.push(unit)\n    }\n\n    // Head twist\n    {\n      const unit = new JointPartDrawingUnit()\n      unit.name = \"headTwistInputData\"\n      unit.targetData = posingData.headTwistInputData\n      unit.dependentInputData = posingData.headRotationInputData\n      unit.subToolID = SubToolID.p3d_twistHead\n      unit.drawModel = false\n      unit.targetData.parentMatrix = posingData.neckSphereMatrix\n      unit.targetData.hitTestSphereRadius = posingModel.headTwistSphereSize\n      drawingUnits.push(unit)\n    }\n\n    posingLayer.runtime.drawingUnits = drawingUnits\n  }\n\n  clear() {\n\n    this.render.setDepthTest(true)\n    this.render.setCulling(true)\n    this.render.clearColorBufferDepthBuffer(0.0, 0.0, 0.0, 0.0)\n  }\n\n  prepareDrawingStructures(posingLayer: PosingLayer) {\n\n    if (posingLayer.runtime.drawingUnits == null) {\n\n      this.buildDrawingStructures(posingLayer)\n    }\n  }\n\n  drawManipulaters(posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    const posingData = posingLayer.posingData\n\n    this.caluculateCameraMatrix(posingData)\n\n    // Draws input manipulaters\n\n    this.drawHeadSphere(DrawImageType.visualImage, posingLayer, ctx)\n\n    for (const drawingUnit of posingLayer.runtime.drawingUnits) {\n\n      if (ctx.subtoolID == drawingUnit.subToolID) {\n\n        //this.drawAxis(drawingUnit.parentMatrix, 0.3, 0.5, ctx)\n\n        this.drawSphere(DrawImageType.visualImage\n          , drawingUnit.targetData.inputSideID\n          , drawingUnit.targetData.parentMatrix\n          , drawingUnit.targetData.hitTestSphereRadius\n          , posingLayer\n          , ctx)\n      }\n    }\n  }\n\n  drawPosingModel(posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    const posingData = posingLayer.posingData\n\n    this.caluculateCameraMatrix(posingData)\n\n    this.render.clearDepthBuffer()\n\n    if (this.isHeadDrawable(posingData)) {\n\n      this.setShaderParameters(posingData.headMatrix, false, this.posingFigureShader)\n      this.posingFigureShader.setAlpha(posingLayer.layerColor[3])\n      this.drawModel(this.posingFigureShader, this.headModel.model, this.imageResurces[0].image)\n    }\n\n    if (this.isBodyDrawable(posingData)) {\n\n      //mat4.multiply(this.tmpMatrix, posingData.bodyLocationInputData.bodyMatrix, posingModel.chestModelConvertMatrix)\n      //this.setShaderParameters(this.tmpMatrix, false, this.posingFigureShader)\n      //this.posingFigureShader.setAlpha(1.0)\n      //this.drawModel(this.chestModel.model, this.imageResurces[0].image)\n\n      //mat4.multiply(this.tmpMatrix, posingData.chestMatrix, posingModel.hipsModelConvertMatrix)\n      //this.setShaderParameters(this.tmpMatrix, false, this.posingFigureShader)\n      //this.posingFigureShader.setAlpha(1.0)\n      //this.drawModel(this.hipsModel.model, this.imageResurces[0].image)\n\n      const debugDraw = false\n      if (debugDraw) {\n        this.drawAxis(posingData.leftArm1RootMatrix, 0.1, 0.5)\n        this.drawAxis(posingData.rightArm1RootMatrix, 0.1, 0.5)\n        this.drawAxis(posingData.leftLeg1RootMatrix, 0.1, 0.5)\n        this.drawAxis(posingData.rightLeg1RootMatrix, 0.1, 0.5)\n      }\n    }\n\n    for (const drawingUnit of posingLayer.runtime.drawingUnits) {\n\n      if (drawingUnit.drawModel && drawingUnit.targetData.inputDone) {\n\n        if (drawingUnit.modelConvertMatrix != null) {\n\n          mat4.multiply(this.tmpMatrix, drawingUnit.targetData.matrix, drawingUnit.modelConvertMatrix)\n        }\n        else {\n\n          mat4.copy(this.tmpMatrix, drawingUnit.targetData.matrix)\n        }\n\n        this.setShaderParameters(this.tmpMatrix, false, this.posingFigureShader)\n        this.posingFigureShader.setAlpha(drawingUnit.visualModelAlpha * posingLayer.layerColor[3])\n        this.drawModel(this.posingFigureShader, drawingUnit.modelResource.model, this.imageResurces[0].image)\n\n        //this.drawAxis(drawingUnit.targetData.matrix, 0.2, 0.5, ctx)\n      }\n    }\n  }\n\n  drawPickingImage(posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    this.render.setBlendType(WebGLRenderBlendType.src)\n\n    this.drawHeadSphere(DrawImageType.depthImage, posingLayer, ctx)\n\n    this.drawBodySphere(DrawImageType.depthImage, posingLayer, ctx)\n\n    this.drawBodyRotationSphere(DrawImageType.depthImage, posingLayer, ctx)\n\n    for (const drawingUnit of posingLayer.runtime.drawingUnits) {\n\n      if (ctx.subtoolID == drawingUnit.subToolID) {\n\n        this.drawSphere(DrawImageType.depthImage\n          , drawingUnit.targetData.inputSideID\n          , drawingUnit.targetData.parentMatrix\n          , drawingUnit.targetData.hitTestSphereRadius\n          , posingLayer\n          , ctx)\n      }\n    }\n\n    this.render.setBlendType(WebGLRenderBlendType.blend)\n  }\n\n  getCurrentDrawingUnit(ctx: DocumentContext): JointPartDrawingUnit {\n\n    for (const drawingUnit of ctx.currentPosingLayer.runtime.drawingUnits) {\n\n      if (ctx.subtoolID == drawingUnit.subToolID) {\n\n        return drawingUnit\n      }\n    }\n\n    return null\n  }\n\n  private drawHeadSphere(drawImageType: DrawImageType, posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    const posingData = posingLayer.posingData\n    const posingModel = posingLayer.posingModel\n\n    const needsDrawing = (\n      posingData != null\n      && posingData.headLocationInputData.inputDone\n      && ctx.subtoolID == SubToolID.p3d_locateHead\n    )\n\n    if (!needsDrawing) {\n      return\n    }\n\n    mat4.copy(this.locationMatrix, posingData.rootMatrix)\n    const scale = posingModel.headSphereSize\n    mat4.scale(this.locationMatrix, this.locationMatrix, vec3.set(this.tempVec3, scale, scale, scale))\n\n    if (drawImageType == DrawImageType.visualImage) {\n\n      this.drawZTestSphere(this.locationMatrix, posingData.headRotationInputData.inputSideID, ctx)\n    }\n    else {\n\n      this.render.clearDepthBuffer()\n\n      this.drawZTestSphereDepth(this.locationMatrix, posingData.headRotationInputData.inputSideID)\n    }\n  }\n\n  private drawBodySphere(drawImageType: DrawImageType, posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    const posingData = posingLayer.posingData\n    const posingModel = posingLayer.posingModel\n\n    const needsDrawing = (\n      posingData != null\n      && posingData.headLocationInputData.inputDone\n      && ctx.subtoolID == SubToolID.p3d_locateBody\n    )\n\n    if (!needsDrawing) {\n      return\n    }\n\n    Maths.copyTranslation(this.tempVec3, posingData.chestRootMatrix)\n    mat4.identity(this.tmpMatrix)\n    mat4.translate(this.locationMatrix, this.tmpMatrix, this.tempVec3)\n\n    const scale = posingModel.bodySphereSize\n    mat4.scale(this.locationMatrix, this.locationMatrix, vec3.set(this.tempVec3, scale, scale, scale))\n\n    if (drawImageType == DrawImageType.visualImage) {\n\n      this.drawZTestSphere(this.locationMatrix, posingData.bodyLocationInputData.inputSideID, ctx)\n    }\n    else {\n\n      this.render.clearDepthBuffer()\n\n      this.drawZTestSphereDepth(this.locationMatrix, posingData.bodyLocationInputData.inputSideID)\n    }\n  }\n\n  private drawBodyRotationSphere(drawImageType: DrawImageType, posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    const posingData = posingLayer.posingData\n    const posingModel = posingLayer.posingModel\n\n    const needsDrawing = (\n      posingData != null\n      && posingData.bodyLocationInputData.inputDone\n      && ctx.subtoolID == SubToolID.p3d_locateHips\n    )\n\n    if (!needsDrawing) {\n      return\n    }\n\n    Maths.copyTranslation(this.tempVec3, posingData.bodyRotationCenterMatrix)\n    mat4.identity(this.tmpMatrix)\n    mat4.translate(this.locationMatrix, this.tmpMatrix, this.tempVec3)\n\n    const scale = posingModel.bodyRotationSphereSize\n    mat4.scale(this.locationMatrix, this.locationMatrix, vec3.set(this.tempVec3, scale, scale, scale))\n\n    if (drawImageType == DrawImageType.visualImage) {\n\n      this.drawZTestSphere(this.locationMatrix, posingData.bodyRotationInputData.inputSideID, ctx)\n    }\n    else {\n\n      this.render.clearDepthBuffer()\n\n      this.drawZTestSphereDepth(this.locationMatrix, posingData.bodyRotationInputData.inputSideID)\n    }\n  }\n\n  private drawSphere(drawImageType: DrawImageType, inputSideID: InputSideID, rootMatrix: Mat4, scale: float, posingLayer: PosingLayer, ctx: DocumentContext) {\n\n    Maths.copyTranslation(this.tempVec3, rootMatrix)\n    mat4.identity(this.tmpMatrix)\n    mat4.translate(this.locationMatrix, this.tmpMatrix, this.tempVec3)\n\n    mat4.scale(this.locationMatrix, this.locationMatrix, vec3.set(this.tempVec3, scale, scale, scale))\n\n    if (drawImageType == DrawImageType.visualImage) {\n\n      this.drawZTestSphere(this.locationMatrix, inputSideID, ctx)\n    }\n    else {\n\n      this.render.clearDepthBuffer()\n\n      this.drawZTestSphereDepth(this.locationMatrix, inputSideID)\n    }\n  }\n\n  private isHeadDrawable(posingData: PosingData): boolean {\n\n    return (posingData != null\n      && (posingData.headLocationInputData.inputDone\n        || posingData.headRotationInputData.inputDone))\n  }\n\n  private isBodyDrawable(posingData: PosingData): boolean {\n\n    return (posingData != null\n      && posingData.bodyLocationInputData.inputDone\n    )\n  }\n\n  private isLeftArm1Drawable(posingData: PosingData): boolean {\n\n    return (posingData != null\n      && posingData.leftArm1LocationInputData.inputDone\n    )\n  }\n\n  private isRightArm1Drawable(posingData: PosingData): boolean {\n\n    return (posingData != null\n      && posingData.rightArm1LocationInputData.inputDone\n    )\n  }\n\n  private isLeftLeg1Drawable(posingData: PosingData): boolean {\n\n    return (posingData != null\n      && posingData.leftLeg1LocationInputData.inputDone\n    )\n  }\n\n  private isRightLeg1Drawable(posingData: PosingData): boolean {\n\n    return (posingData != null\n      && posingData.rightLeg1LocationInputData.inputDone\n    )\n  }\n\n  private setShaderParameters(locationMatrix: Mat4, flipSide: boolean, shader: PosingFigureShader) {\n\n    mat4.copy(this.modelMatrix, locationMatrix)\n\n    const wnd = this.webglWindow\n    const cullingBackFace = !wnd.mirrorX\n\n    if (flipSide) {\n\n      mat4.scale(this.modelMatrix, this.modelMatrix, vec3.set(this.tempVec3, 1.0, -1.0, 1.0))\n      //cullingBackFace = !cullingBackFace\n    }\n\n    this.render.setCullingBackFace(cullingBackFace)\n\n    mat4.multiply(this.modelViewMatrix, this.viewMatrix, this.modelMatrix)\n\n    mat4.copy(this.normalMatrix, this.modelViewMatrix)\n    this.normalMatrix[12] = 0.0\n    this.normalMatrix[13] = 0.0\n    this.normalMatrix[14] = 0.0\n\n    if (flipSide) {\n\n      mat4.scale(this.normalMatrix, this.normalMatrix, vec3.set(this.tempVec3, -1.0, -1.0, -1.0))\n    }\n\n    this.render.setShader(shader)\n\n    shader.setProjectionMatrix(this.projectionMatrix)\n    shader.setModelViewMatrix(this.modelViewMatrix)\n    shader.setNormalMatrix(this.normalMatrix)\n  }\n\n  private drawZTestSphere(locationMatrix: Mat4, inputSideID: InputSideID, ctx: DocumentContext) {\n\n    const modelResource: ModelResource = this.zTestShpereModel\n\n    const flipSide = (inputSideID == InputSideID.back)\n    this.setShaderParameters(locationMatrix, flipSide, this.posingFigureShader)\n\n    if (this.isHeadDrawable(ctx.currentPosingData)) {\n      this.posingFigureShader.setAlpha(0.3)\n    }\n    else {\n      this.posingFigureShader.setAlpha(0.8)\n    }\n\n    this.drawModel(this.posingFigureShader, modelResource.model, this.imageResurces[0].image)\n\n    this.render.setCullingBackFace(true)\n  }\n\n  private drawZTestSphereDepth(locationMatrix: Mat4, inputSideID: InputSideID) {\n\n    const flipSide = (inputSideID == InputSideID.back)\n    this.setShaderParameters(locationMatrix, flipSide, this.depthShader)\n\n    this.drawModel(this.depthShader, this.zTestShpereModel.model, this.imageResurces[0].image)\n\n    this.drawModel(this.depthShader, this.zTestShpereEdgeModel.model, this.imageResurces[0].image)\n  }\n\n  private drawAxis(locationMatrix: Mat4, scale: float, alpha: float) {\n\n    mat4.copy(this.modelMatrix, locationMatrix)\n    mat4.scale(this.modelMatrix, this.modelMatrix, vec3.set(this.tempVec3, scale, scale, scale))\n\n    this.setShaderParameters(this.modelMatrix, false, this.posingFigureShader)\n\n    this.posingFigureShader.setAlpha(alpha)\n\n    this.drawModel(this.posingFigureShader, this.axisModel.model, this.imageResurces[0].image)\n  }\n\n  private drawModel(shader: PosingFigureShader, model: RenderModel, image: RenderImage) {\n\n    shader.setBuffers(model, [image])\n\n    this.render.activeTexture(image)\n\n    this.render.drawElements(model)\n  }\n\n  caluculateCameraMatrix(posingData: PosingData) {\n\n    const wnd = this.webglWindow\n    const real3DViewHalfWidth = posingData.real3DViewMeterPerPixel * (wnd.height / 2.0)\n\n    // Camera position\n    vec3.set(this.lookatLocation, 0.0, -1.0, 0.0)\n    vec3.set(this.upVector, 0.0, 0.0, 1.0)\n    vec3.set(this.eyeLocation, 0.0, 0.0, 0.0)\n\n    // 2D scale\n    const viewScale = wnd.viewScale\n\n    // Projection\n    const orthoWidth = real3DViewHalfWidth / viewScale\n    mat4.ortho(this.real3DProjectionMatrix, -real3DViewHalfWidth, real3DViewHalfWidth, -real3DViewHalfWidth, real3DViewHalfWidth, 0.1, 10.0)\n    mat4.ortho(this.projectionMatrix, -orthoWidth, orthoWidth, -orthoWidth, orthoWidth, 0.1, 10.0)\n\n    // 2D rendering\n    wnd.caluclateGLViewMatrix(this.tmpMatrix)\n    mat4.multiply(this.projectionMatrix, this.tmpMatrix, this.projectionMatrix)\n\n    mat4.invert(this.projectionInvMatrix, this.projectionMatrix)\n\n    mat4.lookAt(this.viewMatrix, this.eyeLocation, this.lookatLocation, this.upVector)\n\n    mat4.invert(this.cameraMatrix, this.viewMatrix)\n  }\n\n  calculate3DLocationFrom2DLocation(result: Vec3, real2DLocation: Vec3, depth: float, posingData: PosingData) {\n\n    const wnd = this.webglWindow\n\n    this.caluculateCameraMatrix(posingData) // TODO: 毎回実行する必要はないため高速化を考える\n\n    vec3.transformMat4(this.screenLocation, real2DLocation, wnd.transformMatrix)\n\n    const viewHalfWidth = wnd.width / 2\n    const viewHalfHeight = wnd.height / 2\n    this.screenLocation[0] = (this.screenLocation[0] - viewHalfWidth) / viewHalfWidth\n    this.screenLocation[1] = -(this.screenLocation[1] - viewHalfHeight) / viewHalfHeight\n    this.screenLocation[2] = 0.0\n\n    vec3.transformMat4(this.invProjectedVec3, this.screenLocation, this.projectionInvMatrix)\n    this.invProjectedVec3[2] = -depth\n\n    vec3.transformMat4(result, this.invProjectedVec3, this.cameraMatrix)\n  }\n\n  calculate2DLocationFrom3DLocation(result: Vec3, real3DLocation: Vec3, posingData: PosingData): float {\n\n    const wnd = this.webglWindow\n\n    this.caluculateCameraMatrix(posingData) // TODO: 毎回実行する必要はないため高速化を考える\n\n    vec3.transformMat4(result, real3DLocation, this.viewMatrix)\n\n    const depth = result[2]\n\n    vec3.transformMat4(result, result, this.real3DProjectionMatrix)\n\n    result[0] *= (wnd.height / 2.0)\n    result[1] *= -(wnd.height / 2.0)\n\n    return depth\n  }\n\n  pick3DLocationFromDepthImage(result: Vec3, location2d: Vec3, posingData: PosingData, pickingWindow: CanvasWindow, maxDepth: float): boolean {\n\n    vec3.transformMat4(this.tempVec3, location2d, pickingWindow.transformMatrix)\n\n    if (this.tempVec3[0] < 0 || this.tempVec3[0] >= pickingWindow.width\n      || this.tempVec3[1] < 0 || this.tempVec3[1] >= pickingWindow.height) {\n\n      return false\n    }\n\n    const imageData = pickingWindow.context.getImageData(Math.floor(this.tempVec3[0]), Math.floor(this.tempVec3[1]), 1, 1)\n    const r = imageData.data[0]\n    const g = imageData.data[1]\n    const b = imageData.data[2]\n\n    if (r == 0 && g == 0 && b == 0) {\n\n      return false\n    }\n\n    let depth = (r / 255) + (g / Math.pow(255, 2)) + (b / Math.pow(255, 3))\n\n    depth *= maxDepth\n\n    this.calculate3DLocationFrom2DLocation(result, location2d, depth, posingData)\n\n    return true\n  }\n}\n\nexport class PosingFigureShader extends RenderShader {\n\n  protected aPosition = -1\n  protected aNormal = -1\n  protected aTexCoord = -1\n\n  protected uTexture0: WebGLUniformLocation = null\n  protected uNormalMatrix: WebGLUniformLocation = null\n  protected uAlpha: WebGLUniformLocation = null\n\n  initializeVertexSourceCode() {\n\n    this.vertexShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uPMatrix;\nuniform mat4 uMVMatrix;\nuniform mat4 uNormalMatrix;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n\n  gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 1.0);\n\n  vPosition = (uMVMatrix * vec4(aPosition, 1.0)).xyz;\n  vNormal = (uNormalMatrix * vec4(aNormal, 1.0)).xyz;\n  vTexCoord = aTexCoord;\n}\n`\n  }\n\n  initializeFragmentSourceCode() {\n\n    this.fragmentShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\n\nuniform sampler2D uTexture0;\nuniform float uAlpha;\n\nvoid main(void) {\n\n  vec3  directionalLight = normalize(vec3(0.0, 1.0, 1.0));\n\n  vec3  nnormal = normalize(vNormal);\n  float directional = clamp(dot(nnormal, directionalLight), 0.0, 1.0);\n\n  vec3  viewVec = normalize(vPosition);\n  float specular = pow(max(dot(nnormal, normalize(directionalLight - viewVec)), 0.0), 5.0);\n\n  vec4 texColor = texture2D(uTexture0, vTexCoord);\n  gl_FragColor = vec4(texColor.rgb * 0.2 + texColor.rgb * directional * 0.8, texColor.a * uAlpha);\n\n}\n`\n  }\n\n  initializeAttributes() {\n\n    this.initializeAttributes_RenderShader()\n    this.initializeAttributes_PosingFigureShader()\n  }\n\n  initializeAttributes_PosingFigureShader() {\n\n    this.aPosition = this.getAttribLocation('aPosition')\n    this.aNormal = this.getAttribLocation('aNormal')\n    this.aTexCoord = this.getAttribLocation('aTexCoord')\n\n    this.uTexture0 = this.getUniformLocation('uTexture0')\n\n    this.uNormalMatrix = this.getUniformLocation('uNormalMatrix')\n    this.uAlpha = this.getUniformLocation('uAlpha')\n  }\n\n  setBuffers(model: RenderModel, images: RenderImage[]) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    const gl = this.gl\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, model.vertexBuffer)\n\n    this.enableVertexAttributes()\n    this.resetVertexAttribPointerOffset()\n\n    this.vertexAttribPointer(this.aPosition, 3, gl.FLOAT, model.vertexDataStride)\n    this.vertexAttribPointer(this.aNormal, 3, gl.FLOAT, model.vertexDataStride)\n    this.vertexAttribPointer(this.aTexCoord, 2, gl.FLOAT, model.vertexDataStride)\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.indexBuffer)\n\n    gl.activeTexture(gl.TEXTURE0)\n    gl.bindTexture(gl.TEXTURE_2D, images[0].texture)\n    gl.uniform1i(this.uTexture0, 0)\n  }\n\n  setNormalMatrix(matrix: Mat4) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.uniformMatrix4fv(this.uNormalMatrix, false, matrix)\n  }\n\n  setAlpha(alpha: float) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.uniform1f(this.uAlpha, alpha)\n  }\n}\n\nexport class DepthShader extends PosingFigureShader {\n\n  uMaxDepth: WebGLUniformLocation = null\n\n  initializeFragmentSourceCode() {\n\n    this.fragmentShaderSourceCode = `\n\n${this.floatPrecisionDefinitionCode}\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\n\nuniform sampler2D uTexture0;\n\nuniform float uMaxDepth;\nuniform float uAlpha;\n\nvoid main(void) {\n\n  float z1 = (-vPosition.z) / uMaxDepth * 255.0;\n  float z2 = fract(z1) * 255.0;\n  float z3 = fract(z2) * 255.0;\n\n  float r = floor(z1) / 255.0;\n  float g = floor(z2) / 255.0;\n  float b = floor(z3) / 255.0;\n\n  gl_FragColor = vec4(r, g, b , 1.0);\n}\n`\n  }\n\n  initializeAttributes() {\n\n    this.initializeAttributes_RenderShader()\n    this.initializeAttributes_PosingFigureShader()\n    this.initializeAttributes_DepthShader()\n  }\n\n  initializeAttributes_DepthShader() {\n\n    this.uMaxDepth = this.getUniformLocation('uMaxDepth')\n  }\n\n  setMaxDepth(depth: float) {\n\n    if (this.isDisabled()) {\n      return\n    }\n\n    this.gl.uniform1f(this.uMaxDepth, depth)\n  }\n}\n","﻿import { Layer, LayerTypeID, Layer_RuntimeProperty } from './layer'\nimport { ImageResource } from '../posing3d'\n\nexport class ImageFileReferenceLayer extends Layer {\n\n  type = LayerTypeID.imageFileReferenceLayer\n\n  imageFilePath: string = ''\n  location = vec3.fromValues(0.0, 0.0, 0.0)\n  rotation = vec3.fromValues(0.0, 0.0, 0.0)\n  scale = vec3.fromValues(1.0, 1.0, 1.0)\n  imageFirstLoading = true\n\n  // runtime\n  runtime = new ImageFileReferenceLayer_RuntimeProperty()\n\n  static isImageFileReferenceLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && layer.type == LayerTypeID.imageFileReferenceLayer\n    )\n  }\n\n  static isLoaded(layer: ImageFileReferenceLayer): boolean {\n\n    return (layer.runtime.imageResource.loaded)\n  }\n}\n\nexport class ImageFileReferenceLayer_RuntimeProperty extends Layer_RuntimeProperty {\n\n  imageResource = new ImageResource()\n\n  adjustingLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  adjustingRotation = vec3.fromValues(0.0, 0.0, 0.0)\n  adjustingScale = vec3.fromValues(1.0, 1.0, 1.0)\n}\n","﻿import { float } from \"../common-logics\"\nimport { ModelResource } from \"../posing3d\"\nimport { SubToolID } from \"../tool\"\nimport { Layer, LayerTypeID, Layer_RuntimeProperty } from \"./layer\"\nimport { VectorStroke } from \"./vector_layer\"\n\nexport class PosingModel {\n\n  // Head to body\n  headSphereSize = 0.12 // 14cm\n  headTwistSphereSize = 0.18 //\n  headCenterLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  headTopLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  headTopToNeckVector = vec3.fromValues(0.0, 0.0, 0.0)\n\n  bodySphereSize = 0.30 // 44cm\n  bodySphereLocation = vec3.fromValues(0.0, -0.03, -0.19)\n  neckSphereLocation = vec3.fromValues(0.0, -0.03, -0.17)\n\n  shoulderSphereLocation = vec3.fromValues(0.0, -0.03, -0.17)\n\n  bodyRotationSphereSize = 0.15 // 11cm\n  bodyRotationSphereLocation = vec3.fromValues(0.0, 0.0, -0.31)\n\n  hipsSphereSize = 0.30 // 44cm\n\n  // Arms\n  leftArm1Location = vec3.fromValues(-0.130, 0.0, -0.05)\n  rightArm1Location = vec3.fromValues(+0.130, 0.0, -0.05)\n\n  leftArm1HeadLocation = vec3.fromValues(0.0, 0.0, -0.27)\n  rightArm1HeadLocation = vec3.fromValues(0.0, 0.0, -0.27)\n\n  leftArm2HeadLocation = vec3.fromValues(0.0, 0.0, -0.27)\n  rightArm2HeadLocation = vec3.fromValues(0.0, 0.0, -0.27)\n\n  // Legs\n  leftLeg1Location = vec3.fromValues(-0.11, 0.0, -0.46)\n  rightLeg1Location = vec3.fromValues(+0.11, 0.0, -0.46)\n\n  leftLeg1HeadLocation = vec3.fromValues(0.0, 0.0, -0.39)\n  rightLeg1HeadLocation = vec3.fromValues(0.0, 0.0, -0.39)\n\n  leftLeg2HeadLocation = vec3.fromValues(0.0, 0.0, -0.39)\n  rightLeg2HeadLocation = vec3.fromValues(0.0, 0.0, -0.39)\n\n  // runtime\n  chestModelConvertMatrix = mat4.create()\n  hipsModelConvertMatrix = mat4.create()\n}\n\nexport class PosingModelBoneInputSetting {\n\n  inputName = ''\n  inputType = '' //  baseSize, direction\n  modelName = ''\n  dependentInputName = ''\n}\n\nexport enum InputSideID {\n  none = 0,\n  front = 1,\n  back = 2\n}\n\nexport class PosingInputData {\n\n  inputDone = false\n\n  // runtime\n  parentMatrix: Mat4 = null\n  hitTestSphereRadius: float = 0.0\n}\n\nexport class HeadLocationInputData extends PosingInputData {\n\n  center = vec3.fromValues(0.0, 0.0, 0.0)\n  radius = 0.0\n  editLine: VectorStroke = null\n\n  matrix = mat4.create()\n\n  headMatrix = mat4.create()\n  bodyRootMatrix = mat4.create()\n}\n\nexport class DirectionInputData extends PosingInputData {\n\n  inputSideID = InputSideID.front\n  inputLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  inputLocation2D = vec3.fromValues(0.0, 0.0, 0.0)\n\n  directionInputDone = false\n  rollInputDone = false\n  rollInputLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  rollInputAngle = 0.0\n\n  matrix = mat4.create()\n}\n\nexport class HeadRotationInputData extends DirectionInputData {\n\n  neckSphereMatrix = mat4.create()\n}\n\nexport class HeadTwistInputData extends DirectionInputData {\n\n  tempInputLocation = vec3.fromValues(0.0, 0.0, 0.0)\n}\n\nexport class BodyLocationInputData extends DirectionInputData {\n\n  bodyMatrix = mat4.create()\n\n  rotationCenterMatrix = mat4.create()\n\n  leftArm1RootMatrix = mat4.create()\n  rightArm1RootMatrix = mat4.create()\n  leftLeg1RootMatrix = mat4.create()\n  rightLeg1RootMatrix = mat4.create()\n}\n\nexport class BodyRotationInputData extends DirectionInputData {\n\n  inputSideID = InputSideID.front\n  inputLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  matrix = mat4.create()\n}\n\nexport class JointPartInputData extends DirectionInputData {\n\n  childJointRootMatrix = mat4.create()\n}\n\nexport class PosingData {\n\n  real3DViewHalfWidth = 1.0\n  real3DViewMeterPerPixel = 1.0\n  real3DModelDistance = 2.0\n\n  rootMatrix = mat4.create()\n\n  headMatrix = mat4.create()\n  headTopMatrix = mat4.create()\n  neckSphereMatrix = mat4.create()\n\n  chestRootMatrix = mat4.create()\n  chestMatrix = mat4.create()\n\n  shoulderRootMatrix = mat4.create()\n\n  hipsRootMatrix = mat4.create()\n  hipsMatrix = mat4.create()\n\n  bodyRotationCenterMatrix = mat4.create()\n\n  leftArm1RootMatrix = mat4.create()\n  rightArm1RootMatrix = mat4.create()\n  leftLeg1RootMatrix = mat4.create()\n  rightLeg1RootMatrix = mat4.create()\n\n  headLocationInputData = new HeadLocationInputData()\n  headRotationInputData = new JointPartInputData()\n  headTwistInputData = new HeadTwistInputData()\n\n  bodyLocationInputData = new JointPartInputData()\n  bodyRotationInputData = new BodyRotationInputData()\n\n  hipsLocationInputData = new JointPartInputData()\n\n  leftShoulderLocationInputData = new JointPartInputData()\n  rightShoulderLocationInputData = new JointPartInputData()\n\n  leftArm1LocationInputData = new JointPartInputData()\n  leftArm2LocationInputData = new JointPartInputData()\n\n  rightArm1LocationInputData = new JointPartInputData()\n  rightArm2LocationInputData = new JointPartInputData()\n\n  leftLeg1LocationInputData = new JointPartInputData()\n  leftLeg2LocationInputData = new JointPartInputData()\n\n  rightLeg1LocationInputData = new JointPartInputData()\n  rightLeg2LocationInputData = new JointPartInputData()\n}\n\nexport class JointPartDrawingUnit {\n\n  name = \"\"\n\n  targetData: DirectionInputData = null\n\n  dependentInputData: PosingInputData = null\n\n  subToolID: SubToolID\n\n  drawModel = true\n  modelResource: ModelResource = null\n  modelConvertMatrix: Mat4 = null\n  visualModelAlpha = 1.0\n  hitTestSphereAlpha = 0.5\n}\n\nexport class PosingLayer_RuntimeProperty extends Layer_RuntimeProperty {\n\n  drawingUnits: JointPartDrawingUnit[] = null\n}\n\nexport class PosingLayer extends Layer {\n\n  type = LayerTypeID.posingLayer\n\n  posingModel = new PosingModel()\n  posingData = new PosingData()\n\n  // runtime\n  runtime = new PosingLayer_RuntimeProperty()\n\n  static isPosingLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && layer.type == LayerTypeID.posingLayer\n    )\n  }\n}\n","﻿import { VectorLayer, VectorLayer_RuntimeProperty } from './vector_layer'\nimport { int } from '../common-logics'\nimport { Layer, LayerTypeID } from './layer'\n\nexport class VectorLayerReferenceLayer_RuntimeProperty extends VectorLayer_RuntimeProperty {\n\n  referenceLayer: VectorLayer = null\n}\n\nexport class VectorLayerReferenceLayer extends VectorLayer {\n\n  type = LayerTypeID.vectorLayerReferenceLayer\n\n  // runtime\n  runtime = new VectorLayerReferenceLayer_RuntimeProperty()\n\n  // file only\n  referenceLayerID: int\n\n  static isVectorLayerReferenceLayer(layer: Layer): boolean {\n\n    return (\n      layer != null\n      && (layer.type == LayerTypeID.vectorLayerReferenceLayer\n      )\n    )\n  }\n}\n","﻿import { SubToolContext } from \"../context\"\nimport { AutoFillLayer, Layer, VectorLayer, VectorLayerGeometry, VectorStrokeGroup } from \"../document-data\"\n\nexport enum PostUpdateSituationTypeID {\n\n  changesKeepingObjectShapes,\n  changesObjectShapes,\n  addObjects,\n  deleteObjects,\n}\n\nexport class DefferedProcessFlagging {\n\n  postUpdate_geometrys: VectorLayerGeometry[] = []\n  postUpdate_strokeGroups: VectorStrokeGroup[] = []\n  postUpdate_layers: Layer[] = []\n\n  lazyUpdate_strokeGroups: VectorStrokeGroup[] = []\n  lazyUpdate_layers: Layer[] = []\n\n  addGeometryForDeletingEmpties(target_geometry: VectorLayerGeometry) {\n\n    this.postUpdate_geometrys.push(target_geometry)\n  }\n\n  addGroup(target_layer: Layer, target_strokeGroup: VectorStrokeGroup, postUpdateStrategyType: PostUpdateSituationTypeID) {\n\n    if (postUpdateStrategyType != PostUpdateSituationTypeID.changesKeepingObjectShapes) {\n\n      this.postUpdate_strokeGroups.push(target_strokeGroup)\n    }\n\n    this.lazyUpdate_strokeGroups.push(target_strokeGroup)\n\n    this.addLayer(target_layer)\n  }\n\n  addLayer(target_layer: Layer) {\n\n    // 登録済みの場合スキップ\n    if (this.lazyUpdate_layers.find(ly => ly == target_layer)) {\n      return\n    }\n\n    this.lazyUpdate_layers.push(target_layer)\n\n    // 同階層の影響を受けるレイヤーを追加\n    if (VectorLayer.isVectorStrokeLayer(target_layer)) {\n\n      for (const child of target_layer.runtime.parentLayer.childLayers) {\n\n        if (VectorLayer.isPointBrushFillLayer(child)) {\n\n          this.postUpdate_layers.push(child)\n        }\n        else if (AutoFillLayer.isAutoFillLayer(child)) {\n\n          this.lazyUpdate_layers.push(child)\n        }\n      }\n    }\n  }\n\n  setFlags(ctx: SubToolContext) {\n\n    if (this.postUpdate_geometrys.length > 0) {\n\n      for (const geometry of this.postUpdate_geometrys) {\n\n        VectorLayerGeometry.setPostUpdateNeeded(geometry)\n      }\n\n      ctx.main.setPostUpdateNeeded()\n    }\n\n    if (this.postUpdate_layers.length > 0) {\n\n      for (const layer of this.postUpdate_layers) {\n\n        Layer.setPostUpdateNeeded(layer)\n\n        ctx.main.setRedrawDrawPathForLayer(layer)\n      }\n\n      ctx.main.setPostUpdateNeeded()\n    }\n\n    if (this.postUpdate_strokeGroups.length > 0) {\n\n      for (const group of this.postUpdate_strokeGroups) {\n\n        VectorStrokeGroup.setPostUpdateNeeded(group)\n      }\n\n      ctx.main.setPostUpdateNeeded()\n    }\n\n    if (this.lazyUpdate_strokeGroups.length > 0) {\n\n      for (const group of this.lazyUpdate_strokeGroups) {\n\n        VectorStrokeGroup.setLazyUpdateNeeded(group)\n      }\n\n      ctx.main.setLazyUpdateNeeded()\n    }\n\n    if (this.lazyUpdate_layers.length > 0) {\n\n      for (const layer of this.lazyUpdate_layers) {\n\n        Layer.setLazyUpdateNeeded(layer)\n\n        ctx.main.setRedrawDrawPathForLayer(layer)\n      }\n\n      ctx.main.setLazyUpdateNeeded()\n    }\n  }\n}\n","﻿import { Platform } from '../../platform'\n\nexport class LazyUpdateState {\n\n  needsStartingLazyUpdate = false\n\n  processedIndex = -1\n  lastResetTime = 0\n  limitTime = 100\n  partialProcessMaxTime = 100 // TODO: 適当な値を設定する\n  waitTime = 500\n  isLazyDrawingFinished = false\n  isFirstTime = true\n  isFinished = false\n  isRendered = false\n\n  processStartTime = 0\n\n  resetLazyUpdate() {\n\n    this.needsStartingLazyUpdate = false\n    this.isFirstTime = true\n    this.isFinished = false\n    this.isRendered = false\n  }\n\n  setLazyUpdate() {\n\n    this.needsStartingLazyUpdate = true\n    this.isFinished = false\n  }\n\n  startLazyCalculation() {\n\n    this.needsStartingLazyUpdate = false\n    this.processedIndex = -1\n    this.lastResetTime = Platform.getCurrentTime()\n    this.isLazyDrawingFinished = false\n    this.isFirstTime = true\n    this.isFinished = false\n    this.isRendered = false\n  }\n\n  finishLazyUpdate() {\n\n    this.isFinished = true\n    this.isRendered = true\n  }\n\n  isLazyDrawBigining(): boolean {\n\n    return (this.processedIndex == -1)\n  }\n\n  isLazyUpdateWaiting(): boolean {\n\n    return (!this.isFinished\n      && this.lastResetTime + this.waitTime > Platform.getCurrentTime())\n  }\n\n  startPartialProcess() {\n\n    this.processStartTime = Platform.getCurrentTime()\n  }\n\n  isOverPartialProcessMaxTime(): boolean {\n\n    const currentTime = Platform.getCurrentTime()\n\n    return (currentTime - this.processStartTime >= this.partialProcessMaxTime)\n  }\n\n  finishLazyDrawing() {\n\n    this.isLazyDrawingFinished = true\n  }\n}\n","﻿import { int } from 'app/common-logics'\nimport { DocumentContext, SubToolContext } from '../context'\nimport { Layer } from '../document-data'\nimport { LayerWindow } from '../ui'\nimport { ViewLayerListItem, ViewLayerListLogic } from './view-layer-list'\n\nexport class LayerHighlightingLogic {\n\n  private viewLayerList: ViewLayerListLogic = null\n\n  private selectCurrentLayerAnimationStarted = false\n  private selectCurrentLayerAnimationLayer: Layer = null\n  private selectCurrentLayerAnimationTime = 0.0\n  private selectCurrentLayerAnimationTimeMax = 0.4\n\n  link(viewLayerList: ViewLayerListLogic) {\n\n    this.viewLayerList = viewLayerList\n  }\n\n  startShowingLayerItem(item: ViewLayerListItem, ctx: SubToolContext) {\n\n    if (item == null) {\n      return\n    }\n\n    this.selectCurrentLayerAnimationLayer = item.layer\n    this.selectCurrentLayerAnimationTime = this.selectCurrentLayerAnimationTimeMax\n    this.selectCurrentLayerAnimationStarted = false\n\n    ctx.setRedrawMainWindowEditorWindow()\n    ctx.setRedrawWebGLWindow()\n    ctx.setRedrawLayerWindow()\n    ctx.setRedrawRibbonUI()\n  }\n\n  startShowingCurrentLayer(docContext: DocumentContext, ctx: SubToolContext) {\n\n    const item = this.viewLayerList.findItemForLayer(docContext, docContext.currentLayer)\n\n    this.startShowingLayerItem(item, ctx)\n  }\n\n  processHighlightingAnimation(elapsedTime: int, ctx: SubToolContext) {\n\n    if (this.selectCurrentLayerAnimationTime == 0) {\n      return\n    }\n\n    if (this.selectCurrentLayerAnimationStarted == false) {\n\n      this.selectCurrentLayerAnimationStarted = true\n      return\n    }\n\n    this.selectCurrentLayerAnimationTime -= elapsedTime / 1000.0\n\n    if (this.selectCurrentLayerAnimationTime <= 0) {\n\n      this.selectCurrentLayerAnimationTime = 0\n\n      ctx.setRedrawMainWindow()\n      ctx.setRedrawWebGLWindow()\n    }\n  }\n\n  isAnimatingLayer(layer: Layer): boolean {\n\n    return (layer == this.selectCurrentLayerAnimationLayer)\n  }\n\n  isAnimating(): boolean {\n\n    return (this.selectCurrentLayerAnimationTime > 0.0)\n  }\n}\n","import { float } from '../common-logics'\nimport { CanvasWindow } from '../render'\n\nexport interface ViewCanvasWindow {\n\n  view2DMatrix: Mat4\n  invView2DMatrix: Mat4\n}\n\nexport enum ViewPointerPressedState {\n  released = 0,\n  pressed = 1\n}\n\nexport class ViewPointerEventPointer {\n\n  identifier = -1\n  ageCount = 0\n  pressed = ViewPointerPressedState.released\n  offsetX = 0.0\n  offsetY = 0.0\n  currentLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  pressure = 0.0\n\n  dragging = new ViewPointerEventDragging()\n\n  isSamePointer(e: PointerEvent): boolean {\n\n    return (this.identifier == e.pointerId)\n  }\n\n  isFree(): boolean {\n\n    return !this.isActive()\n  }\n\n  isActive(): boolean {\n\n    return (this.identifier != -1)\n  }\n\n  isPressed(): boolean {\n\n    return (this.pressed != ViewPointerPressedState.released)\n  }\n\n  isActivePressed(): boolean {\n\n    return (this.isActive() && this.isPressed())\n  }\n\n  setActive(e: PointerEvent) {\n\n    this.identifier = e.pointerId\n    this.pressed = ViewPointerPressedState.released\n    this.ageCount = 0\n  }\n\n  setFree() {\n\n    this.identifier = -1\n    this.pressed = ViewPointerPressedState.released\n    this.ageCount = 0\n\n    // console.log(`setFree id:${this.identifier}`)\n  }\n\n  startDragging(wnd: ViewCanvasWindow, velocityScale: float) {\n\n    this.dragging.start(wnd, this.offsetX, this.offsetY, velocityScale)\n  }\n}\n\nexport class ViewPointerEventDragging {\n\n  dragBeforeTransformMatrix = mat4.create()\n\n  mouseDownOffset = vec3.fromValues(0.0, 0.0, 0.0)\n  mouseDownLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  currentLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  mouseOffset = vec3.fromValues(0.0, 0.0, 0.0)\n  mouseMovedOffset = vec3.fromValues(0.0, 0.0, 0.0)\n  mouseMovedVector = vec3.fromValues(0.0, 0.0, 0.0)\n\n  velocityScale = 1.0\n\n  tempVec3 = vec3.create()\n\n  start(wnd: ViewCanvasWindow, offsetX: float, offsetY: float, velocityScale: float) {\n\n    // offset\n\n    vec3.set(this.mouseOffset, offsetX, offsetY, 0.0)\n    vec3.copy(this.mouseDownOffset, this.mouseOffset)\n\n    // transformed location\n\n    mat4.copy(this.dragBeforeTransformMatrix, wnd.invView2DMatrix)\n\n    vec3.set(this.tempVec3, offsetX, offsetY, 0.0)\n    vec3.transformMat4(this.mouseDownLocation, this.tempVec3, this.dragBeforeTransformMatrix)\n\n    // reset moved values\n\n    vec3.set(this.mouseMovedOffset, 0.0, 0.0, 0.0)\n    vec3.set(this.mouseMovedVector, 0.0, 0.0, 0.0)\n\n    this.velocityScale = velocityScale\n  }\n\n  move(offsetX: float, offsetY: float) {\n\n    // offset\n\n    vec3.set(this.mouseOffset, offsetX, offsetY, 0.0)\n\n    vec3.subtract(this.mouseMovedOffset, this.mouseOffset, this.mouseDownOffset)\n\n    vec3.scale(this.mouseMovedOffset, this.mouseMovedOffset, this.velocityScale)\n\n    // transformed location\n\n    vec3.transformMat4(this.currentLocation, this.mouseOffset, this.dragBeforeTransformMatrix)\n\n    vec3.subtract(this.mouseMovedVector, this.mouseDownLocation, this.currentLocation)\n\n    vec3.scale(this.mouseMovedVector, this.mouseMovedVector, this.velocityScale)\n  }\n\n  isMoved() {\n\n    return (vec3.length(this.mouseMovedOffset) > 0.0)\n  }\n}\n\nexport class ViewPointerEvent {\n\n  window: CanvasWindow = null\n\n  location = vec3.fromValues(0.0, 0.0, 0.0)\n  offsetX = 0.0\n  offsetY = 0.0\n\n  button = 0\n  buttons = 0\n  wheelDelta = 0.0\n\n  isPointerMoved = false\n  isMouseDragging = false\n  mouseDownLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  mouseMovedVector = vec3.fromValues(0.0, 0.0, 0.0)\n\n  clickCount = 0\n  lastClickedOffset = vec3.fromValues(0.0, 0.0, 0.0)\n\n  mouseDownOffset = vec3.fromValues(0.0, 0.0, 0.0)\n  mouseMovedOffset = vec3.fromValues(0.0, 0.0, 0.0)\n\n  pointers: ViewPointerEventPointer[] = [\n    new ViewPointerEventPointer(), // for first finger\n    new ViewPointerEventPointer(), // for second finger\n    new ViewPointerEventPointer(), // for leaving and entering more than two times\n  ]\n\n  activePointers: ViewPointerEventPointer[] = []\n\n  tempVec3 = vec3.fromValues(0.0, 0.0, 0.0)\n\n  constructor(wnd: CanvasWindow) {\n\n    this.window = wnd\n  }\n\n  isLeftButtonPressing(): boolean {\n\n    return ((this.buttons & 0x1) != 0)\n  }\n\n  isRightButtonPressing(): boolean {\n\n    return ((this.buttons & 0x2) != 0)\n  }\n\n  isCenterButtonPressing(): boolean {\n\n    return ((this.buttons & 0x4) != 0)\n  }\n\n  isLeftButtonReleased(): boolean {\n\n    return !this.isLeftButtonPressing()\n  }\n\n  isRightButtonReleased(): boolean {\n\n    return !this.isRightButtonPressing()\n  }\n\n  isCenterButtonReleased(): boolean {\n\n    return !this.isCenterButtonPressing()\n  }\n}\n\nexport class PointerInputWindow extends CanvasWindow implements ViewCanvasWindow {\n\n  pointerEvent = new ViewPointerEvent(this)\n  view2DMatrix = mat4.create()\n  invView2DMatrix = mat4.create()\n}\n","﻿import { float } from \"../common-logics\"\nimport { PointerInputWindow, ViewCanvasWindow, ViewPointerEvent, ViewPointerEventPointer } from \"./view-pointer_event\"\n\nexport class ViewCoordinateLogic {\n\n  static tempVec3 = vec3.create()\n\n  private static calculateTransfomredLocation(result: Vec3, wnd: ViewCanvasWindow, x: float, y: float) {\n\n    vec3.set(this.tempVec3, x, y, 0.0)\n    vec3.transformMat4(result, this.tempVec3, wnd.invView2DMatrix)\n  }\n\n  static calculateTransfomredMouseParams(result: Vec3, e: ViewPointerEvent, wnd: PointerInputWindow) {\n\n    this.calculateTransfomredLocation(\n      e.location,\n      wnd,\n      e.offsetX,\n      e.offsetY\n    )\n\n    vec3.copy(result, e.location)\n  }\n\n  static calculateTransfomredTouchParams(result: Vec3, e: ViewPointerEventPointer, wnd: ViewCanvasWindow) {\n\n    this.calculateTransfomredLocation(\n      result,\n      wnd,\n      e.currentLocation[0],\n      e.currentLocation[1]\n    )\n  }\n}\n","﻿import { float, int } from '../common-logics'\nimport { DocumentContext } from '../context'\nimport { ViewCoordinateLogic } from './view-coordinate'\nimport { PointerInputWindow, ViewPointerEvent, ViewPointerEventPointer, ViewPointerPressedState } from './view-pointer_event'\n\nexport class PointerInputLogic {\n\n  private static tempVec3 = vec3.create()\n\n  static processSinglePointerEvent(\n    wnd: PointerInputWindow,\n    e: PointerEvent,\n    ctx: DocumentContext,\n    buttonDown: boolean,\n    buttonUp: boolean\n  ) {\n\n    const viewPointerEvent = wnd.pointerEvent\n\n    if (document.activeElement.nodeName == 'INPUT') {\n      (<HTMLInputElement>document.activeElement).blur()\n    }\n\n    viewPointerEvent.button = e.button\n    viewPointerEvent.buttons = e.buttons\n\n    if (buttonUp) {\n\n      viewPointerEvent.button = -1\n      viewPointerEvent.buttons = 0\n    }\n\n    viewPointerEvent.offsetX = e.offsetX * wnd.devicePixelRatio\n    viewPointerEvent.offsetY = e.offsetY * wnd.devicePixelRatio\n\n    ViewCoordinateLogic.calculateTransfomredMouseParams(viewPointerEvent.location, viewPointerEvent, wnd)\n    vec3.copy(ctx.mouseCursorLocation, viewPointerEvent.location)\n\n    if (buttonDown) {\n\n      viewPointerEvent.isPointerMoved = false\n    }\n\n    if (buttonDown) {\n\n      vec3.copy(viewPointerEvent.mouseDownLocation, viewPointerEvent.location)\n    }\n\n    if (!buttonDown && !buttonUp && !viewPointerEvent.isPointerMoved) {\n\n      const distance = vec3.distance(viewPointerEvent.location, viewPointerEvent.mouseDownLocation)\n      const threshold = wnd.getViewScaledLength(ctx.dragStartThresholdDistance)\n\n      if (distance >= threshold) {\n\n        viewPointerEvent.isPointerMoved = true\n      }\n    }\n  }\n\n  static processMultiPointerEvent(\n    wnd: PointerInputWindow,\n    e: PointerEvent,\n    buttonDown: boolean,\n    buttonUp: boolean\n  ) {\n\n    // if (buttonDown || buttonUp) {\n    //   console.debug(`processPointerEvent ${e.pointerId} ${buttonDown ? 'button down' : ''}${buttonUp ? 'button up' : ''}${!buttonDown && !buttonUp ? 'move' : ''}`)\n    // }\n    // console.debug(`processPointerEvent (${pointerEvent.location[0]} ${pointerEvent.location[1]})`)\n\n    let isPointerChanged = false\n    let lastUsed_Pointer: ViewPointerEventPointer | null = null\n\n    // Search a free pointer or last used pointer\n    for (const pointer of wnd.pointerEvent.pointers) {\n\n      if (pointer.isSamePointer(e)) {\n\n        lastUsed_Pointer = pointer\n        break\n      }\n    }\n\n    if (buttonUp) {\n\n      if (lastUsed_Pointer != null) {\n\n        // Cancel last used pointer for button up\n        lastUsed_Pointer.setFree()\n        isPointerChanged = true\n      }\n    }\n    else {\n\n      // Determine target pointer for this time input\n      let target_Pointer = lastUsed_Pointer\n\n      if (target_Pointer == null) {\n\n        let free_Pointer = wnd.pointerEvent.pointers.find(pointer => pointer.isFree())\n\n        if (!free_Pointer) {\n          free_Pointer = wnd.pointerEvent.pointers.at(-1)\n        }\n\n        if (free_Pointer) {\n\n          // console.log(`free_Pointer != null id:${e.pointerId}`)\n\n          // Use the free pointer found if there is no last used pointer\n          target_Pointer = free_Pointer\n          target_Pointer.setActive(e)\n          isPointerChanged = true\n        }\n      }\n\n      // Update target pointer\n      if (target_Pointer != null) {\n\n        target_Pointer.offsetX = wnd.pointerEvent.offsetX\n        target_Pointer.offsetY = wnd.pointerEvent.offsetY\n\n        vec3.copy(target_Pointer.currentLocation, wnd.pointerEvent.location)\n\n        target_Pointer.pressure = e.pressure\n\n        const pressedBefore = target_Pointer.pressed\n        if (buttonDown) {\n\n          target_Pointer.pressed = ViewPointerPressedState.pressed\n        }\n        else if (buttonUp) {\n\n          target_Pointer.pressed = ViewPointerPressedState.released\n        }\n\n        if (pressedBefore != target_Pointer.pressed) {\n\n          isPointerChanged = true\n        }\n      }\n    }\n\n    // Update priority\n    if (isPointerChanged) {\n\n      this.updatePointerStates(wnd.pointerEvent)\n    }\n\n    //console.debug(e.offsetX.toFixed(2) + ',' + e.offsetY.toFixed(2) + '  ' + pointerEvent.offsetX.toFixed(2) + ',' + this.pointerEvent.offsetY.toFixed(2))\n\n    // const texts: string[] = []\n    // for (let pointer of wnd.pointerEvent.activePointers) {\n    //   texts.push(`(${pointer.identifier} ${pointer.offsetX} ${pointer.offsetY} ${pointer.pressed} ${pointer.pressure} ${pointer.ageCount})`)\n    // }\n    // console.debug(`activePointers(${texts.length}) ${texts.join()}`)\n  }\n\n  static processMultiPointerLeaveEvent(\n    wnd: PointerInputWindow,\n    e: PointerEvent\n  ) {\n\n    const target_Pointer = wnd.pointerEvent.pointers.find(pointer => pointer.isSamePointer(e))\n\n    if (!target_Pointer) {\n      return\n    }\n\n    target_Pointer.setFree()\n\n    this.updatePointerStates(wnd.pointerEvent)\n  }\n\n  static cancelAllPointers(viewPointerEvent: ViewPointerEvent) {\n\n    viewPointerEvent.pointers.forEach(pointer => pointer.setFree())\n\n    this.updatePointerStates(viewPointerEvent)\n  }\n\n  static hasActivePointer(pointerId: int, viewPointerEvent: ViewPointerEvent) {\n\n    return (viewPointerEvent.activePointers.findIndex(\n      pointer => pointer.identifier == pointerId\n        // && pointer.pressed == ViewPointerPressedState.pressed\n      ) != -1)\n  }\n\n  private static updatePointerStates(viewPointerEvent: ViewPointerEvent) {\n\n    for (const pointer of viewPointerEvent.pointers) {\n      pointer.ageCount++\n    }\n\n    viewPointerEvent.pointers = viewPointerEvent.pointers\n      .sort((a, b) => { return a.ageCount - b.ageCount })\n\n    viewPointerEvent.activePointers = viewPointerEvent.pointers\n      .filter(pointer => pointer.isActivePressed())\n\n    // console.debug(pointerEvent.activePointers)\n  }\n\n  static getFirstActivePointer(viewPointerEvent: ViewPointerEvent): ViewPointerEventPointer | null {\n\n    let foundPointer: ViewPointerEventPointer | null = null\n\n    if (viewPointerEvent.activePointers.length > 0) {\n\n      foundPointer = viewPointerEvent.activePointers[0]\n    }\n    else {\n\n      foundPointer = viewPointerEvent.pointers.find(ptr => ptr.isActive()) ?? null\n    }\n\n    return foundPointer\n  }\n\n  static getWheelInfo(viewPointerEvent: ViewPointerEvent, e: MouseEvent) {\n\n    let wheelDelta = 0.0\n    if ('wheelDelta' in e) {\n\n      wheelDelta = e['wheelDelta']\n    }\n    else if ('deltaY' in e) {\n\n      wheelDelta = e['deltaY']\n    }\n    else if ('wheelDeltaY' in e) {\n\n      wheelDelta = e['wheelDeltaY']\n    }\n\n    if (wheelDelta > 0) {\n\n      wheelDelta = 1.0\n    }\n    else if (wheelDelta < 0) {\n\n      wheelDelta = -1.0\n    }\n\n    viewPointerEvent.wheelDelta = wheelDelta\n  }\n\n  static handleDoubleClick(viewPointerEvent: ViewPointerEvent, offsetX: float, offsetY: float): boolean {\n\n    if (viewPointerEvent.clickCount == 0) {\n\n      viewPointerEvent.clickCount++\n      viewPointerEvent.lastClickedOffset[0] = offsetX\n      viewPointerEvent.lastClickedOffset[1] = offsetY\n\n      setTimeout(() => {\n        viewPointerEvent.clickCount = 0\n      }, 350)\n\n      return false\n    }\n    else {\n\n      viewPointerEvent.clickCount = 0\n\n      if (Math.pow(offsetX - viewPointerEvent.lastClickedOffset[0], 2)\n        + Math.pow(offsetY - viewPointerEvent.lastClickedOffset[1], 2) < 9.0) {\n\n        return true\n      }\n      else {\n\n        return false\n      }\n    }\n  }\n\n  static startMouseDragging(viewPointerEvent: ViewPointerEvent) {\n\n    viewPointerEvent.isMouseDragging = true\n\n    vec3.copy(viewPointerEvent.mouseDownLocation, viewPointerEvent.location)\n    vec3.set(viewPointerEvent.mouseMovedVector, 0.0, 0.0, 0.0)\n\n    vec3.set(viewPointerEvent.mouseDownOffset, viewPointerEvent.offsetX, viewPointerEvent.offsetY, 0.0)\n    vec3.set(viewPointerEvent.mouseMovedOffset, 0.0, 0.0, 0.0)\n  }\n\n  static processMouseDragging(viewPointerEvent: ViewPointerEvent) {\n\n    if (!viewPointerEvent.isMouseDragging) {\n\n      return\n    }\n\n    vec3.subtract(viewPointerEvent.mouseMovedVector, viewPointerEvent.mouseDownLocation, viewPointerEvent.location)\n\n    vec3.set(this.tempVec3, viewPointerEvent.offsetX, viewPointerEvent.offsetY, 0.0)\n    vec3.subtract(viewPointerEvent.mouseMovedOffset, viewPointerEvent.mouseDownOffset, this.tempVec3)\n  }\n\n  static endMouseDragging(viewPointerEvent: ViewPointerEvent) {\n\n    // console.debug(`endMouseDragging`)\n\n    viewPointerEvent.isMouseDragging = false\n  }\n\n  static isPointerMovedOnDevice(viewPointerEvent: ViewPointerEvent, e: PointerEvent): boolean {\n\n    return (viewPointerEvent.offsetX != e.offsetX * viewPointerEvent.window.devicePixelRatio\n      || viewPointerEvent.offsetY != e.offsetY * viewPointerEvent.window.devicePixelRatio)\n  }\n}\n","﻿import { DocumentContext } from '../context'\nimport { Layer, VectorLayerGeometry, VectorLayerKeyframe, VectorLayer, VectorStrokeGroup, AutoFillLayerKeyframe, AutoFillLayer, KeyframeDataObject, AnimatableLayer } from '../document-data'\nimport { EditAnimationFrameLogic, LayerLogic } from '../document-logic'\nimport { int } from '../common-logics'\n\nexport class ViewKeyframeLayer {\n\n  layer: Layer = null\n  keyframe: KeyframeDataObject = null\n  vectorLayerKeyframe: VectorLayerKeyframe = null\n  autoFillLayerKeyframe: AutoFillLayerKeyframe = null\n  hasActualFrame = false\n\n  hasKeyframe(): boolean {\n\n    return (this.keyframe != null)\n  }\n\n  static forEachStrokeGroup(viewKeyframeLayers: ViewKeyframeLayer[], loopBodyFunction: (group: VectorStrokeGroup, layer?: VectorLayer) => void) {\n\n    for (const viewKeyframeLayer of viewKeyframeLayers) {\n\n      if (viewKeyframeLayer.vectorLayerKeyframe == null) {\n        continue\n      }\n\n      for (const unit of viewKeyframeLayer.vectorLayerKeyframe.geometry.units) {\n\n        for (const group of unit.groups) {\n\n          loopBodyFunction(group, <VectorLayer>viewKeyframeLayer.layer)\n        }\n      }\n    }\n  }\n\n  static forEachVectorGeometry(viewKeyframeLayers: ViewKeyframeLayer[], loopBodyFunction: (geometry: VectorLayerGeometry, layer?: VectorLayer) => void) {\n\n    for (const viewKeyframeLayer of viewKeyframeLayers) {\n\n      if (viewKeyframeLayer.vectorLayerKeyframe == null) {\n        continue\n      }\n\n      loopBodyFunction(viewKeyframeLayer.vectorLayerKeyframe.geometry, <VectorLayer>viewKeyframeLayer.layer)\n    }\n  }\n}\n\nexport class ViewKeyframe {\n\n  frame = 0\n  layers: ViewKeyframeLayer[] = []\n\n  static findViewKeyframe(viewKeyframes: ViewKeyframe[], frame: int): ViewKeyframe {\n\n    const keyframeIndex = ViewKeyframe.findViewKeyframeIndex(viewKeyframes, frame)\n\n    if (keyframeIndex != -1) {\n\n      return viewKeyframes[keyframeIndex]\n    }\n    else {\n\n      return null\n    }\n  }\n\n  static findViewKeyframeIndex(viewKeyframes: ViewKeyframe[], frame: int): int {\n\n    let resultIndex = 0\n\n    for (let index = 0; index < viewKeyframes.length; index++) {\n\n      if (viewKeyframes[index].frame > frame) {\n        break\n      }\n\n      resultIndex = index\n    }\n\n    return resultIndex\n  }\n\n  static findViewKeyframeLayerIndex(viewKeyFrame: ViewKeyframe, layer: Layer): int {\n\n    for (let index = 0; index < viewKeyFrame.layers.length; index++) {\n\n      if (viewKeyFrame.layers[index].layer == layer) {\n\n        return index\n      }\n    }\n\n    return -1\n  }\n\n  static findViewKeyframeLayer(viewKeyFrame: ViewKeyframe, layer: Layer): ViewKeyframeLayer {\n\n    const index = this.findViewKeyframeLayerIndex(viewKeyFrame, layer)\n\n    if (index != -1) {\n\n      return viewKeyFrame.layers[index]\n    }\n    else {\n\n      return null\n    }\n  }\n}\n\nexport class ViewKeyframeLogic {\n\n  collectViewKeyframesToContext(docContext: DocumentContext) {\n\n    // Collects layers\n\n    const layers = LayerLogic.collectLayers(docContext.documentData.rootLayer)\n\n    // Creates all view-keyframes.\n\n    const viewKeyFrames = this.collectKeyframes(layers)\n\n    // Collects layers for each view-keyframes\n\n    this.updateViewKeyframesForLayerReferences(viewKeyFrames, layers)\n\n    docContext.keyframes = viewKeyFrames\n\n    this.updateContextForViewKeyframeReferences(docContext, docContext.documentData.animationSettingData.currentTimeFrame)\n  }\n\n  updateContextForViewKeyframeReferences(docContext: DocumentContext, frame: int): boolean {\n\n    const viewKeyframes = docContext.keyframes\n\n    const keyframeIndex = ViewKeyframe.findViewKeyframeIndex(viewKeyframes, frame)\n\n    if (keyframeIndex == -1) {\n      return false\n    }\n\n    const last_currentViewKeyframe = docContext.currentViewKeyframe\n    const last_previousKeyframe = docContext.previousKeyframe\n    const last_nextKeyframe = docContext.nextKeyframe\n\n    docContext.currentViewKeyframe = viewKeyframes[keyframeIndex]\n\n    if (keyframeIndex - 1 >= 0) {\n\n      docContext.previousKeyframe = viewKeyframes[keyframeIndex - 1]\n    }\n    else {\n\n      docContext.previousKeyframe = null\n    }\n\n    if (keyframeIndex + 1 < viewKeyframes.length) {\n\n      docContext.nextKeyframe = viewKeyframes[keyframeIndex + 1]\n    }\n    else {\n\n      docContext.nextKeyframe = null\n    }\n\n    return (\n      docContext.currentViewKeyframe != last_currentViewKeyframe\n      || docContext.previousKeyframe != last_previousKeyframe\n      || docContext.nextKeyframe != last_nextKeyframe\n    )\n  }\n\n  private collectKeyframes(layers: Layer[]): ViewKeyframe[] {\n\n    const viewKeyFrames: ViewKeyframe[] = []\n\n    const keyframeDictionary = new Map<string, boolean>()\n\n    for (const layer of layers) {\n\n      if (EditAnimationFrameLogic.isAnimatableLayer(layer)) {\n\n        const animatableLayer = <AnimatableLayer>(layer)\n\n        this.registerKeyframes(viewKeyFrames, keyframeDictionary, animatableLayer.keyframes)\n      }\n    }\n\n    const result = viewKeyFrames.sort((a, b) => { return a.frame - b.frame })\n\n    return result\n  }\n\n  private registerKeyframes<T extends KeyframeDataObject>(\n    viewKeyFrames: ViewKeyframe[],\n    keyframeDictionary: Map<string, boolean>,\n    keyframes: T[]\n  ) {\n\n    for (const keyframe of keyframes) {\n\n      const frameText = keyframe.frame.toString()\n\n      if (!keyframeDictionary.has(frameText)) {\n\n        const viewKeyframe = new ViewKeyframe()\n        viewKeyframe.frame = keyframe.frame\n        viewKeyFrames.push(viewKeyframe)\n\n        keyframeDictionary.set(frameText,  true)\n      }\n    }\n  }\n\n  private updateViewKeyframesForLayerReferences(viewKeyframes: ViewKeyframe[], layers: Layer[]) {\n\n    // All view-keyframes contains view-layer info for all layer.\n\n    for (const viewKeyframe of viewKeyframes) {\n\n      for (const layer of layers) {\n\n        const keyframeLayer = new ViewKeyframeLayer()\n        keyframeLayer.layer = layer\n\n        if (EditAnimationFrameLogic.isAnimatableLayer(layer)) {\n\n          if (VectorLayer.isVectorLayer(layer)) {\n\n            const vectorLayer = <VectorLayer>layer\n\n            let max_KeyFrame = EditAnimationFrameLogic.findLastKeyframeData(vectorLayer.keyframes, viewKeyframe.frame)\n\n            if (max_KeyFrame == null) {\n\n              throw new Error('ERROR-0071:The document contains a layer that has no keyframe.')\n            }\n\n            keyframeLayer.keyframe = max_KeyFrame\n            keyframeLayer.vectorLayerKeyframe = max_KeyFrame\n          }\n          else if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n            const autoFillLayer = <AutoFillLayer>layer\n\n            let max_KeyFrame = EditAnimationFrameLogic.findLastKeyframeData(autoFillLayer.keyframes, viewKeyframe.frame)\n\n            if (max_KeyFrame == null) {\n\n              throw new Error('ERROR-0071:The document contains a layer that has no keyframe.')\n            }\n\n            keyframeLayer.keyframe = max_KeyFrame\n            keyframeLayer.autoFillLayerKeyframe = max_KeyFrame\n          }\n\n          keyframeLayer.hasActualFrame = (keyframeLayer.keyframe.frame == viewKeyframe.frame)\n        }\n\n        viewKeyframe.layers.push(keyframeLayer)\n      }\n    }\n  }\n\n  findNextViewKeyframeIndex(docContext: DocumentContext, startFrame: int, searchDirection: int): int {\n\n    const viewKeyframes = docContext.keyframes\n\n    const startKeyframeIndex = ViewKeyframe.findViewKeyframeIndex(viewKeyframes, startFrame)\n\n    if (startKeyframeIndex == -1) {\n      return -1\n    }\n\n    const resultIndex = startKeyframeIndex + searchDirection\n\n    if (resultIndex < 0) {\n\n      return 0\n    }\n\n    if (resultIndex >= viewKeyframes.length) {\n\n      return viewKeyframes.length - 1\n    }\n\n    return resultIndex\n  }\n\n  findNextViewKeyframeFrame(docContext: DocumentContext, startFrame: int, searchDirection: int): int {\n\n    const keyframeIndex = this.findNextViewKeyframeIndex(docContext, startFrame, searchDirection)\n\n    if (keyframeIndex == -1) {\n\n      return -1\n    }\n    else {\n\n      return docContext.keyframes[keyframeIndex].frame\n    }\n  }\n\n  collectVectorViewKeyframeLayersForEdit(currentViewKeyframe: ViewKeyframe, editTargetOnly = false): ViewKeyframeLayer[] {\n\n    const editableKeyframeLayers: ViewKeyframeLayer[] = []\n\n    // Collects layers\n\n    if (currentViewKeyframe == null) {\n\n      return editableKeyframeLayers\n    }\n\n    for (const viewKeyframeLayer of currentViewKeyframe.layers) {\n\n      const layer = viewKeyframeLayer.layer\n\n      if (!VectorLayer.isVectorLayer(layer)) {\n        continue\n      }\n\n      if (editTargetOnly && !Layer.isEditTarget(layer)) {\n        continue\n      }\n\n      editableKeyframeLayers.push(viewKeyframeLayer)\n    }\n\n    return editableKeyframeLayers\n  }\n}\n","﻿import { DocumentContext } from '../context'\nimport { Layer, PosingLayer } from '../document-data'\nimport { int } from '../common-logics'\nimport { UI_SelectBoxOption } from '../ui-popover'\n\nexport class ViewLayerListItem {\n\n  index = -1\n  layer: Layer = null\n  parentLayer: Layer = null\n  previousItem: ViewLayerListItem = null\n  nextItem: ViewLayerListItem = null\n  previousSiblingItem: ViewLayerListItem = null\n  nextSiblingItem: ViewLayerListItem = null\n  hierarchyDepth = 0\n  isVisible = false\n  isCurrentLayer = false\n  isSelected = false\n  scrollIntoView = () => {}\n}\n\nexport class ViewLayerListLogic {\n\n  collectItemsToContext(docContext: DocumentContext) {\n\n    docContext.layerListItems = []\n    this.collectItemsRecursive(docContext.layerListItems, docContext.documentData.rootLayer, 0)\n\n    let previousItem: ViewLayerListItem = null\n    for (const item of docContext.layerListItems) {\n\n      item.index = item.layer.hashID\n\n      item.previousItem = previousItem\n\n      if (previousItem != null) {\n\n        previousItem.nextItem = item\n      }\n\n      previousItem = item\n    }\n\n    for (const item of docContext.layerListItems) {\n\n      let nextItem = item.nextItem\n      while (nextItem != null) {\n\n        if (nextItem.hierarchyDepth <= item.hierarchyDepth) {\n\n          item.nextSiblingItem = nextItem\n          break\n        }\n\n        nextItem = nextItem.nextItem\n      }\n    }\n  }\n\n  private collectItemsRecursive(result: ViewLayerListItem[], parentLayer: Layer, currentDepth: int) {\n\n    let siblingItem = null\n\n    for (const layer of parentLayer.childLayers) {\n\n      const item = new ViewLayerListItem()\n      item.layer = layer\n      item.parentLayer = parentLayer\n      item.hierarchyDepth = currentDepth\n      item.previousSiblingItem = siblingItem\n\n      if (siblingItem != null) {\n\n        siblingItem.nextSiblingItem = item\n      }\n\n      result.push(item)\n\n      if (layer.isListExpanded && layer.childLayers.length > 0) {\n\n        this.collectItemsRecursive(result, layer, currentDepth + 1)\n      }\n\n      siblingItem = item\n    }\n  }\n\n  private findCurrentItemIndex(docContext: DocumentContext, currentLayer: Layer) {\n\n    for (let index = 0; index < docContext.layerListItems.length; index++) {\n      const item = docContext.layerListItems[index]\n\n      if (item.layer == currentLayer) {\n\n        return index\n      }\n    }\n\n    return -1\n  }\n\n  findItemForLayer(docContext: DocumentContext, currentLayer: Layer): ViewLayerListItem {\n\n    const index = this.findCurrentItemIndex(docContext, currentLayer)\n\n    if (index != -1) {\n\n      const item = docContext.layerListItems[index]\n\n      return item\n    }\n\n    return null\n  }\n\n  collectPosingLayerOptions(docContext: DocumentContext): UI_SelectBoxOption[] {\n\n    const options: UI_SelectBoxOption[] = []\n\n    options.push({\n      index: 0,\n      label: '',\n      data: null\n    })\n\n    for (const [index, layerWindowItem] of docContext.layerListItems.entries()) {\n\n      if (PosingLayer.isPosingLayer(layerWindowItem.layer)) {\n\n        options.push({\n          index: index,\n          label: layerWindowItem.layer.name,\n          data: layerWindowItem.layer\n        })\n      }\n    }\n\n    return options\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { float, RectangleLayoutArea } from '../common-logics'\nimport { CanvasWindow } from '../render'\nimport { ToolPointerEvent } from '../tool'\nimport { PointerInputWindow, ViewPointerEventPointer } from './view-pointer_event'\nimport { PointerInputLogic } from './pointer-input'\n\nexport enum ViewOperationMode {\n\n  none = 0,\n  pan = 1,\n  rotate = 2,\n  zoom = 3,\n}\n\nexport class ViewOperation {\n\n  homeViewLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  lastViewLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  isViewLocationMoved = false\n  lastViewScale = 0.0\n  lastViewRotation = 0.0\n\n  viewOperationMode = ViewOperationMode.none\n  velocityScale = 1.0\n  clickedArea: RectangleLayoutArea = null\n  moveBeforeViewLocation = vec3.create()\n  moveBeforeViewRotation = 0.0\n  moveBeforeViewScale = 0.0\n\n  first_Pointer: ViewPointerEventPointer = null\n  second_Pointer: ViewPointerEventPointer = null\n\n  tempVec3 = vec3.create()\n  direction = vec3.create()\n  difference = vec3.create()\n\n  startViewOperation(mode: ViewOperationMode, wnd: PointerInputWindow, area: RectangleLayoutArea, ctx: SubToolContext, velocityScale = 1.0) {\n\n    const e = wnd.pointerEvent\n\n    // const usedPointersText = wnd.pointerEvent.pointers.map(p => p.isActive() ?  `${p.identifier}` : '' ).join(' ')\n    // console.debug('  startViewOperation', 'actives:', wnd.pointerEvent.activePointers.length, 'used:', usedPointersText)\n\n    const pointer = PointerInputLogic.getFirstActivePointer(e)\n\n    if (pointer == null) {\n      // console.debug('    canceled')\n      return\n    }\n\n    this.viewOperationMode = mode\n    this.velocityScale = velocityScale\n    this.first_Pointer = pointer\n    this.second_Pointer = null\n\n    if (area != null) {\n\n      this.clickedArea = area\n      this.clickedArea.hover = true\n    }\n\n    this.copyBeforeViewState(wnd)\n\n    if (mode != ViewOperationMode.pan) {\n\n      this.copyLastViewLocation(true, wnd)\n    }\n\n    this.first_Pointer.startDragging(wnd, velocityScale)\n\n    ctx.setRedrawEditorWindow()\n\n    // console.debug('    started with pointer', pointer.identifier)\n  }\n\n  endViewOperation(wnd: PointerInputWindow, spaceKeyUp: boolean, ctx: SubToolContext): boolean {\n\n    if (this.first_Pointer == null) {\n      return false\n    }\n\n    ctx.setRedrawEditorWindow()\n\n    // const usedPointersText = wnd.pointerEvent.pointers.map(p => p.isActive() ?  `${p.identifier}` : '' ).join(' ')\n    // console.debug('  endViewOperation', 'actives:', wnd.pointerEvent.activePointers.length, 'used:', usedPointersText)\n\n    // 二つ目のポインターが終了し、一つ目のポインターが残っている場合\n    if (wnd.pointerEvent.activePointers.length == 1) {\n\n      this.startViewOperation(\n        this.viewOperationMode,\n        wnd,\n        this.clickedArea,\n        ctx,\n        this.velocityScale\n      )\n\n      return true\n    }\n\n    // 全てのポインターの終了、またはスペースキー解除\n    if (wnd.pointerEvent.activePointers.length == 0 || spaceKeyUp) {\n\n      PointerInputLogic.cancelAllPointers(wnd.pointerEvent)\n\n      this.viewOperationMode = ViewOperationMode.none\n\n      if (this.clickedArea != null) {\n\n        this.clickedArea.hover = false\n      }\n    }\n\n    PointerInputLogic.endMouseDragging(wnd.pointerEvent)\n\n    return this.first_Pointer.dragging.isMoved()\n  }\n\n  pointerDownAdditional(wnd: PointerInputWindow) {\n\n    const e = wnd.pointerEvent\n\n    if (e.activePointers.length < 2) {\n      return\n    }\n\n    this.copyBeforeViewState(wnd)\n\n    this.second_Pointer = e.activePointers[0]\n\n    this.second_Pointer.startDragging(wnd, 1.0)\n  }\n\n  isViewOperationRunning() {\n\n    return (this.viewOperationMode != ViewOperationMode.none)\n  }\n\n  getActivePointer(): ViewPointerEventPointer {\n\n    // if secont pointer is inputed and is pressed\n    // isPressed condition is needed to ignore a mouse with no button pressed\n    if (this.second_Pointer != null && this.second_Pointer.isPressed()) {\n\n      // console.log(`second_Pointer`)\n      return this.second_Pointer\n    }\n    else {\n\n      // console.log(`first_Pointer`)\n      return this.first_Pointer\n    }\n  }\n\n  processViewOperation(wnd: CanvasWindow, e: ToolPointerEvent, ctx: SubToolContext): boolean {\n\n    if (this.viewOperationMode == ViewOperationMode.none) {\n      return false\n    }\n\n    const pointer = this.getActivePointer()\n\n    if (pointer == null) {\n      return false\n    }\n\n    // console.log(`processViewOperation offsetX:${pointer.offsetX.toFixed(2)} offsetY:${pointer.offsetY.toFixed(2)}`)\n\n    pointer.dragging.move(pointer.offsetX, pointer.offsetY)\n\n    switch (this.viewOperationMode) {\n\n      case ViewOperationMode.pan:\n        this.processPan(wnd, e, ctx)\n        break\n\n      case ViewOperationMode.rotate:\n        this.processRotate(wnd, e, ctx)\n        break\n\n      case ViewOperationMode.zoom:\n        this.processScale(wnd, e, ctx)\n        break\n    }\n\n    return (pointer.dragging.isMoved())\n  }\n\n  processPan(wnd: CanvasWindow, e: ToolPointerEvent, ctx: SubToolContext) {\n\n    const pointer = this.getActivePointer()\n\n    if (pointer == null) {\n      return\n    }\n\n    vec3.add(wnd.viewLocation, this.moveBeforeViewLocation, pointer.dragging.mouseMovedVector)\n\n    // console.log(`mouseMovedVector ${pointer.dragging.mouseMovedVector[0].toFixed(2)} ${pointer.dragging.mouseMovedVector[1].toFixed(2)} ${pointer.dragging.mouseMovedVector[2].toFixed(2)}`)\n    // console.log(`currentLocation ${pointer.dragging.currentLocation[0].toFixed(2)} ${pointer.dragging.currentLocation[1].toFixed(2)} ${pointer.dragging.currentLocation[2].toFixed(2)}`)\n\n    if (!this.isViewLocationMoved) {\n\n      vec3.copy(this.homeViewLocation, wnd.viewLocation)\n    }\n    else {\n\n      vec3.copy(this.lastViewLocation, wnd.viewLocation)\n    }\n\n    ctx.setRedrawMainWindowEditorWindow()\n    ctx.setRedrawWebGLWindow()\n  }\n\n  processRotate(wnd: CanvasWindow, e: ToolPointerEvent, ctx: SubToolContext) {\n\n    const pointer = this.getActivePointer()\n\n    if (pointer == null) {\n      return\n    }\n\n    vec3.subtract(this.direction, pointer.dragging.mouseDownLocation, wnd.viewLocation)\n    const initialAngle = Math.atan2(this.direction[1], this.direction[0])\n\n    vec3.subtract(this.direction, pointer.dragging.currentLocation, wnd.viewLocation)\n    const currentAngle = Math.atan2(this.direction[1], this.direction[0])\n\n    let movedAngle  = currentAngle - initialAngle\n\n    if (movedAngle >= Math.PI) {\n        movedAngle -= Math.PI * 2\n    }\n\n    if (movedAngle <= -Math.PI) {\n        movedAngle += Math.PI * 2\n    }\n\n    wnd.viewRotation = this.moveBeforeViewRotation + movedAngle * 180 / Math.PI\n\n    if (ctx.isCtrlKeyPressing()) {\n\n      const flooring = 90.0 / 4\n      wnd.viewRotation = Math.floor(wnd.viewRotation / flooring) * flooring\n    }\n\n    wnd.fixViewRotation()\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  processScale(wnd: CanvasWindow, e: ToolPointerEvent, ctx: SubToolContext) {\n\n    const pointer = this.getActivePointer()\n\n    if (pointer == null) {\n      return\n    }\n\n    if (pointer == this.first_Pointer) {\n\n      const range = Math.min(wnd.width, wnd.height) / 2\n\n      const scaling = (pointer.dragging.mouseMovedOffset[0] - pointer.dragging.mouseMovedOffset[1]) / range\n\n      wnd.viewScale = this.moveBeforeViewScale * (1.0 - scaling)\n    }\n    else {\n\n      vec3.subtract(this.difference, pointer.dragging.mouseDownLocation, wnd.viewLocation)\n      const initialScale = vec3.length(this.difference)\n\n      vec3.subtract(this.difference, pointer.dragging.currentLocation, wnd.viewLocation)\n      const currentScale = vec3.length(this.difference)\n\n      if (initialScale > 0.0) {\n\n        wnd.viewScale = this.moveBeforeViewScale * (currentScale / initialScale)\n      }\n    }\n\n    wnd.fixViewScale()\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  addViewRotation(quantity: number, clockwise: boolean, wnd: CanvasWindow, ctx: SubToolContext) {\n\n    let rot = quantity\n    if (clockwise) {\n\n      rot = -rot\n    }\n\n    if (wnd.mirrorX) {\n\n      rot = -rot\n    }\n\n    wnd.viewRotation += rot\n\n    wnd.fixViewRotation()\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  addViewScale(quantity: float, wnd: CanvasWindow, ctx: SubToolContext) {\n\n    this.copyLastViewLocation(true, wnd)\n\n    wnd.addViewScale(quantity)\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  toggletHome(wnd: CanvasWindow, rest: boolean, ctx: SubToolContext) {\n\n    if (rest) {\n\n      this.setViewToDefaultState(wnd, ctx.documentData.defaultViewScale)\n    }\n    else if (this.isViewLocationMoved) {\n\n      this.setViewToHomeLocation(wnd, ctx.documentData.defaultViewScale)\n    }\n    else {\n\n      this.setViewToLastLocation(wnd)\n    }\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  setViewToDefaultState(wnd: CanvasWindow, defaultViewScale: float) {\n\n    wnd.viewLocation[0] = 0.0\n    wnd.viewLocation[1] = 0.0\n    vec3.copy(this.homeViewLocation, wnd.viewLocation)\n    wnd.viewScale = defaultViewScale\n    wnd.viewRotation = 0.0\n    wnd.mirrorX = false\n    wnd.mirrorY = false\n    this.isViewLocationMoved = false\n  }\n\n  setViewToHomeLocation(wnd: CanvasWindow, defaultViewScale: float) {\n\n    vec3.copy(wnd.viewLocation, this.homeViewLocation)\n    wnd.viewScale = defaultViewScale\n    wnd.viewRotation = 0.0\n    this.isViewLocationMoved = false\n  }\n\n  setViewToLastLocation(wnd: CanvasWindow) {\n\n    vec3.copy(wnd.viewLocation, this.lastViewLocation)\n    wnd.viewScale = this.lastViewScale\n    wnd.viewRotation = this.lastViewRotation\n    this.isViewLocationMoved = true\n  }\n\n  copyBeforeViewState(wnd: CanvasWindow) {\n\n    vec3.copy(this.moveBeforeViewLocation, wnd.viewLocation)\n    this.moveBeforeViewRotation = wnd.viewRotation\n    this.moveBeforeViewScale = wnd.viewScale\n  }\n\n  copyLastViewLocation(setUpdate: boolean, wnd: CanvasWindow) {\n\n    this.isViewLocationMoved = setUpdate\n    vec3.copy(this.lastViewLocation, wnd.viewLocation)\n    this.lastViewScale = wnd.viewScale\n    this.lastViewRotation = wnd.viewRotation\n  }\n}\n","﻿import { float, int, Logic_Points, Maths } from '../common-logics'\nimport { VectorPoint, VectorStroke } from '../document-data'\n\nexport class StrokeSearchResult {\n\n  distance: float = 0.0\n  compareDistance: float = 0.0\n  nearestSegmentIndex: int = 0\n  nearestSegmentPoint: VectorPoint = null\n  isCrossing = false\n  crossingLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  clear() {\n\n    this.distance = VectorStrokeHitTestLogic.MaxDistance\n    this.compareDistance = VectorStrokeHitTestLogic.MaxDistance\n    this.nearestSegmentIndex = VectorStrokeHitTestLogic.InvalidIndex\n    this.nearestSegmentPoint = null\n    this.isCrossing = false\n    vec3.set(this.crossingLocation, 0.0, 0.0, 0.0)\n  }\n}\n\nexport class VectorStrokeHitTestLogic {\n\n  static MaxDistance = 999999.0\n  static InvalidDistance = -1.0\n  static InvalidIndex = -1\n  private static tempCrossingLocation = vec3.create()\n\n  static getNearestSegmentIndex(stroke: VectorStroke, location: Vec3): int {\n\n    let minDistance = VectorStrokeHitTestLogic.MaxDistance\n    let nearestSegmentIndex = VectorStrokeHitTestLogic.InvalidIndex\n\n    for (let i = 0; i < stroke.points.length - 1; i++) {\n\n      const target_FromPoint = stroke.points[i]\n      const target_ToPoint = stroke.points[i + 1]\n\n      const distance = Logic_Points.pointToLineSegment_SorroundingDistance(\n        target_FromPoint.location,\n        target_ToPoint.location,\n        location\n      )\n\n      if (distance < minDistance) {\n\n        minDistance = distance\n        nearestSegmentIndex = i\n      }\n    }\n\n    return nearestSegmentIndex\n  }\n\n  static searchSegmentToSegmentNearestIndex(result: StrokeSearchResult, segmentFrom: Vec3, segmentTo: Vec3, stroke: VectorStroke) {\n\n    result.clear()\n\n    for (let i = 0; i <= stroke.points.length - 2; i++) {\n\n      const target_FromPoint = stroke.points[i]\n      const target_ToPoint = stroke.points[i + 1]\n\n      const isCrossing = Logic_Points.lineSegmentToLineSegment_CrossPoint(\n        result.crossingLocation,\n        segmentFrom,\n        segmentTo,\n        target_FromPoint.location,\n        target_ToPoint.location\n      )\n\n      if (isCrossing) {\n\n        result.distance = 0.0\n        result.nearestSegmentIndex = i\n        result.nearestSegmentPoint = null\n        result.isCrossing = true\n        break\n      }\n\n      const isHead = (i == 0)\n      const isTail = (i == stroke.points.length - 2)\n\n      if (!isHead && !isTail) {\n        continue\n      }\n\n      const compareDistance = vec3.distance(segmentFrom, target_FromPoint.location) + vec3.distance(segmentTo, target_FromPoint.location)\n\n      if (compareDistance >= result.compareDistance) {\n        continue\n      }\n\n      let distance = VectorStrokeHitTestLogic.MaxDistance\n\n      if (isHead) {\n\n        const point_Distance = Logic_Points.pointToLineSegment_SorroundingDistance(\n          segmentFrom,\n          segmentTo,\n          target_FromPoint.location\n        )\n\n        if (point_Distance < distance) {\n\n          distance = point_Distance\n          result.nearestSegmentPoint = target_FromPoint\n        }\n      }\n\n      if (isTail) {\n\n        const point_Distance = Logic_Points.pointToLineSegment_SorroundingDistance(\n          segmentFrom,\n          segmentTo,\n          target_ToPoint.location\n        )\n\n        if (point_Distance < distance) {\n\n          distance = point_Distance\n          result.nearestSegmentPoint = target_ToPoint\n        }\n      }\n\n      result.distance = distance\n      result.compareDistance = compareDistance\n      result.nearestSegmentIndex = i\n    }\n  }\n\n  static hitTestLocationToStrokeByRectangle(location: Vec3, stroke: VectorStroke, minDistance: float): boolean {\n\n    return stroke.runtime.area.hittestLocationWithRadius(location, minDistance)\n  }\n\n  static hitTestLineSegmentToStrokeByRectangle(segmentFrom: Vec3, segmentTo: Vec3, stroke: VectorStroke, minDistance: float): boolean {\n\n    const surroundLeft = stroke.runtime.area.left - minDistance\n    const surroundTop = stroke.runtime.area.top - minDistance\n    const surroundRight = stroke.runtime.area.right + minDistance\n    const surroundBottom = stroke.runtime.area.bottom + minDistance\n\n    if (VectorStrokeHitTestLogic.hitTestLocationToStrokeByRectangle(segmentFrom, stroke, minDistance)) {\n      return true\n    }\n\n    if (VectorStrokeHitTestLogic.hitTestLocationToStrokeByRectangle(segmentTo, stroke, minDistance)) {\n      return true\n    }\n\n    if (Maths.lineToLine_CrossPoint(\n      this.tempCrossingLocation,\n      segmentFrom[0],\n      segmentFrom[1],\n      segmentTo[0],\n      segmentTo[1],\n      surroundLeft,\n      surroundTop,\n      surroundRight,\n      surroundTop\n    )) {\n      return true\n    }\n\n    if (Maths.lineToLine_CrossPoint(\n      this.tempCrossingLocation,\n      segmentFrom[0],\n      segmentFrom[1],\n      segmentTo[0],\n      segmentTo[1],\n      surroundRight,\n      surroundTop,\n      surroundRight,\n      surroundBottom\n    )) {\n      return true\n    }\n\n    if (Maths.lineToLine_CrossPoint(\n      this.tempCrossingLocation,\n      segmentFrom[0],\n      segmentFrom[1],\n      segmentTo[0],\n      segmentTo[1],\n      surroundRight,\n      surroundBottom,\n      surroundLeft,\n      surroundBottom\n    )) {\n      return true\n    }\n\n    if (Maths.lineToLine_CrossPoint(\n      this.tempCrossingLocation,\n      segmentFrom[0],\n      segmentFrom[1],\n      segmentTo[0],\n      segmentTo[1],\n      surroundLeft,\n      surroundBottom,\n      surroundLeft,\n      surroundTop\n    )) {\n      return true\n    }\n\n    return false\n  }\n\n  static hitTestStrokeToStrokeByRectangle(stroke1: VectorStroke, stroke2: VectorStroke, minDistance: float): boolean {\n\n    const centerX1 = stroke1.runtime.area.getMedianHrizontalPosition()\n    const centerY1 = stroke1.runtime.area.getMedianVerticalPosition()\n\n    const centerX2 = stroke2.runtime.area.getMedianHrizontalPosition()\n    const centerY2 = stroke2.runtime.area.getMedianVerticalPosition()\n\n    const widthHalf = (stroke1.runtime.area.getWidth() + stroke2.runtime.area.getWidth()) / 2.0 + minDistance\n    const heightHalf = (stroke1.runtime.area.getHeight() + stroke2.runtime.area.getHeight()) / 2.0 + minDistance\n\n    return (\n      centerX2 >= centerX1 - widthHalf\n      && centerX2 <= centerX1 + widthHalf\n      && centerY2 >= centerY1 - heightHalf\n      && centerY2 <= centerY1 + heightHalf\n    )\n  }\n}\n","﻿import { float, Logic_Points } from '../common-logics'\nimport { VectorLayer, VectorLayerGeometry, VectorPoint, VectorStroke, VectorStrokeDrawingUnit, VectorStrokeGroup } from '../document-data'\nimport { VectorStrokeHitTestLogic } from './vector-stroke-hittest'\n\nexport interface IHitTest_VectorLayer {\n\n  startProcess()\n  processGeometry(layer: VectorLayer, geometry: VectorLayerGeometry, location: Vec3, minDistance: float)\n  endProcess()\n}\n\nexport class HitTest_VectorPointBase implements IHitTest_VectorLayer {\n\n  existsPointHitTest = false\n  currentLayer: VectorLayer | null = null\n  currentGeometry: VectorLayerGeometry | null = null\n  currentDrawingUnit: VectorStrokeDrawingUnit | null = null\n  currentStrokeGroup: VectorStrokeGroup | null = null\n  currentStroke: VectorStroke | null = null\n\n  startProcess() {\n\n    this.existsPointHitTest = false\n\n    this.beforeHitTest()\n  }\n\n  processGeometry(layer: VectorLayer, geometry: VectorLayerGeometry, location: Vec3, minDistance: float) {\n\n    this.hitTest(geometry, location, minDistance, layer)\n  }\n\n  endProcess() {\n\n    this.afterHitTest()\n  }\n\n  protected hitTest(geometry: VectorLayerGeometry, location: Vec3, minDistance: float, layer: VectorLayer) {\n\n    this.beforeHitTestToLayer(geometry)\n\n    const minDistanceSQ = Math.pow(minDistance, 2)\n\n    this.currentLayer = layer\n    this.currentGeometry = geometry\n\n    for (const unit of geometry.units) {\n\n      this.currentDrawingUnit = unit\n\n      for (const group of unit.groups) {\n\n        this.currentStrokeGroup = group\n\n        this.beforeHitTestToGroup()\n\n        for (const stroke of group.lines) {\n\n          this.currentStroke = stroke\n\n          this.beforeHitTestToLine()\n\n          let lineHited = false\n\n          if (this.hitTestStrokeByRectangle(stroke, location, minDistance)) {\n\n            lineHited = this.processHitTestToStroke(location, minDistanceSQ)\n          }\n\n          if (lineHited) {\n\n            this.onLineHited()\n          }\n          else {\n\n            this.onLineNotHited()\n          }\n\n          this.afterHitTestToLine()\n        }\n\n        this.currentStroke = null\n\n        this.afterHitTestToGroup()\n      }\n\n      this.currentStrokeGroup = null\n    }\n\n    this.currentDrawingUnit = null\n\n    this.afterHitTestToLayer(geometry)\n\n    this.currentGeometry = null\n    this.currentLayer = null\n  }\n\n  protected hitTestStrokeByRectangle(line: VectorStroke, location: Vec3, minDistance: float): boolean {\n\n    return VectorStrokeHitTestLogic.hitTestLocationToStrokeByRectangle(location, line, minDistance)\n  }\n\n  protected processHitTestToStroke(_location: Vec3, _minDistanceSQ: float): boolean { // @virtual\n\n    return false\n  }\n\n  protected beforeHitTest() { // @virtual\n  }\n\n  protected afterHitTest() { // @virtual\n  }\n\n  protected beforeHitTestToLayer(_geometry: VectorLayerGeometry) { // @virtual\n  }\n\n  protected afterHitTestToLayer(_geometry: VectorLayerGeometry) { // @virtual\n  }\n\n  protected beforeHitTestToGroup() { // @virtual\n  }\n\n  protected afterHitTestToGroup() { // @virtual\n  }\n\n  protected beforeHitTestToLine() { // @virtual\n  }\n\n  protected afterHitTestToLine() { // @virtual\n  }\n\n  protected onPointHited(_point: VectorPoint) { // @virtual\n  }\n\n  protected onPointNotHited(_point: VectorPoint) { // @virtual\n  }\n\n  protected onLineSegmentHited(_point1: VectorPoint, _point2: VectorPoint, _location: Vec3, _minDistanceSQ: float, _distanceSQ: float) { // @virtual\n  }\n\n  protected onLineSegmentNotHited(_point1: VectorPoint, _point2: VectorPoint) { // @virtual\n  }\n\n  protected onLineHited() { // @virtual\n  }\n\n  protected onLineNotHited() { // @virtual\n  }\n}\n\nexport class HitTest_VectorPoint_PointToPoint extends HitTest_VectorPointBase {\n\n  protected processHitTestToStroke(location: Vec3, minDistanceSQ: float): boolean { // @override\n\n    this.existsPointHitTest = false\n\n    for (const point of this.currentStroke.points) {\n\n      const distance2d = Math.pow(location[0] - point.location[0], 2) + Math.pow(location[1] - point.location[1], 2)\n\n      if (distance2d < minDistanceSQ) {\n\n        this.onPointHited(point)\n      }\n      else {\n\n        this.onPointNotHited(point)\n      }\n\n      if (this.existsPointHitTest) {\n        break\n      }\n    }\n\n    return this.existsPointHitTest\n  }\n}\n\nexport class HitTest_VectorStroke_PointToStroke extends HitTest_VectorPointBase {\n\n  protected processHitTestToStroke(location: Vec3, minDistanceSQ: float): boolean { // @override\n\n    this.existsPointHitTest = false\n\n    let lineHited = false\n\n    for (let i = 0; i + 1 < this.currentStroke.points.length; i++) {\n\n      const point1 = this.currentStroke.points[i]\n      const point2 = this.currentStroke.points[i + 1]\n\n      const distanceSQ = Logic_Points.pointToLineSegment_SorroundingDistanceSQ(\n        point1.location,\n        point2.location,\n        location\n      )\n\n      if (distanceSQ < minDistanceSQ) {\n\n        this.onLineSegmentHited(point1, point2, location, minDistanceSQ, distanceSQ)\n        lineHited = true\n      }\n      else {\n\n        this.onLineSegmentNotHited(point1, point2)\n      }\n\n      if (this.existsPointHitTest) {\n        break\n      }\n    }\n\n    return lineHited\n  }\n}\n\nexport class HitTest_VectorStroke_PointToStroke_Nearest extends HitTest_VectorStroke_PointToStroke {\n\n  minDistanceSQ: float = -1\n  hitedGeometry: VectorLayerGeometry = null\n  hitedGroup: VectorStrokeGroup = null\n  hitedStoke: VectorStroke = null\n\n  protected beforeHitTest() { // @override\n\n    this.minDistanceSQ = -1\n    this.hitedGeometry = null\n    this.hitedGroup = null\n    this.hitedStoke = null\n  }\n\n  protected onLineSegmentHited(_point1: VectorPoint, _point2: VectorPoint, _location: Vec3, _minDistanceSQ: float, distanceSQ: float) { // @override\n\n    if (this.minDistanceSQ == -1 || distanceSQ < this.minDistanceSQ) {\n\n      this.minDistanceSQ = distanceSQ\n      this.hitedGeometry = this.currentGeometry\n      this.hitedGroup = this.currentStrokeGroup\n      this.hitedStoke = this.currentStroke\n    }\n  }\n}\n\nexport class HitTest_VectorStroke_IsCloseToMouse extends HitTest_VectorStroke_PointToStroke {\n\n  isChanged = false\n\n  protected beforeHitTest() { // @override\n\n    this.isChanged = false\n  }\n\n  protected onLineSegmentHited(_point1: VectorPoint, _point2: VectorPoint, _location: Vec3, _minDistanceSQ: float, _distanceSQ: float) { // @override\n\n    // to stop hit test early\n    this.existsPointHitTest = true\n  }\n\n  protected onLineHited() { // @override\n\n    if (!this.currentStroke.runtime.isCloseToMouse) {\n\n      this.isChanged = true\n    }\n\n    this.currentStroke.runtime.isCloseToMouse = true\n  }\n\n  protected onLineNotHited() { // @override\n\n    if (this.currentStroke.runtime.isCloseToMouse) {\n\n      this.isChanged = true\n    }\n\n    this.currentStroke.runtime.isCloseToMouse = false\n  }\n}\n","﻿import {\n  VectorPointModifyFlagID, VectorLayerGeometry, VectorStrokeGroupModifyFlagID, VectorStrokeModifyFlagID,\n  VectorPoint, VectorStroke, VectorStrokeGroup\n} from '../document-data'\n\nexport class VectorLayerLogic {\n\n  static clearGeometryModifyFlags(geometry: VectorLayerGeometry) {\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        this.clearGroupModifyFlags(group)\n      }\n    }\n  }\n\n  static clearGroupModifyFlags(group: VectorStrokeGroup) {\n\n    group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.none\n    group.runtime.linePointModifyFlag = VectorStrokeGroupModifyFlagID.none\n\n    for (const stroke of group.lines) {\n\n      this.clearStrokeModifyFlags(stroke)\n    }\n  }\n\n  static clearStrokeModifyFlags(stroke: VectorStroke) {\n\n    stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n\n    VectorLayerLogic.clearPointModifyFlags(stroke.points)\n  }\n\n  static clearPointModifyFlags(points: VectorPoint[]) {\n\n    for (const point of points) {\n\n      point.modifyFlag = VectorPointModifyFlagID.none\n    }\n  }\n\n  static fillGeometryDeleteFlags(geometry: VectorLayerGeometry, forceDelete: boolean) {\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        this.fillGroupDeleteFlags(group, forceDelete)\n      }\n    }\n  }\n\n  static fillGroupDeleteFlags(group: VectorStrokeGroup, forceDelete: boolean) {\n\n    if (forceDelete) {\n\n      group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.delete\n    }\n\n    let setDelete = false\n    if (group.runtime.modifyFlag == VectorStrokeGroupModifyFlagID.delete) {\n      setDelete = true\n    }\n\n    for (const line of group.lines) {\n\n      this.fillLineDeleteFlags(line, setDelete)\n    }\n  }\n\n  static fillLineDeleteFlags(line: VectorStroke, forceDelete: boolean) {\n\n    if (forceDelete) {\n\n      line.runtime.modifyFlag = VectorStrokeModifyFlagID.delete\n    }\n\n    if (line.runtime.modifyFlag == VectorStrokeModifyFlagID.delete) {\n\n      for (const point of line.points) {\n\n        point.modifyFlag = VectorPointModifyFlagID.delete\n      }\n    }\n  }\n}\n","﻿import { VectorPoint } from '../document-data'\nimport { float, int, Logic_Points, Maths, RectangleArea } from '../common-logics'\n\nexport class VectorPointLogic {\n\n  static sampledLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  static getLineRadiusFromLineWidth(lineWidth: float) {\n\n    return lineWidth / 2\n  }\n\n  static getPointRadius(point: VectorPoint) {\n\n    return VectorPointLogic.getLineRadiusFromLineWidth(point.lineWidth)\n  }\n\n  static calculatePointTotalLength(points: VectorPoint[], startLength: float) {\n\n    if (points.length == 0) {\n\n      return\n    }\n\n    points[0].totalLength = startLength\n\n    let totalLength = startLength\n    for (let i = 1; i < points.length; i++) {\n\n      const point1 = points[i]\n      const point2 = points[i - 1]\n\n      totalLength += vec3.distance(point1.location, point2.location)\n\n      point1.totalLength = totalLength\n    }\n  }\n\n  static calculatePointCurvature(points: VectorPoint[]) {\n\n    if (points.length <= 2) {\n\n      return\n    }\n\n    points[0].totalLength = 0\n    points[points.length - 1].totalLength = 0\n\n    for (let i = 1; i + 1 < points.length; i++) {\n\n      const point1 = points[i - 1]\n      const point2 = points[i]\n      const point3 = points[i + 1]\n\n      point2.curvature = Logic_Points.angleDistanceOfCorner(point1.location, point2.location, point3.location)\n    }\n  }\n\n  static calculateSegmentTotalLength(points: VectorPoint[], startIndex: int, endIndex: int) {\n\n    let totalLength = 0.0\n\n    for (let i = startIndex; i <= endIndex - 1; i++) {\n\n      const point1 = points[i]\n      const point2 = points[i + 1]\n\n      totalLength += vec3.distance(point1.location, point2.location)\n    }\n\n    return totalLength\n  }\n\n  static resamplePoints(result: VectorPoint[], points: VectorPoint[], startIndex: int, endIndex: int, samplingUnitLength: float): VectorPoint[] {\n\n    if (samplingUnitLength <= 0) {\n      throw new Error('ERROR 0000: Can\\'t set sampling unit length as zero or minus')\n    }\n\n    const sampledLocationVec = this.sampledLocation\n\n    const totalLength = VectorPointLogic.calculateSegmentTotalLength(points, startIndex, endIndex)\n\n    const firstPoint = points[startIndex]\n    const lastPoint = points[endIndex]\n\n    let currentIndex = startIndex\n    let currentPosition = 0.0\n    const endPosition = totalLength\n\n    const maxSampleCount = 1 + Math.ceil(totalLength / samplingUnitLength)\n\n    let nextStepLength = samplingUnitLength\n\n    // for first point\n    {\n      const sampledPoint = new VectorPoint()\n      vec3.copy(sampledPoint.location, firstPoint.location)\n      vec3.copy(sampledPoint.adjustingLocation, sampledPoint.location)\n      sampledPoint.lineWidth = firstPoint.lineWidth\n      sampledPoint.adjustingLineWidth = sampledPoint.lineWidth\n      result.push(sampledPoint)\n    }\n\n    // for inside points\n    let sampledCount = 1\n\n    let currentPointPosition = 0.0\n    while (currentPosition < endPosition) {\n\n      const currentPoint = points[currentIndex]\n      const nextPoint = points[currentIndex + 1]\n      const segmentLength = vec3.distance(nextPoint.location, currentPoint.location)\n\n      if (segmentLength < samplingUnitLength / 10.0) {\n\n        currentIndex++\n        currentPointPosition += segmentLength\n\n        if (currentIndex == endIndex) {\n          break\n        }\n      }\n\n      const nextPointPosition = currentPointPosition + segmentLength\n\n      if (currentPosition + nextStepLength >= endPosition - samplingUnitLength / 2.0) {\n        break\n      }\n      else if (currentPosition + nextStepLength <= nextPointPosition) {\n\n        const localPosition = (currentPosition + nextStepLength) - currentPointPosition\n        const positionRate = localPosition / segmentLength\n\n        vec3.lerp(sampledLocationVec, currentPoint.location, nextPoint.location, positionRate)\n\n        const sampledPoint = new VectorPoint()\n        vec3.copy(sampledPoint.location, sampledLocationVec)\n        vec3.copy(sampledPoint.adjustingLocation, sampledPoint.location)\n\n        sampledPoint.lineWidth = Maths.lerp(positionRate, currentPoint.lineWidth, nextPoint.lineWidth)\n        sampledPoint.adjustingLineWidth = sampledPoint.lineWidth\n\n        result.push(sampledPoint)\n\n        currentPosition = currentPosition + nextStepLength\n        nextStepLength = samplingUnitLength\n\n        sampledCount++\n        if (sampledCount >= maxSampleCount) {\n\n          break\n        }\n      }\n      else {\n\n        nextStepLength = (currentPosition + nextStepLength) - nextPointPosition\n        currentPosition = nextPointPosition\n\n        currentIndex++\n        currentPointPosition += segmentLength\n\n        if (currentIndex == endIndex) {\n          break\n        }\n      }\n    }\n\n    // for last point\n    {\n      const sampledPoint = new VectorPoint()\n      vec3.copy(sampledPoint.location, lastPoint.location)\n      vec3.copy(sampledPoint.adjustingLocation, sampledPoint.location)\n      sampledPoint.lineWidth = lastPoint.lineWidth\n      sampledPoint.adjustingLineWidth = sampledPoint.lineWidth\n      result.push(sampledPoint)\n    }\n\n    return result\n  }\n}\n","﻿import { VectorStrokeModifyFlagID, VectorPoint, VectorStroke, VectorStrokeConnectionInfo, VectorStrokeGroup } from '../document-data'\nimport { float, int, RectangleArea } from '../common-logics'\nimport { VectorPointLogic } from './vector-point'\n\nexport class VectorStrokeLogic {\n\n  static expandAreasForPoint(bound_area: RectangleArea, inner_area: RectangleArea, point: VectorPoint, lineWidthBiasRate: float) {\n\n    const pointRadius = VectorPointLogic.getPointRadius(point)\n\n    bound_area.expandByLocation(\n      point.location[0] - pointRadius * lineWidthBiasRate,\n      point.location[1] - pointRadius * lineWidthBiasRate\n    )\n\n    bound_area.expandByLocation(\n      point.location[0] + pointRadius * lineWidthBiasRate,\n      point.location[1] + pointRadius * lineWidthBiasRate\n    )\n\n    inner_area.expandByLocation(\n      point.location[0],\n      point.location[1]\n    )\n  }\n\n  static calculateParameters(stroke: VectorStroke, lineWidthBiasRate = 1.0) {\n\n    // Calculate rectangle area and selection\n    let isSelected = false\n\n    stroke.runtime.area.setMinimumValue()\n    stroke.runtime.innerArea.setMinimumValue()\n    for (const point of stroke.points) {\n\n      this.expandAreasForPoint(\n        stroke.runtime.area,\n        stroke.runtime.innerArea,\n        point,\n        lineWidthBiasRate\n      )\n\n      if (point.isSelected) {\n\n        isSelected = true\n      }\n    }\n\n    stroke.runtime.area.calculateParams()\n    stroke.runtime.innerArea.calculateParams()\n\n    stroke.isSelected = isSelected\n\n    // Calculate point positon in length\n    if (stroke.points.length > 0) {\n\n      VectorPointLogic.calculatePointTotalLength(stroke.points, 0.0)\n\n      stroke.runtime.totalLength = stroke.points[stroke.points.length - 1].totalLength\n    }\n    else {\n\n      stroke.runtime.totalLength = 0.0\n    }\n\n    // Calculate curvature\n    VectorPointLogic.calculatePointCurvature(stroke.points)\n  }\n\n  static calculateSurroundingArea(result: RectangleArea, strokes: VectorStroke[]) {\n\n    result.setMinimumValue()\n\n    for (const stroke of strokes) {\n\n      RectangleArea.calculateSurroundingRectangle(result, result, stroke.runtime.area)\n    }\n\n    result.calculateParams()\n  }\n\n  static isEmpty(stroke: VectorStroke): boolean {\n\n    return (stroke.points.length == 0)\n  }\n\n  static isEmptyStroke(stroke: VectorStroke): boolean {\n\n    return (stroke.points.length < 2 || stroke.runtime.totalLength <= 0.0 || stroke.runtime.innerArea.range == 0.0)\n  }\n\n  static clalculateSamplingDivisionCount(totalLength: float, resamplingUnitLength: float): int {\n\n    if (resamplingUnitLength <= 0) {\n      throw new Error('ERROR 0000: Can\\'t set resampling unit length as zero or minus')\n    }\n\n    let divisionCount = Math.floor(totalLength / resamplingUnitLength)\n\n    if ((divisionCount % 2) == 0) {\n\n      divisionCount = divisionCount + 1\n    }\n\n    return divisionCount\n  }\n\n  static smooth(line: VectorStroke, iterationCount = 1) {\n\n    for (let loopCount = 0; loopCount < iterationCount; loopCount++) {\n\n      VectorStrokeLogic.smoothPoints(line.points)\n\n      VectorStrokeLogic.applyAdjustments(line)\n    }\n\n    VectorStrokeLogic.calculateParameters(line)\n  }\n\n  static smoothPoints(linePoints: VectorPoint[]) {\n\n    // Smoothing\n    for (let i = 0; i < linePoints.length; i++) {\n      const point = linePoints[i]\n\n      vec3.copy(point.adjustingLocation, point.location)\n      vec3.copy(point.tempLocation, point.location)\n      point.adjustingLineWidth = point.lineWidth\n    }\n\n    const iteration = 2\n    for (let count = 0; count < iteration; count++) {\n\n      for (let i = 0; i + 2 < linePoints.length; i++) {\n\n        const point1 = linePoints[i]\n        const point2 = linePoints[i + 1]\n        const point3 = linePoints[i + 2]\n\n        VectorStrokeLogic.calcBezier2d(\n          point2.adjustingLocation\n          , point1.tempLocation\n          , point2.tempLocation\n          , point3.tempLocation\n          , 0.5\n        )\n\n        point2.adjustingLineWidth = (point1.adjustingLineWidth + point3.adjustingLineWidth) / 2\n      }\n\n      for (let i = 0; i + 2 < linePoints.length; i++) {\n\n        const point2 = linePoints[i + 1]\n\n        vec3.copy(point2.tempLocation, point2.adjustingLocation)\n      }\n    }\n  }\n\n  private static calcBezier2d(result: Vec3, p0: Vec3, p1: Vec3, p2: Vec3, t: float) {\n\n    const px = (1 - t) * (1 - t) * p0[0] + 2 * (1 - t) * t * p1[0] + t * t * p2[0]\n    const py = (1 - t) * (1 - t) * p0[1] + 2 * (1 - t) * t * p1[1] + t * t * p2[1]\n\n    vec3.set(result, px, py, 0.0)\n  }\n\n  static applyAdjustments(line: VectorStroke) {\n\n    for (const point of line.points) {\n\n      vec3.copy(point.location, point.adjustingLocation)\n      point.lineWidth = point.adjustingLineWidth\n    }\n  }\n\n  static resetModifyStates(lines: VectorStroke[]) {\n\n    for (const line of lines) {\n\n      line.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n    }\n  }\n\n  static createResampledLine(baseLine: VectorStroke, samplingUnitLength: float): VectorStroke {\n\n    const result = new VectorStroke()\n\n    const startIndex = 0\n    const endIndex = baseLine.points.length - 1\n\n    VectorPointLogic.resamplePoints(\n      result.points\n      , baseLine.points\n      , startIndex\n      , endIndex\n      , samplingUnitLength)\n\n    VectorStrokeLogic.calculateParameters(result)\n\n    return result\n  }\n\n  static createConnectionInfos(strokeGroup: VectorStrokeGroup): VectorStrokeConnectionInfo[] {\n\n    const infos: VectorStrokeConnectionInfo[] = []\n\n    for (const [index, stroke] of strokeGroup.lines.entries()) {\n\n      if (index != strokeGroup.lines.length - 1) {\n\n        const info = new VectorStrokeConnectionInfo()\n        info.from_Stroke = stroke\n        info.to_Stroke = strokeGroup.lines[index + 1]\n\n        infos.push(info)\n      }\n    }\n\n    return infos\n  }\n}\n","﻿import { VectorPointModifyFlagID, VectorLayer, VectorLayerGeometry, VectorPoint, VectorStroke } from '../document-data'\nimport { float, int, Lists, Logic_Points } from '../common-logics'\nimport { ViewKeyframeLayer } from '../view'\nimport { HitTest_VectorStroke_PointToStroke_Nearest } from './vector-layer-hittest'\nimport { VectorStrokeHitTestLogic, StrokeSearchResult } from './vector-stroke-hittest'\nimport { VectorLayerLogic } from './vector-layer'\nimport { VectorStrokeLogic } from './vector-stroke'\n\nclass AutoFillSearchState {\n\n  startLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  points: VectorPoint[] = []\n  rotationCalcPoints: VectorPoint[] = []\n  start_PointIndex: int = -1\n  end_PointIndex: int = -1\n  totalRotation = 0.0\n\n  constructor(\n    public targetStroke: VectorStroke,\n    public start_SegmentIndex: int,\n    public isForwardSearch: boolean,\n    start_Location: Vec3,\n    public previousState: AutoFillSearchState,\n  ) {\n\n    vec3.copy(this.startLocation, start_Location)\n\n    if (previousState != null) {\n\n      this.totalRotation = previousState.totalRotation\n\n      if (previousState.points.length > 0) {\n        this.rotationCalcPoints.push(previousState.points[previousState.points.length - 1])\n      }\n    }\n  }\n\n  addPoint(location: Vec3) {\n\n    const point = new VectorPoint()\n    vec3.copy(point.location, location)\n    vec3.copy(point.adjustingLocation, location)\n    this.points.push(point)\n\n    this.rotationCalcPoints.push(point)\n    if (this.rotationCalcPoints.length >= 3) {\n\n      const rotation = Logic_Points.directionAngleDifferenceOfCorner(\n        this.rotationCalcPoints[this.rotationCalcPoints.length - 3].location,\n        this.rotationCalcPoints[this.rotationCalcPoints.length - 2].location,\n        this.rotationCalcPoints[this.rotationCalcPoints.length - 1].location,\n      )\n\n      // 局所的な探索によって180度向きが変わるような経路になってしまった場合を除外して評価値を加算\n      if (rotation > -Math.PI * 0.99 && rotation < Math.PI * 0.99) {\n\n        this.totalRotation += rotation\n      }\n    }\n  }\n}\n\nexport class AutoFillLogic {\n\n  private static lineNearestHitTester = new HitTest_VectorStroke_PointToStroke_Nearest()\n\n  private static currentLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private static lastLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private static strokeStartLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private static nearestLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private static crossingLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  private static tangentPreviousVec = vec3.fromValues(0.0, 0.0, 0.0)\n  private static tangentNextVec = vec3.fromValues(0.0, 0.0, 0.0)\n  private static tangentDirection = vec3.fromValues(0.0, 0.0, 0.0)\n  private static tangentLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  private static lastSegmentLocationFrom = vec3.fromValues(0.0, 0.0, 0.0)\n  private static lastSegmentLocationTo = vec3.fromValues(0.0, 0.0, 0.0)\n\n  private static strokeSearchResult = new StrokeSearchResult()\n\n  private static limitMinimumSegmentLength = 0.001\n\n  static findStartStroke(startLocation: Vec3, mouseCursorViewRadius: float, viewKeyframeLayers: ViewKeyframeLayer[]) {\n\n    let startStroke: VectorStroke = null\n    let hitedDistanceSQ: float = -1\n\n    ViewKeyframeLayer.forEachVectorGeometry(viewKeyframeLayers, (geometry, layer) => {\n\n      this.lineNearestHitTester.startProcess()\n      this.lineNearestHitTester.processGeometry(layer, geometry, startLocation, mouseCursorViewRadius)\n\n      if (this.lineNearestHitTester.hitedStoke != null) {\n\n        if (hitedDistanceSQ == -1 || this.lineNearestHitTester.minDistanceSQ < hitedDistanceSQ) {\n\n          hitedDistanceSQ = this.lineNearestHitTester.minDistanceSQ\n          startStroke = this.lineNearestHitTester.hitedStoke\n        }\n      }\n    })\n\n    return startStroke\n  }\n\n  static generate(\n    resultStroke: VectorStroke,\n    resultLookDirection: Vec3,\n    start_Stroke: VectorStroke,\n    start_Location: Vec3,\n    minDistanceRange: float,\n    sibling_ViewKeyframeLayers: ViewKeyframeLayer[]\n  ) {\n\n    // スタートのセグメントの決定\n    const start_SegmentIndex = VectorStrokeHitTestLogic.getNearestSegmentIndex(\n      start_Stroke,\n      start_Location\n    )\n\n    if (start_SegmentIndex == VectorStrokeHitTestLogic.InvalidIndex) {\n      return false\n    }\n\n    // 処理対象のストロークを全て取得\n    const target_Strokes = this.getTargetStrokes(sibling_ViewKeyframeLayers)\n\n    // フラグのクリア\n    for (const stroke of target_Strokes) {\n      VectorLayerLogic.clearStrokeModifyFlags(stroke)\n    }\n\n    // 探索方向の決定\n    const start_IsForwardSearch = this.isForwardSearchAtSegment(\n      this.nearestLocation,\n      start_Location,\n      start_Stroke,\n      start_SegmentIndex\n    )\n\n    vec3.subtract(resultLookDirection, this.nearestLocation, start_Location)\n\n    // 探索処理の初期スタックを作成\n    const searchStateStack: AutoFillSearchState[] = []\n    searchStateStack.push(new AutoFillSearchState(\n      start_Stroke,\n      start_SegmentIndex,\n      start_IsForwardSearch,\n      this.nearestLocation,\n      null\n    ))\n\n    // 探索処理ループ\n    let isLoopFinished = false\n    let available_SearchState: AutoFillSearchState = null\n    while (searchStateStack.length > 0) {\n\n      const searchState = searchStateStack.pop()\n      const current_Stroke = searchState.targetStroke\n      const current_SegmentIndex = searchState.start_SegmentIndex\n      const current_IsForwardSearch = searchState.isForwardSearch\n\n      vec3.copy(this.strokeStartLocation, searchState.startLocation)\n      vec3.copy(this.currentLocation, searchState.startLocation)\n\n      // 検索する範囲が無い経路は即終了（経路の作成時に判定せずここで判断することでまとめて判断しています）\n      if ((current_IsForwardSearch && current_SegmentIndex + 1 >= current_Stroke.points.length)\n      || (!current_IsForwardSearch && current_SegmentIndex < 0)) {\n        continue\n      }\n\n      // カレントのストロークと交差する可能性のあるストロークを取得\n      const candidate_Strokes = target_Strokes.filter(stroke =>\n        stroke != current_Stroke\n          && VectorStrokeHitTestLogic.hitTestStrokeToStrokeByRectangle(current_Stroke, stroke, minDistanceRange)\n      )\n\n      // カレントのストロークのセグメントの探索\n      let next_Stroke: VectorStroke = null\n      let next_SegmentIndex: int = -1\n      let search_PointIndex = current_IsForwardSearch ? current_SegmentIndex + 1 : current_SegmentIndex\n      let searched_Start_PointIndex: int = -1\n      let searched_Last_PointIndex: int = -1\n      let next_IsCrossing = false\n      let isSegmentSearchEnd = false\n      let isRouteDiscarded = false\n      {\n        let candidate_Stroke: VectorStroke = null\n        let candidate_SegmentIndex = -1\n        let candidate_Distance = -1\n        let candidate_IsCrossing = false\n        while (true) {\n\n          const pointTo = current_Stroke.points[search_PointIndex]\n\n          // 探索の開始位置に到達した場合、ループ完成\n          if (pointTo.modifyFlag == VectorPointModifyFlagID.edit) {\n\n            isLoopFinished = (\n              current_Stroke == start_Stroke\n              && (\n                (start_IsForwardSearch && search_PointIndex == start_SegmentIndex + 1)\n                || (!start_IsForwardSearch && search_PointIndex == start_SegmentIndex)\n              )\n            )\n\n            // スタート位置以外の箇所で探索済みのセグメントに到達した場合、不正な経路であるため探索を破棄\n            if (!isLoopFinished) {\n              isRouteDiscarded = true\n              break\n            }\n          }\n\n          vec3.copy(this.lastLocation, this.currentLocation)\n          vec3.copy(this.currentLocation, pointTo.location)\n\n          const nearToSegment_Strokes = candidate_Strokes.filter(stroke =>\n            VectorStrokeHitTestLogic.hitTestLineSegmentToStrokeByRectangle(this.lastLocation, this.currentLocation, stroke, minDistanceRange)\n          )\n\n          const isSearchPointAtEndOfStroke = (\n            (current_IsForwardSearch && search_PointIndex >= current_Stroke.points.length - 1)\n            || (!current_IsForwardSearch && search_PointIndex <= 0)\n          )\n\n          // 現在のセグメントに対する最も近接するストロークとセグメントを検索\n          let minDistance_Stroke: VectorStroke = null\n          let minDistance_SegmentIndex = -1\n          let minDistance_IsCrossing = false\n          let compareDistance = -1\n          for (const stroke of nearToSegment_Strokes) {\n\n            VectorStrokeHitTestLogic.searchSegmentToSegmentNearestIndex(\n              this.strokeSearchResult,\n              this.lastLocation,\n              this.currentLocation,\n              stroke\n            )\n\n            if (this.strokeSearchResult.nearestSegmentIndex == VectorStrokeHitTestLogic.InvalidIndex) {\n              continue\n            }\n\n            // 許容する隙間より離れている場合は対象としない\n            if (this.strokeSearchResult.distance > minDistanceRange) {\n              continue\n            }\n\n            // 探索済みの点は対象としない\n            if (this.strokeSearchResult.nearestSegmentPoint != null\n              && this.strokeSearchResult.nearestSegmentPoint.modifyFlag == VectorPointModifyFlagID.edit) {\n              continue\n            }\n\n            // 交差点から派生した探索の最初のところで再度交差にかかることを抑制\n            if (this.strokeSearchResult.isCrossing\n              && vec3.distance(this.lastLocation, this.strokeSearchResult.crossingLocation) < AutoFillLogic.limitMinimumSegmentLength) {\n              continue\n            }\n\n            // 最も距離の近いセグメントを選択\n            if (compareDistance == -1 || this.strokeSearchResult.compareDistance < compareDistance) {\n\n              minDistance_Stroke = stroke\n              minDistance_SegmentIndex = this.strokeSearchResult.nearestSegmentIndex\n              minDistance_IsCrossing = this.strokeSearchResult.isCrossing\n              vec3.copy(this.crossingLocation, this.strokeSearchResult.crossingLocation)\n\n              compareDistance = this.strokeSearchResult.compareDistance\n            }\n          }\n\n          // 次のストローク候補として最も距離の近いストロークを記憶、いったん近づいたストロークが離れたかの判定\n          let segement_Leaved = false\n          let newCandidateSegment = false\n          if (candidate_Stroke != null) {\n\n            if (minDistance_Stroke == null) {\n\n              // segement_Leaved = true\n            }\n            else {\n\n              if (compareDistance > candidate_Distance) {\n\n                // segement_Leaved = true\n              }\n              else {\n\n                newCandidateSegment = true\n              }\n            }\n          }\n          else {\n\n            if (minDistance_Stroke != null) {\n\n              newCandidateSegment = true\n            }\n          }\n          if (false && newCandidateSegment) {\n\n            candidate_Stroke = minDistance_Stroke\n            candidate_SegmentIndex = minDistance_SegmentIndex\n            candidate_Distance = compareDistance\n            vec3.copy(this.lastSegmentLocationTo, this.currentLocation)\n            vec3.copy(this.lastSegmentLocationFrom, this.lastLocation)\n          }\n\n          // ループ完成または現在のストロークの終端まで到達した場合、セグメントの探索を終了\n          isSegmentSearchEnd = (isLoopFinished || isSearchPointAtEndOfStroke)\n\n          if (minDistance_Stroke != null && (isSegmentSearchEnd || minDistance_IsCrossing)) {\n\n            candidate_Stroke = minDistance_Stroke\n            candidate_SegmentIndex = minDistance_SegmentIndex\n            candidate_Distance = compareDistance\n            candidate_IsCrossing = minDistance_IsCrossing\n            vec3.copy(this.lastSegmentLocationFrom, this.lastLocation)\n            if (minDistance_IsCrossing) {\n              vec3.copy(this.lastSegmentLocationTo, this.crossingLocation)\n            }\n            else {\n              vec3.copy(this.lastSegmentLocationTo, this.currentLocation)\n            }\n          }\n\n          // セグメントの探索終了またはいったん近づいたストロークが離れた場合、次のストロークを確定\n          if (isSegmentSearchEnd || candidate_IsCrossing || segement_Leaved) {\n\n            if (candidate_Stroke) {\n              next_Stroke = candidate_Stroke\n              next_SegmentIndex = candidate_SegmentIndex\n              next_IsCrossing = candidate_IsCrossing\n            }\n\n            if (!candidate_IsCrossing) {\n              if (searched_Start_PointIndex == -1) {\n                searched_Start_PointIndex = search_PointIndex\n              }\n              searched_Last_PointIndex = search_PointIndex\n            }\n            break\n          }\n\n          // 次のセグメントに移動\n          if (searched_Start_PointIndex == -1) {\n            searched_Start_PointIndex = search_PointIndex\n          }\n          searched_Last_PointIndex = search_PointIndex\n          search_PointIndex = current_IsForwardSearch ? search_PointIndex + 1 : search_PointIndex - 1\n        }\n      }\n\n      // 不要な経路の破棄\n      if (isRouteDiscarded) {\n        continue\n      }\n\n      // 経路の範囲の決定\n      searchState.start_PointIndex = Math.min(searched_Start_PointIndex, searched_Last_PointIndex)\n      searchState.end_PointIndex = Math.max(searched_Start_PointIndex, searched_Last_PointIndex)\n\n      // 塗りつぶし頂点を追加、フラグを設定\n      searchState.addPoint(this.strokeStartLocation)\n\n      if (searched_Start_PointIndex != -1) {\n\n        for (let index = searched_Start_PointIndex;;) {\n\n          const point = current_Stroke.points[index]\n          searchState.addPoint(point.location)\n\n          point.modifyFlag = VectorPointModifyFlagID.edit\n\n          if (index == searched_Last_PointIndex) {\n            break\n          }\n\n          index += current_IsForwardSearch ? 1 : -1\n        }\n      }\n\n      // ループが完成している場合、探索を終了\n      if (isLoopFinished) {\n\n        // 塗りつぶし頂点を追加\n        searchState.addPoint(this.currentLocation)\n\n        available_SearchState = searchState\n        break\n      }\n\n      // 次のストロークに移動\n      if (next_Stroke != null) {\n\n        if (next_IsCrossing) {\n\n          const next_IsForwardSearch = Logic_Points.isClockwise(\n            this.lastSegmentLocationFrom,\n            this.crossingLocation,\n            next_Stroke.points[next_SegmentIndex + 1].location\n          )\n\n          // 左に曲がる方向の探索\n          this.pushNext(\n            searchStateStack,\n            searchState,\n            next_Stroke,\n            next_SegmentIndex,\n            !next_IsForwardSearch,\n            this.crossingLocation\n          )\n\n          // 正面に進む方向の探索\n          this.pushNext(\n            searchStateStack,\n            searchState,\n            current_Stroke,\n            search_PointIndex,\n            current_IsForwardSearch,\n            this.crossingLocation\n          )\n\n          // 右に曲がる方向の探索（優先）\n          this.pushNext(\n            searchStateStack,\n            searchState,\n            next_Stroke,\n            next_SegmentIndex,\n            next_IsForwardSearch,\n            this.crossingLocation\n          )\n        }\n        else {\n\n          const next_IsForwardSearch = this.isForwardSearchAtSegment(this.nearestLocation, this.lastSegmentLocationTo, next_Stroke, next_SegmentIndex)\n\n          // 左に曲がる方向の探索\n          this.pushNext(\n            searchStateStack,\n            searchState,\n            next_Stroke,\n            next_SegmentIndex,\n            !next_IsForwardSearch,\n            this.nearestLocation\n          )\n\n          // 右に曲がる方向の探索（優先）\n          this.pushNext(\n            searchStateStack,\n            searchState,\n            next_Stroke,\n            next_SegmentIndex,\n            next_IsForwardSearch,\n            this.nearestLocation\n          )\n        }\n      }\n\n      // 最も評価値の高い経路を選択\n      if (isSegmentSearchEnd) {\n\n        if (available_SearchState == null || (available_SearchState.totalRotation < searchState.totalRotation)) {\n\n          available_SearchState = searchState\n        }\n      }\n    }\n\n    // フラグのクリア\n    for (const stroke of target_Strokes) {\n      VectorLayerLogic.clearStrokeModifyFlags(stroke)\n    }\n\n    // 結果を生成\n    const stateList: AutoFillSearchState[] = []\n    if (available_SearchState != null) {\n\n      let state = available_SearchState\n      while (state != null) {\n\n        stateList.push(state)\n        state = state.previousState\n      }\n    }\n    Lists.reverse(stateList)\n    // const pointTexts: string[] = []\n    for (const state of stateList) {\n      // console.debug(`result state: totalRotation=${state.totalRotation}`)\n      // pointTexts.push('|')\n      // state.points.forEach(p => pointTexts.push(`(${p.location[0].toFixed(2)} ${p.location[1].toFixed(2)})`))\n      state.points.forEach(p => resultStroke.points.push(p))\n    }\n    // console.debug('result stroke', pointTexts.join(' '))\n\n    VectorStrokeLogic.calculateParameters(resultStroke)\n\n    return true\n  }\n\n  private static getTargetStrokes(viewKeyframeLayers: ViewKeyframeLayer[]) {\n\n    const target_Strokes: VectorStroke[] = []\n\n    ViewKeyframeLayer.forEachVectorGeometry(viewKeyframeLayers, (geometry) => {\n\n      for (const unit of geometry.units) {\n\n        for (const group of unit.groups) {\n\n          for (const stroke of group.lines) {\n\n            target_Strokes.push(stroke)\n          }\n        }\n      }\n    })\n\n    return target_Strokes\n  }\n\n  private static isForwardSearchAtSegment(resultNearestLocation: Vec3, currentLocation: Vec3, stroke: VectorStroke, segmentIndex: int): boolean {\n\n    const from_PointIndex = segmentIndex\n    const to_PointIndex = segmentIndex + 1\n\n    const from_Point = stroke.points[from_PointIndex]\n    const to_Point = stroke.points[to_PointIndex]\n\n    const from_Location = from_Point.location\n    const to_Location = to_Point.location\n\n    const normalizedPosition = Logic_Points.pointToLineSegment_NormalizedPosition(\n      from_Location,\n      to_Location,\n      currentLocation\n    )\n\n    if (normalizedPosition < 0.0) {\n\n      const isForwardSearch = this.isForwardSearchAtSegmentCorner(\n        resultNearestLocation,\n        currentLocation,\n        stroke,\n        from_PointIndex\n      )\n\n      return isForwardSearch\n    }\n    else if (normalizedPosition > 1.0) {\n\n      const isForwardSearch = this.isForwardSearchAtSegmentCorner(\n        resultNearestLocation,\n        currentLocation,\n        stroke,\n        to_PointIndex\n      )\n\n      return isForwardSearch\n    }\n    else {\n\n      const isAvailable = Logic_Points.pointToLine_NearestLocation(\n        resultNearestLocation,\n        from_Location,\n        to_Location,\n        currentLocation\n      )\n\n      if (!isAvailable) {\n        return true\n      }\n\n      const isForwardSearch = Logic_Points.isClockwise(\n        currentLocation,\n        resultNearestLocation,\n        to_Location\n      )\n\n      return isForwardSearch\n    }\n  }\n\n  private static isForwardSearchAtSegmentCorner(resultNearestLocation: Vec3, currentLocation: Vec3, stroke: VectorStroke, pointIndex: int): boolean {\n\n    const center_Point = stroke.points[pointIndex]\n\n    vec3.copy(resultNearestLocation, center_Point.location)\n\n    const isHead = (pointIndex <= 0)\n    const isTail = (pointIndex >= stroke.points.length - 1)\n\n    if (isHead || isTail) {\n\n      return isHead\n    }\n\n    const previous_Point = stroke.points[pointIndex - 1]\n    const next_Point = stroke.points[pointIndex + 1]\n\n    vec3.subtract(this.tangentPreviousVec, previous_Point.location, center_Point.location)\n    vec3.normalize(this.tangentPreviousVec, this.tangentPreviousVec)\n\n    vec3.subtract(this.tangentNextVec, next_Point.location, center_Point.location)\n    vec3.normalize(this.tangentNextVec, this.tangentNextVec)\n\n    vec3.subtract(this.tangentDirection, this.tangentNextVec, this.tangentPreviousVec)\n\n    vec3.add(this.tangentLocation, center_Point.location, this.tangentDirection)\n\n    const isForwardSearch = Logic_Points.isClockwise(\n      currentLocation,\n      center_Point.location,\n      this.tangentLocation\n    )\n\n    return isForwardSearch\n  }\n\n  private static isAvailableToNextSearch(stroke: VectorStroke, segmentIndex: int, isForwardSearch: boolean, currentLocation: Vec3): boolean {\n\n    const targetIndex = isForwardSearch ? segmentIndex + 1 : segmentIndex\n\n    if (targetIndex < 0 || targetIndex >= stroke.points.length) {\n      return false\n    }\n\n    const targetPoint = stroke.points[targetIndex]\n\n    return (vec3.distance(currentLocation, targetPoint.location) > 0.0)\n  }\n\n  private static pushNext(searchStateStack: AutoFillSearchState[], currentState: AutoFillSearchState, stroke: VectorStroke, segmentIndex: int, isForwardSearch: boolean, currentLocation: Vec3) {\n\n    if (!this.isAvailableToNextSearch(stroke, segmentIndex, isForwardSearch, currentLocation)) {\n      return\n    }\n\n    searchStateStack.push(new AutoFillSearchState(\n      stroke,\n      segmentIndex,\n      isForwardSearch,\n      currentLocation,\n      currentState\n    ))\n  }\n}\n","﻿import {\n  AutoFillLayer, AutoFillLayerKeyframe, AutoFillPointGroup, DocumentData, DrawLineTypeID,\n  EyesSymmetryInputSideID, FillAreaTypeID, ImageFileReferenceLayer, Layer, PaletteColor,\n  PosingData, PosingLayer, VectorLayerGeometryTypeID, VectorLayer, VectorLayerKeyframe, VectorLayerReferenceLayer,\n  VectorStroke, VectorStrokeDrawingUnit, VectorStrokeGroup\n} from '../document-data'\nimport { DocumentDataSerializingState } from '../document-logic'\n\nexport class DocumentMigration_v00_01_01 {\n\n  private static currentVersionString = '0.1.1'\n  private static nextVersionString = '0.1.2'\n\n  static matches(versionString: string): boolean {\n\n    return (versionString == this.currentVersionString)\n  }\n\n  static migrateDocumentData(documentData: DocumentData): string {\n\n    {\n      if (documentData.paletteColors == undefined) {\n\n        if (documentData['palletColors'] != undefined) {\n\n          (documentData as any)['paletteColors'] = documentData['palletColors']\n        }\n        else {\n\n          DocumentData.initializeDefaultPaletteColors(documentData)\n        }\n      }\n\n      for (const paletteColor of documentData.paletteColors) {\n\n        paletteColor.isSelected = false\n      }\n\n      while (documentData.paletteColors.length < DocumentData.maxPaletteColors) {\n\n        documentData.paletteColors.push(new PaletteColor())\n      }\n    }\n\n    if (documentData['exportingCount'] != undefined) {\n      delete documentData['exportingCount']\n    }\n\n    if (documentData['exportBackGroundType'] != undefined) {\n      delete documentData['exportBackGroundType']\n    }\n\n    return this.nextVersionString\n  }\n\n  static migrateLayer(layer: Layer): string {\n\n    if (layer.isRenderTarget == undefined) {\n      layer.isRenderTarget = true\n    }\n\n    if (layer.isMaskedByBelowLayer == undefined) {\n      layer.isMaskedByBelowLayer = false\n    }\n\n    if (layer.isListExpanded == undefined) {\n      layer.isListExpanded = true\n    }\n\n    return this.nextVersionString\n  }\n\n  static migrateVectorLayer(layer: Layer, state: DocumentDataSerializingState): string {\n\n    const vectorLayer = <VectorLayer>layer\n    vectorLayer['eyesSymmetryGeometry'] = null\n\n    if (vectorLayer.drawLineType == undefined) {\n\n      vectorLayer.drawLineType = DrawLineTypeID.layerColor\n    }\n\n    if (vectorLayer.fillAreaType == undefined) {\n\n      vectorLayer.fillAreaType = FillAreaTypeID.none\n    }\n\n    if (vectorLayer.fillColor == undefined) {\n\n      vectorLayer.fillColor = vec4.fromValues(1.0, 1.0, 1.0, 1.0)\n    }\n\n    if (vectorLayer['enableEyesSymmetry'] != undefined) {\n\n      vectorLayer.eyesSymmetryEnabled = vectorLayer['enableEyesSymmetry']\n    }\n\n    if (vectorLayer.eyesSymmetryEnabled == undefined) {\n\n      vectorLayer.eyesSymmetryEnabled = false\n      vectorLayer.eyesSymmetryInputSide = EyesSymmetryInputSideID.left\n      vectorLayer['posingLayer'] = null\n    }\n\n    if (vectorLayer['posingLayer'] != undefined) {\n\n      delete vectorLayer['posingLayer']\n    }\n\n    if (vectorLayer.line_PaletteColorIndex == undefined) {\n\n      vectorLayer.line_PaletteColorIndex = vectorLayer['line_PalletColorIndex'] || 0\n    }\n\n    if (vectorLayer.fill_PaletteColorIndex == undefined) {\n\n      vectorLayer.fill_PaletteColorIndex = vectorLayer['fill_PalletColorIndex'] || 0\n    }\n\n    if (vectorLayer.keyframes == undefined && vectorLayer['geometry'] != undefined) {\n\n      vectorLayer.keyframes = []\n      const keyframe = new VectorLayerKeyframe(VectorLayerGeometryTypeID.strokes)\n      keyframe.frame = 0\n      keyframe.geometry = vectorLayer['geometry']\n      vectorLayer.keyframes.push(keyframe)\n    }\n\n    if (vectorLayer.lineWidthBiasRate == undefined) {\n\n      vectorLayer.lineWidthBiasRate = 1.0\n    }\n\n    if (vectorLayer['geometry'] != undefined) {\n\n      delete vectorLayer['geometry']\n    }\n\n    if (vectorLayer['groups'] != undefined) {\n\n      delete vectorLayer['groups']\n    }\n\n    this.migrateStrokeGroups(vectorLayer)\n\n    this.migrateGeometry(vectorLayer)\n\n    return this.nextVersionString\n  }\n\n  static migrateGeometry(layer: VectorLayer) {\n\n    for (const keyframe of layer.keyframes) {\n\n      for (const unit of keyframe.geometry.units) {\n\n        for (const group of unit.groups) {\n\n          for (const stroke of group.lines) {\n\n            for (const point of stroke.points) {\n\n              if (point.lineWidth == undefined) {\n                point.lineWidth = 1.0\n              }\n\n              if (point['adjustedLocation'] != undefined) {\n                delete point['adjustedLocation']\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  static migrateStrokeGroups(layer: VectorLayer) {\n\n    for (const keyframe of layer.keyframes) {\n\n      if (keyframe.geometry['units'] == undefined && keyframe.geometry['groups'] != undefined) {\n\n        const new_units: VectorStrokeDrawingUnit[] = []\n\n        for (const group of keyframe.geometry['groups']) {\n\n          const old_lines: VectorStroke[] = group['lines']\n\n          let new_unit = new VectorStrokeDrawingUnit()\n          let new_group = new VectorStrokeGroup()\n\n          for (const line of old_lines) {\n\n            if (line['strokeWidth'] != undefined) {\n\n              delete line['strokeWidth']\n            }\n\n            new_group.lines.push(line)\n\n            if (!line['continuousFill']) {\n\n              new_unit.groups.push(new_group)\n              new_units.push(new_unit)\n\n              new_unit = new VectorStrokeDrawingUnit()\n              new_group = new VectorStrokeGroup()\n            }\n          }\n        }\n\n        if (new_units.length == 0) {\n\n          const new_unit = new VectorStrokeDrawingUnit()\n          new_units.push(new_unit)\n\n          const new_group = new VectorStrokeGroup()\n          new_unit.groups.push(new_group)\n        }\n\n        keyframe.geometry.units = new_units\n\n        delete keyframe.geometry['groups']\n      }\n    }\n  }\n\n  static migrateAutoFillLayer(layer: Layer): string {\n\n    const autoFillLayer = <AutoFillLayer>layer\n\n    if (autoFillLayer['fillPoints'] !== undefined) {\n\n      const group = new AutoFillPointGroup()\n      group.fillPoints = autoFillLayer['fillPoints']\n\n      const keyframe = new AutoFillLayerKeyframe()\n      keyframe.groups.push(group)\n      keyframe.geometry = autoFillLayer['geometry']\n\n      autoFillLayer.keyframes = [keyframe]\n    }\n\n    for (const keyframe of autoFillLayer.keyframes) {\n\n      for (const groups of keyframe.groups) {\n\n        for (const fillPoint of groups.fillPoints) {\n\n          if (fillPoint.minDistanceRange == undefined) {\n\n            fillPoint.minDistanceRange = 15.0\n          }\n        }\n      }\n    }\n\n    return this.nextVersionString\n  }\n\n  static migrateImageFileReferenceLayer(layer: Layer, state: DocumentDataSerializingState): string {\n\n    const ifrLayer = <ImageFileReferenceLayer>layer\n\n    ifrLayer['adjustingLocation'] = vec3.fromValues(0.0, 0.0, 0.0)\n    ifrLayer['adjustingRotation'] = vec3.fromValues(0.0, 0.0, 0.0)\n    ifrLayer['adjustingScale'] = vec3.fromValues(1.0, 1.0, 1.0)\n\n    if (ifrLayer.location == undefined) {\n\n      ifrLayer.location = vec3.fromValues(0.0, 0.0, 0.0)\n      ifrLayer.rotation = vec3.fromValues(0.0, 0.0, 0.0)\n      ifrLayer.scale = vec3.fromValues(1.0, 1.0, 1.0)\n    }\n\n    vec3.copy(ifrLayer['adjustingLocation'], ifrLayer.location)\n    vec3.copy(ifrLayer['adjustingRotation'], ifrLayer.rotation)\n    vec3.copy(ifrLayer['adjustingScale'], ifrLayer.scale)\n\n    return this.nextVersionString\n  }\n\n  static migratePosingLayer(layer: Layer, state: DocumentDataSerializingState): string {\n\n    const posingLayer = <PosingLayer>layer\n\n    posingLayer.posingData = { ...new PosingData(), ...posingLayer.posingData }\n\n    let posingData = posingLayer.posingData\n\n    if (posingData.real3DViewMeterPerPixel == undefined) {\n\n      const posingModel = posingLayer.posingModel\n      const radiusPx = posingData.headLocationInputData.radius\n      const real2DViewWidth = posingData.real3DViewHalfWidth / posingModel.headSphereSize * radiusPx\n\n      posingData.real3DViewMeterPerPixel = posingData.real3DViewHalfWidth * 2.0 / real2DViewWidth\n    }\n\n    posingLayer.posingModel = state.modelFile.posingModelDictionary.get('dummy_skin')\n\n    return this.nextVersionString\n  }\n}\n","﻿import {\n  FillAreaTypeID, Layer, LayerTypeID, VectorLayer, VectorStroke,\n  VectorStrokeGroup\n} from '../document-data'\n\nexport class DocumentMigration_v00_01_02 {\n\n  private static currentVersionString = '0.1.2'\n  private static nextVersionString = '0.1.3'\n\n  static matches(versionString: string): boolean {\n\n    return (versionString == this.currentVersionString)\n  }\n\n  static pass(): string {\n\n    return this.nextVersionString\n  }\n\n  static migrateVectorLayer(layer: Layer): string {\n\n    // 塗りをしているレイヤーを囲み塗りレイヤーに変換する\n\n    const vectorLayer = <VectorLayer>layer\n\n    if (vectorLayer.fillAreaType == FillAreaTypeID.none) {\n\n      for (const keyframe of vectorLayer.keyframes) {\n\n        for (const unit of keyframe.geometry.units) {\n\n          for (const group of unit.groups) {\n\n            group['type'] = 2 // VectorStrokeGroupTypeID.surroundingFill\n          }\n        }\n      }\n\n      return this.nextVersionString\n    }\n\n    vectorLayer.type = LayerTypeID.surroundingFillLayer\n\n    for (const keyframe of vectorLayer.keyframes) {\n\n      for (const unit of keyframe.geometry.units) {\n\n        const parted_stroke_groups: VectorStroke[][] = []\n\n        for (const group of unit.groups) {\n\n          let continued_strokes: VectorStroke[] = []\n\n          for (const stroke of group.lines) {\n\n            continued_strokes.push(stroke)\n\n            if (!stroke['continuousFill'] && continued_strokes.length > 0) {\n\n              parted_stroke_groups.push(continued_strokes)\n              continued_strokes = []\n            }\n          }\n\n          if (continued_strokes.length > 0) {\n            parted_stroke_groups.push(continued_strokes)\n          }\n        }\n\n        const new_groupes: VectorStrokeGroup[] = []\n\n        for (const strokes of parted_stroke_groups) {\n\n          const new_group = new VectorStrokeGroup()\n          new_group.lines = strokes\n\n          for (const stroke of strokes) {\n\n            if (stroke['continuousFill'] != undefined) {\n\n              delete stroke['continuousFill']\n            }\n          }\n\n          new_groupes.push(new_group)\n        }\n\n        unit.groups = new_groupes\n      }\n    }\n\n    return this.nextVersionString\n  }\n}\n","﻿import {\n  FillAreaTypeID, Layer, LayerTypeID, VectorLayerGeometryTypeID, VectorLayer, VectorStroke,\n  VectorStrokeGroup,\n  AutoFillLayer,\n  VectorStrokeGroup_RuntimeProperty\n} from '../document-data'\n\nexport class DocumentMigration_v00_01_03 {\n\n  private static currentVersionString = '0.1.3'\n  private static nextVersionString = '0.1.4'\n\n  static matches(versionString: string): boolean {\n\n    return (versionString == this.currentVersionString)\n  }\n\n  static migrateVectorLayer(layer: Layer): string {\n\n    // 仮対応。グループに持たせていたタイプをジオメトリに移動\n\n    const vectorLayer = <VectorLayer>layer\n\n    for (const keyframe of vectorLayer.keyframes) {\n\n      if (layer.type == LayerTypeID.vectorLayer) {\n\n        keyframe.geometry.type = VectorLayerGeometryTypeID.strokes\n      }\n      else if (layer.type == LayerTypeID.surroundingFillLayer || layer.type == LayerTypeID.autoFillLayer){\n\n        keyframe.geometry.type = VectorLayerGeometryTypeID.surroundingFill\n      }\n      else if (layer.type == LayerTypeID.pointBrushFillLayer){\n\n        keyframe.geometry.type = VectorLayerGeometryTypeID.pointBrushFill\n      }\n\n      for (const unit of keyframe.geometry.units) {\n\n        for (const group of unit.groups) {\n\n          if ('type' in group) {\n\n            delete group['type']\n          }\n        }\n      }\n    }\n\n    return this.nextVersionString\n  }\n\n  static migrateAutoFillLayer(layer: Layer): string {\n\n    const autoFillLayer = <AutoFillLayer>layer\n\n    for (const keyframe of autoFillLayer.keyframes) {\n\n      keyframe.geometry.type = VectorLayerGeometryTypeID.surroundingFill\n\n      for (const unit of keyframe.geometry.units) {\n\n        for (const group of unit.groups) {\n\n          if ('type' in group) {\n\n            delete group['type']\n          }\n        }\n      }\n    }\n\n    return this.nextVersionString\n  }\n}\n","﻿import { float } from 'app/common-logics'\nimport {\n  AutoFillLayer, DocumentData, ImageFileReferenceLayer, Layer, Layer_RuntimeProperty, VectorPointModifyFlagID,\n  PosingLayer, VectorLayer, VectorLayerGeometry_RuntimeProperty, VectorLayerReferenceLayer,\n  VectorLayerReferenceLayer_RuntimeProperty,\n  VectorLayer_RuntimeProperty,\n  VectorStrokeDrawingUnitModifyFlagID, VectorStrokeGroup_RuntimeProperty, VectorStroke_RuntimeProperty,\n  VectorLayerGeometry, VectorStrokeGroup, PosingLayer_RuntimeProperty, ImageFileReferenceLayer_RuntimeProperty\n} from '../document-data'\nimport { DocumentMigration_v00_01_01, DocumentMigration_v00_01_02, DocumentMigration_v00_01_03 } from '../document-migration'\nimport { DocumentDataSerializingState } from './serializing'\nimport { VectorStrokeLogic } from './vector-stroke'\n\nexport class DocumentDeserializingLogic {\n\n  static fixLoadedDocumentData(documentData: DocumentData, state: DocumentDataSerializingState) {\n\n    this.registerLayerRecursive(documentData.rootLayer, state)\n\n    let curentVersionString = documentData.version\n\n    this.fixDocumentData(documentData)\n\n    this.fixLayer_Recursive(curentVersionString, documentData.rootLayer, null, state)\n\n    documentData.version = DocumentData.versionString\n  }\n\n  private static registerLayerRecursive(layer: Layer, state: DocumentDataSerializingState) {\n\n    state.registerLayerToDeserialize(layer)\n\n    for (const childLayer of layer.childLayers) {\n\n      this.registerLayerRecursive(childLayer, state)\n    }\n  }\n\n  private static fixDocumentData(documentData: DocumentData) {\n\n    if (documentData.version == undefined) {\n      documentData.version = '0.1.1'\n    }\n\n    {\n      let curentVersionString = documentData.version\n\n      if (DocumentMigration_v00_01_01.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_01.migrateDocumentData(documentData)\n      }\n    }\n\n    const template_DocumentData = new DocumentData()\n\n    this.copyDefaultValue(documentData, template_DocumentData, 'animationSettingData')\n    this.copyDefaultValue(documentData, template_DocumentData, 'defaultViewScale')\n    this.copyDefaultValue(documentData, template_DocumentData, 'lineWidthBiasRate')\n    this.copyDefaultValue(documentData, template_DocumentData, 'documentFrame_HideOuterArea')\n    this.copyDefaultValue(documentData, template_DocumentData, 'exportImageSetting')\n\n    this.copyDefaultValue(documentData.animationSettingData, template_DocumentData.animationSettingData, 'onionSkinMode')\n    this.copyDefaultValue(documentData.animationSettingData, template_DocumentData.animationSettingData, 'onionSkinForwardLevel')\n    this.copyDefaultValue(documentData.animationSettingData, template_DocumentData.animationSettingData, 'onionSkinBackwardLevel')\n  }\n\n  private static copyDefaultValue<T>(targetData: T, templateData: T, propertyName: keyof(T)) {\n\n    if (targetData[propertyName] == undefined) {\n\n      targetData[propertyName] = templateData[propertyName]\n    }\n  }\n\n  private static fixLayer_Recursive(versionString: string, layer: Layer, parentLayer: Layer, state: DocumentDataSerializingState) {\n\n    layer.hashID = Layer.getHashID()\n\n    {\n      let curentVersionString = versionString\n\n      if (DocumentMigration_v00_01_01.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_01.migrateLayer(layer)\n      }\n    }\n\n    if (VectorLayer.isVectorLayerWithOwnData(layer)) {\n\n      let curentVersionString = versionString\n\n      if (DocumentMigration_v00_01_01.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_01.migrateVectorLayer(layer, state)\n      }\n\n      if (DocumentMigration_v00_01_02.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_02.migrateVectorLayer(layer)\n      }\n\n      if (DocumentMigration_v00_01_03.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_03.migrateVectorLayer(layer)\n      }\n\n      this.setRuntimePropertiesForVectorLayer(layer, state)\n      this.setRuntimePropertiesForVectorLayerContents(layer)\n    }\n    else if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n      let curentVersionString = versionString\n\n      if (DocumentMigration_v00_01_01.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_01.migrateAutoFillLayer(layer)\n      }\n      if (DocumentMigration_v00_01_02.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_02.pass()\n      }\n\n      if (DocumentMigration_v00_01_03.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_03.migrateAutoFillLayer(layer)\n      }\n\n      this.setRuntimePropertiesForAutoFillLayer(layer)\n    }\n    else if (VectorLayerReferenceLayer.isVectorLayerReferenceLayer(layer)) {\n\n      this.setRuntimePropertiesForVectorLayer(layer, state)\n      this.setRuntimePropertiesForVectorLayerReferenceLayer(layer, state)\n    }\n    else if (ImageFileReferenceLayer.isImageFileReferenceLayer(layer)) {\n\n      let curentVersionString = versionString\n\n      if (DocumentMigration_v00_01_01.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_01.migrateImageFileReferenceLayer(layer, state)\n      }\n\n      this.setRuntimePropertiesForImageFileReferenceLayer(layer)\n    }\n    else if (PosingLayer.isPosingLayer(layer)) {\n\n      let curentVersionString = versionString\n\n      if (DocumentMigration_v00_01_01.matches(curentVersionString)) {\n        curentVersionString = DocumentMigration_v00_01_01.migratePosingLayer(layer, state)\n      }\n\n      this.setRuntimePropertiesForPosingLayer(layer)\n    }\n\n    if (!layer.runtime) {\n\n      layer.runtime = new Layer_RuntimeProperty()\n    }\n\n    layer.runtime.parentLayer = parentLayer\n\n    for (const childLayer of layer.childLayers) {\n\n      this.fixLayer_Recursive(versionString, childLayer, layer, state)\n    }\n  }\n\n  static setRuntimePropertiesForVectorLayer(layer: Layer, state: DocumentDataSerializingState) {\n\n    const vectorLayer = <VectorLayer>layer\n\n    vectorLayer.runtime = new VectorLayer_RuntimeProperty()\n\n    if (vectorLayer.posingLayerID) {\n\n      vectorLayer.runtime.posingLayer = <PosingLayer>state.layerDictionary.get(vectorLayer.posingLayerID)\n\n      delete vectorLayer.posingLayerID\n\n      Layer.setLazyUpdateNeeded(vectorLayer)\n    }\n  }\n\n  static setRuntimePropertiesForVectorLayerContents(layer: Layer) {\n\n    const vectorLayer = <VectorLayer>layer\n\n    for (const keyframe of vectorLayer.keyframes) {\n\n      this.setRuntimePropertiesForVectorLayerGeometry(keyframe.geometry, vectorLayer.lineWidthBiasRate)\n    }\n  }\n\n  static setRuntimePropertiesForVectorLayerGeometry(geometry: VectorLayerGeometry, lineWidthBiasRate: float) {\n\n    geometry.runtime = new VectorLayerGeometry_RuntimeProperty()\n    geometry.runtime.needsPostUpdate = false\n\n    geometry.runtime.area.setMinimumValue()\n\n    for (const unit of geometry.units) {\n\n      unit.modifyFlag = VectorStrokeDrawingUnitModifyFlagID.none\n\n      for (const group of unit.groups) {\n\n        group.runtime = new VectorStrokeGroup_RuntimeProperty()\n\n        VectorStrokeGroup.setLazyUpdateNeeded(group)\n\n        for (const stroke of group.lines) {\n\n          stroke.runtime = new VectorStroke_RuntimeProperty()\n\n          for (const point of stroke.points) {\n\n            point.modifyFlag = VectorPointModifyFlagID.none\n\n            if (point.v !== undefined) {\n\n              point.location = vec3.fromValues(point.v[0], point.v[1], 0.0)\n              point.lineWidth = point.w\n              point.isSelected = (point.s == 1)\n\n              delete point.v\n              delete point.w\n              delete point.s\n            }\n\n            point.tempLocation = vec3.create()\n            point.adjustingLocation = vec3.clone(point.location)\n            point.adjustingLineWidth = point.lineWidth\n            point.adjustingLengthFrom = 1.0\n            point.adjustingLengthTo = 0.0\n            point.totalLength = 0.0\n            point.curvature = 0.0\n\n            point.location3D = vec3.create()\n          }\n\n          VectorStrokeLogic.calculateParameters(stroke, lineWidthBiasRate)\n        }\n\n        VectorStrokeLogic.calculateSurroundingArea(group.runtime.area, group.lines)\n\n        group.runtime.connectionInfos = VectorStrokeLogic.createConnectionInfos(group)\n\n        geometry.runtime.area.expandByRectangle(group.runtime.area)\n      }\n\n      geometry.runtime.area.calculateParams()\n    }\n  }\n\n  static setRuntimePropertiesForVectorLayerReferenceLayer(layer: Layer, state: DocumentDataSerializingState) {\n\n    const ifrLayer = <VectorLayerReferenceLayer>layer\n\n    ifrLayer.runtime = new VectorLayerReferenceLayer_RuntimeProperty()\n\n    if (ifrLayer.referenceLayerID) {\n\n      ifrLayer.runtime.referenceLayer = <VectorLayer>state.layerDictionary.get(ifrLayer.referenceLayerID)\n\n      delete ifrLayer.referenceLayerID\n    }\n  }\n\n  static setRuntimePropertiesForImageFileReferenceLayer(layer: Layer) {\n\n    const ifrLayer = <ImageFileReferenceLayer>layer\n\n    ifrLayer.runtime = new ImageFileReferenceLayer_RuntimeProperty()\n\n    vec3.copy(ifrLayer.runtime.adjustingLocation, ifrLayer.location)\n    vec3.copy(ifrLayer.runtime.adjustingRotation, ifrLayer.rotation)\n    vec3.copy(ifrLayer.runtime.adjustingScale, ifrLayer.scale)\n  }\n\n  static setRuntimePropertiesForAutoFillLayer(layer: Layer) {\n\n    const autoFillLayer = <AutoFillLayer>layer\n\n    autoFillLayer.runtime = new Layer_RuntimeProperty()\n\n    Layer.setLazyUpdateNeeded(autoFillLayer)\n\n    for (const keyframe of autoFillLayer.keyframes) {\n\n      this.setRuntimePropertiesForVectorLayerGeometry(keyframe.geometry, 1.0)\n    }\n  }\n\n  static setRuntimePropertiesForPosingLayer(layer: Layer) {\n\n    const posingLayer = <PosingLayer>layer\n\n    posingLayer.runtime = new PosingLayer_RuntimeProperty()\n  }\n\n  static finishResourceLoading(documentData: DocumentData) {\n\n    this.finishResourceLoading_Recursive(documentData.rootLayer)\n  }\n\n  private static finishResourceLoading_Recursive(layer: Layer) {\n\n    if (ImageFileReferenceLayer.isImageFileReferenceLayer(layer)) {\n\n      const ifrLayer = <ImageFileReferenceLayer>layer\n\n      ifrLayer.imageFirstLoading = false\n    }\n\n    for (const childLayer of layer.childLayers) {\n\n      this.finishResourceLoading_Recursive(childLayer)\n    }\n  }\n}\n","﻿import {\n  AnimatableDataObject, AnimationSettingData, AutoFillLayer, KeyframeDataObject, Layer, VectorLayer\n} from '../document-data'\nimport { int, Lists } from '../common-logics'\nimport { ViewKeyframe } from '../view'\n\nexport class EditAnimationFrameLogic {\n\n  static isAnimatableLayer(layer: Layer) {\n\n    return (VectorLayer.isVectorLayerWithOwnData(layer) || AutoFillLayer.isAutoFillLayer(layer))\n  }\n\n  static findLastKeyframeDataIndex<T extends KeyframeDataObject>(keyframes: T[], targetFrame: int): int {\n\n    let keyframeIndex = -1\n    for (let index = 0; index < keyframes.length; index++) {\n\n      const keyframe = keyframes[index]\n\n      if (keyframe.frame > targetFrame) {\n        break\n      }\n\n      keyframeIndex = index\n    }\n\n    return keyframeIndex\n  }\n\n  static findLastKeyframeData<T extends KeyframeDataObject>(keyframes: T[], targetFrame: int): T {\n\n    const keyframeIndex = EditAnimationFrameLogic.findLastKeyframeDataIndex(keyframes, targetFrame)\n\n    if (keyframeIndex == -1) {\n      return null\n    }\n\n    return keyframes[keyframeIndex]\n  }\n\n  static moveKeyframeData(currentViewKeyframe: ViewKeyframe, previousKeyframe: ViewKeyframe, nextKeyframe: ViewKeyframe, moveForward: boolean): boolean {\n\n    if (currentViewKeyframe == null) {\n      return\n    }\n\n    let add_FrameTime = 1\n    if (!moveForward) {\n      add_FrameTime = -1\n    }\n\n    let newFrame = currentViewKeyframe.frame + add_FrameTime\n\n    if (newFrame < 0) {\n      newFrame = 0\n    }\n\n    if (add_FrameTime > 0 && nextKeyframe != null && newFrame >= nextKeyframe.frame) {\n      newFrame = nextKeyframe.frame - 1\n    }\n\n    if (add_FrameTime < 0 && previousKeyframe != null && newFrame <= previousKeyframe.frame) {\n      newFrame = previousKeyframe.frame + 1\n    }\n\n    if (currentViewKeyframe.frame != newFrame) {\n\n      for (const viewKeyFrameLayer of currentViewKeyframe.layers) {\n\n        if (viewKeyFrameLayer.hasKeyframe()) {\n\n          if (viewKeyFrameLayer.vectorLayerKeyframe != null) {\n\n            viewKeyFrameLayer.vectorLayerKeyframe.frame = newFrame\n          }\n\n          if (viewKeyFrameLayer.autoFillLayerKeyframe != null) {\n\n            viewKeyFrameLayer.autoFillLayerKeyframe.frame = newFrame\n          }\n        }\n      }\n\n      currentViewKeyframe.frame = newFrame\n\n      return true\n    }\n\n    return false\n  }\n\n  static processInsertKeyframeData<T extends AnimatableDataObject<G>, G extends KeyframeDataObject>(layer: T, targetFrame: int, createKeyframeFunc: (last_KeyFrame: G) => G): G[] {\n\n    // Search index to insert and last keyframe\n    const keyframeIndex = EditAnimationFrameLogic.findLastKeyframeDataIndex(layer.keyframes, targetFrame)\n\n    if (keyframeIndex == -1) {\n      return\n    }\n\n    const last_KeyFrame = layer.keyframes[keyframeIndex]\n\n    if (last_KeyFrame.frame == targetFrame) {\n      return\n    }\n\n    // Create keyframe and insert\n    const newKeyframe = createKeyframeFunc(last_KeyFrame)\n    newKeyframe.frame = targetFrame\n\n    const newKeyFrames = Lists.clone(layer.keyframes)\n    if (keyframeIndex + 1 < newKeyFrames.length) {\n\n      Lists.insertAt(newKeyFrames, keyframeIndex + 1, newKeyframe)\n    }\n    else {\n\n      newKeyFrames.push(newKeyframe)\n    }\n\n    return newKeyFrames\n  }\n\n  static changeAnimationMaxFrame(aniSetting: AnimationSettingData, moveForward: boolean) {\n\n    let add_FrameTime = 1\n    if (!moveForward) {\n      add_FrameTime = -1\n    }\n\n    aniSetting.maxFrame += add_FrameTime\n\n    if (aniSetting.maxFrame < 0) {\n      aniSetting.maxFrame = 0\n    }\n\n    if (aniSetting.maxFrame > 10000) {\n      aniSetting.maxFrame = 10000\n    }\n  }\n\n  static changeLoopStartFrame(aniSetting: AnimationSettingData, moveForward: boolean) {\n\n    let add_FrameTime = 1\n    if (!moveForward) {\n      add_FrameTime = -1\n    }\n\n    aniSetting.loopStartFrame += add_FrameTime\n\n    if (aniSetting.loopStartFrame > aniSetting.loopEndFrame) {\n      aniSetting.loopStartFrame = aniSetting.loopEndFrame\n    }\n\n    if (aniSetting.loopStartFrame < 0) {\n      aniSetting.loopStartFrame = 0\n    }\n  }\n\n  static changeLoopEndFrame(aniSetting: AnimationSettingData, moveForward: boolean) {\n\n    let add_FrameTime = 1\n    if (!moveForward) {\n      add_FrameTime = -1\n    }\n\n    aniSetting.loopEndFrame += add_FrameTime\n\n    if (aniSetting.loopEndFrame < aniSetting.loopStartFrame) {\n      aniSetting.loopEndFrame = aniSetting.loopStartFrame\n    }\n\n    if (aniSetting.loopEndFrame < 0) {\n      aniSetting.loopEndFrame = 0\n    }\n  }\n}\n","﻿import { RectangleArea } from '../common-logics'\nimport {\n  VectorLayer, VectorLayerGeometry, VectorLayerGeometryTypeID, VectorPoint,\n  VectorStroke, VectorStrokeDrawingUnit, VectorStrokeGroup\n} from '../document-data'\nimport { Posing3DLogic, Posing3DView } from '../posing3d'\nimport { VectorStrokeLogic } from './vector-stroke'\n\nexport class EyesSymmetryLogic {\n\n  private static locationFront = vec3.create()\n  private static locationBack = vec3.create()\n  private static invMatrix = mat4.create()\n  private static mirrorMatrix = mat4.create()\n  private static oppositeTransformMatrix = mat4.create()\n  private static eyeLocation = vec3.create()\n  private static tempMat4 = mat4.create()\n  private static tempVec3 = vec3.create()\n\n  static updateEyesSymetries(vectorLayer: VectorLayer, geometry: VectorLayerGeometry, posing3DLogic: Posing3DLogic, posing3DView: Posing3DView) {\n\n    if (!(VectorLayer.isVectorLayerWithOwnData(vectorLayer) && vectorLayer.eyesSymmetryEnabled)) {\n        return\n    }\n\n    let existsUpdate = false\n    VectorLayerGeometry.forEachGroup(geometry, (group) => {\n\n      if (group.runtime.needsLazyUpdate) {\n        existsUpdate = true\n      }\n    })\n\n    if (!existsUpdate) {\n      return\n    }\n\n    const posingData = vectorLayer.runtime.posingLayer.posingData\n\n    posing3DView.caluculateCameraMatrix(posingData)\n\n    posing3DLogic.getEyeSphereLocation(this.eyeLocation, posingData, vectorLayer.eyesSymmetryInputSide)\n\n    // 反転処理の行列を計算\n    mat4.invert(this.invMatrix, posingData.headMatrix)\n    mat4.identity(this.mirrorMatrix)\n    mat4.scale(this.mirrorMatrix, this.mirrorMatrix, vec3.set(this.tempVec3, -1.0, 1.0 ,1.0))\n\n    mat4.multiply(this.tempMat4, posingData.headMatrix, this.mirrorMatrix)\n    mat4.multiply(this.oppositeTransformMatrix, this.tempMat4, this.invMatrix)\n\n    const eyeSize = posing3DLogic.getEyeSphereSize()\n\n    // console.debug('calculateEyesSymmetry', eyeSize, this.centimeter(this.eyeLocation))\n\n    vectorLayer.runtime.eyesSymmetryGeometry = new VectorLayerGeometry(VectorLayerGeometryTypeID.strokes)\n    const drawingUnit = new VectorStrokeDrawingUnit()\n    const strokeGroup = new VectorStrokeGroup()\n\n    VectorLayerGeometry.forEachGroup(geometry, (group) => {\n\n      // console.debug('group.isUpdated', group.isUpdated)\n\n      if (!group.runtime.needsLazyUpdate) {\n        return\n      }\n\n      group.runtime.needsLazyUpdate = false\n\n      for (const stroke of group.lines) {\n\n        const symmetryStroke = new VectorStroke()\n\n        for (const point of stroke.points) {\n\n          const hited = posing3DLogic.calculateInputLocation3DForDoubleSide(\n            this.locationFront,\n            this.locationBack,\n            point.location,\n            this.eyeLocation,\n            eyeSize,\n            posingData,\n            posing3DView\n          )\n\n          if (hited) {\n\n            vec3.copy(point.location3D, this.locationFront)\n\n            const symmetryPoint = VectorPoint.clone(point)\n            vec3.transformMat4(symmetryPoint.location3D, point.location3D, this.oppositeTransformMatrix)\n\n            posing3DView.calculate2DLocationFrom3DLocation(symmetryPoint.location, symmetryPoint.location3D, posingData)\n            vec3.copy(symmetryPoint.adjustingLocation, symmetryPoint.location)\n\n            symmetryStroke.points.push(symmetryPoint)\n          }\n        }\n\n        if (symmetryStroke.points.length > 0) {\n\n          VectorStrokeLogic.calculateParameters(symmetryStroke, vectorLayer.lineWidthBiasRate)\n\n          strokeGroup.lines.push(symmetryStroke)\n        }\n      }\n    })\n\n    drawingUnit.groups.push(strokeGroup)\n\n    vectorLayer.runtime.eyesSymmetryGeometry.units.push(drawingUnit)\n\n    const surroundingArea = RectangleArea.createMinumumValueRectangle()\n    for (const unite of vectorLayer.runtime.eyesSymmetryGeometry.units) {\n\n      for (const group of unite.groups) {\n\n        VectorStrokeLogic.calculateSurroundingArea(group.runtime.area, group.lines)\n\n        surroundingArea.expandByRectangle(group.runtime.area)\n      }\n    }\n    surroundingArea.calculateParams()\n    surroundingArea.copyTo(vectorLayer.runtime.eyesSymmetryGeometry.runtime.area)\n  }\n}\n","﻿import { Platform } from '../../platform'\nimport { int, Strings } from '../common-logics'\nimport { DocumentFileType } from '../document-data'\nimport { LocalSetting } from '../user-setting'\n\nexport class DocumentFileNameLogic {\n\n  private static fileNameCount = 1\n\n  static getDefaultDocumentFilePath(localSetting: LocalSetting): string {\n\n    const date = new Date()\n    const fileName = (''\n      + date.getFullYear() + ('0' + (date.getMonth() + 1)).slice(-2) + ('0' + date.getDate()).slice(-2)\n      + '_' + ('0' + this.fileNameCount).slice(-2)\n    )\n\n    this.fileNameCount++\n\n    const filePath = Platform.path.join(localSetting.currentDirectoryPath, `${fileName}.v.ora`)\n\n    return Platform.path.getPlatformIndependentPath(filePath)\n  }\n\n  static getExportFileName(filePath: string, autoNumberingEnabled: boolean, exportingCount: int) {\n\n    let fileName = Platform.path.getFileName(filePath)\n\n    const separatorDotIndex = Strings.indexOf(fileName, '.')\n\n    if (separatorDotIndex != -1 ) {\n\n      fileName = Strings.substring(fileName, 0, separatorDotIndex)\n    }\n\n    if (autoNumberingEnabled) {\n\n      let maxLength = exportingCount.toString().length\n      if (maxLength < 2) {\n        maxLength = 2\n      }\n      else {\n\n        maxLength = 4\n      }\n\n      fileName += ('0'.repeat(maxLength) + exportingCount).slice(-maxLength)\n    }\n\n    return fileName\n  }\n\n  static getDocumentFileTypeFromName(filePath: string): DocumentFileType {\n\n    let fileType = DocumentFileType.json\n    if (Strings.lastIndexOf(filePath, '.json') == filePath.length - 5) {\n\n      fileType = DocumentFileType.json\n    }\n    else if (Strings.lastIndexOf(filePath, '.ora') == filePath.length - 4) {\n\n      fileType = DocumentFileType.ora\n    }\n\n    return fileType\n  }\n\n  static getDocumentRelativeFilePath(documentFilePath: string, absoluteFilePath: string) {\n\n    let relativeDir = Platform.path.getRelativePath(\n      Platform.path.getDirectoryPath(documentFilePath),\n      Platform.path.getDirectoryPath(absoluteFilePath)\n    )\n\n    return Platform.path.join(relativeDir, Platform.path.getFileName(absoluteFilePath))\n  }\n}\n","﻿import { Layer } from '../document-data'\n\nexport class HierarchicalLayerInfo {\n\n  layer: Layer = null\n  children: Layer[] = null\n  parent: Layer = null\n}\n\nexport class LayerLogic {\n\n  static collectLayers(parentLayer: Layer): Layer[] {\n\n    return this.collectLayersRecursive([], parentLayer)\n  }\n\n  private static collectLayersRecursive(result: Layer[], parentLayer: Layer): Layer[] {\n\n    for (const layer of parentLayer.childLayers) {\n\n      result.push(layer)\n\n      if (layer.childLayers.length > 0) {\n\n        this.collectLayersRecursive(result, layer)\n      }\n    }\n\n    return result\n  }\n\n  static collectHierarchicalLayerInfoRecursive(result: HierarchicalLayerInfo[], parentLayer: Layer) {\n\n    for (const layer of parentLayer.childLayers) {\n\n      const info = new HierarchicalLayerInfo()\n      info.layer = layer\n      info.parent = parentLayer\n      info.children = layer.childLayers\n      result.push(info)\n\n      if (layer.childLayers.length > 0) {\n\n        this.collectHierarchicalLayerInfoRecursive(result, layer)\n      }\n    }\n  }\n\n  static updateHierarchicalSelectRecursive(parentLayer: Layer) {\n\n    for (const layer of parentLayer.childLayers) {\n\n      layer.isSelected = Layer.isSelected(parentLayer)\n\n      if (layer.childLayers.length > 0) {\n\n        this.updateHierarchicalSelectRecursive(layer)\n      }\n    }\n  }\n\n  static updateHierarchicalStatesRecursive(parentLayer: Layer) {\n\n    for (const layer of parentLayer.childLayers) {\n\n      layer.runtime.isHierarchicalVisible = layer.isVisible && Layer.isVisible(parentLayer)\n      layer.runtime.isHierarchicalListVisible = parentLayer.isListExpanded || parentLayer.runtime.isHierarchicalListVisible\n\n      if (layer.childLayers.length > 0) {\n\n        this.updateHierarchicalStatesRecursive(layer)\n      }\n    }\n  }\n}\n","﻿import { AnimatableLayer, Layer, VectorLayer, VectorLayerKeyframe, VectorLayerReferenceLayer } from '../document-data'\nimport { EditAnimationFrameLogic } from './edit-animation-frame'\n\ntype ReferenceTarget = Layer | VectorLayerKeyframe[]\n\ninterface ReplacedReferenceInfo {\n\n  propertyName: string\n  target: any\n  oldReference: ReferenceTarget\n  newReference: ReferenceTarget\n}\n\nexport class RefferenceUpdating {\n\n  private replacedReferenceInfos: ReplacedReferenceInfo[] = []\n\n  set(layer: Layer, oldReference: ReferenceTarget, newReference: ReferenceTarget) {\n\n    this.replaceReferenceRecursive(layer, oldReference, newReference)\n  }\n\n  private replaceReferenceRecursive(layer: Layer, oldReference: ReferenceTarget, newReference: ReferenceTarget) {\n\n    if (EditAnimationFrameLogic.isAnimatableLayer(layer)) {\n\n      const animatableLayer = <AnimatableLayer>layer\n\n      this.replaceProperty(animatableLayer, 'keyframes', oldReference, newReference)\n    }\n\n    if (VectorLayer.isVectorLayerWithOwnData(layer)) {\n\n      const vectorLayer = <VectorLayer>layer\n\n      this.replaceProperty(vectorLayer.runtime, 'posingLayer', oldReference, newReference)\n    }\n    else if (VectorLayerReferenceLayer.isVectorLayerReferenceLayer(layer)) {\n\n      const vRefLayer = <VectorLayerReferenceLayer>layer\n\n      this.replaceProperty(vRefLayer.runtime, 'referenceLayer', oldReference, newReference)\n      this.replaceProperty(vRefLayer, 'keyframes', oldReference, newReference)\n    }\n\n    for (const child of layer.childLayers) {\n\n      this.replaceReferenceRecursive(child, oldReference, newReference)\n    }\n  }\n\n  private replaceProperty<T extends object>(target: T, propertyKeyName: keyof(T), oldReference: ReferenceTarget, newReference: ReferenceTarget) {\n\n    const propertyName = String(propertyKeyName)\n\n    if ((propertyName in target) && target[propertyName] == oldReference) {\n\n      this.replacedReferenceInfos.push(\n        {\n          propertyName: propertyName,\n          target: target,\n          oldReference: target[propertyName],\n          newReference: newReference,\n        }\n      )\n\n      target[propertyName] = newReference\n    }\n  }\n\n  existsReplacedReference(): boolean {\n\n    return (this.replacedReferenceInfos.length > 0)\n  }\n\n  undoReplacedReferences() {\n\n    for (const unlinkedLayerInfo of this.replacedReferenceInfos) {\n\n      unlinkedLayerInfo.target[unlinkedLayerInfo.propertyName] = unlinkedLayerInfo.oldReference\n    }\n  }\n\n  redoReplacedReferences() {\n\n    for (const unlinkedLayerInfo of this.replacedReferenceInfos) {\n\n      unlinkedLayerInfo.target[unlinkedLayerInfo.propertyName] = unlinkedLayerInfo.newReference\n    }\n  }\n}\n","﻿import { float } from '../common-logics'\nimport {\n  VectorPointModifyFlagID, VectorLayerGeometryModifyFlagID, VectorStrokeGroupModifyFlagID, VectorLayer, VectorLayerGeometry, VectorStrokeModifyFlagID, VectorPoint,\n  VectorStroke, VectorStrokeGroup\n} from '../document-data'\nimport {\n  HitTest_VectorPoint_PointToPoint, HitTest_VectorStroke_PointToStroke,\n  IHitTest_VectorLayer\n} from './vector-layer-hittest'\n\nexport class VectorPointSelectionInfo {\n\n  point: VectorPoint = null\n  selectStateAfter = false\n  selectStateBefore = false\n}\n\nexport class VectorStrokeSelectionInfo {\n\n  stroke: VectorStroke = null\n  selectStateAfter = false\n  selectStateBefore = false\n}\n\nexport class VectorGroupSelectionInfo {\n\n  geometry: VectorLayerGeometry = null\n  layer: VectorLayer = null\n  group: VectorStrokeGroup = null\n}\n\nexport class VectorLayerSelectionInfo {\n\n  selectedGroups: VectorGroupSelectionInfo[] = null\n  selectedStrokess: VectorStrokeSelectionInfo[] = null\n  selectedPoints: VectorPointSelectionInfo[] = null\n\n  constructor() {\n\n    this.clear()\n  }\n\n  clear() {\n\n    this.selectedGroups = []\n    this.selectedStrokess = []\n    this.selectedPoints = []\n  }\n\n  isGroupDone(group: VectorStrokeGroup) {\n\n    return (group.runtime.modifyFlag != VectorStrokeGroupModifyFlagID.none)\n  }\n\n  isStrokeDone(stroke: VectorStroke) {\n\n    return (stroke.runtime.modifyFlag != VectorStrokeModifyFlagID.none)\n  }\n\n  isPointDone(point: VectorPoint) {\n\n    return (point.modifyFlag != VectorPointModifyFlagID.none)\n  }\n\n  selectPoint(stroke: VectorStroke, point: VectorPoint, editMode: SelectionEditMode) {\n\n    if (this.isPointDone(point)) {\n      return\n    }\n\n    if (\n      (editMode == SelectionEditMode.setSelected\n        || editMode == SelectionEditMode.toggle\n      )\n      && !point.isSelected\n    ) {\n\n      const selPoint = new VectorPointSelectionInfo()\n      selPoint.point = point\n      selPoint.selectStateAfter = true\n      selPoint.selectStateBefore = point.isSelected\n\n      this.selectedPoints.push(selPoint)\n\n      point.isSelected = selPoint.selectStateAfter\n      point.modifyFlag = VectorPointModifyFlagID.unselectedToSelected\n\n      this.selectLine(stroke, editMode)\n    }\n    else if (\n      (editMode == SelectionEditMode.setUnselected\n        || editMode == SelectionEditMode.toggle\n      )\n      && point.isSelected\n    ){\n\n      const selPoint = new VectorPointSelectionInfo()\n      selPoint.point = point\n      selPoint.selectStateAfter = false\n      selPoint.selectStateBefore = point.isSelected\n\n      this.selectedPoints.push(selPoint)\n\n      point.isSelected = selPoint.selectStateAfter\n      point.modifyFlag = VectorPointModifyFlagID.selectedToUnselected\n\n      this.selectLine(stroke, editMode)\n    }\n  }\n\n  selectLinePoints(stroke: VectorStroke, editMode: SelectionEditMode) {\n\n    for (const point of stroke.points) {\n\n      this.selectPoint(stroke, point, editMode)\n    }\n  }\n\n  selectLine(stroke: VectorStroke, editMode: SelectionEditMode) {\n\n    if (this.isStrokeDone(stroke)) {\n      return\n    }\n\n    const selInfo = new VectorStrokeSelectionInfo()\n    selInfo.stroke = stroke\n    selInfo.selectStateBefore = stroke.isSelected\n\n    if (editMode == SelectionEditMode.setSelected) {\n\n      selInfo.selectStateAfter = true\n      stroke.isSelected = true\n      stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.unselectedToSelected\n    }\n    else if (editMode == SelectionEditMode.setUnselected) {\n\n      selInfo.selectStateAfter = false\n      stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.selectedToUnselected\n    }\n    else if (editMode == SelectionEditMode.toggle) {\n\n      if (stroke.isSelected) {\n\n        selInfo.selectStateAfter = false\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.selectedToUnselected\n      }\n      else {\n\n        selInfo.selectStateAfter = true\n        stroke.isSelected = true\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.unselectedToSelected\n      }\n    }\n\n    this.selectedStrokess.push(selInfo)\n  }\n\n  selectLinePointsForLines(editMode: SelectionEditMode) {\n\n    for (const selLineInfo of this.selectedStrokess) {\n\n      for (const point of selLineInfo.stroke.points) {\n\n        this.selectPoint(selLineInfo.stroke, point, editMode)\n      }\n    }\n  }\n\n  editGroup(group: VectorStrokeGroup, geometry: VectorLayerGeometry, layer: VectorLayer) {\n\n    if (this.isGroupDone(group)) {\n      return\n    }\n\n    const selInfo = new VectorGroupSelectionInfo()\n    selInfo.layer = layer\n    selInfo.geometry = geometry\n    selInfo.group = group\n    this.selectedGroups.push(selInfo)\n\n    geometry.runtime.modifyFlag = VectorLayerGeometryModifyFlagID.edit\n    group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.edit\n  }\n\n  editStroke(stroke: VectorStroke) {\n\n    if (this.isStrokeDone(stroke)) {\n      return\n    }\n\n    const selInfo = new VectorStrokeSelectionInfo()\n    selInfo.stroke = stroke\n    this.selectedStrokess.push(selInfo)\n\n    stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.edit\n  }\n\n  editPoint(point: VectorPoint) {\n\n    if (this.isPointDone(point)) {\n      return\n    }\n\n    const selInfo = new VectorPointSelectionInfo()\n    selInfo.point = point\n    this.selectedPoints.push(selInfo)\n\n    point.modifyFlag = VectorPointModifyFlagID.edit\n  }\n\n  deletePoint(point: VectorPoint) {\n\n    if (this.isPointDone(point)) {\n      return\n    }\n\n    const selInfo = new VectorPointSelectionInfo()\n    selInfo.point = point\n    this.selectedPoints.push(selInfo)\n\n    point.modifyFlag = VectorPointModifyFlagID.delete\n  }\n\n  updateLineSelectionState() {\n\n    for (const selLineInfo of this.selectedStrokess) {\n\n      let existsSelectedPoint = false\n\n      for (const point of selLineInfo.stroke.points) {\n\n        if (point.isSelected) {\n          existsSelectedPoint = true\n          break\n        }\n      }\n\n      selLineInfo.selectStateAfter = existsSelectedPoint\n      selLineInfo.stroke.isSelected = existsSelectedPoint\n    }\n  }\n\n  resetModifyStates() {\n\n    for (const selGroup of this.selectedGroups) {\n\n      if (selGroup.geometry.runtime.modifyFlag != VectorLayerGeometryModifyFlagID.delete) {\n\n        selGroup.geometry.runtime.modifyFlag = VectorLayerGeometryModifyFlagID.none\n      }\n\n      if (selGroup.group.runtime.modifyFlag != VectorStrokeGroupModifyFlagID.delete) {\n\n        selGroup.group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.none\n      }\n    }\n\n    for (const selLine of this.selectedStrokess) {\n\n      if (selLine.stroke.runtime.modifyFlag != VectorStrokeModifyFlagID.delete) {\n\n        selLine.stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n      }\n    }\n\n    for (const selPoint of this.selectedPoints) {\n\n      if (selPoint.point.modifyFlag != VectorPointModifyFlagID.delete) {\n\n        selPoint.point.modifyFlag = VectorPointModifyFlagID.none\n      }\n    }\n  }\n\n  existsSelected() {\n\n    return (\n      this.selectedGroups.length > 0\n      || this.selectedStrokess.length > 0\n      || this.selectedPoints.length > 0\n    )\n  }\n}\n\nexport enum SelectionEditMode {\n\n  none = 0,\n  setSelected = 1,\n  setUnselected = 2,\n  toggle = 3\n}\n\nexport interface ISelector_VectorLayer extends IHitTest_VectorLayer {\n\n  editMode: SelectionEditMode\n  selectionInfo: VectorLayerSelectionInfo\n}\n\nexport class Selector_VectorPoint_BrushSelect extends HitTest_VectorPoint_PointToPoint implements ISelector_VectorLayer {\n\n  editMode = SelectionEditMode.none // @implements ISelector_VectorLayer\n  selectionInfo = new VectorLayerSelectionInfo() // @implements ISelector_VectorLayer\n\n  protected beforeHitTest() { // @override\n\n    this.selectionInfo.clear()\n  }\n\n  protected onPointHited(point: VectorPoint) { // @override\n\n    this.selectionInfo.selectPoint(this.currentStroke, point, this.editMode)\n  }\n\n  protected afterHitTest() { // @override\n\n    this.selectionInfo.updateLineSelectionState()\n\n    this.resetModifyStates()\n  }\n\n  resetModifyStates() {\n\n    this.selectionInfo.resetModifyStates()\n  }\n}\n\nexport class Selector_VectorStroke_BrushSelect extends HitTest_VectorStroke_PointToStroke implements ISelector_VectorLayer {\n\n  editMode = SelectionEditMode.none // @implements ISelector_VectorLayer\n  selectionInfo = new VectorLayerSelectionInfo() // @implements ISelector_VectorLayer\n\n  protected beforeHitTest() { // @override\n\n    this.selectionInfo.clear()\n  }\n\n  protected onLineSegmentHited(_point1: VectorPoint, _point2: VectorPoint, _location: Vec3, _minDistanceSQ: float, _distanceSQ: float) { // @override\n\n    this.selectionInfo.selectLine(this.currentStroke, this.editMode)\n\n    this.existsPointHitTest = true\n  }\n\n  protected afterHitTest() { // @override\n\n    this.selectionInfo.selectLinePointsForLines(this.editMode)\n\n    this.selectionInfo.updateLineSelectionState()\n\n    this.selectionInfo.resetModifyStates()\n  }\n}\n\nexport class Selector_StrokeSegment_BrushSelect extends HitTest_VectorStroke_PointToStroke implements ISelector_VectorLayer {\n\n  editMode = SelectionEditMode.none // @implements ISelector_VectorLayer\n  selectionInfo = new VectorLayerSelectionInfo() // @implements ISelector_VectorLayer\n\n  protected beforeHitTest() { // @override\n\n    this.selectionInfo.clear()\n  }\n\n  protected onLineSegmentHited(point1: VectorPoint, point2: VectorPoint, _location: Vec3, _minDistanceSQ: float, _distanceSQ: float) { // @override\n\n    this.selectionInfo.selectPoint(this.currentStroke, point1, this.editMode)\n    this.selectionInfo.selectPoint(this.currentStroke, point2, this.editMode)\n  }\n\n  protected afterHitTest() { // @override\n\n    this.selectionInfo.updateLineSelectionState()\n\n    this.selectionInfo.resetModifyStates()\n  }\n\n  resetModifyStates() {\n\n    this.selectionInfo.resetModifyStates()\n  }\n}\n","﻿import { float, int } from '../common-logics'\nimport {\n  AutoFillLayer,\n  DocumentData,\n  ImageFileReferenceLayer, Layer,\n  Layer_RuntimeProperty,\n  PosingLayer, VectorLayer, VectorLayerReferenceLayer\n} from '../document-data'\nimport { ModelFile } from '../posing3d'\nimport { RenderImage, WebGLRender } from '../render'\nimport { DocumentFileNameLogic } from './file-name'\n\nexport class DocumentDataSerializingState {\n\n  layers: Layer[] = []\n  infileLayerID = 0\n\n  layerDictionary = new Map<int, Layer>()\n\n  modelFile: ModelFile = null\n\n  registerLayerToSerialize(layer: Layer) {\n\n    layer.ID = this.infileLayerID\n\n    this.layers.push(layer)\n\n    this.infileLayerID++\n  }\n\n  registerLayerToDeserialize(layer: Layer) {\n\n    if (layer.ID === undefined) {\n      return\n    }\n\n    this.layerDictionary.set(layer.ID, layer)\n\n    delete layer.ID\n  }\n}\n\nexport class DocumentSerializingLogic {\n\n  static vec3ToArray(vec: Vec3): float[] {\n\n    return [vec[0], vec[1], vec[2]]\n  }\n\n  static vec4ToArray(vec: Vec4): float[] {\n\n    return [vec[0], vec[1], vec[2], vec[3]]\n  }\n\n  static duplicateDocumentDataForSave(documentData: DocumentData, save_filePath: string): DocumentData {\n\n    const state = new DocumentDataSerializingState()\n\n    this.setIDRecursive(documentData.rootLayer, state)\n    this.copyIDRecursive(documentData.rootLayer, state)\n\n    const result_documentData = JSON.parse(this.stringifyDocumentData(documentData))\n\n    this.fixLayersRecursive(result_documentData.rootLayer, save_filePath, state)\n\n    for (const paletteColor of result_documentData.paletteColors) {\n\n      delete paletteColor.isSelected\n\n      paletteColor.color = this.vec4ToArray(paletteColor.color)\n    }\n\n    return result_documentData\n  }\n\n  private static stringifyDocumentData(documentData: DocumentData): string {\n\n    const ignore_key_imageData: keyof(RenderImage) = 'imageData'\n    const ignore_key_runtime: keyof(Layer) = 'runtime'\n    const ignore_key_parentLayer: keyof(Layer_RuntimeProperty) = 'parentLayer'\n\n    return JSON.stringify(documentData, (key, value) => {\n\n      if (key == ignore_key_parentLayer\n        || key == ignore_key_imageData\n        || key == ignore_key_runtime\n      ) {\n\n        return null\n      }\n      else {\n\n        return value\n      }\n    })\n  }\n\n  private static setIDRecursive(layer: Layer, state: DocumentDataSerializingState) {\n\n    state.registerLayerToSerialize(layer)\n\n    for (const childLayer of layer.childLayers) {\n\n      this.setIDRecursive(childLayer, state)\n    }\n  }\n\n  private static copyIDRecursive(layer: Layer, state: DocumentDataSerializingState) {\n\n    if (VectorLayer.isVectorLayerWithOwnData(layer)) {\n\n      const vectorLayer = <VectorLayer>layer\n\n      if (vectorLayer.runtime.posingLayer != null) {\n\n        vectorLayer.posingLayerID = vectorLayer.runtime.posingLayer.ID\n      }\n    }\n    else if (VectorLayerReferenceLayer.isVectorLayerReferenceLayer(layer)) {\n\n      const vRefLayer = <VectorLayerReferenceLayer>layer\n\n      if (vRefLayer.runtime.referenceLayer != null) {\n\n        vRefLayer.referenceLayerID = vRefLayer.runtime.referenceLayer.ID\n      }\n    }\n\n    for (const childLayer of layer.childLayers) {\n\n      this.copyIDRecursive(childLayer, state)\n    }\n  }\n\n  static fixLayersRecursive(layer: Layer, save_filePath: string, state: DocumentDataSerializingState) {\n\n    delete layer.hashID\n    delete layer.runtime\n\n    layer.layerColor = this.vec4ToArray(layer.layerColor)\n\n    if (VectorLayer.isVectorLayerWithOwnData(layer)) {\n\n      const vectorLayer = <VectorLayer>layer\n\n      vectorLayer.fillColor = this.vec4ToArray(vectorLayer.fillColor)\n      delete vectorLayer.runtime\n\n      for (const keyframe of vectorLayer.keyframes) {\n\n        const geometry = keyframe.geometry\n        delete geometry.runtime\n\n        for (const unit of geometry.units) {\n\n          delete unit.modifyFlag\n\n          for (const group of unit.groups) {\n\n            delete group.runtime\n\n            for (const line of group.lines) {\n\n              delete line.runtime\n\n              for (const point of line.points) {\n\n                // データ量削減\n                point.v = this.vec3ToArray(point.location)\n                point.w = point.lineWidth\n                point.s = point.isSelected ? 1 : 0\n\n                delete point.location\n                delete point.lineWidth\n                delete point.isSelected\n                delete point.modifyFlag\n                delete point.tempLocation\n                delete point.adjustingLocation\n                delete point.adjustingLineWidth\n                delete point.adjustingLengthFrom\n                delete point.adjustingLengthTo\n                delete point.totalLength\n                delete point.curvature\n                delete point.location3D\n              }\n            }\n          }\n        }\n      }\n    }\n    else if (VectorLayerReferenceLayer.isVectorLayerReferenceLayer(layer)) {\n\n      const vRefLayer = <VectorLayerReferenceLayer>layer\n\n      delete vRefLayer.keyframes\n    }\n    else if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n      // const autoFillLayer = <AutoFillLayer>layer\n      // for (const keyframe of autoFillLayer.keyframes) {\n      //   for (const group of keyframe.groups) {\n      //     for (const fillPoint of group.fillPoints) {\n      //       delete fillPoint.startStroke\n      //     }\n      //   }\n      // }\n    }\n    else if (ImageFileReferenceLayer.isImageFileReferenceLayer(layer)) {\n\n      const ifrLayer = <ImageFileReferenceLayer>layer\n\n      ifrLayer.imageFilePath = DocumentFileNameLogic.getDocumentRelativeFilePath(save_filePath, ifrLayer.imageFilePath)\n\n      ifrLayer.location = this.vec3ToArray(ifrLayer.location)\n      ifrLayer.rotation = this.vec3ToArray(ifrLayer.rotation)\n      ifrLayer.scale = this.vec3ToArray(ifrLayer.scale)\n\n      delete ifrLayer.runtime\n    }\n    else if (PosingLayer.isPosingLayer(layer)) {\n\n      const posingLayer = <PosingLayer>layer\n\n      // TODO: Vec3、Vec4データも変換する\n\n      // TODO: 他のデータも削除する\n      delete posingLayer.posingData.bodyLocationInputData.parentMatrix\n      delete posingLayer.posingData.bodyLocationInputData.hitTestSphereRadius\n    }\n\n    for (const childLayer of layer.childLayers) {\n\n      this.fixLayersRecursive(childLayer, save_filePath, state)\n    }\n  }\n\n  static releaseDocumentResources(documentData: DocumentData, render: WebGLRender) {\n\n    this.releaseDocumentResources_Recursive(documentData.rootLayer, render)\n  }\n\n  static releaseDocumentResources_Recursive(layer: Layer, render: WebGLRender) {\n\n    if (VectorLayer.isVectorLayerWithOwnData(layer)) {\n\n      const vectorLayer = <VectorLayer>layer\n\n      for (const keyframe of vectorLayer.keyframes) {\n\n        for (const unit of keyframe.geometry.units) {\n\n          for (const group of unit.groups) {\n\n            if (group.runtime.buffer.buffer != null) {\n\n              render.deleteBuffer(group.runtime.buffer.buffer)\n              group.runtime.buffer.buffer = null\n            }\n          }\n        }\n      }\n    }\n\n    for (const childLayer of layer.childLayers) {\n\n      this.releaseDocumentResources_Recursive(childLayer, render)\n    }\n  }\n}\n","﻿import { DefferedProcessFlagging } from '../deffered-process'\nimport { SubToolContext } from '../context'\nimport { RefferenceUpdating } from '../document-logic'\n\nexport class CommandBase {\n\n  isContinued = false\n\n  readonly defferedProcess = new DefferedProcessFlagging()\n  readonly refferenceUpdate = new RefferenceUpdating()\n\n  execute(_ctx: SubToolContext) { // @virtual\n  }\n\n  undo(_ctx: SubToolContext) { // @virtual\n  }\n\n  redo(_ctx: SubToolContext) { // @virtual\n  }\n}\n","﻿import { CommandBase } from \"../command\"\nimport { Lists } from \"../common-logics\"\nimport { SubToolContext } from \"../context\"\nimport { PostUpdateSituationTypeID } from \"../deffered-process\"\nimport { VectorLayer, VectorLayerGeometry, VectorStrokeModifyFlagID, VectorStroke, VectorStrokeDrawingUnit, VectorStrokeGroup } from \"../document-data\"\nimport { VectorStrokeLogic } from \"../document-logic\"\n\nexport class Command_AddStroke extends CommandBase {\n\n  layer: VectorLayer = null\n  geometry: VectorLayerGeometry = null\n  drawingUnit: VectorStrokeDrawingUnit = null\n  group: VectorStrokeGroup = null\n  stroke: VectorStroke = null\n  addToTop = false\n\n  add_strokeGroup: VectorStrokeGroup | null = null\n  add_drawingUnit: VectorStrokeDrawingUnit | null = null\n\n  setTarget(layer: VectorLayer, geometry: VectorLayerGeometry, drawingUnit: VectorStrokeDrawingUnit | null, group: VectorStrokeGroup, stroke: VectorStroke) {\n\n    this.layer = layer\n    this.geometry = geometry\n    this.drawingUnit = drawingUnit\n    this.group = group\n    this.stroke = stroke\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    VectorStrokeLogic.calculateParameters(this.stroke, this.layer.lineWidthBiasRate)\n\n    if (this.group == null) {\n\n      if (this.drawingUnit == null) {\n\n        this.add_drawingUnit = new VectorStrokeDrawingUnit()\n        this.drawingUnit = this.add_drawingUnit\n      }\n\n      this.add_strokeGroup = new VectorStrokeGroup()\n      this.group = this.add_strokeGroup\n    }\n\n    this.defferedProcess.addGroup(this.layer, this.group, PostUpdateSituationTypeID.changesObjectShapes)\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    if (this.add_drawingUnit != null) {\n\n      this.geometry.units.pop()\n    }\n\n    if (this.add_strokeGroup != null) {\n\n      this.drawingUnit.groups.pop()\n    }\n\n    if (this.addToTop) {\n\n      Lists.removeAt(this.group.lines, 0)\n    }\n    else {\n\n      this.group.lines.pop()\n    }\n\n    this.stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.delete\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    if (this.add_drawingUnit != null) {\n\n      this.geometry.units.push(this.add_drawingUnit)\n    }\n\n    if (this.add_strokeGroup != null) {\n\n      this.drawingUnit.groups.push(this.add_strokeGroup)\n    }\n\n    if (this.addToTop) {\n\n      Lists.insertAt(this.group.lines, 0, this.stroke)\n    }\n    else {\n\n      this.group.lines.push(this.stroke)\n    }\n\n    this.stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n  }\n}\n","﻿import { CommandBase } from \"../command\"\nimport { Lists } from \"../common-logics\"\nimport { SubToolContext } from \"../context\"\nimport { AutoFillLayer, AutoFillLayerKeyframe, Layer, VectorLayer, VectorLayerGeometry, VectorLayerKeyframe } from \"../document-data\"\nimport { EditAnimationFrameLogic, LayerLogic } from \"../document-logic\"\n\nexport class Command_Animation_InsertKeyframeAllLayer extends CommandBase {\n\n  frame = 0\n  rootLayer: Layer = null\n\n  prepareEditData(ctx: SubToolContext): boolean {\n\n    const layers = LayerLogic.collectLayers(ctx.documentData.rootLayer)\n\n    const targetFrame = this.frame\n\n    for (const layer of layers) {\n\n      if (!EditAnimationFrameLogic.isAnimatableLayer(layer)) {\n        continue\n      }\n\n      if (VectorLayer.isVectorLayer(layer)) {\n\n        const vectorLayer = <VectorLayer>layer\n\n        const newKeyframes = EditAnimationFrameLogic.processInsertKeyframeData<VectorLayer, VectorLayerKeyframe>(\n          vectorLayer,\n          targetFrame,\n          (last_KeyFrame) => {\n            const newKeyframe = new VectorLayerKeyframe(VectorLayerGeometry.getGeometryTypeForLayer(layer))\n            newKeyframe.geometry = JSON.parse(JSON.stringify(last_KeyFrame.geometry))\n            return newKeyframe\n          }\n        )\n\n        this.refferenceUpdate.set(this.rootLayer, vectorLayer.keyframes, newKeyframes)\n      }\n      else if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n        const autoFillLayer = <AutoFillLayer>layer\n\n        const newKeyframes = EditAnimationFrameLogic.processInsertKeyframeData<AutoFillLayer, AutoFillLayerKeyframe>(\n          autoFillLayer,\n          targetFrame,\n          (last_KeyFrame) => {\n            const newKeyframe = new AutoFillLayerKeyframe()\n            newKeyframe.groups = JSON.parse(JSON.stringify(last_KeyFrame.groups))\n            newKeyframe.geometry = JSON.parse(JSON.stringify(last_KeyFrame.geometry))\n            return newKeyframe\n          }\n        )\n\n        this.refferenceUpdate.set(this.rootLayer, autoFillLayer.keyframes, newKeyframes)\n      }\n    }\n\n    return this.isAvailable(ctx)\n  }\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    return this.refferenceUpdate.existsReplacedReference()\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    ctx.updateLayerStructure()\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    this.refferenceUpdate.undoReplacedReferences()\n\n    ctx.updateLayerStructure()\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    this.refferenceUpdate.redoReplacedReferences()\n\n    ctx.updateLayerStructure()\n  }\n}\n\nexport class Command_Animation_DeleteKeyframeAllLayer extends CommandBase {\n\n  frame = 0\n  rootLayer: Layer = null\n\n  prepareEditData(ctx: SubToolContext): boolean {\n\n    const layers = LayerLogic.collectLayers(ctx.documentData.rootLayer)\n\n    const targetFrame = this.frame\n\n    for (const layer of layers) {\n\n      if (!VectorLayer.isVectorLayerWithOwnData(layer)) {\n        continue\n      }\n\n      const vectorLayer = <VectorLayer>layer\n\n      // Search index to insert and last keyframe\n      const keyframeIndex = EditAnimationFrameLogic.findLastKeyframeDataIndex(vectorLayer.keyframes, targetFrame)\n\n      if (keyframeIndex == -1) {\n        continue\n      }\n\n      const last_KeyFrame = vectorLayer.keyframes[keyframeIndex]\n\n      if (last_KeyFrame.frame != targetFrame) {\n        continue\n      }\n\n      const newKeyFrames = Lists.clone(vectorLayer.keyframes)\n      Lists.removeAt(newKeyFrames, keyframeIndex)\n\n      this.refferenceUpdate.set(this.rootLayer, vectorLayer.keyframes, newKeyFrames)\n    }\n\n    return this.isAvailable(ctx)\n  }\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    return this.refferenceUpdate.existsReplacedReference()\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    ctx.updateLayerStructure()\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    this.refferenceUpdate.undoReplacedReferences()\n\n    ctx.updateLayerStructure()\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    this.refferenceUpdate.redoReplacedReferences()\n\n    ctx.updateLayerStructure()\n  }\n}\n","﻿import { Platform } from \"../../platform\"\nimport { CommandBase } from \"../command\"\nimport { Lists } from \"../common-logics\"\nimport { SubToolContext } from \"../context\"\nimport { PostUpdateSituationTypeID } from \"../deffered-process\"\nimport {\n  Layer, VectorLayer, VectorLayerGeometry, VectorPoint, VectorStroke, VectorStrokeDrawingUnit,\n  VectorStrokeGroup,\n  VectorStrokeGroup_RuntimeProperty,\n  VectorStroke_RuntimeProperty\n} from \"../document-data\"\nimport { VectorStrokeLogic } from \"../document-logic\"\n\nclass Command_EditGeometry_ClipbardData {\n\n  static data_version = 'MTT_CLPBD_V001'\n  data_version = Command_EditGeometry_ClipbardData.data_version\n  copy_layers: Command_EditGeometry_CopyLayer[] = []\n}\n\nclass Command_EditGeometry_CopyLayer {\n\n  name = ''\n  drawingUnits: VectorStrokeDrawingUnit[] = []\n}\n\nexport class Command_CopyGeometry extends CommandBase {\n\n  copy_layers: Command_EditGeometry_CopyLayer[] = null\n\n  isAvailable(_ctx: SubToolContext): boolean {\n\n    return (this.copy_layers != null)\n  }\n\n  prepareEditData(ctx: SubToolContext): boolean {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    const copy_layers: Command_EditGeometry_CopyLayer[] = []\n\n    for (const viewKeyframeLayer of viewKeyframeLayers) {\n\n      if (!VectorLayer.isVectorLayer(viewKeyframeLayer.layer)) {\n        continue\n      }\n\n      const copy_units: VectorStrokeDrawingUnit[] = []\n\n      for (const unit of viewKeyframeLayer.vectorLayerKeyframe.geometry.units) {\n\n        const copy_groups: VectorStrokeGroup[] = []\n\n        for (const group of unit.groups) {\n\n          const copy_strokes: VectorStroke[] = []\n\n          for (const stroke of group.lines) {\n\n            if (!stroke.isSelected) {\n              continue\n            }\n\n            const copy_stroke = new VectorStroke()\n\n            for (const point of stroke.points) {\n\n              if (!point.isSelected) {\n                continue\n              }\n\n              copy_stroke.points.push(VectorPoint.clone(point))\n            }\n\n            if (copy_stroke.points.length > 0) {\n\n              copy_strokes.push(copy_stroke)\n            }\n          }\n\n          if (copy_strokes.length > 0) {\n\n            const new_group = new VectorStrokeGroup()\n            new_group.lines = copy_strokes\n\n            copy_groups.push(new_group)\n          }\n        }\n\n        if (copy_groups.length > 0) {\n\n          const new_unit = new VectorStrokeDrawingUnit()\n          new_unit.groups = copy_groups\n\n          copy_units.push(new_unit)\n        }\n      }\n\n      if (copy_units.length > 0) {\n\n        const copy_layer = new Command_EditGeometry_CopyLayer()\n        copy_layer.name = viewKeyframeLayer.layer.name\n        copy_layer.drawingUnits = copy_units\n\n        copy_layers.push(copy_layer)\n      }\n    }\n\n    if (copy_layers.length > 0) {\n\n      this.copy_layers = copy_layers\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  execute(_ctx: SubToolContext) { // @override\n\n    const clipboardData = new Command_EditGeometry_ClipbardData()\n    clipboardData.copy_layers = this.copy_layers\n\n    Platform.clipboard.writeText(JSON.stringify(clipboardData))\n      .then()\n  }\n}\n\nclass Command_EditGeometry_EditLayer {\n\n  targeLayer: Layer = null\n\n  targetGeometry: VectorLayerGeometry = null\n  oldUnits: VectorStrokeDrawingUnit[] = null\n  newUnits: VectorStrokeDrawingUnit[] = []\n\n  targetGroup: VectorStrokeGroup = null\n  oldStrokes: VectorStroke[] = null\n  newStrokes: VectorStroke[] = []\n}\n\nexport class Command_PasteGeometry extends CommandBase {\n\n  editLayers: Command_EditGeometry_EditLayer[] | null = null\n  select_strokes: VectorStroke[] = []\n\n  isAvailable(_ctx: SubToolContext): boolean {\n\n    return (this.editLayers != null)\n  }\n\n  async prepareEditData(ctx: SubToolContext): Promise<boolean> {\n\n    if (!VectorLayer.isVectorLayerWithOwnData(ctx.currentLayer)) {\n      return false\n    }\n\n    const clipboardData = await this.getClipboardData()\n\n    if (!clipboardData.isAvailable) {\n      return false\n    }\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    const editLayers: Command_EditGeometry_EditLayer[] = []\n    const new_groups: VectorStrokeGroup[] = []\n    const new_strokes: VectorStroke[] = []\n\n    for (const copy_layer of clipboardData.copy_layers) {\n\n      let target_viewKeyframeLayer = viewKeyframeLayers\n        .find(viewKeyframeLayer => viewKeyframeLayer.layer.isSelected && viewKeyframeLayer.layer.name == copy_layer.name)\n\n      if (!target_viewKeyframeLayer) {\n        target_viewKeyframeLayer = viewKeyframeLayers.find(viewKeyframeLayer => viewKeyframeLayer.layer.isSelected)\n      }\n\n      const isAvailableToPaste = (target_viewKeyframeLayer && VectorLayer.isVectorLayerWithOwnData(target_viewKeyframeLayer.layer))\n      if (!isAvailableToPaste) {\n        continue\n      }\n\n      let editLayer = editLayers\n        .find(editLayer => editLayer.targeLayer == target_viewKeyframeLayer.layer)\n\n      let isNewEditLayer = false\n\n      if (!editLayer) {\n\n        editLayer = new Command_EditGeometry_EditLayer()\n        editLayer.targeLayer = target_viewKeyframeLayer.layer\n        isNewEditLayer = true\n      }\n\n      if (VectorLayer.isSurroundingFillLayer(target_viewKeyframeLayer.layer)) {\n\n        if (isNewEditLayer) {\n\n          editLayer.targetGeometry = target_viewKeyframeLayer.vectorLayerKeyframe.geometry\n          editLayer.oldUnits = editLayer.targetGeometry.units\n          Lists.addRange(editLayer.newUnits, editLayer.oldUnits)\n        }\n\n        Lists.addRange(editLayer.newUnits, copy_layer.drawingUnits)\n\n        for (const unit of copy_layer.drawingUnits) {\n\n          for (const group of unit.groups) {\n\n            this.defferedProcess.addGroup(target_viewKeyframeLayer.layer, group, PostUpdateSituationTypeID.addObjects)\n\n            this.calculateStrokeParameters(group.lines, target_viewKeyframeLayer.layer)\n\n            new_groups.push(group)\n            Lists.addRange(new_strokes, group.lines)\n          }\n        }\n      }\n      else {\n\n        if (isNewEditLayer) {\n\n          editLayer.targetGroup = target_viewKeyframeLayer.vectorLayerKeyframe.geometry.units[0].groups[0]\n          editLayer.oldStrokes = editLayer.targetGroup.lines\n          Lists.addRange(editLayer.newStrokes, editLayer.oldStrokes)\n        }\n\n        for (const unit of copy_layer.drawingUnits) {\n\n          for (const group of unit.groups) {\n\n            this.calculateStrokeParameters(group.lines, target_viewKeyframeLayer.layer)\n\n            Lists.addRange(editLayer.newStrokes, group.lines)\n\n            new_groups.push(group)\n            Lists.addRange(new_strokes, group.lines)\n          }\n        }\n\n        this.defferedProcess.addGroup(target_viewKeyframeLayer.layer, editLayer.targetGroup, PostUpdateSituationTypeID.addObjects)\n      }\n\n      editLayers.push(editLayer)\n\n      this.defferedProcess.addLayer(target_viewKeyframeLayer.layer)\n    }\n\n    // TODO: コピーしたオブジェクトのメソッドが消えてしまうため取り急ぎ再生成することにしたが、後できちんとする\n    for (const group of new_groups) {\n\n      group.runtime = new VectorStrokeGroup_RuntimeProperty()\n    }\n\n    if (editLayers.length > 0) {\n\n      this.editLayers = editLayers\n      this.select_strokes = new_strokes\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  private calculateStrokeParameters(strokes: VectorStroke[], layer: Layer) {\n\n    const vectorLayer = <VectorLayer>layer\n\n    for (const stroke of strokes) {\n\n      stroke.runtime = new VectorStroke_RuntimeProperty()\n      VectorStrokeLogic.calculateParameters(stroke, vectorLayer.lineWidthBiasRate)\n    }\n  }\n\n  async getClipboardData(): Promise<{ isAvailable: boolean, copy_layers: Command_EditGeometry_CopyLayer[] }> {\n\n    const availableFormats = await Platform.clipboard.availableFormats()\n\n    if (availableFormats.length == 0 && availableFormats[0] != 'text/plains') {\n      return { isAvailable: false, copy_layers: null }\n    }\n\n    let copy_layers: Command_EditGeometry_CopyLayer[]\n\n    try {\n\n      const text = await Platform.clipboard.readText()\n\n      const clipboardData: Command_EditGeometry_ClipbardData = JSON.parse(text)\n\n      const isAvailableData = (\n        clipboardData\n        && clipboardData.data_version === Command_EditGeometry_ClipbardData.data_version\n        && Array.isArray(clipboardData.copy_layers)\n      )\n\n      if (!isAvailableData) {\n        return { isAvailable: false, copy_layers: null }\n      }\n\n      copy_layers = clipboardData.copy_layers\n    }\n    catch (e) {\n\n      return { isAvailable: false, copy_layers: null }\n    }\n\n    return { isAvailable: true, copy_layers: copy_layers }\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editLayer of this.editLayers) {\n\n      if (editLayer.targetGeometry) {\n        editLayer.targetGeometry.units = editLayer.oldUnits\n      }\n\n      if (editLayer.targetGroup) {\n        editLayer.targetGroup.lines = editLayer.oldStrokes\n      }\n    }\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editLayer of this.editLayers) {\n\n      if (editLayer.targetGeometry) {\n        editLayer.targetGeometry.units = editLayer.newUnits\n      }\n\n      if (editLayer.targetGroup) {\n        editLayer.targetGroup.lines = editLayer.newStrokes\n      }\n\n      for (const stroke of this.select_strokes) {\n\n        stroke.isSelected = true\n\n        for (const point of stroke.points) {\n\n          point.isSelected = true\n        }\n      }\n    }\n  }\n}\n","﻿import { CommandBase } from \"../command\"\nimport { int, Lists } from \"../common-logics\"\nimport { SubToolContext } from \"../context\"\nimport { AutoFillLayer, DocumentData, DrawLineTypeID, EyesSymmetryInputSideID, FillAreaTypeID,\n  GroupLayer, ImageFileReferenceLayer, Layer, LayerTypeID, PointBrushFillLayer,\n  PosingLayer, SurroundingFillLayer, VectorLayerGeometryTypeID, VectorLayer,\n  VectorLayerGeometry,\n  VectorLayerKeyframe, VectorLayerReferenceLayer, VectorStrokeDrawingUnit, VectorStrokeGroup\n} from \"../document-data\"\n\nexport class Command_Layer_CommandBase extends CommandBase {\n\n  rootLayer: Layer = null\n\n  currentLayer: Layer = null\n  currentLayerParent: Layer = null\n  currentLayerIndex = -1\n\n  previousLayer: Layer = null\n  previousLayerParent: Layer = null\n  previousLayerIndex = -1\n\n  nextLayer: Layer = null\n  nextLayerParent: Layer = null\n  nextLayerIndex = -1\n\n  removeFrom_ParentLayer: Layer = null\n  removeFrom_OldChildLayerList: Layer[] = null\n  removeFrom_NewChildLayerList: Layer[] = null\n\n  insertTo_ParentLayer: Layer = null\n  insertTo_Layer_OldChildLayerList: Layer[] = null\n  insertTo_Layer_NewChildLayerList: Layer[] = null\n\n  reselect_layer: Layer = null\n\n  isAvailable(_ctx: SubToolContext): boolean { // @virtual\n\n    return false\n  }\n\n  setPrameters(documentData: DocumentData, currentLayer: Layer, currentLayerParent: Layer, previousLayer: Layer, previousLayerParent: Layer, nextLayer: Layer, nextLayerParent: Layer) {\n\n    this.rootLayer = documentData.rootLayer\n\n    this.currentLayer = currentLayer\n    this.currentLayerParent = currentLayerParent\n    this.currentLayerIndex = this.findChildLayerIndex(currentLayer)\n\n    this.previousLayer = previousLayer\n    this.previousLayerParent = previousLayerParent\n    this.previousLayerIndex = this.findChildLayerIndex(previousLayer)\n\n    this.nextLayer = nextLayer\n    this.nextLayerParent = nextLayerParent\n    this.nextLayerIndex = this.findChildLayerIndex(nextLayer)\n\n    if (this.currentLayerIndex < 0 || this.currentLayerIndex >= currentLayerParent.childLayers.length) {\n      throw new Error('ERROR 0000: Current layer index is invalid when setting command parameters')\n    }\n  }\n\n  protected findChildLayerIndex(childLayer: Layer): int {\n\n    if (childLayer == null || childLayer.runtime.parentLayer == null) {\n\n      return -1\n    }\n\n    for (let i = 0; i < childLayer.runtime.parentLayer.childLayers.length; i++) {\n\n      if (childLayer.runtime.parentLayer.childLayers[i] == childLayer) {\n\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  protected isFirstChildLayer(parentLayer: Layer, childLayer: Layer): boolean {\n\n    return (parentLayer.childLayers.length > 0 && parentLayer.childLayers[0] == childLayer)\n  }\n\n  protected isLastChildLayer(parentLayer: Layer, childLayer: Layer): boolean {\n\n    return (parentLayer.childLayers.length > 0 && parentLayer.childLayers[parentLayer.childLayers.length - 1] == childLayer)\n  }\n\n  protected isContainerLayer(layer: Layer): boolean {\n\n    return (Layer.isRootLayer(layer) || GroupLayer.isGroupLayer(layer))\n  }\n\n  protected executeLayerSwap(parentLayer: Layer, swapIndex1: int, swapIndex2: int, ctx: SubToolContext) {\n\n    if (swapIndex1 < 0 || swapIndex1 >= parentLayer.childLayers.length) {\n      throw new Error('ERROR 0000: Index 1 is out of range when swapping layers')\n    }\n\n    if (swapIndex2 < 0 || swapIndex2 >= parentLayer.childLayers.length) {\n      throw new Error('ERROR 0000: Index 2 is out of range when swapping layers')\n    }\n\n    this.insertTo_ParentLayer = parentLayer\n\n    this.insertTo_Layer_OldChildLayerList = parentLayer.childLayers\n\n    this.insertTo_Layer_NewChildLayerList = Lists.clone(parentLayer.childLayers)\n\n    const swapItem = this.insertTo_Layer_NewChildLayerList[swapIndex1]\n    this.insertTo_Layer_NewChildLayerList[swapIndex1] = this.insertTo_Layer_NewChildLayerList[swapIndex2]\n    this.insertTo_Layer_NewChildLayerList[swapIndex2] = swapItem\n\n    parentLayer.childLayers = this.insertTo_Layer_NewChildLayerList\n\n    this.reselect_layer = swapItem\n  }\n\n  protected executeLayerInsertToCurrent(layer: Layer, ctx: SubToolContext) {\n\n    let parentLayer: Layer\n    let insertIndex: int\n    if (GroupLayer.isGroupLayer(this.currentLayer)) {\n\n      parentLayer = this.currentLayer\n      insertIndex = 0\n    }\n    else {\n\n      parentLayer = this.currentLayerParent\n      insertIndex = this.currentLayerIndex\n    }\n\n    this.executeLayerInsert(parentLayer, insertIndex, layer, ctx)\n  }\n\n  protected executeLayerInsert(parentLayer: Layer, insertIndex: int, layer: Layer, ctx: SubToolContext) {\n\n    this.insertLayer(parentLayer, insertIndex, layer)\n\n    this.reselect_layer = layer\n  }\n\n  protected insertLayer(parentLayer: Layer, insertIndex: int, layer: Layer) {\n\n    this.insertTo_ParentLayer = parentLayer\n\n    this.insertTo_Layer_OldChildLayerList = parentLayer.childLayers\n\n    this.insertTo_Layer_NewChildLayerList = Lists.clone(parentLayer.childLayers)\n\n    if (insertIndex < this.insertTo_Layer_NewChildLayerList.length) {\n\n      Lists.insertAt(this.insertTo_Layer_NewChildLayerList, insertIndex, layer)\n    }\n    else {\n\n      this.insertTo_Layer_NewChildLayerList.push(layer)\n    }\n\n    parentLayer.childLayers = this.insertTo_Layer_NewChildLayerList\n\n    layer.runtime.parentLayer = parentLayer\n  }\n\n  protected executeLayerRemove(parentLayer: Layer, removeIndex: int, ctx: SubToolContext) {\n\n    this.removeFrom_ParentLayer = parentLayer\n\n    this.removeFrom_OldChildLayerList = parentLayer.childLayers\n\n    this.removeFrom_NewChildLayerList = Lists.clone(parentLayer.childLayers)\n\n    Lists.removeAt(this.removeFrom_NewChildLayerList, removeIndex)\n\n    parentLayer.childLayers = this.removeFrom_NewChildLayerList\n\n    if (this.previousLayer != null) {\n\n      this.reselect_layer = this.previousLayer\n    }\n    else if (this.nextLayer != null) {\n\n      this.reselect_layer = this.nextLayer\n    }\n  }\n\n  protected executeCurrentLayerRemove(ctx: SubToolContext) {\n\n    this.executeLayerRemove(this.currentLayerParent, this.currentLayerIndex, ctx)\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    if (this.insertTo_ParentLayer != null) {\n\n      this.insertTo_ParentLayer.childLayers = this.insertTo_Layer_OldChildLayerList\n\n      ctx.unsetCurrentLayer() // Needs before update layer structure\n    }\n\n    if (this.removeFrom_ParentLayer != null) {\n\n      this.removeFrom_ParentLayer.childLayers = this.removeFrom_OldChildLayerList\n    }\n\n    this.refferenceUpdate.undoReplacedReferences()\n\n    ctx.updateLayerStructure() // Needs update before change selection of layer\n\n    ctx.tool.selectLayer(this.currentLayer)\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    if (this.insertTo_ParentLayer != null) {\n\n      this.insertTo_ParentLayer.childLayers = this.insertTo_Layer_NewChildLayerList\n    }\n\n    if (this.removeFrom_ParentLayer != null) {\n\n      this.removeFrom_ParentLayer.childLayers = this.removeFrom_NewChildLayerList\n\n      ctx.unsetCurrentLayer() // Needs before update layer structure\n    }\n\n    this.refferenceUpdate.redoReplacedReferences()\n\n    ctx.updateLayerStructure() // Needs update before change selection of layer\n\n    ctx.tool.selectLayer(this.reselect_layer)\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n}\n\nexport class Command_Layer_CreateDefaultDocumentLayers extends Command_Layer_CommandBase {\n\n  executeWithoutRedraw(documentData: DocumentData, ctx: SubToolContext) {\n\n    const rootLayer = documentData.rootLayer\n    rootLayer.type = LayerTypeID.rootLayer\n\n    {\n      const layer1 = new VectorLayer()\n      layer1.name = ctx.document.getNewLayerName(LayerTypeID.vectorLayer, true)\n      layer1.runtime.parentLayer = rootLayer\n\n      const unit = new VectorStrokeDrawingUnit()\n      unit.groups.push(new VectorStrokeGroup())\n\n      const keyfarame = new VectorLayerKeyframe(VectorLayerGeometry.getGeometryTypeForLayer(layer1))\n      keyfarame.geometry.units.push(unit)\n\n      layer1.keyframes.push(keyfarame)\n\n      this.insertLayer(rootLayer, 0, layer1)\n    }\n  }\n}\n\nexport class Command_Layer_AddVectorLayerToCurrentPosition extends Command_Layer_CommandBase {\n\n  newLayer_layerType = LayerTypeID.none\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (!this.isContainerLayer(this.currentLayerParent)) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    switch (this.newLayer_layerType) {\n\n      case LayerTypeID.vectorLayer:\n        {\n          const newLayer = new VectorLayer()\n          newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n          newLayer.drawLineType = DrawLineTypeID.paletteColor\n          newLayer.fillAreaType = FillAreaTypeID.none\n          newLayer.keyframes.push(VectorLayerKeyframe.createWithDefaultGeometry(VectorLayerGeometryTypeID.strokes))\n          this.executeLayerInsertToCurrent(newLayer, ctx)\n        }\n        break\n\n      case LayerTypeID.surroundingFillLayer:\n        {\n          const newLayer = new SurroundingFillLayer()\n          newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n          newLayer.drawLineType = DrawLineTypeID.none\n          newLayer.fillAreaType = FillAreaTypeID.paletteColor\n          newLayer.keyframes.push(VectorLayerKeyframe.createWithDefaultGeometry(VectorLayerGeometryTypeID.surroundingFill))\n          this.executeLayerInsertToCurrent(newLayer, ctx)\n        }\n        break\n\n      case LayerTypeID.pointBrushFillLayer:\n        {\n          const newLayer = new PointBrushFillLayer()\n          newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n          newLayer.drawLineType = DrawLineTypeID.paletteColor\n          newLayer.fillAreaType = FillAreaTypeID.none\n          newLayer.keyframes.push(VectorLayerKeyframe.createWithDefaultGeometry(VectorLayerGeometryTypeID.pointBrushFill))\n          this.executeLayerInsertToCurrent(newLayer, ctx)\n        }\n        break\n    }\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_AddVectorLayerReferenceLayerToCurrentPosition extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (!this.isContainerLayer(this.currentLayerParent)) {\n\n      return false\n    }\n\n    if (!VectorLayer.isVectorLayerWithOwnData(this.currentLayer)) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const newLayer = new VectorLayerReferenceLayer()\n    newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n\n    newLayer.runtime.referenceLayer = <VectorLayer>(this.currentLayer)\n    newLayer.keyframes = newLayer.runtime.referenceLayer.keyframes\n\n    this.executeLayerInsertToCurrent(newLayer, ctx)\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_AddAutoFillLayerToCurrentPosition extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (!this.isContainerLayer(this.currentLayerParent)) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const newLayer = new AutoFillLayer()\n    newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n\n    this.executeLayerInsertToCurrent(newLayer, ctx)\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_AddGroupLayerToCurrentPosition extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (!this.isContainerLayer(this.currentLayerParent)) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const newLayer = new GroupLayer()\n    newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n\n    this.executeLayerInsertToCurrent(newLayer, ctx)\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_AddImageFileReferenceLayerToCurrentPosition extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (!this.isContainerLayer(this.currentLayerParent)) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const newLayer = new ImageFileReferenceLayer()\n    newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n\n    this.executeLayerInsertToCurrent(newLayer, ctx)\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_AddPosingLayerToCurrentPosition extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (!this.isContainerLayer(this.currentLayerParent)) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const newLayer = new PosingLayer()\n    newLayer.name = ctx.document.getNewLayerName(newLayer.type)\n\n    newLayer.posingModel = ctx.main.getPosingModelByName('dummy_skin')\n\n    this.executeLayerInsertToCurrent(newLayer, ctx)\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_Delete extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    if (Layer.isRootLayer(this.currentLayerParent) && this.currentLayerParent.childLayers.length == 1) {\n\n      return false\n    }\n\n    return true\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.executeCurrentLayerRemove(ctx)\n\n    this.refferenceUpdate.set(this.rootLayer, this.currentLayer, null)\n\n    this.redo(ctx)\n  }\n}\n\nenum LayerMoveOperationTypeID {\n  none,\n  moveUpToParent,\n  insertToLayer,\n  insertToLayerParent,\n  swapOrder\n}\n\nexport class Command_Layer_MoveUp extends Command_Layer_CommandBase {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    return (this.getOperationType() != LayerMoveOperationTypeID.none)\n  }\n\n  getOperationType(): LayerMoveOperationTypeID {\n\n    if (this.currentLayerParent.type != LayerTypeID.rootLayer\n      && this.isFirstChildLayer(this.currentLayerParent, this.currentLayer)) {\n\n      // 現在のレイヤーが親レイヤー配下の先頭である場合、一つ上のレイヤーに移動\n      return LayerMoveOperationTypeID.moveUpToParent\n    }\n\n    if (GroupLayer.isGroupLayer(this.previousLayer) && this.previousLayer.isListExpanded) {\n\n      // 上のレイヤーがグループレイヤーの場合、グループの末尾にレイヤーを挿入（リストが閉じている場合は除く）\n      return LayerMoveOperationTypeID.insertToLayer\n    }\n\n    if (this.previousLayerParent != null && this.previousLayerParent != this.currentLayerParent) {\n\n      // 上のレイヤーが別の親レイヤー配下の場合、その親レイヤーの末尾にレイヤーを挿入\n      return LayerMoveOperationTypeID.insertToLayerParent\n    }\n\n    if (this.previousLayerParent != null && this.previousLayerParent == this.currentLayerParent) {\n\n      // 上のレイヤーが同じ親レイヤー配下の場合、順番を入れ替える\n      return LayerMoveOperationTypeID.swapOrder\n    }\n\n    return LayerMoveOperationTypeID.none\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const operationType = this.getOperationType()\n\n    switch (operationType) {\n\n      case LayerMoveOperationTypeID.moveUpToParent:\n        this.executeCurrentLayerRemove(ctx)\n        this.executeLayerInsert(this.currentLayerParent.runtime.parentLayer, this.findChildLayerIndex(this.currentLayerParent), this.currentLayer, ctx)\n        break\n\n      case LayerMoveOperationTypeID.insertToLayer:\n        this.executeCurrentLayerRemove(ctx)\n        this.executeLayerInsert(this.previousLayer, this.previousLayer.childLayers.length, this.currentLayer, ctx)\n        break\n\n      case LayerMoveOperationTypeID.insertToLayerParent:\n        this.executeCurrentLayerRemove(ctx)\n        this.executeLayerInsert(this.previousLayerParent, this.previousLayerParent.childLayers.length, this.currentLayer, ctx)\n        break\n\n      case LayerMoveOperationTypeID.swapOrder:\n        this.executeLayerSwap(this.currentLayerParent, this.currentLayerIndex, this.currentLayerIndex - 1, ctx)\n        break\n    }\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_Layer_MoveDown extends Command_Layer_MoveUp {\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    return (this.getOperationType() != LayerMoveOperationTypeID.none)\n  }\n\n  getOperationType(): LayerMoveOperationTypeID {\n\n    if (this.currentLayerParent.type != LayerTypeID.rootLayer\n      && this.isLastChildLayer(this.currentLayerParent, this.currentLayer)) {\n\n      // 現在のレイヤーが親レイヤー配下の末尾である場合、一つ上のレイヤーに移動\n      return LayerMoveOperationTypeID.moveUpToParent\n    }\n\n    if (GroupLayer.isGroupLayer(this.nextLayer) && this.nextLayer.isListExpanded) {\n\n      // 下のレイヤーがグループレイヤーの場合、グループの末尾にレイヤーを挿入（リストが閉じている場合は除く）\n      return LayerMoveOperationTypeID.insertToLayer\n    }\n\n    if (this.nextLayerParent != null && this.nextLayerParent == this.currentLayerParent) {\n\n      // 下のレイヤーが同じ親レイヤー配下の場合、順番を入れ替える\n      return LayerMoveOperationTypeID.swapOrder\n    }\n\n    return LayerMoveOperationTypeID.none\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    const operationType = this.getOperationType()\n\n    switch (operationType) {\n\n      case LayerMoveOperationTypeID.moveUpToParent:\n        this.executeCurrentLayerRemove(ctx)\n        this.executeLayerInsert(this.currentLayerParent.runtime.parentLayer, this.findChildLayerIndex(this.currentLayerParent) + 1, this.currentLayer, ctx)\n        break\n\n      case LayerMoveOperationTypeID.insertToLayer:\n        this.executeCurrentLayerRemove(ctx)\n        this.executeLayerInsert(this.nextLayer, 0, this.currentLayer, ctx)\n        break\n\n      case LayerMoveOperationTypeID.swapOrder:\n        this.executeLayerSwap(this.currentLayerParent, this.currentLayerIndex, this.currentLayerIndex + 1, ctx)\n        break\n    }\n\n    this.redo(ctx)\n  }\n}\n\nexport class Command_VectorLayer_SetProperty extends CommandBase {\n\n  layer: VectorLayer\n  new_enableEyesSymmetry: boolean\n  new_posingLayer: PosingLayer\n  new_eyesSymmetryInputSide: EyesSymmetryInputSideID\n\n  old_enableEyesSymmetry: boolean\n  old_posingLayer: PosingLayer\n  old_eyesSymmetryInputSide: EyesSymmetryInputSideID\n\n  isAvailable(_ctx: SubToolContext): boolean {\n\n    if (this.layer) {\n\n      return true\n    }\n\n    return false\n  }\n\n  execute(ctx: SubToolContext) { // @virtual\n\n    this.old_enableEyesSymmetry = ctx.currentVectorLayer.eyesSymmetryEnabled\n    this.old_eyesSymmetryInputSide = ctx.currentVectorLayer.eyesSymmetryInputSide\n    this.old_posingLayer = ctx.currentVectorLayer.runtime.posingLayer\n\n    this.redo(ctx)\n  }\n\n  undo(ctx: SubToolContext) { // @virtual\n\n    this.layer.eyesSymmetryEnabled = this.old_enableEyesSymmetry\n    this.layer.eyesSymmetryInputSide = this.old_eyesSymmetryInputSide\n    this.layer.runtime.posingLayer = this.old_posingLayer\n\n    // console.log('undo', this.layer.enableEyesSymmetry, this.layer.posingLayer ? this.layer.posingLayer.name : null)\n\n    ctx.setRedrawLayerWindow()\n  }\n\n  redo(ctx: SubToolContext) { // @virtual\n\n    // console.log('execute', this.new_enableEyesSymmetry, this.new_posingLayer ? this.new_posingLayer.name : null)\n\n    if (this.new_enableEyesSymmetry !== undefined) {\n\n      this.layer.eyesSymmetryEnabled = this.new_enableEyesSymmetry\n\n      ctx.setRedrawLayerWindow()\n      ctx.setRedrawMainWindowEditorWindow()\n    }\n\n    if (this.new_eyesSymmetryInputSide !== undefined) {\n\n      this.layer.eyesSymmetryInputSide = this.new_eyesSymmetryInputSide\n\n      ctx.setRedrawLayerWindow()\n      ctx.setRedrawMainWindowEditorWindow()\n    }\n\n    if (this.new_posingLayer !== undefined) {\n\n      this.layer.runtime.posingLayer = this.new_posingLayer\n\n      ctx.setRedrawLayerWindow()\n      ctx.setRedrawMainWindowEditorWindow()\n    }\n  }\n}\n","﻿import { CommandBase } from \"../command\"\nimport { Strings } from \"../common-logics\"\nimport { SubToolContext } from \"../context\"\nimport { ImageFileReferenceLayer } from \"../document-data\"\nimport { DocumentFileNameLogic } from \"../document-logic\"\nimport { ImageResource } from \"../posing3d\"\n\nexport class Command_SetReferenceImageToLayer extends CommandBase {\n\n  targetLayer: ImageFileReferenceLayer = null\n  filePath: string = null\n  image: HTMLImageElement = null\n\n  private oldFilePath: string = null\n  private oldAbsoluteFilePath: string = null\n  private oldImage: HTMLImageElement = null\n  private oldLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private oldScale = vec3.fromValues(1.0, 1.0, 1.0)\n  private oldRotation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  private newFilePath: string = null\n  private newAbsoluteFilePath: string = null\n  private newImage: HTMLImageElement = null\n  private newLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private newScale = vec3.fromValues(1.0, 1.0, 1.0)\n  private newRotation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.oldFilePath = this.targetLayer.imageFilePath\n    this.oldAbsoluteFilePath = this.targetLayer.runtime.imageResource.filePath\n    this.oldImage = this.targetLayer.runtime.imageResource.image.imageData\n\n    vec3.copy(this.oldLocation, this.targetLayer.location)\n    vec3.copy(this.oldScale, this.targetLayer.scale)\n    vec3.copy(this.oldRotation, this.targetLayer.rotation)\n\n    this.newFilePath = DocumentFileNameLogic.getDocumentRelativeFilePath(ctx.documentFilePath, this.filePath)\n    this.newAbsoluteFilePath = this.filePath\n\n    this.newImage = this.image\n    vec3.set(this.newLocation, -this.newImage.width / 2, -this.newImage.height / 2, 0.0)\n    vec3.copy(this.oldLocation, this.targetLayer.location)\n\n    this.redo(ctx)\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    this.targetLayer.imageFilePath = this.oldFilePath\n    this.targetLayer.runtime.imageResource.filePath = this.oldAbsoluteFilePath\n    this.targetLayer.runtime.imageResource.image.imageData = this.oldImage\n\n    vec3.copy(this.targetLayer.location, this.oldLocation)\n    vec3.copy(this.targetLayer.scale, this.oldScale)\n    vec3.copy(this.targetLayer.rotation, this.oldRotation)\n\n    Command_SetReferenceImageToLayer.setLoadedState(this.targetLayer.runtime.imageResource)\n\n    ctx.setRedrawAllWindows()\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    this.targetLayer.imageFilePath = this.newFilePath\n    this.targetLayer.runtime.imageResource.filePath = this.newAbsoluteFilePath\n    this.targetLayer.runtime.imageResource.image.imageData = this.newImage\n\n    vec3.copy(this.targetLayer.location, this.newLocation)\n    vec3.copy(this.targetLayer.scale, this.newScale)\n    vec3.copy(this.targetLayer.rotation, this.newRotation)\n\n    Command_SetReferenceImageToLayer.setLoadedState(this.targetLayer.runtime.imageResource)\n\n    ctx.setRedrawAllWindows()\n  }\n\n  errorCheck() {\n\n    if (this.targetLayer == null) {\n      throw new Error('ERROR 0501:Command_LoadReferenceImageToLayer: layer is null!')\n    }\n\n    if (Strings.isNullOrEmpty(this.filePath)) {\n      throw new Error('ERROR 0502:Command_LoadReferenceImageToLayer: new file path is empty!')\n    }\n\n    if (this.image == null) {\n      throw new Error('ERROR 0503:Command_LoadReferenceImageToLayer: new image is null!')\n    }\n  }\n\n  static setLoadedState(imageResource: ImageResource) {\n\n    imageResource.loaded = (imageResource.image.imageData != null)\n    imageResource.error = false\n  }\n}\n\nexport class Command_LoadReferenceImageToLayer extends CommandBase {\n\n  targetLayer: ImageFileReferenceLayer = null\n  filePath: string = null\n\n  private oldFilePath: string = null\n  private newFilePath: string = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.errorCheck()\n\n    this.newFilePath = this.filePath\n    this.oldFilePath = this.targetLayer.imageFilePath\n\n    this.redo(ctx)\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    this.targetLayer.imageFilePath = this.oldFilePath\n    this.targetLayer.runtime.imageResource.loaded = false\n\n    ctx.main.startLoadingDocumentResourcesProcess(ctx.documentData)\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    this.targetLayer.imageFilePath = this.newFilePath\n    this.targetLayer.runtime.imageResource.loaded = false\n    this.targetLayer.imageFirstLoading = true\n\n    ctx.main.startLoadingDocumentResourcesProcess(ctx.documentData)\n  }\n\n  errorCheck() {\n\n    if (this.targetLayer == null) {\n      throw new Error('ERROR 0504:Command_LoadReferenceImageToLayer: layer is null!')\n    }\n\n    if (Strings.isNullOrEmpty(this.filePath)) {\n      throw new Error('ERROR 0505:Command_LoadReferenceImageToLayer: new file path is empty!')\n    }\n  }\n}\n","﻿import { CommandBase } from \"../command\"\nimport { int } from \"../common-logics\"\nimport { SubToolContext } from \"../context\"\nimport { Layer, VectorPointModifyFlagID, VectorLayer, VectorLayerGeometry, VectorStrokeModifyFlagID, VectorPoint, VectorStroke, VectorStrokeDrawingUnit,\n  VectorStrokeDrawingUnitModifyFlagID, VectorStrokeGroup, VectorStrokeGroupModifyFlagID\n} from \"../document-data\"\nimport { VectorStrokeLogic } from \"../document-logic\"\nimport { ViewKeyframeLayer } from \"../view\"\n\nclass EditGeometry {\n\n  geometry: VectorLayerGeometry = null\n  oldUnits: VectorStrokeDrawingUnit[] = null\n  newUnits: VectorStrokeDrawingUnit[] = null\n  deleteUnits: VectorStrokeDrawingUnit[] = null\n}\n\nclass EditDrawingUnit {\n\n  drawingUnit: VectorStrokeDrawingUnit = null\n  oldGroups: VectorStrokeGroup[] = null\n  newGroups: VectorStrokeGroup[] = null\n  deleteGroups: VectorStrokeGroup[] = null\n}\n\nclass EditGroup {\n\n  group: VectorStrokeGroup = null\n  oldStrokes: VectorStroke[] = null\n  newStrokes: VectorStroke[] = null\n  deleteStrokes: VectorStroke[] = null\n}\n\nclass EditStroke {\n\n  stroke: VectorStroke = null\n  old_points: VectorPoint[] = null\n  new_points: VectorPoint[] = null\n  delete_points: VectorPoint[] = null\n}\n\nclass VectorLayerDeleteEditDataSet {\n\n  target_layers: Layer[] = []\n  editGeometrys: EditGeometry[] = []\n  editDrawingUnits: EditDrawingUnit[] = []\n  editGroups: EditGroup[] = []\n  editStrokes: EditStroke[] = []\n\n  existsChanges(): boolean {\n\n    return (this.editGeometrys.length > 0\n      || this.editDrawingUnits.length > 0\n      || this.editGroups.length > 0\n      || this.editStrokes.length > 0\n      )\n  }\n}\n\nexport class Command_VectorLayer_Delete_Base extends CommandBase {\n\n  editDataSet: VectorLayerDeleteEditDataSet | null = null\n\n  prepare(ctx: SubToolContext): boolean {\n\n    const editDataSet = new VectorLayerDeleteEditDataSet()\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    this.setFlags(viewKeyframeLayers)\n\n    ViewKeyframeLayer.forEachVectorGeometry(viewKeyframeLayers, (geometry, layer) => {\n\n      this.processVectorGeometry(geometry, layer, editDataSet)\n    })\n\n    this.editDataSet = editDataSet\n\n    return this.editDataSet.existsChanges()\n  }\n\n  prepareForGeometry(geometry: VectorLayerGeometry, layer: Layer): boolean {\n\n    const editDataSet = new VectorLayerDeleteEditDataSet()\n\n    this.processVectorGeometry(geometry, layer, editDataSet)\n\n    this.editDataSet = editDataSet\n\n    return this.editDataSet.existsChanges()\n  }\n\n  protected setFlags(viewKeyframeLayers: ViewKeyframeLayer[]) { // @virtual\n\n    ViewKeyframeLayer.forEachVectorGeometry(viewKeyframeLayers, (geometry) => {\n\n      this.setFlagsForGeometry(geometry)\n    })\n  }\n\n  protected setFlagsForGeometry(geometry: VectorLayerGeometry) { // @virtual\n  }\n\n  protected processVectorGeometry(geometry: VectorLayerGeometry, layer: Layer, editDataSet: VectorLayerDeleteEditDataSet): int {\n\n    let deleteUnitCount = this.processDrawingUnits(geometry.units, editDataSet)\n\n    if (deleteUnitCount > 0) {\n\n      const editGeometry = new EditGeometry()\n      editGeometry.geometry = geometry\n      editGeometry.oldUnits = geometry.units\n      editGeometry.newUnits = geometry.units.filter(unit => unit.modifyFlag == VectorStrokeDrawingUnitModifyFlagID.none)\n      editGeometry.deleteUnits = geometry.units.filter(unit => unit.modifyFlag == VectorStrokeDrawingUnitModifyFlagID.delete)\n      editDataSet.editGeometrys.push(editGeometry)\n    }\n\n    for (const unit of geometry.units) {\n      unit.modifyFlag = VectorStrokeDrawingUnitModifyFlagID.none\n    }\n\n    if (editDataSet.existsChanges()) {\n\n      editDataSet.target_layers.push(layer)\n    }\n\n    return deleteUnitCount\n  }\n\n  protected processDrawingUnits(units: VectorStrokeDrawingUnit[], editDataSet: VectorLayerDeleteEditDataSet): int {\n\n    let deleteUnitCount = 0\n\n    for (const unit of units) {\n\n      let deletedGroupCount = this.processStrokeGroups(unit.groups, editDataSet)\n\n      if (unit.modifyFlag == VectorStrokeDrawingUnitModifyFlagID.delete\n        || unit.groups.length - deletedGroupCount == 0) {\n\n        unit.modifyFlag = VectorStrokeDrawingUnitModifyFlagID.delete\n        deleteUnitCount++\n      }\n\n      if (deletedGroupCount > 0) {\n\n        const editDrawingUnit = new EditDrawingUnit()\n        editDrawingUnit.drawingUnit = unit\n        editDrawingUnit.oldGroups = unit.groups\n        editDrawingUnit.newGroups = unit.groups.filter(group => group.runtime.modifyFlag == VectorStrokeGroupModifyFlagID.none)\n        editDrawingUnit.deleteGroups = unit.groups.filter(group => group.runtime.modifyFlag == VectorStrokeGroupModifyFlagID.delete)\n        editDataSet.editDrawingUnits.push(editDrawingUnit)\n      }\n\n      for (const group of unit.groups) {\n        group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.none\n      }\n    }\n\n    return deleteUnitCount\n  }\n\n  protected processStrokeGroups(groups: VectorStrokeGroup[], editDataSet: VectorLayerDeleteEditDataSet): int {\n\n    let deleteGroupCount = 0\n\n    for (const group of groups) {\n\n      const deletedStrokeCount = this.processStrokes(group.lines, editDataSet)\n\n      if (group.runtime.modifyFlag == VectorStrokeGroupModifyFlagID.delete\n        || group.lines.length - deletedStrokeCount == 0) {\n\n        group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.delete\n        deleteGroupCount++\n      }\n\n      if (deletedStrokeCount > 0) {\n\n        const editGroup = new EditGroup()\n        editGroup.group = group\n        editGroup.oldStrokes = group.lines\n        editGroup.newStrokes = group.lines.filter(stroke => stroke.runtime.modifyFlag == VectorStrokeModifyFlagID.none)\n        editGroup.deleteStrokes = group.lines.filter(stroke => stroke.runtime.modifyFlag == VectorStrokeModifyFlagID.delete)\n        editDataSet.editGroups.push(editGroup)\n      }\n\n      for (const stroke of group.lines) {\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n      }\n    }\n\n    return deleteGroupCount\n  }\n\n  protected processStrokes(strokes: VectorStroke[], editDataSet: VectorLayerDeleteEditDataSet): int {\n\n    let deleteStrokeCount = 0\n\n    for (const stroke of strokes) {\n\n      const deletePointCount = this.processPoints(stroke.points)\n\n      if (stroke.runtime.modifyFlag == VectorStrokeModifyFlagID.delete\n        || (stroke.points.length - deletePointCount == 0)\n        || VectorStrokeLogic.isEmptyStroke(stroke)) {\n\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.delete\n        deleteStrokeCount++\n      }\n\n      if (deletePointCount > 0) {\n\n        const editStroke = new EditStroke()\n        editStroke.stroke = stroke\n        editStroke.old_points = stroke.points\n        editStroke.new_points = stroke.points.filter(point => point.modifyFlag == VectorPointModifyFlagID.none)\n        editStroke.delete_points = stroke.points.filter(point => point.modifyFlag == VectorPointModifyFlagID.delete)\n        editDataSet.editStrokes.push(editStroke)\n      }\n\n      for (const point of stroke.points) {\n        point.modifyFlag = VectorPointModifyFlagID.none\n      }\n    }\n\n    return deleteStrokeCount\n  }\n\n  protected processPoints(points: VectorPoint[]): int {\n\n    let deletePointCount = 0\n\n    for (const point of points) {\n\n      if (point.modifyFlag == VectorPointModifyFlagID.delete) {\n\n        deletePointCount++\n      }\n    }\n\n    return deletePointCount\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    for (const editGeometry of this.editDataSet.editGeometrys) {\n\n      editGeometry.geometry.units = editGeometry.oldUnits\n\n      for (const unit of editGeometry.deleteUnits) {\n        unit.modifyFlag = VectorStrokeDrawingUnitModifyFlagID.none\n      }\n    }\n\n    for (const editDrawingUnit of this.editDataSet.editDrawingUnits) {\n\n      editDrawingUnit.drawingUnit.groups = editDrawingUnit.oldGroups\n\n      for (const group of editDrawingUnit.deleteGroups) {\n        group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.none\n      }\n    }\n\n    for (const editGroup of this.editDataSet.editGroups) {\n\n      editGroup.group.lines = editGroup.oldStrokes\n\n      for (const stroke of editGroup.deleteStrokes) {\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n      }\n    }\n\n    for (const editStroke of this.editDataSet.editStrokes) {\n\n      editStroke.stroke.points= editStroke.old_points\n\n      for (const point of editStroke.delete_points) {\n        point.modifyFlag = VectorPointModifyFlagID.none\n      }\n    }\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    for (const editGeometry of this.editDataSet.editGeometrys) {\n\n      editGeometry.geometry.units = editGeometry.newUnits\n\n      for (const unit of editGeometry.deleteUnits) {\n        unit.modifyFlag = VectorStrokeDrawingUnitModifyFlagID.delete\n      }\n    }\n\n    for (const editDrawingUnit of this.editDataSet.editDrawingUnits) {\n\n      editDrawingUnit.drawingUnit.groups = editDrawingUnit.newGroups\n\n      for (const group of editDrawingUnit.deleteGroups) {\n        group.runtime.modifyFlag = VectorStrokeGroupModifyFlagID.delete\n      }\n    }\n\n    for (const editGroup of this.editDataSet.editGroups) {\n\n      editGroup.group.lines = editGroup.newStrokes\n\n      for (const stroke of editGroup.deleteStrokes) {\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.delete\n      }\n    }\n\n    for (const editStroke of this.editDataSet.editStrokes) {\n\n      editStroke.stroke.points= editStroke.new_points\n\n      for (const point of editStroke.delete_points) {\n        point.modifyFlag = VectorPointModifyFlagID.delete\n      }\n    }\n\n    for (const layer of this.editDataSet.target_layers) {\n\n      if (VectorLayer.isPointBrushFillLayer(layer)) {\n\n        ctx.main.setRedrawDrawPathForLayer(layer)\n      }\n    }\n  }\n}\n","﻿import { Command_VectorLayer_Delete_Base } from \"./vector-layer-delete-base\"\n\nexport class Command_VectorLayer_DeleteEmpties extends Command_VectorLayer_Delete_Base {\n\n  // Same with base class now...\n}\n","﻿import { VectorPointModifyFlagID, VectorLayerGeometry } from \"../document-data\";\nimport { Command_VectorLayer_Delete_Base } from \"./vector-layer-delete-base\"\n\nexport class Command_VectorLayer_DeleteSelected extends Command_VectorLayer_Delete_Base {\n\n  protected setFlagsForGeometry(geometry: VectorLayerGeometry) { // @override\n\n    VectorLayerGeometry.forEachPoint(geometry, (point) => {\n\n      if (point.isSelected) {\n\n        point.modifyFlag = VectorPointModifyFlagID.delete\n      }\n    })\n  }\n}\n","﻿import { DocumentData, DocumentFileType } from '../document-data'\nimport { DocumentFileNameLogic } from '../document-logic'\n\nexport class DocumentLoader {\n\n  oraSettings: DocumentLoaderOraSettings = null\n\n  startLoadingDocumentFromURL(documentData: DocumentData, url: string) {\n\n    const fileType = DocumentFileNameLogic.getDocumentFileTypeFromName(url)\n\n    if (fileType == DocumentFileType.none) {\n\n      console.error('not supported file type.')\n      return\n    }\n\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', url)\n    xhr.timeout = 3000\n    xhr.responseType = 'blob'\n\n    xhr.addEventListener('load',\n      () => {\n\n        if (fileType == DocumentFileType.json) {\n\n          this.startLoadingDocumentJsonFromFile(documentData, xhr.response)\n        }\n        else if (fileType == DocumentFileType.ora) {\n\n          this.startLoadingDocumentOraFromFile(documentData, xhr.response)\n        }\n      }\n    )\n\n    xhr.addEventListener('timeout',\n      () => {\n\n        documentData.hasErrorOnLoading = true\n      }\n    )\n\n    xhr.addEventListener('error',\n      () => {\n\n        documentData.hasErrorOnLoading = true\n      }\n    )\n\n    xhr.send()\n  }\n\n  startLoadingDocumentJsonFromFile(documentData: DocumentData, file: File) {\n\n    const reader = new FileReader()\n\n    reader.addEventListener('load', () => {\n\n      if (typeof(reader.result) == 'string') {\n\n        const data = JSON.parse(reader.result)\n\n        this.storeLoadedDocumentJSON(documentData, data)\n      }\n    })\n\n    reader.readAsText(file)\n  }\n\n  startLoadingDocumentOraFromFile(documentData: DocumentData, file: File) {\n\n    const zipfs = new zip.fs.FS()\n    zip.workerScriptsPath = this.oraSettings.scriptsPath\n\n    zipfs.importBlob(file, () => {\n\n      const entry = zipfs.find(this.oraSettings.vectorFileName)\n\n      if (entry) {\n\n        entry.getText((text: string) => {\n\n          const data = JSON.parse(text)\n          this.storeLoadedDocumentJSON(documentData, data)\n        })\n      }\n      else {\n\n        console.error('failed to read from ora file.')\n      }\n    })\n  }\n\n  private storeLoadedDocumentJSON(documentData: DocumentData, loadedData: DocumentData) {\n\n    // TODO: 項目を一つずつ移し替えているが、項目を増やした場合に自動的に対応できる方法を検討する\n    documentData.version = loadedData.version\n    documentData.rootLayer = loadedData.rootLayer\n    documentData.documentFrame = loadedData.documentFrame\n    documentData.documentFrame_HideOuterArea = loadedData.documentFrame_HideOuterArea\n\n    if (loadedData['paletteColos']) {\n      // TODO: タイポだったpaletteColosに対応するここの処理はテスト実装段階終了時に削除する\n      documentData.paletteColors = loadedData['paletteColos']\n    }\n    else {\n      documentData.paletteColors = loadedData.paletteColors\n    }\n\n    documentData.defaultViewScale = loadedData.defaultViewScale\n    documentData.lineWidthBiasRate = loadedData.lineWidthBiasRate\n    documentData.animationSettingData = loadedData.animationSettingData\n    documentData.exportImageSetting = loadedData.exportImageSetting\n\n    documentData.loaded = true\n  }\n}\n\nexport class DocumentLoaderOraSettings {\n\n  readonly scriptsPath = './libs/ora_js/'\n  readonly vectorFileName = 'mttf.json'\n}\n","﻿import { Platform } from '../../platform'\nimport { ImageResource, ModelFile, ModelResource, Posing3DModelLogic } from '../posing3d'\nimport { WebGLRender } from '../render'\n\nexport class ResourceLoader {\n\n  posing3DViewRender: WebGLRender = null\n  posing3DModel: Posing3DModelLogic = null\n\n  startLoadingModelFile(modelFile: ModelFile, url: string) {\n\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', url)\n    xhr.responseType = 'json'\n\n    modelFile.loaded = false\n    modelFile.error = false\n\n    xhr.addEventListener('load',\n      () => {\n\n        let data: { static_models, skin_models }\n\n        if (xhr.responseType == 'json') {\n          data = xhr.response\n        }\n        else {\n          data = JSON.parse(xhr.response)\n        }\n\n        for (const modelData of data.static_models) {\n\n          const modelResource = new ModelResource()\n          modelResource.modelName = modelData.name\n\n          this.posing3DViewRender.initializeModelBuffer(modelResource.model, modelData.vertices, modelData.indices, 4 * modelData.vertexStride) // 4 = size of float\n\n          modelFile.modelResources.push(modelResource)\n          modelFile.modelResourceDictionary.set(modelData.name,  modelResource)\n        }\n\n        for (const modelData of data.skin_models) {\n\n          modelFile.posingModelDictionary.set(modelData.name, this.posing3DModel.createPosingModel(modelData))\n        }\n\n        modelFile.loaded = true\n      }\n    )\n\n    xhr.addEventListener('load',\n      () => {\n\n        modelFile.error = true\n      }\n    )\n\n    xhr.send()\n  }\n\n  startLoadingImageResource(imageResource: ImageResource, filePath: string, basePath: string) {\n\n    const image = new Image()\n\n    imageResource.loaded = false\n    imageResource.error = false\n\n    if (basePath.length > 0 && Platform.path.isRelativePath(filePath)) {\n\n      const refFileBasePath = Platform.path.getDirectoryPath(basePath)\n\n      const absPath = Platform.path.resolveRelativePath(refFileBasePath, filePath)\n\n      imageResource.filePath = Platform.path.getPlatformOrientedPath(absPath)\n    }\n    else {\n\n      imageResource.filePath = filePath\n    }\n\n    image.addEventListener('load',\n      () => {\n\n        // TODO: WebGLテクスチャの開放処理\n\n        imageResource.image.imageData = image\n\n        if (imageResource.isGLTexture) {\n\n          this.posing3DViewRender.initializeImageTexture(imageResource.image)\n        }\n\n        imageResource.image.width = image.width\n        imageResource.image.height = image.height\n        imageResource.loaded = true\n      }\n    )\n\n    image.addEventListener('error',\n      () => {\n\n        console.log(new Error('ERROR-0000: Error has occured while loading and image'), imageResource.filePath)\n\n        imageResource.error = true\n      }\n    )\n\n    image.src = imageResource.filePath\n  }\n}\n","﻿import { Strings } from '../common-logics'\nimport { DocumentData, DocumentFileType, ImageFileReferenceLayer, Layer } from '../document-data'\nimport { Posing3DModelLogic, ImageResource } from '../posing3d'\nimport { WebGLRender } from '../render'\nimport { DocumentFileNameLogic } from '../document-logic'\nimport { DocumentLoader, DocumentLoaderOraSettings } from './document-loader'\nimport { ResourceLoader } from './resource-loader'\n\nexport class DocumentLoading {\n\n  private documentLoader = new DocumentLoader()\n  private resourceLoader = new ResourceLoader()\n\n  oraSettings: DocumentLoaderOraSettings = null\n\n  loading_DocumentFilePath: string = ''\n  loading_DocumentData: DocumentData = null\n  loading_ImageResurces: ImageResource[] = []\n\n  resourceLoading_DocumentData: DocumentData = null\n\n  link(posing3DViewRender: WebGLRender, posing3DModel: Posing3DModelLogic, oraSettings: DocumentLoaderOraSettings) {\n\n    this.documentLoader.oraSettings = oraSettings\n\n    this.resourceLoader.posing3DModel = posing3DModel\n    this.resourceLoader.posing3DViewRender = posing3DViewRender\n\n    this.oraSettings = oraSettings\n  }\n\n  // Document data\n\n  isDocumentLoading(): boolean {\n\n    return (this.loading_DocumentData != null)\n  }\n\n  isDocumentLoaded(): boolean {\n\n    if (this.isDocumentLoading()) {\n\n      return this.loading_DocumentData.loaded\n    }\n\n    return false\n  }\n\n  startLoadingDocumentFromFile(file: File, url: string): boolean {\n\n    // Get document type from name\n    const fileType = DocumentFileNameLogic.getDocumentFileTypeFromName(url)\n\n    if (fileType == DocumentFileType.none) {\n\n      console.debug('error: not supported file type.')\n      return\n    }\n\n    let documentData: DocumentData = null\n\n    if (file != null) {\n\n      if (fileType == DocumentFileType.json) {\n\n        documentData = new DocumentData()\n\n        this.documentLoader.startLoadingDocumentJsonFromFile(documentData, file)\n      }\n      else if (fileType == DocumentFileType.ora) {\n\n        documentData = new DocumentData()\n\n        this.documentLoader.startLoadingDocumentOraFromFile(documentData, file)\n      }\n    }\n    else if (file == null && !Strings.isNullOrEmpty(url)) {\n\n      documentData = new DocumentData()\n\n      this.documentLoader.startLoadingDocumentFromURL(documentData, url)\n    }\n\n    this.loading_DocumentData = documentData\n    this.loading_DocumentFilePath = url\n\n    return this.isDocumentLoading()\n  }\n\n  startLoadingDocumentFromURL(documentData: DocumentData, url: string) {\n\n    this.loading_DocumentData = documentData\n    this.loading_DocumentFilePath = url\n\n    this.documentLoader.startLoadingDocumentFromURL(documentData, url)\n  }\n\n  finishDocumentDataLoading() {\n\n    this.loading_DocumentData = null\n  }\n\n  hasErrorOnLoadingDocument(): boolean {\n\n    return (\n      this.loading_DocumentData == null\n      || this.loading_DocumentData.hasErrorOnLoading\n    )\n  }\n\n  hasErrorOnLoadingDocumentResource(): boolean {\n\n    return (\n      this.resourceLoading_DocumentData == null\n      || this.resourceLoading_DocumentData.hasErrorOnLoading)\n  }\n\n  // Document resources\n\n  startLoadingDocumentResources(documentData: DocumentData, documentFilePath: string) {\n\n    this.resourceLoading_DocumentData = documentData\n\n    this.loading_ImageResurces = []\n\n    for (const layer of documentData.rootLayer.childLayers) {\n\n      this.startLoadingDocumentResourcesRecursive(layer, this.loading_ImageResurces, documentFilePath)\n    }\n  }\n\n  private startLoadingDocumentResourcesRecursive(layer: Layer, loadingDocumentImageResources: ImageResource[], documentFilePath: string) {\n\n    if (ImageFileReferenceLayer.isImageFileReferenceLayer(layer)) {\n\n      const ifrLayer = <ImageFileReferenceLayer>layer\n\n      if (!Strings.isNullOrEmpty(ifrLayer.imageFilePath)) {\n\n        // TODO: いずれ同時読み込み数の限界の問題が発生するので、そのうち対処する\n        this.resourceLoader.startLoadingImageResource(ifrLayer.runtime.imageResource, ifrLayer.imageFilePath, documentFilePath)\n\n        loadingDocumentImageResources.push(ifrLayer.runtime.imageResource)\n      }\n    }\n\n    for (const chldLayer of layer.childLayers) {\n\n      this.startLoadingDocumentResourcesRecursive(chldLayer, loadingDocumentImageResources, documentFilePath)\n    }\n  }\n\n  isDocumentResourceLoading(): boolean {\n\n    if (this.loading_ImageResurces.find(item => item.loaded == false && item.error == false)) {\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { Posing3DModelLogic, ImageResource, ModelFile  } from '../posing3d'\nimport { WebGLRender } from '../render'\nimport { ResourceLoader } from './resource-loader'\n\nexport class SystemResourceLoading {\n\n  resourceLoader = new ResourceLoader()\n\n  loading_ModelFiles: ModelFile[] = []\n  loading_ImageResurces: ImageResource[] = []\n\n  link(render: WebGLRender, posing3DModel: Posing3DModelLogic) {\n\n    this.resourceLoader.posing3DModel = posing3DModel\n    this.resourceLoader.posing3DViewRender = render\n  }\n\n  startLoadingSystemResources(modelFile: ModelFile, imageResurces: ImageResource[]) {\n\n    this.loading_ModelFiles = []\n\n    this.resourceLoader.startLoadingModelFile(modelFile, './res/' + modelFile.fileName)\n    this.loading_ModelFiles.push(modelFile)\n\n    this.loading_ImageResurces = []\n\n    for (const imageResource of imageResurces) {\n\n      this.resourceLoader.startLoadingImageResource(imageResource, imageResource.filePath, '')\n\n      this.loading_ImageResurces.push(imageResource)\n    }\n  }\n\n  isLoading(): boolean {\n\n    if (this.loading_ModelFiles.find(item => item.loaded == false && item.error == false)) {\n      return true\n    }\n\n    if (this.loading_ImageResurces.find(item => item.loaded == false && item.error == false)) {\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { ColorLogic } from '../common-logics'\nimport { CanvasRender, CanvasRenderBlendMode } from '../render'\nimport { UI_ColorMixerWindowRef } from '../ui-sidebar'\nimport { PointerInputWindow } from '../view'\n\nexport class ColorMixerWindow {\n\n  canvasRender: CanvasRender = null\n\n  uiRef: UI_ColorMixerWindowRef = {}\n  colorCanvas = new PointerInputWindow()\n  isDrawingDone = false\n\n  private tempColor4 = vec4.create()\n  private colorW = vec4.fromValues(1.0, 1.0, 1.0, 1.0)\n\n  link(canvasRender: CanvasRender) {\n\n    this.canvasRender = canvasRender\n  }\n\n  updateInputControls(color: Vec4) {\n\n    if (color != null) {\n\n      this.uiRef.update(color)\n    }\n  }\n\n  drawPaletteColorMixer() {\n\n    const colorCanvasWindow = this.colorCanvas\n    const canvasRender = this.canvasRender\n\n    const width = colorCanvasWindow.width\n    const height = colorCanvasWindow.height\n\n    if (width == 0 || height == 0) {\n      return\n    }\n\n    canvasRender.setContext(colorCanvasWindow)\n    canvasRender.setBlendMode(CanvasRenderBlendMode.default)\n    canvasRender.setFillColorV(this.colorW)\n    canvasRender.fillRect(0.0, 0.0, width, height)\n\n    canvasRender.setBlendMode(CanvasRenderBlendMode.default)\n    const divisionW = 40.0\n    const divisionH = 25.0\n    const unitWidth = width / divisionW\n    const unitHeight = height / divisionH\n\n    let drawX = 0.0\n\n    for (let x = 0; x <= divisionW; x++) {\n\n      let drawY = 0.0\n\n      for (let y = 1; y <= divisionH; y++) {\n\n        const h = x / divisionW\n        let s = 0.0\n        let v = 0.0\n        const iy = y / divisionH\n        if (iy <= 0.5) {\n          s = iy * 2.0\n          v = 1.0\n        }\n        else {\n          s = 1.0\n          v = 1.0 - (iy - 0.5) * 2.0\n        }\n\n        ColorLogic.hsvToRGB(this.tempColor4, h, s, v)\n        this.tempColor4[3] = 1.0\n        canvasRender.setFillColorV(this.tempColor4)\n        canvasRender.fillRect(drawX, drawY, unitWidth + 1.0, unitHeight + 1.0)\n\n        drawY += unitHeight\n      }\n\n      drawX += unitWidth\n    }\n\n    canvasRender.setBlendMode(CanvasRenderBlendMode.default)\n  }\n}\n","\nexport enum MainCommandButtonID {\n\n  none = 0,\n  openFile,\n  newFile,\n  saveFile,\n  saveAs,\n  export,\n  shortcutKeys,\n  undo,\n  redo,\n  copy,\n  paste,\n  cut,\n  touchOperationPanel,\n  layerWindow,\n  layer_addLayer,\n  layer_deleteLayer,\n  layer_moveUp,\n  layer_moveDown,\n  paletteWindow,\n  colorMixerWindow,\n  timeLineWindow,\n  timeLine_inertKeyframe,\n  timeLine_deleteKeyframe,\n  timeLine_moveKeyframe_minus,\n  timeLine_moveKeyframe_plus,\n  timeLine_changeMaxFrame_minus,\n  timeLine_changeMaxFrame_plus,\n  timeLine_changeLoopStartFrame_minus,\n  timeLine_changeLoopStartFrame_plus,\n  timeLine_changeLoopEndFrame_minus,\n  timeLine_changeLoopEndFrame_plus,\n  timeLine_changeOnionSkinBackwardLevel_minus,\n  timeLine_changeOnionSkinBackwardLevel_plus,\n  timeLine_changeOnionSkinForwardLevel_minus,\n  timeLine_changeOnionSkinForwardLevel_plus,\n}\n\nexport enum NumberInputControlID {\n\n  none = 0,\n  onionSkinMode,\n}\n\nexport enum RibbonUIControlID {\n\n  none = 0,\n  pointerBaseSize,\n  brushBaseSize,\n  brushMinSize,\n  edit_operationUnit,\n  edit_operationOrigin,\n  document_lineWidthBiasRate,\n  document_hideOuterArea,\n  layer_name,\n  vectorLayer_drawLineType,\n  vectorLayer_fillAreaType,\n  vectorLayer_lineWidthBiasRate,\n  layer_isRenderTarget,\n  layer_isMaskedByBelowLayer,\n  vectorLayer_enableEyesSymmetry,\n  vectorLayer_eyesSymmetryInputSide,\n  vectorLayer_posingLayer,\n  imageFileRef_openImageFile,\n}\n\nexport enum SideBarContentID {\n\n  none = 0,\n  layerWindow,\n  paletteWindow,\n  colorMixerWindow,\n}\n\nexport enum NewLayerTypeID {\n\n  none = 0,\n  vectorLayer,\n  surroundingFill,\n  autoFill,\n  pointBrushFill,\n  vectorLayerReferenceLayer,\n  imageFileReferenceLayer,\n  posingLayer,\n  groupLayer,\n}\n\nexport enum NewKeyframeTypeID {\n\n  none = 0,\n  insertToCurrentFrameAllLayer,\n  insertToCurrentFrameActiveLayer,\n  insertEmptyToAllLayer,\n  insertEmptyToActiveLayer,\n}\n\nexport enum DeleteKeyframeTypeID {\n\n  none = 0,\n  deleteCurrentFrameAllLayer,\n  deleteCurrentFrameActiveLayer,\n}\n\nexport enum OpenFileDialogTargetID {\n\n  none,\n  openDocument = 1,\n  saveDocument = 2,\n  imageFileReferenceLayerFilePath = 3\n}\n","import { ExportImageFileParam } from \"../ui-modal-window\"\nimport { UI_SelectBoxPopoverRef } from \"../ui-popover\"\nimport { Command_Layer_CommandBase } from \"../commands\"\nimport { DocumentData } from \"../document-data\"\nimport { DOMElementID, DOMValueLogic } from \"../dom\"\nimport { DOMLogic } from \"../dom/dom\"\nimport { Strings } from \"../common-logics\"\nimport { UI_Dialog_DocumentFilerRef, UI_Dialog_DocumentFiler_DialogType, UI_Dialog_ShortcutKeysRef } from \"../ui-dialog-screen\"\nimport { ShortcutKeyLogic, UserSettingFileLogic } from \"../user-setting\"\n\nexport interface DialogScreenRef {\n\n  onDialogScreenOpened?: () => void\n  onDialogScreenClosed?: () => void\n}\n\n// Custmbox dialogs\n// TODO: replace to React\ndeclare let Custombox: { modal }\nexport interface DialogWindow_Main_Interface {\n\n  getDocumentData(): DocumentData\n  updateForLayerProperty()\n  exportImageFile(param: ExportImageFileParam)\n  executeLayerCommand(layerCommand: Command_Layer_CommandBase)\n}\nexport interface DialogWindowContext {\n\n  readonly dialog: DialogScreenLogic\n  readonly dom: DOMValueLogic\n  readonly ID: DOMElementID\n  readonly main: DialogWindow_Main_Interface\n}\nexport interface DialogWindow {\n\n  onClose(ctx: DialogWindowContext)\n}\n\nexport class DialogScreenLogic {\n\n  currentModalDialogResult: string = null\n\n  uiDocumentFilerRef: UI_Dialog_DocumentFilerRef = {}\n  uiShortcutKeysRef: UI_Dialog_ShortcutKeysRef = {}\n\n  private _isOpened = false\n\n  private currentModalDialogWindow: DialogWindow = null\n  private currentModalDialogID: string = null\n  private currentModalFocusElementID: string = null\n  private modalOverlayOption = {\n    speedIn: 0,\n    speedOut: 100,\n    opacity: 0.0\n  }\n  private modalLoaderOption = {\n    active: false\n  }\n  private dialogWindowContext: DialogWindowContext = null\n\n  constructor() {\n\n    this.setCallbacks(this.uiDocumentFilerRef)\n    this.setCallbacks(this.uiShortcutKeysRef)\n  }\n\n  private setCallbacks(ref: DialogScreenRef) {\n\n    ref.onDialogScreenOpened = () => {\n\n      this._isOpened = true\n    }\n\n    ref.onDialogScreenClosed = () => {\n\n      this._isOpened = false\n    }\n  }\n\n  isActive(): boolean {\n\n    return this._isOpened\n  }\n\n  link(main: DialogWindow_Main_Interface, dom: DOMLogic, selectBoxRef: UI_SelectBoxPopoverRef) {\n\n    this.dialogWindowContext = {\n      dialog: this,\n      dom: dom.value,\n      ID: dom.ID,\n      main: main\n    }\n\n    this.uiShortcutKeysRef.selectBoxPopoverRef = selectBoxRef\n  }\n\n  openDocumentFilerDialog(dialogType: UI_Dialog_DocumentFiler_DialogType, filePath: string, userSetting: UserSettingFileLogic) {\n\n    this.uiDocumentFilerRef.show(\n      dialogType,\n      filePath,\n      userSetting\n    )\n  }\n\n  openShortcutKeysDialog(userSetting: UserSettingFileLogic, shortcutKey: ShortcutKeyLogic) {\n\n    this.uiShortcutKeysRef.show(\n      userSetting,\n      shortcutKey\n    )\n  }\n\n  // Custmbox dialogs\n  // TODO: replace to React\n\n  openDialogWindow(modalID: string, focusElementName: string, dialogWindow: DialogWindow = null) {\n\n    if (this.isDialogWindowOpened()) {\n      return\n    }\n\n    this.currentModalDialogID = modalID\n    this.currentModalFocusElementID = focusElementName\n    this.currentModalDialogWindow = dialogWindow\n\n    const option = {\n      content: {\n        target: this.currentModalDialogID,\n        close: true,\n        speedIn: 0,\n        delay: 0,\n        positionX: 'center',\n        positionY: 'center',\n        speedOut: 100\n      },\n      overlay: this.modalOverlayOption,\n      loader: this.modalLoaderOption\n    }\n\n    const modal = new Custombox.modal(option)\n\n    modal.open()\n  }\n\n  closeDialogWindow() {\n\n    Custombox.modal.closeAll()\n  }\n\n  onDialogWindowClosed() {\n\n    if (this.currentModalDialogWindow) {\n\n      this.currentModalDialogWindow.onClose(this.dialogWindowContext)\n    }\n\n    this.currentModalDialogWindow = null\n    this.currentModalDialogID = this.dialogWindowContext.ID.none\n    this.currentModalDialogResult = this.dialogWindowContext.ID.none\n  }\n\n  isDialogWindowOpened(): boolean {\n\n    return (!Strings.isNullOrEmpty(this.currentModalDialogID) && this.currentModalDialogID != this.dialogWindowContext.ID.none)\n  }\n\n  onDialogWindowShown() {\n\n    if (!Strings.isNullOrEmpty(this.currentModalFocusElementID)) {\n\n      const element = this.dialogWindowContext.dom.getElement(this.currentModalFocusElementID)\n      element.focus()\n    }\n  }\n\n  messageBox(text: string) {\n\n    if (this.isDialogWindowOpened()) {\n      return\n    }\n\n    this.dialogWindowContext.dom.setElementText(this.dialogWindowContext.ID.messageDialogModal_message, text)\n\n    this.openDialogWindow(this.dialogWindowContext.ID.messageDialogModal, this.dialogWindowContext.ID.messageDialogModal_ok)\n  }\n}\n","﻿import { DOMLogic } from '../dom/dom'\nimport { UI_FooterOperationPanelRef } from '../ui-panel'\n\nexport class FooterWindow {\n\n  private dom: DOMLogic = null\n\n  private footerText: string = ''\n  private footerTextBefore: string = ''\n\n  uiFooterOperationpanelRef: UI_FooterOperationPanelRef = { isForMobile: false }\n\n  link(dom: DOMLogic) {\n\n    this.dom = dom\n  }\n\n  setFooterText(text: string) {\n\n    this.footerText = text\n  }\n\n  updateFooterText() {\n\n    if (this.footerText != this.footerTextBefore) {\n\n      this.dom.getElement<HTMLDivElement>(this.dom.ID.footer).innerHTML = this.footerText\n      this.footerTextBefore = this.footerText\n    }\n  }\n}\n","﻿import { DOMLogic } from '../dom/dom'\nimport { UI_HeaderWindowRef } from '../ui-panel'\n\nexport class HeaderWindow {\n\n  private dom: DOMLogic = null\n\n  uiHeaderWindowRef: UI_HeaderWindowRef = {}\n\n  link(dom: DOMLogic) {\n\n    this.dom = dom\n  }\n\n  setHeaderDocumentFileName(lastURL: string) {\n\n    this.dom.value.setInputElementText(this.dom.ID.fileName, lastURL)\n  }\n}\n","﻿import { Layer } from '../document-data'\nimport { DocumentContext } from '../context'\nimport { ViewLayerListItem } from '../view'\nimport { UI_LayerWindowRef } from '../ui-sidebar'\n\nexport class LayerWindow {\n\n  uiRef: UI_LayerWindowRef = {}\n\n  scrollToItem(_item: ViewLayerListItem) {\n\n    // TODO: implement\n  }\n\n  update(docContext: DocumentContext, currentLayer: Layer) {\n\n    for (const item of docContext.layerListItems) {\n\n      item.isVisible = Layer.isVisible(item.layer)\n      item.isCurrentLayer = (Layer.isSelected(item.layer) && item.layer == currentLayer)\n      item.isSelected = (Layer.isSelected(item.layer) && !item.isCurrentLayer)\n    }\n  }\n\n  scrollToLayer(layer: Layer, docContext: DocumentContext) {\n\n    const listItem = docContext.layerListItems.find(item => item.layer == layer)\n\n    if (listItem) {\n\n      this.uiRef.scrollIntoView(listItem)\n    }\n  }\n}\n","import { DocumentContext } from \"../context\"\nimport { int } from \"../common-logics\"\nimport { RadioSelectionOption } from \"../ui-common-controls\"\nimport { UI_Modal_ExportImageRef, UI_Modal_ImageFileReferenceRef, UI_Modal_RadioSelectionRef } from \"../ui-modal-window\"\nimport { LocalSetting } from \"../user-setting\"\n\nexport enum ModalWindowID {\n\n  none = 0,\n  openImageReferenceWindow = 1,\n}\n\nexport interface ModalWindowRef {\n\n  onModalWindowOpened?: () => void\n  onModalWindowClosed?: () => void\n}\n\nexport interface ModalWindowParam {\n\n  modalWindowID: ModalWindowID\n  modalWindowTitle: string\n  uiRef: any\n}\n\nexport class EmptyModalWindowParam {\n\n  modalWindowID = ModalWindowID.none\n  modalWindowTitle = ''\n  uiRef: any = null\n}\n\nexport class ModalWindowLogic {\n\n  uiRadioSelectionRef: UI_Modal_RadioSelectionRef = {}\n  uiImageFileReferenceRef: UI_Modal_ImageFileReferenceRef = {}\n  uiExportImageRef: UI_Modal_ExportImageRef = {}\n\n  private _isOpened = false\n\n  constructor() {\n\n    this.setCallbacks(this.uiRadioSelectionRef)\n    this.setCallbacks(this.uiImageFileReferenceRef)\n    this.setCallbacks(this.uiExportImageRef)\n  }\n\n  private setCallbacks(ref: ModalWindowRef) {\n\n    ref.onModalWindowOpened = () => {\n\n      this._isOpened = true\n    }\n\n    ref.onModalWindowClosed = () => {\n\n      this._isOpened = false\n    }\n  }\n\n  isActive(): boolean {\n\n    return this._isOpened\n  }\n\n  showRadioSelectionModal(\n    windowTitle: string,\n    options: RadioSelectionOption[],\n    selectedIndex: int,\n    callback: (option: RadioSelectionOption) => void\n  ) {\n\n    this.uiRadioSelectionRef.selection_Fixed = callback\n\n    this.uiRadioSelectionRef.show(\n      windowTitle,\n      options,\n      selectedIndex\n    )\n  }\n\n  openImageFileReferenceModal() {\n\n    this.uiImageFileReferenceRef.show()\n  }\n\n  openExportImageModal(docContext: DocumentContext, localSetting: LocalSetting) {\n\n    this.uiExportImageRef.show(\n      docContext,\n      localSetting\n    )\n  }\n}\n","﻿import { DocumentContext } from '../context'\nimport { DocumentData, DrawLineTypeID, FillAreaTypeID } from '../document-data'\nimport { int, RectangleLayoutArea } from '../common-logics'\nimport { UI_PaletteSelectorWindowRef } from '../ui-sidebar'\n\nexport enum PaletteSelectorWindowButtonID {\n\n  none = 0,\n  lineColor = 1,\n  fillColor = 2,\n  adjustmentMode = 3,\n}\n\nexport class PaletteSelectorWindow {\n\n  uiRef: UI_PaletteSelectorWindowRef = {}\n\n  // TODO: Ractに移行したので、RectangleLayoutAreaを使用しない実装にする\n  commandButtonAreas: RectangleLayoutArea[] = []\n  itemAreas: RectangleLayoutArea[] = []\n  currentTargetID = PaletteSelectorWindowButtonID.lineColor\n  currentPaletteIndex = 0\n\n  setCurrentPaletteIndex(index: int) {\n\n    this.currentPaletteIndex = index\n  }\n\n  setCurrentTarget(targetID: PaletteSelectorWindowButtonID) {\n\n    this.currentTargetID = targetID\n  }\n\n  getCurrentLayerTargetColorRef(ctx: DocumentContext): Vec4 {\n\n    switch (this.currentTargetID) {\n\n      case PaletteSelectorWindowButtonID.lineColor:\n        return ctx.getCurrentLayerLineColor()\n\n      case PaletteSelectorWindowButtonID.fillColor:\n        return ctx.getCurrentLayerFillColor()\n\n      case PaletteSelectorWindowButtonID.adjustmentMode:\n        return ctx.documentData.paletteColors[this.currentPaletteIndex].color\n    }\n  }\n\n  updateCurrentLayerColor(newColor: Vec4, keepAlpha: boolean, ctx: DocumentContext): boolean {\n\n    const destColor = this.getCurrentLayerTargetColorRef(ctx)\n\n    if (destColor) {\n\n      destColor[0] = newColor[0]\n      destColor[1] = newColor[1]\n      destColor[2] = newColor[2]\n\n      if (!keepAlpha) {\n        destColor[3] = newColor[3]\n      }\n\n      switch (this.currentTargetID) {\n\n      case PaletteSelectorWindowButtonID.lineColor:\n\n        if (ctx.currentStrokeDrawable != null\n          && ctx.currentStrokeDrawable.drawLineType == DrawLineTypeID.paletteColor) {\n\n          vec4.copy(ctx.currentStrokeDrawable.layerColor, destColor)\n        }\n        break\n\n      case PaletteSelectorWindowButtonID.fillColor:\n\n        if (ctx.currentFillDrawable != null\n          && ctx.currentFillDrawable.fillAreaType == FillAreaTypeID.paletteColor) {\n\n          vec4.copy(ctx.currentFillDrawable.fillColor, destColor)\n        }\n        break\n      }\n\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  initialize() {\n\n    this.commandButtonAreas = []\n\n    this.commandButtonAreas.push((new RectangleLayoutArea()).setIndex(PaletteSelectorWindowButtonID.lineColor))\n    this.commandButtonAreas.push((new RectangleLayoutArea()).setIndex(PaletteSelectorWindowButtonID.fillColor))\n    this.commandButtonAreas.push((new RectangleLayoutArea()).setIndex(PaletteSelectorWindowButtonID.adjustmentMode))\n\n    this.caluculateLayout()\n  }\n\n  caluculateLayout() {\n\n    this.itemAreas = []\n\n    for (let paletteColorIndex = 0; paletteColorIndex < DocumentData.maxPaletteColors; paletteColorIndex++) {\n\n      const layoutArea = new RectangleLayoutArea()\n      layoutArea.index = paletteColorIndex\n      this.itemAreas.push(layoutArea)\n    }\n  }\n\n  updateCommandButtons() {\n\n    for (const layoutArea of this.commandButtonAreas) {\n\n      const isSelected = (<int>this.currentTargetID == layoutArea.index)\n\n      this.uiRef.setCommandButtonState(layoutArea.index - 1, isSelected)\n    }\n  }\n\n  updatePaletteItems(ctx: DocumentContext) {\n\n    let currentPaletteColorIndex = -1\n\n    switch (this.currentTargetID) {\n\n      case PaletteSelectorWindowButtonID.lineColor:\n        if (ctx.currentStrokeDrawable != null) {\n          currentPaletteColorIndex = ctx.currentStrokeDrawable.line_PaletteColorIndex\n        }\n        break\n\n      case PaletteSelectorWindowButtonID.fillColor:\n        if (ctx.currentFillDrawable != null) {\n          currentPaletteColorIndex = ctx.currentFillDrawable.fill_PaletteColorIndex\n        }\n        break\n\n      case PaletteSelectorWindowButtonID.adjustmentMode:\n        currentPaletteColorIndex = this.currentPaletteIndex\n        break\n      }\n\n    for (const layoutArea of this.itemAreas) {\n\n      const paletteColorIndex = layoutArea.index\n\n      if (paletteColorIndex > ctx.documentData.paletteColors.length) {\n        break\n      }\n\n      const paletteColor = ctx.documentData.paletteColors[paletteColorIndex]\n\n      paletteColor.isSelected = (paletteColorIndex == currentPaletteColorIndex)\n    }\n  }\n\n  setCurrentTargetForLayer(ctx: DocumentContext) {\n\n    if (ctx.currentFillDrawable != null\n      && ctx.currentFillDrawable.fillAreaType != FillAreaTypeID.none) {\n\n        this.currentTargetID = PaletteSelectorWindowButtonID.fillColor\n    }\n    else if (ctx.currentStrokeDrawable != null\n      && ctx.currentStrokeDrawable.drawLineType != DrawLineTypeID.none) {\n\n      this.currentTargetID = PaletteSelectorWindowButtonID.lineColor\n    }\n  }\n}\n","\nexport class DOMElementID {\n\n  readonly none = 'none'\n\n  readonly fileName = 'fileName'\n\n  readonly screenMain = 'screen-main'\n  readonly header = 'header-ui'\n  readonly ribbonUI = 'ribbon-ui'\n  readonly footerUI = 'footer-ui'\n  readonly footer = 'footer'\n  readonly subtoolWindow = \"subtoolWindow\"\n  readonly leftSidePanel = \"side-panel-left\"\n  readonly leftSidePanelDock = \"side-panel-left-dock\"\n  readonly rightSidePanel = \"side-panel-right\"\n  readonly rightSidePanelDock = \"side-panel-right-dock\"\n  readonly popoverDockContainer = \"popover-dock-container\"\n\n  readonly mainCanvas = 'mainCanvas'\n  readonly editorCanvas = 'editorCanvas'\n  readonly webglCanvas = 'webglCanvas'\n  readonly layerCanvas = 'layerCanvas'\n  readonly colorMixerWindow_colorCanvas = 'colorMixer_colorCanvas'\n\n  readonly timeLineWindow = 'time-line-window'\n  readonly timeLineCanvas = 'timeLineCanvas'\n\n  readonly messageDialogModal = '#messageDialogModal'\n  readonly messageDialogModal_message = 'messageDialogModal_message'\n  readonly messageDialogModal_ok = 'messageDialogModal_ok'\n\n  readonly openFileDialogModal = '#openFileDialogModal'\n  readonly openFileDialogModal_file = 'openFileDialogModal_file'\n  readonly openFileDialogModal_ok = 'openFileDialogModal_ok'\n  readonly openFileDialogModal_cancel = 'openFileDialogModal_cancel'\n\n  readonly newKeyframeModal = '#newKeyframeModal'\n  readonly newKeyframeModal_InsertType = 'newKeyframeModal_InsertType'\n  readonly newKeyframeModal_ok = 'newKeyframeModal_ok'\n  readonly newKeyframeModal_cancel = 'newKeyframeModal_cancel'\n\n  readonly deleteKeyframeModal = '#deleteKeyframeModal'\n  readonly deleteKeyframeModal_InsertType = 'deleteKeyframeModal_InsertType'\n  readonly deleteKeyframeModal_ok = 'deleteKeyframeModal_ok'\n  readonly deleteKeyframeModal_cancel = 'deleteKeyframeModal_cancel'\n}\n","import { ColorLogic, float, int, Strings } from \"../common-logics\"\n\n// TODO: もっといい名前にする\nexport class DOMValueLogic {\n\n  getElement(id: string): HTMLElement {\n\n    const element = document.getElementById(id)\n\n    if (element == null) {\n      throw new Error('ERROR 0051:Could not find element \"' + id + '\"')\n    }\n\n    return element\n  }\n\n  setElementText(id: string, text: string): HTMLElement {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.innerText = text\n\n    return element\n  }\n\n  setInputElementText(id: string, text: string): HTMLElement {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.value = text\n\n    return element\n  }\n\n  getInputElementText(id: string): string {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    return element.value\n  }\n\n  setInputElementNumber(id: string, value: float): HTMLElement {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.value = value.toString()\n\n    return element\n  }\n\n  setInputElementNumber2Decimal(id: string, value: float): HTMLElement {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.value = value.toFixed(2)\n\n    return element\n  }\n\n  getInputElementNumber(id: string, defaultValue: float): float {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    if (element.value == '') {\n\n      return defaultValue\n    }\n\n    return Number(element.value)\n  }\n\n  setInputElementRangeValue(id: string, value: float, max: float): HTMLElement {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.value = (value / max * Number(element.max)).toString()\n\n    return element\n  }\n\n  getInputElementRangeValue(id: string, max: int, defaultValue: float): float {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    if (Strings.isNullOrEmpty(element.value)) {\n\n      return defaultValue\n    }\n\n    const value = Number(element.value) / Number(element.max) * max\n\n    return value\n  }\n\n  setRadioElementIntValue(elementName: string, value: int) {\n\n    const valueText = value.toString()\n\n    const elements = document.getElementsByName(elementName)\n\n    for (let i = 0; i < elements.length; i++) {\n      const radio = <HTMLInputElement>elements[i]\n\n      radio.checked = (radio.value == valueText)\n    }\n  }\n\n  getRadioElementIntValue(elementName: string, defaultValue: int): int {\n\n    let value = defaultValue\n\n    const elements = document.getElementsByName(elementName)\n\n    for (let i = 0; i < elements.length; i++) {\n      const radio = <HTMLInputElement>elements[i]\n\n      if (radio.checked) {\n\n        value = Number(radio.value)\n      }\n    }\n\n    return value\n  }\n\n  setInputElementBoolean(id: string, checked: boolean) {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.checked = checked\n  }\n\n  getInputElementBoolean(id: string): boolean {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    return element.checked\n  }\n\n  setInputElementColor(id: string, color: Vec4): Vec4 {\n\n    const colorText = '#' + ColorLogic.rgbToHex2String(color)\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    element.value = colorText\n\n    return color\n  }\n\n  getInputElementColor(id: string, result: Vec4): Vec4 {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    const colorText = element.value\n\n    ColorLogic.hex2StringToRGB(result, colorText)\n\n    return result\n  }\n\n  getInputElementFilePath(id: string): string {\n\n    const element = <HTMLInputElement>(document.getElementById(id))\n\n    if (element.files.length == 0) {\n\n      return null\n    }\n\n    const file = element.files[0]\n\n    return file['path']\n  }\n\n  setColorMixerValue(id: string, colorValue: float, colorMixer_id_number: string, colorMixer_id_range: string) {\n\n    this.setInputElementNumber2Decimal(id + colorMixer_id_number, colorValue)\n    this.setInputElementRangeValue(id + colorMixer_id_range, colorValue, 1.0)\n  }\n}\n","import { int } from \"../common-logics\"\nimport { CanvasWindow } from \"../render\"\nimport { DOMValueLogic } from \"./dom-value\"\n\nexport class DOMResizingLogic {\n\n  dom = new DOMValueLogic()\n\n  resizeCanvasToParent(canvasWindow: CanvasWindow, withStyle = true) {\n\n    const rect = canvasWindow.canvas.parentElement.getBoundingClientRect()\n\n    // console.log(`resizeCanvasToParent width:${rect.width} height:${rect.height}`)\n\n    this.setCanvasElementSize(canvasWindow, rect.width, rect.height)\n\n    if (withStyle) {\n\n      this.setCanvasElementStyle(canvasWindow, rect.width, rect.height)\n    }\n  }\n\n  resizeCanvasToBoundingClientRect(canvasWindow: CanvasWindow, withStyle = true) {\n\n    const rect = canvasWindow.canvas.getBoundingClientRect()\n\n    // console.log(`resizeByStyle width:${rect.width} height:${rect.height}`)\n\n    this.setCanvasElementSize(canvasWindow, rect.width, rect.height)\n\n    if (withStyle) {\n\n      this.setCanvasElementStyle(canvasWindow, rect.width, rect.height)\n    }\n  }\n\n  resizeCanvasToCanvasWindow(canvasWindow: CanvasWindow, fitToWindow: CanvasWindow, scale: int) {\n\n    canvasWindow.width = fitToWindow.width * scale\n    canvasWindow.height = fitToWindow.height * scale\n\n    canvasWindow.canvas.width = canvasWindow.width\n    canvasWindow.canvas.height = canvasWindow.height\n\n    canvasWindow.canvas.style.width = fitToWindow.canvas.style.width\n    canvasWindow.canvas.style.height = fitToWindow.canvas.style.height\n  }\n\n  private setCanvasElementSize(canvasWindow: CanvasWindow, width: int, height: int) {\n\n    // console.log(`setCanvasElementSize devicePixelRatio:${window.devicePixelRatio} width:${width} height:${height}`)\n\n    canvasWindow.width = Math.floor(width * canvasWindow.devicePixelRatio)\n    canvasWindow.height = Math.floor(height *  canvasWindow.devicePixelRatio)\n\n    if (canvasWindow.canvas.width != canvasWindow.width\n      || canvasWindow.canvas.height != canvasWindow.height) {\n\n      canvasWindow.canvas.width = canvasWindow.width\n      canvasWindow.canvas.height = canvasWindow.height\n    }\n  }\n\n  private setCanvasElementStyle(canvasWindow: CanvasWindow, width: int, height: int) {\n\n    canvasWindow.canvas.style.width = `${width}px`\n    canvasWindow.canvas.style.height = `${height}px`\n  }\n\n  fitFixedPositionToBoundingClientRect(target_ID: string, destination_ID: string, withWidth = true, withHeight = true) {\n\n    const target = this.dom.getElement(target_ID)\n    const destination = this.dom.getElement(destination_ID)\n    const rect = destination.getBoundingClientRect()\n\n    target.style.top = `${rect.top}px`\n    target.style.left = `${rect.left}px`\n\n    if (withWidth) {\n      target.style.width = `${rect.width}px`\n    }\n\n    if (withHeight) {\n      target.style.height = `${rect.height}px`\n    }\n  }\n}\n","import { DOMElementID } from \"./dom-element-id\"\nimport { DOMResizingLogic } from \"./dom-resizing\"\nimport { DOMValueLogic } from \"./dom-value\"\n\nexport class DOMLogic {\n\n  ID = new DOMElementID()\n  value = new DOMValueLogic()\n  resizing = new DOMResizingLogic()\n\n  getElement<T>(id: string): T {\n\n    const element = document.getElementById(id)\n\n    if (element == null) {\n      throw new Error('ERROR 0051:Could not find element \"' + id + '\"')\n    }\n\n    return element as unknown as T\n  }\n}\n","import * as React from 'react'\n\nexport type UI_Icon_MaterialIcon_IconName = '' |\n  'add' |\n  'arrowdown' |\n  'arrowleft' |\n  'arrowright' |\n  'arrowup' |\n  'check' |\n  'clear' |\n  'close' |\n  'colorize' |\n  'copy' |\n  'crossarrow' |\n  'cut' |\n  'doublearrowleft' |\n  'doublearrowright' |\n  'expandleft' |\n  'expandless' |\n  'expandmore' |\n  'expandright' |\n  'export' |\n  'filenew' |\n  'fileopen' |\n  'folder' |\n  'history' |\n  'layers' |\n  'image' |\n  'invisible' |\n  'media' |\n  'menu' |\n  'paint' |\n  'palette' |\n  'paste' |\n  'pencil' |\n  'playcircle' |\n  'radiochecked' |\n  'radiounchecked' |\n  'redo' |\n  'remove' |\n  'reset_form' |\n  'rotate' |\n  'save' |\n  'saveas' |\n  'scale' |\n  'settings' |\n  'touchoperationpanel' |\n  'tune' |\n  'undo' |\n  'visible' |\n  'zoomin' |\n  'zoomout'\n\nexport interface UI_Icon_MaterialIcon_Param {\n\n  iconName: UI_Icon_MaterialIcon_IconName\n}\n\nexport function UI_Icon_MaterialIcon({ iconName }: UI_Icon_MaterialIcon_Param) {\n\n  return (\n    <i className='material-icons'>{iconName}</i>\n  )\n}\n","import * as React from 'react';\nimport { UI_Icon_MaterialIcon } from './icon-material-icon';\n\nexport interface UI_CheckBoxRefParam {\n\n  trueValue?: boolean | number | null;\n  falseValue?: boolean | number | null;\n  value?: boolean | number | null;\n  onChange?(checked: boolean, value: boolean | number | null): void;\n}\n\nexport function UI_CheckBox({ trueValue = true, falseValue = false, value = false, onChange = null }: UI_CheckBoxRefParam) {\n\n  function box_Clicked() {\n\n    if (onChange) {\n\n      const new_checked = !(value == trueValue);\n      onChange(new_checked, new_checked ? trueValue : falseValue);\n    }\n  }\n\n  return (\n    <div className=\"ui-checkbox-container selectable-item\" onPointerDown={box_Clicked}>\n      <div className=\"content\">\n        <UI_Icon_MaterialIcon iconName={value == trueValue ? \"check\" : \"\"} />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react'\n\nexport interface UI_ColorSliderParam {\n\n  min?: number\n  max?: number\n  step?: number\n  railColor?: string\n  trackColor?: string\n  showText?: boolean\n\n  value: number\n  onChange?(value: number): void\n}\n\nexport function UI_ColorSlider({ min = 0, max = 100, step = 1, railColor = '#ddd', trackColor = '#000', value = 0, showText = false, onChange = null }: UI_ColorSliderParam) {\n\n  const head_Ref = React.useRef<HTMLDivElement>()\n  const tail_Ref = React.useRef<HTMLDivElement>()\n\n  function slider_PointerDown(e: React.PointerEvent) {\n\n    if (!onChange) {\n      return\n    }\n\n    const div = e.nativeEvent.target as HTMLDivElement\n    const railRect = div.getBoundingClientRect()\n    const headRect = head_Ref.current.getBoundingClientRect()\n    const tailRect = tail_Ref.current.getBoundingClientRect()\n\n    let position = (e.nativeEvent.offsetX - headRect.width) / (railRect.width - headRect.width - tailRect.width)\n    if (position > 1.0) {\n      position = 1.0\n    }\n    if (position < 0.0) {\n      position = 0.0\n    }\n\n    let newValue = Number((min + position * (max - min)).toFixed(2))\n    newValue = Math.floor(newValue / step) * step\n\n    // console.log(position, newValue)\n\n    onChange(newValue)\n\n    e.currentTarget.setPointerCapture(e.pointerId)\n  }\n\n  function slider_PointerMove(e: React.PointerEvent) {\n\n    if (!onChange) {\n      return\n    }\n\n    if (e.buttons != 0) {\n\n      slider_PointerDown(e)\n    }\n  }\n\n  return (\n    <div className=\"ui-color-slider-container\">\n      <div className=\"rail\"\n        onPointerDown={slider_PointerDown}\n        onPointerMove={slider_PointerMove}\n      >\n        <div className={`rail-body head ${value > min ? 'filled' : 'not-filled'}`}\n          ref={head_Ref}\n          style={{ backgroundColor: value > min ? trackColor : railColor }}\n        >\n        </div>\n        <div className=\"rail-body track filled\"\n          style={{\n            width: `${((value - min) / (max - min) * 100).toFixed(2)}%`,\n            backgroundColor: trackColor\n          }}>\n        </div>\n        <div className=\"rail-body rest not-filled\" style={{ backgroundColor: railColor }}>\n        </div>\n        <div className={`rail-body head ${value >= max ? 'filled' : 'not-filled'}`}\n          ref={tail_Ref}\n          style={{ backgroundColor: value >= max ? trackColor : railColor }}\n        >\n        </div>\n      </div>\n      {\n        showText &&\n        <div className='text-container'>\n          <div className='text'>\n            {value.toFixed(2)}\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { UI_Icon_MaterialIcon, UI_Icon_MaterialIcon_IconName } from './icon-material-icon'\n\nexport interface UI_CommandButtonItem {\n\n  index: int\n  icon?: UI_Icon_MaterialIcon_IconName\n  isSeparator?: boolean\n  isSelected?: boolean\n  title?: string\n}\n\nexport interface UI_CommandButtonParam {\n\n  commandButtonItem: UI_CommandButtonItem\n  border?: boolean\n  menuButton?: boolean\n  onClick?: (item: UI_CommandButtonItem) => void\n}\n\nexport function UI_CommandButton({ commandButtonItem: item, border = false, menuButton = false, onClick }: UI_CommandButtonParam) {\n\n  return (\n    <div className={`ui-command-button selectable-item${item.isSelected ? ' selected' : ''}${border ? ' button-border' : ''}${menuButton ? ' menu-button-border' : ''}`}>\n      <div\n        title={item.title ? item.title : null}\n        className={` selectable-item-inner`}\n        onMouseDown={(e) => {\n          if (onClick) {\n            onClick(item)\n          }\n          e.preventDefault()\n        }}\n      >\n        <UI_Icon_MaterialIcon iconName={item.icon} />\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { UI_CommandButton, UI_CommandButtonItem } from './command-button'\n\nexport interface UI_CommandButtonsRef {\n\n  items: UI_CommandButtonItem[]\n  setCommandButtonState?: (index: int, isSelected: boolean) => void\n\n  commandButton_Clicked?: (item: UI_CommandButtonItem) => void\n}\n\nexport interface UI_CommandButtonsParam {\n\n  border?: boolean\n  uiRef: UI_CommandButtonsRef\n}\n\nexport function UI_CommandButtons({ uiRef, border = false }: UI_CommandButtonsParam) {\n\n  React.useEffect(() => {\n\n    uiRef.setCommandButtonState = (index: int, isSelected: boolean) => {\n\n      uiRef.items[index].isSelected = isSelected\n    }\n\n    return function cleanup() {\n\n      uiRef.setCommandButtonState = null\n    }\n  }, [])\n\n  return (\n    <div className='ui-command-buttons-container'>\n      {\n        uiRef.items.map(item => (\n          item.isSeparator ? <div key={item.index} className='separator'></div>\n          : <UI_CommandButton key={item.index} commandButtonItem={item} onClick={uiRef.commandButton_Clicked} border={border} />\n        ))\n      }\n    </div>\n  )\n}\n","import { int, float } from '../common-logics';\nimport * as React from 'react';\n\nexport interface UI_RibbonUI_NumberInputParam {\n\n  digit?: int\n  step?: float\n  min?: float\n  max?: float\n  value: float\n  onChange?(value: float): void\n}\n\nexport function UI_NumberInput({ digit = 2, step = 0.05, min = 0.0, max = 100, value, onChange }: UI_RibbonUI_NumberInputParam) {\n\n  let valueText = ''\n  if (typeof(value) == 'number') {\n\n    valueText = value.toFixed(digit)\n  }\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n\n    let inputValue = Number(event.target.value)\n\n    if (isNaN(inputValue)) {\n\n      inputValue = null\n    }\n    else {\n\n      if (inputValue < min) {\n\n        inputValue = min\n      }\n\n      if (inputValue > max) {\n\n        inputValue = max\n      }\n    }\n\n    if (onChange) {\n\n      onChange(inputValue)\n    }\n  }\n\n  return (\n    <input className=\"number-input\" type=\"number\" step={step.toString()} value={valueText} onChange={handleChange} />\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { UI_Icon_MaterialIcon } from './icon-material-icon'\n\nexport interface UI_NumberSpinnerParam {\n  value: number\n  buttonIndexs: int[]\n  title?: string\n  border?: boolean\n  onClick?: (buttonIndex: int) => void\n}\n\nexport function UI_NumberSpinner({ value, title = '', border = false, buttonIndexs, onClick }: UI_NumberSpinnerParam) {\n\n  return (\n    <div\n      className={`ui-number-spinner-container${border ? ' button-border' : ''}`}\n      title={title}\n    >\n      <div className='ui-number-spinner-button'\n        onPointerDown={() => onClick(buttonIndexs[0]) }\n      >\n        <UI_Icon_MaterialIcon iconName='expandleft' />\n      </div>\n      <div className='ui-number-spinner-text'>\n        {value}\n      </div>\n      <div className='ui-number-spinner-button'\n        onPointerDown={() => onClick(buttonIndexs[1]) }\n      >\n        <UI_Icon_MaterialIcon iconName='expandright' />\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { UI_Icon_MaterialIcon } from './icon-material-icon'\n\nexport interface UI_RadioButtonRefParam {\n\n  index?: number\n  selectedIndex?:  number\n  label?: string\n  onClick?(indexnull): void\n}\n\nexport function UI_RadioButton({index = 0, selectedIndex = -1, label = '', onClick = null }: UI_RadioButtonRefParam) {\n\n  return (\n    <div className='radio-button selectable-item'\n      onPointerDown={() => onClick(index)}\n    >\n      <div className='radio-button-marker'>\n        <UI_Icon_MaterialIcon iconName={ index == selectedIndex ? 'radiochecked' : 'radiounchecked'} />\n      </div>\n      <div className='radio-button-label'>\n        <span>{label}</span>\n      </div>\n    </div>\n  )\n}\n\nexport interface RadioSelectionOption {\n\n  index: int\n  label: string\n  data?: any\n}\n\nexport interface UI_RadioButtonsParam {\n\n  options: RadioSelectionOption[]\n  selectedIndex:  number\n  onClick?(indexnull): void\n}\n\nexport function UI_RadioButtons({options, selectedIndex, onClick = null}: UI_RadioButtonsParam) {\n\n  return <>\n    { options.map(option => (\n      <UI_RadioButton\n        key={option.index}\n        index={option.index}\n        selectedIndex={selectedIndex}\n        label={option.label}\n        onClick={() => {\n          if (onClick) {\n            onClick(option)\n          }\n        }}\n      />\n    )) }\n  </>\n}\n\n","import * as React from 'react'\n\ninterface UI_ScrollViewOption {\n\n  children: any\n  wheelScrollY?: number\n  direction?: 'vertical' | 'horizontal'\n  alignment?: '' | 'center'\n  shrink?: boolean\n}\n\nexport function UI_ScrollView(\n  { children, wheelScrollY = 16, direction = 'vertical', alignment = '', shrink = true }: UI_ScrollViewOption\n) {\n\n  const containerRef = React.useRef<HTMLDivElement>(null)\n\n  const scroll = React.useCallback(({ dx, dy }) => {\n    if (direction == 'vertical') {\n\n      containerRef.current.scrollTop += dy\n    }\n    else {\n\n      containerRef.current.scrollLeft += dx\n    }\n\n  },\n    [(direction == 'vertical' ? containerRef.current?.scrollTop : containerRef.current?.scrollLeft)]\n  )\n\n  const internalState = React.useRef({\n    lastMouseX: null,\n    lastMouseY: null,\n    isMouseDown: false,\n    isTouch: false,\n    isScrolling: false,\n    isFocused: false,\n  })\n\n  const endScroll = () => {\n\n    internalState.current.isMouseDown = false\n    internalState.current.isTouch = false\n    internalState.current.lastMouseX = null\n    internalState.current.lastMouseY = null\n    internalState.current.isScrolling = false\n  }\n\n  const view_PointerDown = (e: React.PointerEvent) => {\n\n    let x = e.pageX\n    let y = e.pageY\n\n    internalState.current.isMouseDown = true\n    internalState.current.lastMouseX = x\n    internalState.current.lastMouseY = y\n\n    // e.preventDefault()\n\n    //console.log('onMouseDown', x, y)\n  }\n\n  const view_PointerEnter = (e: React.PointerEvent) => {\n\n    internalState.current.isFocused = true\n\n    // console.log('onMouseEnter')\n  }\n\n  const view_PointerLeave = (e: React.PointerEvent) => {\n\n    internalState.current.isFocused = false\n\n    // console.log('onMouseLeave')\n  }\n\n  const view_Wheel = (e: React.WheelEvent) => {\n\n    let scrollDistance = (e.deltaY > 0 ? wheelScrollY : -wheelScrollY)\n\n    let dx = (direction == 'horizontal' ? scrollDistance : 0)\n    let dy = (direction == 'vertical' ? scrollDistance : 0)\n\n    scroll({ dx, dy })\n\n    // console.log('onMouseLeave')\n  }\n\n  const window_onPointerMove = (e) => {\n\n    let x = e.pageX\n    let y = e.pageY\n\n    if (!internalState.current.isMouseDown) {\n\n      internalState.current.lastMouseX = x\n      internalState.current.lastMouseY = y\n      return\n    }\n\n    if (internalState.current.isFocused && internalState.current.isMouseDown) {\n\n      containerRef.current.setPointerCapture(e.pointerId)\n    }\n\n    internalState.current.isScrolling = true\n\n    const dx = -(x - internalState.current.lastMouseX)\n    const dy = -(y - internalState.current.lastMouseY)\n    internalState.current.lastMouseX = x\n    internalState.current.lastMouseY = y\n\n    scroll({ dx, dy })\n\n    //console.log('onMouseMove', dx, dy)\n  }\n\n  const window_PointerUp = () => {\n\n    endScroll()\n  }\n\n  const window_KeyDown = (e: KeyboardEvent) => {\n\n    if (e.key === ' ') {\n\n      if (internalState.current.isFocused) {\n\n        internalState.current.isMouseDown = true\n\n        // console.log('isScrolling')\n      }\n    }\n  }\n\n  const window_KeyUp = (e: KeyboardEvent) => {\n\n    if (e.key === ' ') {\n\n      endScroll()\n    }\n  }\n\n  React.useEffect(() => {\n\n    window.addEventListener('keydown', window_KeyDown)\n    window.addEventListener('keyup', window_KeyUp)\n    window.addEventListener('pointerup', window_PointerUp)\n    window.addEventListener('pointermove', window_onPointerMove)\n\n    return function cleanup() {\n\n      window.removeEventListener('keydown', window_KeyDown)\n      window.removeEventListener('keyup', window_KeyUp)\n      window.removeEventListener('pointerup', window_PointerUp)\n      window.removeEventListener('pointermove', window_onPointerMove)\n    }\n  }, [])\n\n  return (\n    <div ref={containerRef} className={`ui-scroll-view-container ${direction == 'vertical' ? 'vertical' : 'horizontal'} ${alignment == 'center' ? 'center' : ''} ${shrink ? '' : 'no-shrink'}`}\n      onPointerDown={view_PointerDown}\n      onPointerEnter={view_PointerEnter}\n      onPointerLeave={view_PointerLeave}\n      onWheel={view_Wheel}\n    >\n      {children}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { float } from '../common-logics'\n\nexport class PopoverRef {\n\n  onPopoverOpened(){}\n  onPopoverClosed(){}\n}\n\nexport enum UI_PopoverContainerAlign {\n  bottom,\n  left,\n  right,\n  top,\n  topLeft,\n  topRight\n}\n\nexport interface UI_PopoverContainerParam {\n\n  children: any\n  uiRef: UI_PopoverContainerRef\n  fullHeight?: boolean\n  offset?: { x: float, y: float }\n  onDissmiss?()\n  onEscape?: (e: React.KeyboardEvent) => void;\n  onVisibilityChange?: (isVisible: boolean) => void;\n}\n\nexport class UI_PopoverContainerRef {\n\n  show(popoverRef: PopoverRef, popoverParentElement: HTMLElement, align?: UI_PopoverContainerAlign) {}\n  close(popoverRef: PopoverRef) {}\n  isShown(): boolean { return false }\n}\n\nexport function UI_PopoverContent({ children, uiRef, fullHeight, offset, onDissmiss, onEscape, onVisibilityChange }: UI_PopoverContainerParam) {\n\n  const hidden_ContainerRef = React.useRef<HTMLDivElement>(null)\n  const content_ContainerRef = React.useRef<HTMLDivElement>(null)\n  const [visible, set_visible] = React.useState(false)\n  const visiblity_Ref = React.useRef(false)\n  const backDropClickedRef = React.useRef(false)\n\n  React.useEffect(() => {\n\n    uiRef.show = (popoverRef, popoverParentElement, align = UI_PopoverContainerAlign.left) => {\n\n      if (!hidden_ContainerRef.current || !content_ContainerRef.current) {\n        return\n      }\n\n      const anchorRect = popoverParentElement.getBoundingClientRect()\n      const documentBodyRect = document.body.getBoundingClientRect()\n\n      const horizontalOffset = offset?.x ?? 0\n      const verticalOffset = offset?.y ?? 0\n\n      const alignLeft = (align == UI_PopoverContainerAlign.left || align == UI_PopoverContainerAlign.topLeft)\n      const alignRight = (align == UI_PopoverContainerAlign.right || align == UI_PopoverContainerAlign.topRight)\n      const alignBottom = align == UI_PopoverContainerAlign.bottom\n      const alignTop = (align == UI_PopoverContainerAlign.top || align == UI_PopoverContainerAlign.topLeft || align == UI_PopoverContainerAlign.topRight)\n\n      let left = anchorRect.left;\n      let right = documentBodyRect.width - anchorRect.right;\n\n      if (alignLeft) {\n\n        left += horizontalOffset\n        right = 0\n      }\n\n      if (alignRight) {\n\n        left = 0\n        right += horizontalOffset\n      }\n\n      if (alignBottom) {\n\n        left += horizontalOffset\n        right -= horizontalOffset\n      }\n\n      content_ContainerRef.current.style.left = `${left}px`\n      content_ContainerRef.current.style.right = `${right}px`\n\n      if (alignTop) {\n\n        content_ContainerRef.current.style.top = 'unset'\n        content_ContainerRef.current.style.bottom = `${documentBodyRect.height - anchorRect.top + verticalOffset}px` // TODO: オフセットを解像度に対応させる\n      }\n      else {\n\n        content_ContainerRef.current.style.top = `${anchorRect.bottom + verticalOffset}px` // TODO: オフセットを解像度に対応させる\n        content_ContainerRef.current.style.bottom = 'unset'\n        content_ContainerRef.current.style.maxHeight = `${documentBodyRect.height - anchorRect.bottom - 10}px` // TODO: オフセットを解像度に対応させる\n      }\n\n      if (fullHeight) {\n\n        content_ContainerRef.current.style.bottom = '0'\n      }\n\n      setVisibility(true)\n\n      hidden_ContainerRef.current.parentElement.classList.remove('hidden')\n\n      if (onVisibilityChange) {\n\n        onVisibilityChange(true)\n      }\n\n      backDropClickedRef.current = false\n\n      // for handling keydown event\n      window.setTimeout(() => {\n        content_ContainerRef.current.focus();\n      }, 100);\n\n      popoverRef.onPopoverOpened()\n    }\n\n    uiRef.close = (popoverRef) => {\n\n      if (hidden_ContainerRef.current && content_ContainerRef.current) {\n\n        hidden_ContainerRef.current.parentElement.classList.add('hidden')\n\n        setVisibility(false)\n\n        if (onVisibilityChange) {\n\n          onVisibilityChange(false)\n        }\n      }\n\n      popoverRef.onPopoverClosed()\n    }\n\n    uiRef.isShown = () => {\n      return visiblity_Ref.current\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.close = null\n    }\n  }, [])\n\n  function setVisibility(visiblity: boolean) {\n\n    set_visible(visiblity)\n    visiblity_Ref.current = visiblity\n  }\n\n  function popoverContainer_KeyDown(e: React.KeyboardEvent) {\n\n    // console.log(e.key);\n\n    if (e.key == 'Escape') {\n\n      if (onEscape) {\n\n        onEscape(e);\n\n        e.stopPropagation();\n      }\n    }\n  }\n\n  function backdrop_PointerDown(e: React.MouseEvent) {\n\n    e.preventDefault()\n\n    backDropClickedRef.current = true\n  }\n\n  function backdrop_PointerUp(e: React.PointerEvent) {\n\n    e.preventDefault()\n\n    if (backDropClickedRef.current) {\n\n      backDropClickedRef.current = false\n\n      if (onDissmiss) {\n\n        onDissmiss()\n      }\n    }\n  }\n\n  function contentContainer_PointerMove(e: React.PointerEvent) {\n\n    backDropClickedRef.current = false\n  }\n\n  function stopPropagation(e: React.PointerEvent | React.MouseEvent | React.TouchEvent) {\n\n    e.stopPropagation()\n  }\n\n  return (\n    <div ref={hidden_ContainerRef} className={`popover-hidden-container ${visible ?  'visible' : ''}`}>\n      <div\n        className='popover-content-backdrop'\n        onPointerDown={backdrop_PointerDown}\n        onPointerUp={backdrop_PointerUp}\n        onPointerMove={stopPropagation} // to prevent scrolling for controls under the backdrop\n      >\n        <div ref={content_ContainerRef}\n          className='popover-content-container'\n          tabIndex={0} // for handling keydown event\n          onClick={stopPropagation} // to prevent same event for backdrop\n          onPointerDown={stopPropagation} // to prevent same event for backdrop\n          onKeyDown={popoverContainer_KeyDown}\n          onPointerMove={contentContainer_PointerMove}\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { DocumentContext } from '../context'\nimport { VectorPoint, VectorStroke } from '../document-data'\nimport { ToolDrawingStyle } from '../document-drawing'\nimport { VectorStrokeLogic } from '../document-logic'\nimport { DOMResizingLogic } from '../dom'\nimport { Lists, Logic_Points } from '../common-logics'\nimport { CanvasRender, CanvasWindow } from '../render'\nimport { BrushParameterID, PointerParameterID, PointerTypeID } from '../tool'\nimport { RibbonUIControlID } from '../ui'\nimport { UI_ColorSlider, UI_Icon_MaterialIcon } from '../ui-common-controls'\nimport { PopoverRef, UI_PopoverContainerRef, UI_PopoverContent } from './popover-container'\n\nexport class UI_BrushPropertyBoxRef extends PopoverRef {\n\n  docContext: DocumentContext | null = null\n  updateBox(){}\n  resize(){} // for the case when the box is invisible due to current main tool was not drawing-tab at the system startup\n  updatePopover(){}\n\n  showPopover(parentNode: HTMLElement){}\n  numberInput_Changed(id: RibbonUIControlID, value: number){}\n}\n\ninterface BrushPreset {\n\n  index: number\n  baseWidth: number\n  minWidth: number\n}\n\ninterface BrushPresetGroup {\n\n  index: number\n  presets: BrushPreset[]\n}\n\nexport interface UI_BrushPropertyBoxParam {\n\n  uiRef: UI_BrushPropertyBoxRef\n}\n\nexport interface UI_BrushPropertyBoxPopoverParam {\n\n  uiRef: UI_BrushPropertyBoxRef\n}\n\nexport function UI_BrushPropertyBox({ uiRef }: UI_BrushPropertyBoxParam) {\n\n  const popoverAnchor_Ref = React.useRef<HTMLDivElement>(null)\n\n  const [pointerParams, set_pointerParams] = React.useState({\n    isUsingPointerParameter: false,\n    isUsingBrushParameter: false,\n    pointerType: PointerTypeID.brush,\n    pointerBaseSize: 0.0,\n    brushBaseSize: 0.0,\n    brushMinSize: 1.0,\n    baseColor: vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n  })\n\n  React.useEffect(() => {\n\n    uiRef.resize = () => {\n\n      // if (thumbnailResize_Ref.current) {\n      //   // thumbnailResize_Ref.current()\n      // }\n    }\n\n    uiRef.updateBox = () => {\n\n      if (uiRef.docContext.currentPointerParameter != null) {\n\n        set_pointerParams(getPointerParameters(uiRef.docContext))\n      }\n    }\n\n    return function cleanup() {\n\n      uiRef.updateBox = null\n    }\n  }, [])\n\n  function box_Clicked() {\n\n    uiRef.showPopover(popoverAnchor_Ref.current)\n  }\n\n  return (\n    <div className='brush-property-box'\n      ref={popoverAnchor_Ref}\n    >\n      <div className='brush-property-box-inner-container'\n        onPointerDown={box_Clicked}\n      >\n        <BrushThumbnailBox\n          pointerType={pointerParams.pointerType}\n          drawLineBaseWidth={pointerParams.isUsingBrushParameter ? pointerParams.brushBaseSize: pointerParams.pointerBaseSize}\n          drawLineMinWidth={pointerParams.isUsingBrushParameter ? pointerParams.brushMinSize : 1.0}\n          baseColor={pointerParams.baseColor}\n          drawStyle={uiRef.docContext.drawStyle}\n        />\n        <div className='expand'>\n          <UI_Icon_MaterialIcon iconName='expandmore' />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function UI_BrushPropertyBoxPopover({ uiRef }: UI_BrushPropertyBoxPopoverParam) {\n\n  const previewCanvas_Ref = React.useRef<HTMLCanvasElement>(null)\n\n  const [isPopoverShown, set_isPopoverShown] = React.useState(false)\n  const [isCanvasShown, set_isCanvasShown] = React.useState(false)\n\n  const [brushParams, set_brushParams] = React.useState({\n    isUsingPointerParameter: false,\n    isUsingBrushParameter: false,\n    pointerType: PointerTypeID.brush,\n    pointerBaseSize: 0.0,\n    brushBaseSize: 0.0,\n    brushMinSize: 1.0,\n    baseColor: vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n  })\n\n  const brushPresetGroups = React.useMemo<BrushPresetGroup[]>(() => {\n\n    const groups = [\n      {\n        index: 0,\n        presets: [\n          { index: 0, baseWidth: 1.0, minWidth: 1.0},\n          { index: 0, baseWidth: 2.0, minWidth: 1.0},\n          { index: 0, baseWidth: 3.0, minWidth: 1.0},\n          { index: 0, baseWidth: 4.0, minWidth: 1.0},\n          { index: 0, baseWidth: 5.0, minWidth: 1.0},\n        ]\n      },\n      {\n        index: 0,\n        presets: [\n          { index: 0, baseWidth: 1.0, minWidth: 0.5},\n          { index: 0, baseWidth: 2.0, minWidth: 0.5},\n          { index: 0, baseWidth: 3.0, minWidth: 0.5},\n          { index: 0, baseWidth: 4.0, minWidth: 0.5},\n          { index: 0, baseWidth: 5.0, minWidth: 0.5},\n        ]\n      },\n      {\n        index: 0,\n        presets: [\n          { index: 0, baseWidth: 1.0, minWidth: 0.2},\n          { index: 0, baseWidth: 2.0, minWidth: 0.2},\n          { index: 0, baseWidth: 3.0, minWidth: 0.2},\n          { index: 0, baseWidth: 4.0, minWidth: 0.2},\n          { index: 0, baseWidth: 5.0, minWidth: 0.2},\n        ]\n      },\n      {\n        index: 0,\n        presets: [\n          { index: 0, baseWidth: 7.5, minWidth: 1.0},\n          { index: 0, baseWidth: 10.0, minWidth: 1.0},\n          { index: 0, baseWidth: 20.0, minWidth: 1.0},\n          { index: 0, baseWidth: 30.0, minWidth: 1.0},\n          { index: 0, baseWidth: 40.0, minWidth: 1.0},\n          { index: 0, baseWidth: 50.0, minWidth: 1.0},\n          { index: 0, baseWidth: 7.5, minWidth: 0.5},\n          { index: 0, baseWidth: 10.0, minWidth: 0.5},\n          { index: 0, baseWidth: 20.0, minWidth: 0.5},\n          { index: 0, baseWidth: 30.0, minWidth: 0.5},\n          { index: 0, baseWidth: 40.0, minWidth: 0.5},\n          { index: 0, baseWidth: 50.0, minWidth: 0.5},\n          { index: 0, baseWidth: 7.5, minWidth: 0.2},\n          { index: 0, baseWidth: 10.0, minWidth: 0.2},\n          { index: 0, baseWidth: 20.0, minWidth: 0.2},\n          { index: 0, baseWidth: 30.0, minWidth: 0.2},\n          { index: 0, baseWidth: 40.0, minWidth: 0.2},\n          { index: 0, baseWidth: 50.0, minWidth: 0.2},\n        ]\n      },\n      {\n        index: 0,\n        presets: [\n          { index: 0, baseWidth: 60.0, minWidth: 0.5},\n          { index: 0, baseWidth: 70.0, minWidth: 0.5},\n          { index: 0, baseWidth: 80.0, minWidth: 0.5},\n          { index: 0, baseWidth: 90.0, minWidth: 0.5},\n          { index: 0, baseWidth: 100.0, minWidth: 0.5},\n        ]\n      }\n    ]\n\n    initializePresets(groups)\n\n    return groups\n  }, [])\n\n  const the = React.useMemo(() => ({\n    canvasRender: new CanvasRender(),\n    domResizing: new DOMResizingLogic(),\n    previewCanvasWindow: new CanvasWindow(),\n    buttonCanvasWindow: new CanvasWindow(),\n    popoverContentRef: new UI_PopoverContainerRef(),\n    location: vec3.create(),\n    localLocation: vec3.create(),\n    direction: vec3.create(),\n    capMatrix: mat4.create(),\n    blackColor: vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n  }), [])\n\n  React.useEffect(() => {\n\n    uiRef.updatePopover = () => {\n\n      if (uiRef.docContext.currentPointerParameter != null) {\n\n        set_brushParams(getPointerParameters(uiRef.docContext))\n      }\n    }\n\n    uiRef.showPopover = (parentNode) => {\n\n      if (uiRef.docContext.currentPointerParameter != null) {\n\n        set_brushParams(getPointerParameters(uiRef.docContext))\n      }\n\n      the.popoverContentRef.show(uiRef, parentNode)\n\n      set_isPopoverShown(true)\n\n      setTimeout(() => {\n\n        set_isCanvasShown(true)\n\n      }, 200);\n    }\n\n    return function cleanup() {\n\n      uiRef.showPopover = null\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    if (isCanvasShown) {\n\n      the.previewCanvasWindow.attachCanvas(previewCanvas_Ref.current)\n      the.domResizing.resizeCanvasToParent(the.previewCanvasWindow, false)\n      the.previewCanvasWindow.initializeContext()\n    }\n\n  }, [isCanvasShown])\n\n  React.useEffect(() => {\n\n    if (isCanvasShown) {\n\n      drawPreview();\n    }\n\n  }, [isCanvasShown, brushParams])\n\n  function initializePresets(presetGroups: BrushPresetGroup[]) {\n\n    let groupIndex = 1\n    for (const group of presetGroups) {\n\n      group.index = groupIndex\n      groupIndex++\n\n      let presetIndex = 1\n      for (const preset of group.presets) {\n\n        preset.index = presetIndex\n        presetIndex++\n      }\n    }\n  }\n\n  function drawPreview() {\n\n    drawBrushPreview(\n      the.previewCanvasWindow,\n      brushParams.pointerType,\n      brushParams.isUsingBrushParameter ? brushParams.brushBaseSize: brushParams.pointerBaseSize,\n      brushParams.isUsingBrushParameter ? brushParams.brushMinSize : 1.0,\n      brushParams.pointerBaseSize,\n      uiRef.docContext.currentPaintParameter.baseColor,\n      uiRef.docContext.drawStyle,\n      the.canvasRender,\n      the\n    )\n  }\n\n  function popover_Exit() {\n\n    the.popoverContentRef.close(uiRef)\n  }\n\n  function pointerBaseSize_sliderChanged(value: number) {\n\n    uiRef.numberInput_Changed(RibbonUIControlID.pointerBaseSize, value)\n  }\n\n  function brushBaseSize_sliderChanged(value: number) {\n\n    uiRef.numberInput_Changed(RibbonUIControlID.brushBaseSize, value)\n  }\n\n  function brushMinSize_sliderChanged(value: number) {\n\n    uiRef.numberInput_Changed(RibbonUIControlID.brushMinSize, value)\n  }\n\n  function preset_Clicked(preset: BrushPreset) {\n\n    if (brushParams.isUsingBrushParameter) {\n\n      uiRef.numberInput_Changed(RibbonUIControlID.brushBaseSize, preset.baseWidth)\n      uiRef.numberInput_Changed(RibbonUIControlID.brushMinSize, preset.minWidth)\n    }\n    else {\n\n      uiRef.numberInput_Changed(RibbonUIControlID.pointerBaseSize, preset.baseWidth)\n    }\n  }\n\n  return (\n    <UI_PopoverContent\n      uiRef={the.popoverContentRef}\n      fullHeight={true}\n      offset={{ x: 0, y: -3 }}\n      onDissmiss={popover_Exit}\n      onEscape={popover_Exit}\n    >\n      <div className='brush-property-popover-locator'>\n        <div className='brush-property-popover'\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className='preview-canvas-frame'>\n            <div className='preview-canvas-size-calculator'>\n              <canvas className='preview-canvas alpha-checker-background' ref={previewCanvas_Ref} />\n            </div>\n          </div>\n          <div className={`param-slider-container${!brushParams.isUsingBrushParameter ? ' hidden' : ''}`}>\n            <div className='label'><div className='label-text'>基本幅</div></div>\n            <UI_ColorSlider\n              min={0.0} max={100.0} step={0.05} trackColor={'#222'} showText={true}\n              value={brushParams.brushBaseSize}\n              onChange={brushBaseSize_sliderChanged}\n            ></UI_ColorSlider>\n          </div>\n          <div className={`param-slider-container${!brushParams.isUsingBrushParameter ? ' hidden' : ''}`}>\n            <div className='label'><div className='label-text'>最小幅</div></div>\n            <UI_ColorSlider\n              min={0.0} max={1.0} step={0.01} trackColor={'#666'} showText={true}\n              value={brushParams.brushMinSize}\n              onChange={brushMinSize_sliderChanged}\n            ></UI_ColorSlider>\n          </div>\n          <div className={`param-slider-container${!brushParams.isUsingPointerParameter ? ' hidden' : ''}`}>\n            <div className='label'><div className='label-text'>範囲</div></div>\n            <UI_ColorSlider\n              min={0.0} max={50.0} step={0.05} trackColor={'#f88'} showText={true}\n              value={brushParams.pointerBaseSize}\n              onChange={pointerBaseSize_sliderChanged}\n            ></UI_ColorSlider>\n          </div>\n          {\n            isPopoverShown &&\n              <div className='brush-presets-container'>\n                {\n                  brushPresetGroups.map(group =>\n                    <div className='brush-preset-group-container' key={group.index}>\n                      {\n                        group.presets.map(preset =>\n                          <div className='brush-preset-frame' key={preset.index}>\n                            <BrushThumbnailBox\n                              pointerType={PointerTypeID.brush}\n                              drawLineBaseWidth={preset.baseWidth}\n                              drawLineMinWidth={preset.minWidth}\n                              baseColor={the.blackColor}\n                              preset={preset}\n                              drawStyle={uiRef.docContext.drawStyle}\n                              onPresetClicked={preset_Clicked}\n                            />\n                          </div>\n                        )\n                      }\n                    </div>\n                  )\n                }\n              </div>\n          }\n        </div>\n      </div>\n    </UI_PopoverContent>\n  )\n}\n\ninterface BrushThumbnailBoxParam {\n\n  pointerType: PointerTypeID\n  drawLineBaseWidth: number\n  drawLineMinWidth: number\n  drawStyle: ToolDrawingStyle\n  preset?: BrushPreset\n  baseColor?: Vec4\n  onPresetClicked?: (preset: BrushPreset) => void\n}\n\nfunction BrushThumbnailBox({ pointerType, drawLineBaseWidth, drawLineMinWidth, drawStyle, baseColor, preset, onPresetClicked }: BrushThumbnailBoxParam) {\n\n  const canvas_Ref = React.useRef<HTMLCanvasElement>(null)\n\n  const the = React.useMemo(() => ({\n    canvasRender: new CanvasRender(),\n    domResizing: new DOMResizingLogic(),\n    canvasWindow: new CanvasWindow(),\n  }), [])\n\n  React.useEffect(() => {\n\n    resizeCanvas()\n\n  }, [])\n\n  React.useEffect(() => {\n\n    drawThumbnail()\n\n  }, [pointerType, drawLineBaseWidth, drawLineMinWidth, baseColor[0], baseColor[1], baseColor[2], baseColor[3]])\n\n  function resizeCanvas() {\n\n    the.canvasWindow.attachCanvas(canvas_Ref.current)\n    the.domResizing.resizeCanvasToBoundingClientRect(the.canvasWindow, false)\n    the.canvasWindow.initializeContext()\n  }\n\n  function drawThumbnail() {\n\n    if (the.canvasWindow.isInitialized()) {\n\n      drawBrushThumbnail(\n        the.canvasWindow,\n        pointerType,\n        drawLineBaseWidth,\n        drawLineMinWidth,\n        baseColor ?? vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n        drawStyle,\n        the.canvasRender\n      );\n    }\n  }\n\n  function thumbnailClicked() {\n\n    if (onPresetClicked && preset) {\n\n      onPresetClicked(preset)\n    }\n  }\n\n  return (\n    <div className='brush-thumbnail-frame'\n      onPointerDown={thumbnailClicked}\n    >\n      <canvas className='brush-thumbnail-canvas' ref={canvas_Ref} />\n      <div className='brush-size-text-frame back'>\n        <div className='brush-size-text'>{drawLineBaseWidth.toFixed(2)}</div>\n      </div>\n      <div className='brush-size-text-frame front'>\n        <div className='brush-size-text'>{drawLineBaseWidth.toFixed(2)}</div>\n      </div>\n    </div>\n  )\n}\n\nfunction getPointerParameters(docContext: DocumentContext) {\n\n  return {\n    isUsingPointerParameter: docContext.currentPointerParameter.parameterID != PointerParameterID.none ? true : false,\n    isUsingBrushParameter: docContext.currentBrushParameter.parameterID != BrushParameterID.none ? true : false,\n    pointerType: docContext.currentSubToolParameter?.pointerType ?? PointerTypeID.none,\n    pointerBaseSize: docContext.currentPointerParameter?.baseSize ?? 0.0,\n    brushBaseSize: docContext.currentBrushParameter?.baseSize ?? 0.0,\n    brushMinSize: docContext.currentBrushParameter?.minSize ?? 0.0,\n    baseColor: docContext.currentPaintParameter?.baseColor ?? vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n  }\n}\n\nfunction drawBrushThumbnail(\n  canvasWindow: CanvasWindow,\n  pointerType: PointerTypeID,\n  drawLineBaseWidth: number,\n  drawLineMinWidth: number,\n  baseColor: Vec4,\n  drawStyle: ToolDrawingStyle,\n  canvasRender: CanvasRender\n) {\n\n  const scaleSettings = [\n    { minRadius: 0.0, maxRadius: 5.0, scale: 0.4 },\n    { minRadius: 5.0, maxRadius: 50.0, scale: 0.8 },\n    { minRadius: 50.0, maxRadius: 100.0, scale: 1.0 },\n  ]\n\n  let scaleSetting = scaleSettings[0]\n  for (const setting of scaleSettings) {\n\n    if (drawLineBaseWidth > setting.minRadius) {\n\n      scaleSetting = setting\n    }\n  }\n\n  const maxBrushVisualPadding = 0.1\n  const maxBrushVisualWidth = canvasWindow.width * (0.5 - maxBrushVisualPadding)\n  const maxBrushWidthScale = maxBrushVisualWidth / scaleSetting.maxRadius\n\n  let maxRadius = drawLineBaseWidth * maxBrushWidthScale * scaleSetting.scale\n\n  const minRadius = maxRadius * drawLineMinWidth\n  const centerX = canvasWindow.width / 2\n  const centerY = canvasWindow.height / 2\n\n  canvasRender.setContext(canvasWindow)\n  canvasRender.clear()\n\n  switch (pointerType) {\n\n    case PointerTypeID.brush:\n    case PointerTypeID.brushWithCircularRange:\n      if (minRadius != maxRadius) {\n        canvasRender.setFillColor(0.7, 0.7, 0.7, 1.0)\n        canvasRender.beginPath()\n        canvasRender.circle(centerX, centerY, maxRadius)\n        canvasRender.fill()\n      }\n\n      canvasRender.setFillColor(1.0, 1.0, 1.0, 1.0)\n      canvasRender.beginPath()\n      canvasRender.circle(centerX, centerY, minRadius)\n      canvasRender.fill()\n\n      canvasRender.setFillColorV(baseColor)\n      canvasRender.beginPath()\n      canvasRender.circle(centerX, centerY, minRadius)\n      canvasRender.fill()\n      break\n\n    case PointerTypeID.circularRange:\n      canvasRender.setStrokeColorV(drawStyle.mouseCursorCircleColor)\n      canvasRender.beginPath()\n      canvasRender.circle(centerX, centerY, maxRadius)\n      canvasRender.stroke()\n      break\n  }\n}\n\nfunction drawBrushPreview(\n  canvasWindow: CanvasWindow,\n  pointerType: PointerTypeID,\n  drawLineBaseWidth: number,\n  drawLineMinWidth: number,\n  pointerBaseSize: number,\n  baseColor: Vec4,\n  drawStyle: ToolDrawingStyle,\n  canvasRender: CanvasRender,\n  temp: {\n    location: Vec3,\n    localLocation: Vec3,\n    direction: Vec3,\n    capMatrix: Mat4\n  }\n) {\n\n  const scaleSettings = [\n    { minRadius: 0.0, maxRadius: 5.0, scale: 1.0 },\n    { minRadius: 5.0, maxRadius: 50.0, scale: 1.0 },\n    { minRadius: 50.0, maxRadius: 100.0, scale: 0.5 },\n  ]\n\n  let scaleSetting = scaleSettings[0]\n  for (const setting of scaleSettings) {\n\n    if (drawLineBaseWidth > setting.minRadius) {\n\n      scaleSetting = setting\n    }\n  }\n\n  const radiusVisualScale = 1.0\n  const maxRadius = drawLineBaseWidth * radiusVisualScale * scaleSetting.scale\n  const minRadius = maxRadius * drawLineMinWidth\n  const target = canvasWindow\n\n  const previewPadding = 30.0\n  const previewWidth = target.width - previewPadding * 2\n  const previewXResolution = 20\n  const previewCapUnitAngle = 0.2\n\n  // creating stroke core position\n  const corePositionStroke = new VectorStroke()\n\n  for (let xCount = 0; xCount <= previewXResolution - 1; xCount++) {\n\n    const normX = xCount / (previewXResolution - 1)\n    const localY = Math.sin(normX * 2.0 * Math.PI) * target.height / 6\n\n    const x = previewPadding + previewWidth * normX\n    const y = target.height / 2 + localY\n    const radius = minRadius + Math.sin(normX * Math.PI) * (maxRadius - minRadius)\n\n    const point = new VectorPoint()\n    vec3.copy(point.location, vec3.set(temp.location, x, y, 0.0))\n    point.lineWidth = radius\n    corePositionStroke.points.push(point)\n  }\n\n  VectorStrokeLogic.smooth(corePositionStroke)\n\n  const resamplingUnitLength = target.width / 40.0\n  const resampledLine = VectorStrokeLogic.createResampledLine(corePositionStroke, resamplingUnitLength)\n\n  const resampled_FirstPoint = resampledLine.points[0]\n  const resampled_SecondPoint = resampledLine.points[1]\n  const resampled_LastPreviousPoint = resampledLine.points[resampledLine.points.length - 2]\n  const resampled_LastPoint = resampledLine.points[resampledLine.points.length - 1]\n\n  // creating stroke shape\n  const leftStroke = new VectorStroke()\n  const rightStroke = new VectorStroke()\n\n  Logic_Points.segmentMat(temp.capMatrix, resampled_FirstPoint.location, resampled_SecondPoint.location)\n\n  for (let angle = 0.0; angle < 1.0; angle += previewCapUnitAngle) {\n\n    const radius = resampled_FirstPoint.lineWidth\n    const x = Math.cos(Math.PI - angle * Math.PI / 2) * radius\n    const y = -Math.sin(Math.PI - angle * Math.PI / 2) * radius\n\n    {\n      vec3.set(temp.localLocation, x, y, 0.0)\n      vec3.transformMat4(temp.location, temp.localLocation, temp.capMatrix)\n\n      const point = new VectorPoint()\n      vec3.copy(point.location, temp.location)\n      leftStroke.points.push(point)\n    }\n\n    {\n      vec3.set(temp.localLocation, x, -y, 0.0)\n      vec3.transformMat4(temp.location, temp.localLocation, temp.capMatrix)\n\n      const point = new VectorPoint()\n      vec3.copy(point.location, temp.location)\n      rightStroke.points.push(point)\n    }\n  }\n\n  for (let index = 0; index < resampledLine.points.length - 1; index++) {\n\n    const point_From = resampledLine.points[index]\n    const point_To = resampledLine.points[index + 1]\n    Logic_Points.segmentMat(temp.capMatrix, point_From.location, point_To.location)\n\n    const radius = point_From.lineWidth\n    const x = 0.0\n    const y = -radius\n\n    {\n      vec3.set(temp.localLocation, x, y, 0.0)\n      vec3.transformMat4(temp.location, temp.localLocation, temp.capMatrix)\n\n      const point = new VectorPoint()\n      vec3.copy(point.location, temp.location)\n      leftStroke.points.push(point)\n    }\n\n    {\n      vec3.set(temp.localLocation, x, -y, 0.0)\n      vec3.transformMat4(temp.location, temp.localLocation, temp.capMatrix)\n\n      const point = new VectorPoint()\n      vec3.copy(point.location, temp.location)\n      rightStroke.points.push(point)\n    }\n  }\n\n  Logic_Points.segmentMat(temp.capMatrix, resampled_LastPreviousPoint.location, resampled_LastPoint.location)\n  temp.capMatrix[12] = resampled_LastPoint.location[0]\n  temp.capMatrix[13] = resampled_LastPoint.location[1]\n\n  for (let angle = previewCapUnitAngle; angle <= 1.0; angle += previewCapUnitAngle) {\n\n    const radius = resampled_LastPoint.lineWidth\n    const x = Math.cos(Math.PI / 2 - angle * Math.PI / 2) * radius\n    const y = -Math.sin(Math.PI / 2 - angle * Math.PI / 2) * radius\n\n    {\n      vec3.set(temp.localLocation, x, y, 0.0)\n      vec3.transformMat4(temp.location, temp.localLocation, temp.capMatrix)\n\n      const point = new VectorPoint()\n      vec3.copy(point.location, temp.location)\n      leftStroke.points.push(point)\n    }\n\n    {\n      vec3.set(temp.localLocation, x, -y, 0.0)\n      vec3.transformMat4(temp.location, temp.localLocation, temp.capMatrix)\n\n      const point = new VectorPoint()\n      vec3.copy(point.location, temp.location)\n      rightStroke.points.push(point)\n    }\n  }\n\n  canvasRender.setContext(target)\n  canvasRender.clear()\n\n  // drawing stroke shape\n  const boundingStroke = new VectorStroke()\n  boundingStroke.points = [...leftStroke.points, ...Lists.reverse(rightStroke.points)]\n\n  canvasRender.setStrokeWidth(1.0)\n  canvasRender.beginPath()\n  canvasRender.moveToV(boundingStroke.points[0].location)\n  for (const point of boundingStroke.points) {\n\n    canvasRender.lineToV(point.location)\n  }\n\n  switch (pointerType) {\n\n    case PointerTypeID.brush:\n    case PointerTypeID.brushWithCircularRange:\n      canvasRender.setFillColorV(baseColor)\n      canvasRender.fill()\n      break\n\n    case PointerTypeID.circularRange:\n      canvasRender.setStrokeColorV(drawStyle.mouseCursorCircleColor)\n      canvasRender.stroke()\n      break\n  }\n\n  // drawing influence range\n  switch (pointerType) {\n\n    case PointerTypeID.brushWithCircularRange:\n      canvasRender.setStrokeColorV(drawStyle.mouseCursorCircleColor)\n      canvasRender.beginPath()\n      canvasRender.circle(resampled_FirstPoint.location[0], resampled_FirstPoint.location[1], pointerBaseSize)\n      canvasRender.stroke()\n      break\n  }\n\n  const showPoints = !true\n  if (showPoints) {\n\n    for (const point of leftStroke.points) {\n      canvasRender.setFillColor(1.0, 0.0, 0.0, 1.0)\n      canvasRender.beginPath()\n      canvasRender.circle(point.location[0], point.location[1], 2.0)\n      canvasRender.fill()\n    }\n\n    for (const point of rightStroke.points) {\n      canvasRender.setFillColor(0.0, 1.0, 0.0, 1.0)\n      canvasRender.beginPath()\n      canvasRender.circle(point.location[0], point.location[1], 2.0)\n      canvasRender.fill()\n    }\n  }\n}\n","import * as React from 'react'\nimport { Platform } from '../../platform'\nimport { Strings } from '../common-logics'\nimport { DocumentContext } from '../context'\nimport { MainCommandButtonID } from '../ui'\nimport { UI_CommandButton, UI_CommandButtonItem, UI_Icon_MaterialIcon } from '../ui-common-controls'\nimport { PopoverRef, UI_PopoverContainerRef, UI_PopoverContent } from './popover-container'\n\nexport class UI_MainMenuButtonRef extends PopoverRef {\n\n  docContext: DocumentContext | null = null\n  showPopover(parentNode: HTMLElement){}\n  commandButton_Clicked(id: MainCommandButtonID){}\n}\n\nexport interface UI_MainMenuButtonParam {\n\n  uiRef: UI_MainMenuButtonRef\n}\n\nexport function UI_MainMenuButton({ uiRef }: UI_MainMenuButtonParam) {\n\n  const popoverParent_Ref = React.useRef<HTMLDivElement>(null)\n\n  const [commandButtonItem] = React.useState<UI_CommandButtonItem>(() => ({ index: 1, icon: 'menu' }))\n\n  function box_Clicked() {\n\n    uiRef.showPopover(popoverParent_Ref.current)\n  }\n\n  return (\n    <div className='main-menu-button' ref={popoverParent_Ref}>\n      <UI_CommandButton\n        commandButtonItem={commandButtonItem}\n        menuButton={true}\n        onClick={box_Clicked}\n      />\n    </div>\n  )\n}\n\nexport function UI_MainMenuPopover({ uiRef }: UI_MainMenuButtonParam) {\n\n  const popoverContentRef = React.useMemo(() => new UI_PopoverContainerRef(), [])\n\n  const menuItems = React.useMemo<UI_CommandButtonItem[]>(() => {\n    return [\n      { index: MainCommandButtonID.newFile, icon: 'filenew', title: '新規作成' },\n      { index: MainCommandButtonID.openFile, icon: 'fileopen', title: '開く' },\n      { index: MainCommandButtonID.saveFile, icon: 'save', title: '保存' },\n      { index: MainCommandButtonID.saveAs, icon: 'saveas', title: '名前をつけて保存' },\n      { index: MainCommandButtonID.export, icon: 'export', title: 'エクスポート' },\n      { index: MainCommandButtonID.shortcutKeys, icon: 'settings', title: 'キーボード設定' },\n    ]\n  }, [])\n\n  const [documentFilePath, set_documentFilePath] = React.useState('')\n\n  React.useEffect(() => {\n\n    uiRef.showPopover = (parentNode) => {\n\n      set_documentFilePath(getFileName(uiRef.docContext?.documentFilePath ?? ''))\n\n      popoverContentRef.show(uiRef, parentNode)\n    }\n\n    return function cleanup() {\n\n      uiRef.showPopover = null\n    }\n  }, [])\n\n  function getFileName(filePath: string) {\n\n    if (Strings.isNullOrEmpty(filePath)) {\n      return ''\n    }\n\n    return Platform.path.getFileName(filePath)\n  }\n\n  function popover_Exit() {\n\n    popoverContentRef.close(uiRef)\n  }\n\n  function item_Clicked(item: UI_CommandButtonItem, e: React.MouseEvent) {\n\n    e.stopPropagation()\n\n    popoverContentRef.close(uiRef)\n\n    uiRef.commandButton_Clicked(item.index)\n  }\n\n  return (\n    <UI_PopoverContent\n      uiRef={popoverContentRef}\n      offset={{ x: 6, y: -3 }}\n      onDissmiss={popover_Exit}\n      onEscape={popover_Exit}\n    >\n      <div className='main-menu-popover'\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className='file-name'>\n          <input type=\"text\" readOnly={true} value={documentFilePath}/>\n        </div>\n        <div className='main-menu-commands-container'>\n          {\n            menuItems.map(item => (\n              <div key={item.index}\n                className='main-menu-item selectable-item'\n                onClick={(e) => item_Clicked(item, e) }\n              >\n                <UI_Icon_MaterialIcon iconName={item.icon} />\n                <div className=\"main-menu-item-text\">\n                  {item.title}\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </UI_PopoverContent>\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { UI_Icon_MaterialIcon } from '../ui-common-controls'\nimport { PopoverRef, UI_PopoverContainerAlign, UI_PopoverContainerRef, UI_PopoverContent } from './popover-container'\n\nexport interface UI_SelectBoxOption {\n\n  index: int\n  label: string\n  data?: any\n}\n\nexport class UI_SelectBoxPopoverRef extends PopoverRef {\n\n  showPopover(\n    parentNode: HTMLElement,\n    options: UI_SelectBoxOption[],\n    values: UI_SelectBoxOption[],\n    popoverAlign: UI_PopoverContainerAlign,\n    large: boolean,\n    onChange?: (value: UI_SelectBoxOption | null) => void\n  ){}\n}\n\nexport interface UI_SelectBoxParam {\n\n  selectBoxPopoverRef: UI_SelectBoxPopoverRef\n  options: UI_SelectBoxOption[]\n  values: UI_SelectBoxOption[]\n  placeholder?: string\n  title?: string\n  className?: string\n  popoberAlign?: UI_PopoverContainerAlign\n  border?: boolean\n  large?: boolean\n  onChange?: (value: UI_SelectBoxOption | null) => void\n}\n\nexport interface UI_SelectBoxPopoverParam {\n\n  uiRef: UI_SelectBoxPopoverRef\n}\n\nexport function UI_SelectBox({\n  selectBoxPopoverRef,\n  options,\n  values,\n  placeholder = '',\n  title = '',\n  className = '',\n  popoberAlign = UI_PopoverContainerAlign.bottom,\n  border = false,\n  large = false,\n  onChange\n}: UI_SelectBoxParam) {\n\n  const popoverParent_Ref = React.useRef<HTMLDivElement>(null)\n\n  function box_Clicked() {\n\n    if (!selectBoxPopoverRef) {\n      throw new Error('ERROR 0000:Please provide select box popover ref' + ` for '${title}'`)\n    }\n\n    selectBoxPopoverRef.showPopover(popoverParent_Ref.current, options, values, popoberAlign, large, onChange)\n  }\n\n  const isSelectionExists = (values.length > 0)\n\n  return (\n    <div\n      title={title}\n      className={`ui-select-box${className ? ' ' + className : ''}${border ? ' button-border' : ''}${large ? ' large' : ''}`}\n      ref={popoverParent_Ref}\n      onClick={box_Clicked}\n    >\n      <div className={`ui-select-box-label${!isSelectionExists ? ' placeholder' : ''}`}>{ isSelectionExists ? values[0].label : placeholder }</div>\n      <div className='ui-select-box-expand'>\n        <UI_Icon_MaterialIcon iconName='expandmore' />\n      </div>\n    </div>\n  )\n}\n\nexport function UI_SelectBoxPopover({ uiRef }: UI_SelectBoxPopoverParam) {\n\n  const [options, set_options] = React.useState<UI_SelectBoxOption[]>([])\n  const [values, set_values] = React.useState<UI_SelectBoxOption[]>([])\n  const [large, set_large] = React.useState(false)\n  const onChange = React.useRef<(value: UI_SelectBoxOption | null) => void>(null)\n\n  const popoverContentRef = React.useMemo(() => new UI_PopoverContainerRef(), [])\n\n  React.useEffect(() => {\n\n    uiRef.showPopover = (parentNode, new_options, new_values, new_popoverAlign, new_large, new_OnChange) => {\n\n      set_options(new_options)\n      set_values(new_values)\n      set_large(new_large)\n      onChange.current = new_OnChange\n\n      popoverContentRef.show(uiRef, parentNode, new_popoverAlign)\n    }\n\n    return function cleanup() {\n\n      uiRef.showPopover = null\n    }\n  }, [])\n\n  function popover_Exit() {\n\n    popoverContentRef.close(uiRef)\n  }\n\n  function option_Clicked(item: UI_SelectBoxOption, e: React.MouseEvent) {\n\n    e.stopPropagation()\n\n    popoverContentRef.close(uiRef)\n\n    if (onChange.current) {\n\n      onChange.current(item)\n    }\n  }\n\n  return (\n    <UI_PopoverContent\n      uiRef={popoverContentRef}\n      onDissmiss={popover_Exit}\n      onEscape={popover_Exit}\n    >\n      <div className='ui-select-box-popover'\n        onClick={(e) => e.stopPropagation()}\n      >\n        {\n          options.map(item => (\n            <div key={item.index}\n              className={`ui-select-box-list-item ${large ? 'large' : ''} selectable-item ${ values.find(val => val.index == item.index) ? 'selected' : '' }`}\n              onClick={(e) => option_Clicked(item, e) }\n            >\n              <div className='selectable-item-inner'>{item.label}</div>\n            </div>\n          ))\n        }\n      </div>\n    </UI_PopoverContent>\n  )\n}\n","import * as React from 'react'\nimport { UI_BrushPropertyBoxPopover, UI_BrushPropertyBoxRef } from './brush-property-box'\nimport { UI_MainMenuButtonRef, UI_MainMenuPopover } from './main-menu-button'\nimport { UI_SelectBoxPopover, UI_SelectBoxPopoverRef } from './selectbox'\n\nexport interface UI_PopoverRouterParam {\n\n  mainMenuUIRef: UI_MainMenuButtonRef\n  brushPropertyBoxRef: UI_BrushPropertyBoxRef\n  selectBoxRef: UI_SelectBoxPopoverRef\n}\n\nexport function UI_PopoverRouter({ mainMenuUIRef, brushPropertyBoxRef, selectBoxRef }: UI_PopoverRouterParam) {\n\n  return (\n    <>\n      <UI_MainMenuPopover uiRef={mainMenuUIRef} />\n      <UI_BrushPropertyBoxPopover uiRef={brushPropertyBoxRef} />\n      <UI_SelectBoxPopover uiRef={selectBoxRef} />\n    </>\n  )\n}\n","import { UI_MainMenuButtonRef, UI_BrushPropertyBoxRef, UI_SelectBoxPopoverRef, PopoverRef } from \"../ui-popover\"\n\nexport class PopoverLogic {\n\n  mainMenuUIRef = new UI_MainMenuButtonRef()\n  brushPropertyBoxRef = new UI_BrushPropertyBoxRef()\n  selectBoxPopoverRef = new UI_SelectBoxPopoverRef()\n\n  private _isOpened = false\n\n  constructor() {\n\n    this.setCallbacks(this.mainMenuUIRef)\n    this.setCallbacks(this.brushPropertyBoxRef)\n    this.setCallbacks(this.selectBoxPopoverRef)\n  }\n\n  private setCallbacks(ref: PopoverRef) {\n\n    ref.onPopoverOpened = () => {\n\n      this._isOpened = true\n    }\n\n    ref.onPopoverClosed = () => {\n\n      this._isOpened = false\n    }\n  }\n\n  isActive(): boolean {\n\n    return this._isOpened\n  }\n}\n","﻿import { DocumentContext } from '../context'\nimport { MainToolTabID } from '../tool'\nimport { UI_BrushPropertyBoxRef, UI_MainMenuButtonRef, UI_SelectBoxOption, UI_SelectBoxPopoverRef } from '../ui-popover'\nimport { UI_RibbonUIRef } from '../ui-ribbon'\n\nexport class RibbonUIWindow {\n\n  uiRibbonUIRef: UI_RibbonUIRef = {\n    docContext: null,\n    ribbonUITabsRef: {},\n    mainMenuButtonRef: null,\n    brushPropertyBoxRef: null,\n    selectBoxPopoverRef: null,\n    updateMainToolTabFunctionInfos: [],\n    posingLayerOptions: [],\n    posingLayerOptions_Selected: []\n  }\n\n  link(mainMenuButtonRef: UI_MainMenuButtonRef, brushPropertyBoxRef: UI_BrushPropertyBoxRef, selectBoxPopoverRef: UI_SelectBoxPopoverRef) {\n\n    this.uiRibbonUIRef.mainMenuButtonRef = mainMenuButtonRef\n    this.uiRibbonUIRef.brushPropertyBoxRef = brushPropertyBoxRef\n    this.uiRibbonUIRef.selectBoxPopoverRef = selectBoxPopoverRef\n\n    this.uiRibbonUIRef.registerTabFunctionInfo = (info) => {\n\n      this.uiRibbonUIRef.updateMainToolTabFunctionInfos.push(info)\n    }\n\n    this.uiRibbonUIRef.unregisterTabFunctionInfo = (info) => {\n\n      this.uiRibbonUIRef.updateMainToolTabFunctionInfos = this.uiRibbonUIRef.updateMainToolTabFunctionInfos.filter(i => i !== info)\n    }\n  }\n\n  private setContext(docContext: DocumentContext) {\n\n    this.uiRibbonUIRef.docContext = docContext\n    this.uiRibbonUIRef.mainMenuButtonRef.docContext = docContext\n    this.uiRibbonUIRef.brushPropertyBoxRef.docContext = docContext\n  }\n\n  switchTabAndRibbon(docContext: DocumentContext) {\n\n    this.setContext(docContext)\n\n    if (this.uiRibbonUIRef.ribbonUITabsRef.update) {\n\n      this.uiRibbonUIRef.ribbonUITabsRef.update(docContext)\n    }\n\n    if (this.uiRibbonUIRef.setMainToolTab) {\n\n      this.uiRibbonUIRef.setMainToolTab(docContext.mainToolTabID)\n    }\n\n    this.getFilteredTabFunctionInfos(docContext)\n      .forEach(info => {\n\n        if (info.onActivated) {\n          info.onActivated(docContext)\n        }\n      })\n  }\n\n  updateMainToolRibbonUI(docContext: DocumentContext) {\n\n    this.setContext(docContext)\n\n    this.getFilteredTabFunctionInfos(docContext)\n      .forEach(info => {\n        info.update(docContext)\n      })\n  }\n\n  private getFilteredTabFunctionInfos(docContext: DocumentContext) {\n\n    return (\n      this.uiRibbonUIRef.updateMainToolTabFunctionInfos\n        .filter(info => info.tabID.findIndex(tabID => tabID == docContext.mainToolTabID) != -1)\n        .filter(info => !info.filter || info.filter(docContext.currentLayer))\n    )\n  }\n\n  updateLayerRibbonUI(docContext: DocumentContext, posingLayerOptions: UI_SelectBoxOption[]) {\n\n    this.setContext(docContext)\n\n    if (docContext.mainToolTabID == MainToolTabID.layer && docContext.currentVectorLayer != null) {\n\n      this.uiRibbonUIRef.posingLayerOptions = posingLayerOptions\n      this.uiRibbonUIRef.posingLayerOptions_Selected = posingLayerOptions.filter(option => option.data == docContext.currentVectorLayer.runtime.posingLayer)\n\n      this.updateMainToolRibbonUI(docContext)\n    }\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { InputSideID } from '../document-data'\nimport { RectangleLayoutArea } from '../common-logics'\nimport { SubTool, SubToolID } from '../tool'\nimport { UI_SubToolWindowRef } from '../ui-ribbon'\n\nexport class SubToolViewItemOptionButton extends RectangleLayoutArea {\n}\n\nexport class SubToolViewItem extends RectangleLayoutArea {\n\n  subToolID = SubToolID.none\n  isAvailable = false\n  buttonStateID = InputSideID.front\n  tool: SubTool = null\n  buttons: SubToolViewItemOptionButton[] = []\n}\n\nexport class SubToolWindow {\n\n  subToolViewItems: SubToolViewItem[] = []\n  uiSubToolWindowRef: UI_SubToolWindowRef = { items: []}\n\n  subToolItemSelectedColor = vec4.fromValues(0.9, 0.9, 1.0, 1.0)\n  subToolItemSeperatorLineColor = vec4.fromValues(0.0, 0.0, 0.0, 0.5)\n\n  collectViewItems(subTools: SubTool[], ctx: SubToolContext) {\n\n    this.subToolViewItems = []\n\n    for (const subtool of subTools) {\n\n      const viewItem = new SubToolViewItem()\n      viewItem.subToolID = subtool.subtoolID\n      viewItem.tool = subtool\n\n      for (let buttonIndex = 0; buttonIndex < subtool.inputOptionButtonCount; buttonIndex++) {\n\n        const button = new SubToolViewItemOptionButton()\n        button.index = buttonIndex\n\n        viewItem.buttons.push(button)\n      }\n\n      this.updateItemState(viewItem, ctx)\n\n      this.subToolViewItems.push(viewItem)\n    }\n\n    this.uiSubToolWindowRef.items = this.subToolViewItems\n  }\n\n  updateViewItemState(ctx: SubToolContext) {\n\n    for (const viewItem of this.subToolViewItems) {\n\n      this.updateItemState(viewItem, ctx)\n    }\n  }\n\n  private updateItemState(viewItem: SubToolViewItem, ctx: SubToolContext) {\n\n    viewItem.isAvailable = viewItem.tool.isAvailable(ctx)\n\n    if (viewItem.buttons.length > 0) {\n\n      viewItem.buttonStateID = viewItem.tool.getOptionButtonState(0, ctx)\n    }\n  }\n}\n","﻿import { DocumentContext } from '../context'\nimport { AnimationSettingData } from '../document-data'\nimport { ToolDrawingStyle } from \"../document-drawing\"\nimport { DOMLogic } from '../dom'\nimport { float, int } from '../common-logics'\nimport { ImageResource } from '../posing3d'\nimport { CanvasRender } from '../render'\nimport { UI_TimeLineWindowRef } from '../ui-panel'\nimport { UI_SelectBoxPopoverRef } from '../ui-popover'\nimport { PointerInputWindow, ViewKeyframe } from '../view'\n\nexport class TimeLineWindow {\n\n  uiTimeLineWindowRef: UI_TimeLineWindowRef = {}\n\n  canvasWindow = new PointerInputWindow()\n  canvasRender: CanvasRender = null\n  drawStyle: ToolDrawingStyle = null\n  systemImage: ImageResource = null\n  dom: DOMLogic = null\n\n  leftPanelWidth = 100.0\n  frameUnitWidth = 8.0\n\n  link(canvasRender: CanvasRender, drawStyle: ToolDrawingStyle, dom: DOMLogic, selectBoxRef: UI_SelectBoxPopoverRef) {\n\n    this.canvasRender = canvasRender\n    this.drawStyle = drawStyle\n    this.dom = dom\n    this.uiTimeLineWindowRef.selectBoxPopoverRef = selectBoxRef\n  }\n\n  isVisible(): boolean {\n\n    const container = this.getContainer()\n\n    return this.isContainerVisible(container)\n  }\n\n  setVisibility(visible: boolean) {\n\n    const container = this.getContainer()\n\n    if (visible) {\n\n      container.classList.remove('hidden')\n    }\n    else {\n\n      container.classList.add('hidden')\n    }\n  }\n\n  toggleVisibility() {\n\n    const container = this.getContainer()\n\n    if (this.isContainerVisible(container)) {\n\n      this.setVisibility(false)\n    }\n    else {\n\n      this.setVisibility(true)\n    }\n  }\n\n  private getContainer(): HTMLDivElement {\n\n    return this.dom.getElement<HTMLDivElement>(this.dom.ID.timeLineWindow)\n  }\n\n  private isContainerVisible(container: HTMLDivElement): boolean {\n\n    return !container.classList.contains('hidden')\n  }\n\n  getFrameUnitWidth(aniSetting: AnimationSettingData): float {\n\n    return this.frameUnitWidth * aniSetting.timeLineWindowScale\n  }\n\n  getTimeLineLeft(): float {\n\n    return this.leftPanelWidth\n  }\n\n  getTimeLineRight(): float {\n\n    return this.getTimeLineLeft() + this.canvasWindow.width - 1\n  }\n\n  getFrameByLocation(x: float, aniSetting: AnimationSettingData): int {\n\n    const left = this.getTimeLineLeft()\n    const right = this.getTimeLineRight()\n\n    if (x < left) {\n      return -1\n    }\n\n    if (x > right) {\n      return -1\n    }\n\n    const frameUnitWidth = this.getFrameUnitWidth(aniSetting)\n\n    const absoluteX = x - (left - aniSetting.timeLineWindowViewLocationX)\n\n    let frame = Math.floor(absoluteX / frameUnitWidth)\n    if (frame < 0) {\n      frame = 0\n    }\n\n    return frame\n  }\n\n  getFrameLocation(frame: float, aniSetting: AnimationSettingData) {\n\n    const left = this.getTimeLineLeft()\n    const frameUnitWidth = this.getFrameUnitWidth(aniSetting)\n    const x = left - aniSetting.timeLineWindowViewLocationX + frame * frameUnitWidth\n\n    return x\n  }\n\n  drawCommandButton(ctx: DocumentContext) {\n\n    this.canvasRender.setContext(this.canvasWindow)\n\n    // Play / Stop\n    {\n      let srcX = 0\n      const srcY = 196\n      const srcW = 128\n      const srcH = 128\n      const dstW = 45\n      const dstH = 45\n      const dstX = this.getTimeLineLeft() / 2 - dstW / 2 + 1\n      const dstY = this.canvasWindow.height / 2 - dstH / 2 + 1\n\n      if (ctx.animationPlaying) {\n\n        srcX = 128\n      }\n\n      this.canvasRender.drawImage(this.systemImage.image.imageData, srcX, srcY, srcW, srcH, dstX, dstY, dstW, dstH)\n    }\n\n    this.uiTimeLineWindowRef.update(ctx)\n  }\n\n  drawTimeLine(ctx: DocumentContext) {\n\n    this.canvasRender.setContext(this.canvasWindow)\n\n    const viewKeyframes = ctx.keyframes\n    const currentVectorLayer = ctx.currentLayer\n    const aniSetting = ctx.documentData.animationSettingData\n\n    const left = this.getTimeLineLeft()\n    const right = this.getTimeLineRight()\n    const bottom = this.canvasWindow.height\n    const frameUnitWidth = this.getFrameUnitWidth(aniSetting)\n\n    const frameNumberHeight = 16.0\n    const frameLineBottom = this.canvasWindow.height - 1.0 - frameNumberHeight\n    const frameLineHeight = 10.0\n    const secondFrameLineHeight = 30.0\n\n    // Current frame\n\n    const currentFrameX = left - aniSetting.timeLineWindowViewLocationX + aniSetting.currentTimeFrame * frameUnitWidth\n    this.canvasRender.setStrokeWidth(1.0)\n    this.canvasRender.setFillColorV(this.drawStyle.timeLineCurrentFrameColor)\n    this.canvasRender.fillRect(currentFrameX, 0.0, frameUnitWidth, bottom)\n\n    // Document keyframes\n\n    let minFrame = this.getFrameByLocation(left, aniSetting)\n    if (minFrame < 0) {\n      minFrame = 0\n    }\n\n    let maxFrame = this.getFrameByLocation(right, aniSetting)\n    if (maxFrame > aniSetting.maxFrame) {\n      maxFrame = aniSetting.maxFrame\n    }\n\n    this.canvasRender.setStrokeWidth(1.0)\n    this.canvasRender.setFillColorV(this.drawStyle.timeLineKeyFrameColor)\n\n    for (const viewKeyframe of viewKeyframes) {\n\n      const frame = viewKeyframe.frame\n\n      if (frame < minFrame) {\n        continue\n      }\n\n      if (frame > maxFrame) {\n        break\n      }\n\n      const frameX = this.getFrameLocation(frame, aniSetting)\n      this.canvasRender.fillRect(frameX, 0.0, frameUnitWidth - 1.0, frameLineBottom)\n    }\n\n    // Loop part\n    this.canvasRender.setFillColorV(this.drawStyle.timeLineOutOfLoopingColor)\n    {\n      const frameX = this.getFrameLocation(aniSetting.loopStartFrame, aniSetting)\n      if (frameX > left) {\n\n        this.canvasRender.fillRect(left, 0.0, frameX - left, bottom)\n      }\n    }\n    {\n      const frameX = this.getFrameLocation(aniSetting.loopEndFrame + 1, aniSetting)\n      if (frameX < right) {\n\n        this.canvasRender.fillRect(frameX, 0.0, right - frameX, bottom)\n      }\n    }\n\n    // Layer keyframes\n\n    this.canvasRender.setStrokeWidth(1.0)\n    this.canvasRender.setFillColorV(this.drawStyle.timeLineLayerKeyFrameColor)\n\n    if (currentVectorLayer != null) {\n\n      const viewKeyFrame = ViewKeyframe.findViewKeyframe(viewKeyframes, aniSetting.currentTimeFrame)\n      let layerIndex = -1\n      if (viewKeyFrame != null) {\n\n        layerIndex = ViewKeyframe.findViewKeyframeLayerIndex(viewKeyFrame, currentVectorLayer)\n      }\n\n      if (layerIndex != -1) {\n\n        for (const viewKeyframe of viewKeyframes) {\n\n          const frame = viewKeyframe.frame\n\n          if (frame < minFrame) {\n            continue\n          }\n\n          if (frame > maxFrame) {\n            break\n          }\n\n          const viewKeyFrameLayer = viewKeyframe.layers[layerIndex]\n\n          if (viewKeyFrameLayer.hasActualFrame) {\n\n            const frameX = this.getFrameLocation(frame, aniSetting)\n            this.canvasRender.fillRect(frameX + 2.0, 0.0, frameUnitWidth - 5.0, frameLineBottom)\n          }\n        }\n      }\n    }\n\n    // Left panel\n\n    this.canvasRender.setGlobalAlpha(1.0)\n\n    this.canvasRender.setStrokeWidth(1.0)\n    this.canvasRender.setStrokeColorV(this.drawStyle.timeLineUnitFrameColor)\n    this.canvasRender.drawLine(left, 0.0, left, this.canvasWindow.height)\n\n    // Frame measure\n    {\n      let x = left\n      for (let frame = minFrame; frame <= maxFrame + 1; frame++) {\n\n        if (frame % aniSetting.animationFrameParSecond == 0 || frame == maxFrame + 1) {\n\n          this.canvasRender.drawLine(x, frameLineBottom - secondFrameLineHeight, x, frameLineBottom)\n        }\n\n        this.canvasRender.drawLine(x, frameLineBottom - frameLineHeight, x, frameLineBottom)\n\n        x += frameUnitWidth\n      }\n    }\n\n    this.canvasRender.drawLine(left, frameLineBottom, right, frameLineBottom)\n  }\n}\n","﻿import { int } from \"../common-logics\"\n\nexport class LocalSetting {\n\n  currentDirectoryPath: string = null\n  referenceDirectoryPath: string = ''\n  autoNumberingEnabled = false\n  exportPath: string = null\n  lastUsedFilePaths: string[] = []\n  maxLastUsedFilePaths = 5\n  fileSections: LocalSettingFileSection[] = []\n  uiStates: UIState[] = []\n  shortcutKeySettings: ShortcutKeySetting[] = []\n}\n\nexport class LocalSettingFileSection {\n\n  index = 0\n  name = ''\n  path = ''\n}\n\nexport class UIState {\n\n  name: string = ''\n  visible = true\n}\n\nexport class UIStateNames {\n\n  static readonly touchOperationPanel = 'touchOperationPanel'\n  static readonly layerWindow = 'layerWindow'\n  static readonly paletteSelectorWindow = 'paletteSelectorWindow'\n  static readonly colorMixerWindow = 'colorMixerWindow'\n  static readonly timeLineWindow = 'timeLineWindow'\n}\n\nexport class ShortcutKeySetting {\n\n  id: int = 0\n  shortcutKeyID: int = 0\n  modifierKeyID: int = 0\n  commandID: int = 0\n}\n","﻿import { int } from '../common-logics'\nimport { ShortcutKeySetting } from './local-setting'\n\nexport type ShortcutKeyName =\n  '1' |\n  '2' |\n  '3' |\n  '4' |\n  '5' |\n  '6' |\n  '7' |\n  '8' |\n  '9' |\n  '0' |\n  'A' |\n  'B' |\n  'C' |\n  'D' |\n  'E' |\n  'F' |\n  'G' |\n  'H' |\n  'I' |\n  'J' |\n  'K' |\n  'L' |\n  'M' |\n  'N' |\n  'O' |\n  'P' |\n  'Q' |\n  'R' |\n  'S' |\n  'T' |\n  'U' |\n  'V' |\n  'W' |\n  'X' |\n  'Y' |\n  'Z' |\n  '-' |\n  '^' |\n  '|' |\n  '@' |\n  '[' |\n  ']' |\n  ';' |\n  ':' |\n  ',' |\n  '.' |\n  '/' |\n  '\\\\' |\n  'Up' |\n  'Right' |\n  'Down' |\n  'Left' |\n  'Space' |\n  'Delete' |\n  'BackSpace' |\n  'Enter' |\n  'Escape' |\n  'Tab' |\n  'Home'\n\nexport type ModifierKeyName =\n  '' |\n  'Ctrl' |\n  'Alt' |\n  'Shift'\n\nexport enum ShortcutCommandID {\n\n  none = 0,\n\n  setting_shortcutKey = 101,\n\n  document_new        = 201,\n  document_save       = 202,\n  document_saveAs     = 203,\n  document_open       = 204,\n  document_export     = 205,\n\n  view_pan            = 301,\n  view_zoomIn         = 302,\n  view_zoomOut        = 303,\n  view_rotateCW       = 304,\n  view_rotateCCW      = 305,\n  view_mirrorX        = 306,\n  view_mirrorY        = 307,\n  view_reset          = 308,\n  view_toggleHome     = 309,\n  view_toggleLayerPanel   = 310,\n  view_togglePalletePanel = 311,\n  view_toggleMixerPanel   = 312,\n\n  edit_undo           = 401,\n  edit_redo           = 402,\n  edit_copy           = 403,\n  edit_cut            = 404,\n  edit_paste          = 405,\n  edit_delete         = 406,\n  edit_fix            = 407,\n  edit_selectAll      = 409,\n  edit_cancel         = 408,\n  edit_unselectAll    = 410,\n  edit_grabMove       = 411,\n  edit_rotate         = 412,\n  edit_scale          = 413,\n  edit_setPibot       = 414,\n\n  tool_subTool1 = 501,\n  tool_subTool2 = 502,\n  tool_subTool3 = 503,\n  tool_subTool4 = 504,\n  tool_subTool5 = 505,\n  tool_subTool6 = 506,\n  tool_subTool7 = 507,\n  tool_subTool8 = 508,\n  tool_subTool9 = 509,\n  tool_subTool0 = 510,\n  tool_toggleMainEdit  = 511,\n  tool_togglePenEraser = 512,\n\n  layer_newLayer      = 601,\n  layer_pickLayer     = 602,\n  layer_previousLayer = 603,\n  layer_nextLayer     = 604,\n\n  timeline_previousKeyframe = 701,\n  timeline_nextKeyframe     = 702,\n}\n\nexport interface ShortcutKey {\n\n  shortcutKeyID: int\n  keyName: ShortcutKeyName\n  keyString: string\n  lineNumber: int\n}\n\nexport interface ModifierKey {\n\n  modifierKeyID: int\n  keyName: ModifierKeyName\n  lineNumber: int\n}\n\nexport enum ShortcutCategoryID {\n\n  menu = 1,\n  view = 2,\n  tool = 3,\n  edit = 4,\n  layer = 5,\n  timeline = 6,\n}\n\nexport interface ShortcutCategory {\n\n  categoryID: ShortcutCategoryID\n  categoryName: string\n  lineNumber: int\n}\n\nexport interface ShortcutCommand {\n\n  commandID: int\n  commandName: string\n  categoryID: int\n  lineNumber: int\n\n  category: ShortcutCategory\n}\n\nexport class ShortcutKeyLogic {\n\n  shortcutKeys: ShortcutKey[] = []\n  modifierKeys: ModifierKey[] = []\n  shortcutCategorys: ShortcutCategory[] = []\n  shortcutCommands: ShortcutCommand[] = []\n  shortcutKeySettings: ShortcutKeySetting[] = []\n\n  private cache_key: string = ''\n  private cache_shiftKey = false\n  private cacche_ctrlKey = false\n  private cache_altKey = false\n  private cached_shortcutKeySettings: ShortcutKeySetting[] = []\n\n  initializeDefaultSettings() {\n\n    const keys = this.createDefaultShortcutKeys()\n    const commands = this.createDefaultShortcutCommands()\n    this.shortcutKeys = keys.shortcutKeys\n    this.modifierKeys = keys.modifierKeys\n    this.shortcutCategorys = commands.shortcutCategorys\n    this.shortcutCommands = commands.shortcutCommands\n\n    this.shortcutKeySettings = this.createDefaultShortcutKeySettings()\n  }\n\n  createDefaultShortcutKeys(): { shortcutKeys: ShortcutKey[], modifierKeys: ModifierKey[] } {\n\n    const shortcutKeys: ShortcutKey[] = [\n        { shortcutKeyID: 1, keyName: '1', keyString: '1', lineNumber: 0 },\n        { shortcutKeyID: 2, keyName: '2', keyString: '2', lineNumber: 0 },\n        { shortcutKeyID: 3, keyName: '3', keyString: '3', lineNumber: 0 },\n        { shortcutKeyID: 4, keyName: '4', keyString: '4', lineNumber: 0 },\n        { shortcutKeyID: 5, keyName: '5', keyString: '5', lineNumber: 0 },\n        { shortcutKeyID: 6, keyName: '6', keyString: '6', lineNumber: 0 },\n        { shortcutKeyID: 7, keyName: '7', keyString: '7', lineNumber: 0 },\n        { shortcutKeyID: 8, keyName: '8', keyString: '8', lineNumber: 0 },\n        { shortcutKeyID: 9, keyName: '9', keyString: '9', lineNumber: 0 },\n        { shortcutKeyID: 10, keyName: '0', keyString: '0', lineNumber: 0 },\n        { shortcutKeyID: 11, keyName: 'A', keyString: 'A', lineNumber: 0 },\n        { shortcutKeyID: 12, keyName: 'B', keyString: 'B', lineNumber: 0 },\n        { shortcutKeyID: 13, keyName: 'C', keyString: 'C', lineNumber: 0 },\n        { shortcutKeyID: 14, keyName: 'D', keyString: 'D', lineNumber: 0 },\n        { shortcutKeyID: 15, keyName: 'E', keyString: 'E', lineNumber: 0 },\n        { shortcutKeyID: 16, keyName: 'F', keyString: 'F', lineNumber: 0 },\n        { shortcutKeyID: 17, keyName: 'G', keyString: 'G', lineNumber: 0 },\n        { shortcutKeyID: 18, keyName: 'H', keyString: 'H', lineNumber: 0 },\n        { shortcutKeyID: 19, keyName: 'I', keyString: 'I', lineNumber: 0 },\n        { shortcutKeyID: 20, keyName: 'J', keyString: 'J', lineNumber: 0 },\n        { shortcutKeyID: 21, keyName: 'K', keyString: 'K', lineNumber: 0 },\n        { shortcutKeyID: 22, keyName: 'L', keyString: 'L', lineNumber: 0 },\n        { shortcutKeyID: 23, keyName: 'M', keyString: 'M', lineNumber: 0 },\n        { shortcutKeyID: 24, keyName: 'N', keyString: 'N', lineNumber: 0 },\n        { shortcutKeyID: 25, keyName: 'O', keyString: 'O', lineNumber: 0 },\n        { shortcutKeyID: 26, keyName: 'P', keyString: 'P', lineNumber: 0 },\n        { shortcutKeyID: 27, keyName: 'Q', keyString: 'Q', lineNumber: 0 },\n        { shortcutKeyID: 28, keyName: 'R', keyString: 'R', lineNumber: 0 },\n        { shortcutKeyID: 29, keyName: 'S', keyString: 'S', lineNumber: 0 },\n        { shortcutKeyID: 30, keyName: 'T', keyString: 'T', lineNumber: 0 },\n        { shortcutKeyID: 31, keyName: 'U', keyString: 'U', lineNumber: 0 },\n        { shortcutKeyID: 32, keyName: 'V', keyString: 'V', lineNumber: 0 },\n        { shortcutKeyID: 33, keyName: 'W', keyString: 'W', lineNumber: 0 },\n        { shortcutKeyID: 34, keyName: 'X', keyString: 'X', lineNumber: 0 },\n        { shortcutKeyID: 35, keyName: 'Y', keyString: 'Y', lineNumber: 0 },\n        { shortcutKeyID: 36, keyName: 'Z', keyString: 'Z', lineNumber: 0 },\n        { shortcutKeyID: 37, keyName: '-', keyString: '-', lineNumber: 0 },\n        { shortcutKeyID: 38, keyName: '^', keyString: '^', lineNumber: 0 },\n        { shortcutKeyID: 39, keyName: '|', keyString: '|', lineNumber: 0 },\n        { shortcutKeyID: 40, keyName: '@', keyString: '@', lineNumber: 0 },\n        { shortcutKeyID: 41, keyName: '[', keyString: '[', lineNumber: 0 },\n        { shortcutKeyID: 42, keyName: ']', keyString: ']', lineNumber: 0 },\n        { shortcutKeyID: 43, keyName: ';', keyString: ';', lineNumber: 0 },\n        { shortcutKeyID: 44, keyName: ':', keyString: ':', lineNumber: 0 },\n        { shortcutKeyID: 45, keyName: ',', keyString: ',', lineNumber: 0 },\n        { shortcutKeyID: 46, keyName: '.', keyString: '.', lineNumber: 0 },\n        { shortcutKeyID: 47, keyName: '/', keyString: '/', lineNumber: 0 },\n        { shortcutKeyID: 48, keyName: '\\\\', keyString: '\\\\', lineNumber: 0 },\n        { shortcutKeyID: 49, keyName: 'Up', keyString: 'ArrowUp', lineNumber: 0 },\n        { shortcutKeyID: 50, keyName: 'Right', keyString: 'ArrowRight', lineNumber: 0 },\n        { shortcutKeyID: 51, keyName: 'Down', keyString: 'ArrowDown', lineNumber: 0 },\n        { shortcutKeyID: 52, keyName: 'Left', keyString: 'ArrowLeft', lineNumber: 0 },\n        { shortcutKeyID: 53, keyName: 'Space', keyString: ' ', lineNumber: 0 },\n        { shortcutKeyID: 54, keyName: 'Delete', keyString: 'Delete', lineNumber: 0 },\n        { shortcutKeyID: 55, keyName: 'BackSpace', keyString: 'BackSpace', lineNumber: 0 },\n        { shortcutKeyID: 56, keyName: 'Enter', keyString: 'Enter', lineNumber: 0 },\n        { shortcutKeyID: 57, keyName: 'Escape', keyString: 'Escape', lineNumber: 0 },\n        { shortcutKeyID: 58, keyName: 'Tab', keyString: 'Tab', lineNumber: 0 },\n        { shortcutKeyID: 59, keyName: 'Home', keyString: 'Home', lineNumber: 0 },\n      ]\n\n    {\n      let lineNumber = 1\n      shortcutKeys.forEach(item => item.lineNumber = lineNumber++)\n    }\n\n    const modifierKeys: ModifierKey[] = [\n      { modifierKeyID: 1, keyName: '', lineNumber: 0 },\n      { modifierKeyID: 2, keyName: 'Ctrl', lineNumber: 0 },\n      { modifierKeyID: 3, keyName: 'Shift', lineNumber: 0 },\n      { modifierKeyID: 4, keyName: 'Alt', lineNumber: 0 },\n    ]\n\n    {\n      let lineNumber = 1\n      modifierKeys.forEach(item => item.lineNumber = lineNumber++)\n    }\n\n    return {\n      shortcutKeys,\n      modifierKeys\n    }\n  }\n\n  createDefaultShortcutCommands(): { shortcutCategorys: ShortcutCategory[], shortcutCommands: ShortcutCommand[] } {\n\n    const shortcutCategorys: ShortcutCategory[] = [\n      { categoryID: ShortcutCategoryID.menu, categoryName: 'メニュー', lineNumber: 0 },\n      { categoryID: ShortcutCategoryID.view, categoryName: '表示', lineNumber: 0 },\n      { categoryID: ShortcutCategoryID.tool, categoryName: 'ツール', lineNumber: 0 },\n      { categoryID: ShortcutCategoryID.edit, categoryName: '編集', lineNumber: 0 },\n      { categoryID: ShortcutCategoryID.layer, categoryName: 'レイヤー', lineNumber: 0 },\n      { categoryID: ShortcutCategoryID.timeline, categoryName: 'ライムライン', lineNumber: 0 },\n    ]\n\n    {\n      let lineNumber = 1\n      shortcutCategorys.forEach(item => item.lineNumber = lineNumber++)\n    }\n\n    const shortcutCommands: ShortcutCommand[] = []\n\n    // メニュー\n    let categoryID = ShortcutCategoryID.menu\n    this.addCommand(shortcutCommands, ShortcutCommandID.document_new, '新規作成', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.document_save, '保存', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.document_saveAs, '名前をつけて保存', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.document_open, '開く', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.document_export, 'エクスポート', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.setting_shortcutKey, 'キーボード設定', categoryID)\n    // 表示\n    categoryID = ShortcutCategoryID.view\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_pan, 'ビューを移動', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_zoomIn, 'ビューを拡大', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_zoomOut, 'ビューを縮小', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_rotateCW, 'ビューを右に回転', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_rotateCCW, 'ビューを左に回転', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_mirrorX, '左右反転', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_reset, 'ビューをリセット', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_toggleHome, 'ビューの位置を戻す', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_toggleLayerPanel, 'レイヤーパネルの表示', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_togglePalletePanel, 'パレットパネルの表示', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.view_toggleMixerPanel, 'カラーミキサーパネルの表示', categoryID)\n    // 編集\n    categoryID = ShortcutCategoryID.edit\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_undo, 'もとに戻す', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_redo, 'やりなおす', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_copy, 'コピー', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_cut, '切り取り', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_paste, '貼り付け', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_delete, '削除', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_fix, '確定', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_cancel, 'キャンセル', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_selectAll, '全て選択', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_unselectAll, '選択解除', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_grabMove, '移動', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_rotate, '回転', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_scale, '拡大/縮小', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.edit_setPibot, 'ピボットの指定', categoryID)\n    // ツール\n    categoryID = ShortcutCategoryID.tool\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool1, 'サブツール１', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool2, 'サブツール２', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool3, 'サブツール３', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool4, 'サブツール４', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool5, 'サブツール５', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool6, 'サブツール６', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool7, 'サブツール７', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool8, 'サブツール８', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool9, 'サブツール９', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_subTool0, 'サブツール０', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_toggleMainEdit, 'メイン/編集', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.tool_togglePenEraser, 'ペン/消しゴム', categoryID)\n    // レイヤー\n    categoryID = ShortcutCategoryID.layer\n    this.addCommand(shortcutCommands, ShortcutCommandID.layer_newLayer, 'レイヤーを作成', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.layer_pickLayer, 'レイヤーの選択', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.layer_previousLayer, '上のレイヤーを選択', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.layer_nextLayer, '下のレイヤーを選択', categoryID)\n    // ライムライン\n    categoryID = ShortcutCategoryID.timeline\n    this.addCommand(shortcutCommands, ShortcutCommandID.timeline_previousKeyframe, '前のキーフレーム', categoryID)\n    this.addCommand(shortcutCommands, ShortcutCommandID.timeline_nextKeyframe, '次のキーフレーム', categoryID)\n\n    let lineNumber = 1\n    for (const command of shortcutCommands){\n\n      command.lineNumber = lineNumber++\n      command.category = shortcutCategorys.find(category => category.categoryID == command.categoryID) ?? null\n    }\n\n    return {\n      shortcutCategorys,\n      shortcutCommands\n    }\n  }\n\n  createDefaultShortcutKeySettings(): ShortcutKeySetting[] {\n\n    const tempSettings: { commandID: ShortcutCommandID, key: ShortcutKeyName, modifier: ModifierKeyName  }[] = []\n\n    tempSettings.push({ commandID: ShortcutCommandID.document_new, key: 'N', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.document_save, key: 'S', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_pan, key: 'Space', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_zoomIn, key: 'F', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_zoomOut, key: 'D', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_rotateCW, key: 'R', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_rotateCCW, key: 'T', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_mirrorX, key: 'M', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_toggleHome, key: 'Q', modifier: 'Shift' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_toggleHome, key: 'Q', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.view_toggleHome, key: 'Home', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_undo, key: 'Z', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_undo, key: 'Z', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_redo, key: 'Y', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_redo, key: 'Y', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_copy, key: 'C', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_cut, key: 'X', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_paste, key: 'V', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_delete, key: 'Delete', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_delete, key: 'X', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_fix, key: 'Enter', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_cancel, key: 'Escape', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_selectAll, key: 'A', modifier: 'Ctrl' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_unselectAll, key: 'A', modifier: 'Alt' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_grabMove, key: 'G', modifier: 'Shift' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_rotate, key: 'R', modifier: 'Shift' })\n    tempSettings.push({ commandID: ShortcutCommandID.edit_scale, key: 'S', modifier: 'Shift' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool1, key: '1', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool2, key: '2', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool3, key: '3', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool4, key: '4', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool5, key: '5', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool6, key: '6', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool7, key: '7', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool8, key: '8', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool9, key: '9', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_subTool0, key: '0', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_toggleMainEdit, key: 'Tab', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.tool_togglePenEraser, key: 'E', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.layer_pickLayer, key: 'W', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.layer_previousLayer, key: 'A', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.layer_nextLayer, key: 'S', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.timeline_previousKeyframe, key: 'C', modifier: '' })\n    tempSettings.push({ commandID: ShortcutCommandID.timeline_nextKeyframe, key: 'V', modifier: '' })\n\n    const settings: ShortcutKeySetting[] = []\n\n    let tempID = 1\n    for (const tempSetting of tempSettings) {\n\n      const shortcutKey = this.shortcutKeys.find(k => k.keyName == tempSetting.key)\n\n      if (!shortcutKey) {\n        throw new Error('ERROR-0000: Invalid key for default shortcut key')\n      }\n\n      const modifierKey = this.modifierKeys.find(k => k.keyName == tempSetting.modifier)\n\n      if (!modifierKey) {\n        throw new Error('ERROR-0000: Invalid modifier for default shortcut key')\n      }\n\n      const command = this.shortcutCommands.find(com => com.commandID == tempSetting.commandID)\n\n      if (!command) {\n        throw new Error('ERROR-0000: Invalid command for default shortcut key')\n      }\n\n      settings.push({\n        id: tempID,\n        commandID: tempSetting.commandID,\n        shortcutKeyID: shortcutKey.shortcutKeyID,\n        modifierKeyID: modifierKey.modifierKeyID,\n      })\n\n      tempID++\n    }\n\n    return settings\n  }\n\n  private addCommand(target: ShortcutCommand[], commandID: ShortcutCommandID, commandName: string, categoryID: ShortcutCategoryID) {\n\n    target.push({ commandID, commandName, categoryID, lineNumber: 0, category: null })\n  }\n\n  addShortcutKeySetting(setting: ShortcutKeySetting) {\n\n    this.shortcutKeySettings.sort((a, b) => a.id - b.id)\n\n    const new_id = this.shortcutKeySettings.reduce((previous, current) => {\n      if (previous == current.id) {\n        return current.id + 1\n      }\n      else {\n        return previous\n      }\n    }, 1 )\n\n    setting.id = new_id\n\n    this.shortcutKeySettings.push(setting)\n  }\n\n  removeShortcutKeySetting(setting: ShortcutKeySetting) {\n\n    this.shortcutKeySettings = this.shortcutKeySettings.filter(skt => skt != setting)\n  }\n\n  getCommandIDFromKeyInput(key: string, shiftKey: boolean, ctrlKey: boolean, altKey: boolean): ShortcutCommandID {\n\n    let shortcutKeySettings: ShortcutKeySetting[]\n\n    if (key == this.cache_key\n      && shiftKey == this.cache_shiftKey\n      && ctrlKey == this.cacche_ctrlKey\n      && altKey == this.cache_altKey\n    ) {\n\n      shortcutKeySettings = this.cached_shortcutKeySettings\n    }\n    else {\n\n      const upperCase_key = key.length == 1 ? key.toUpperCase() : key\n\n      const shortcutKey = this.shortcutKeys.find(sk => sk.keyString == upperCase_key)\n\n      const modifierKeyName = this.getModifierKeyNameFromKeyState(shiftKey, ctrlKey, altKey)\n\n      const modifierKey = this.modifierKeys.find(mk => mk.keyName == modifierKeyName)\n\n      if (shortcutKey && modifierKey) {\n\n        shortcutKeySettings = this.shortcutKeySettings.filter(setting =>\n          setting.shortcutKeyID == shortcutKey.shortcutKeyID\n          && setting.modifierKeyID == modifierKey.modifierKeyID\n        )\n      }\n      else {\n\n        shortcutKeySettings = []\n      }\n    }\n\n    this.cached_shortcutKeySettings = shortcutKeySettings\n\n    if (shortcutKeySettings.length > 0) {\n\n      return shortcutKeySettings[0].commandID\n    }\n    else {\n\n      return ShortcutCommandID.none\n    }\n  }\n\n  private getModifierKeyNameFromKeyState(shiftKey: boolean, ctrlKey: boolean, altKey: boolean): ModifierKeyName {\n\n    if (shiftKey) {\n\n      return 'Shift'\n    }\n    else if (ctrlKey) {\n\n      return 'Ctrl'\n    }\n    else if (altKey) {\n\n      return 'Alt'\n    }\n    else {\n\n      return ''\n    }\n  }\n}\n","﻿import { Platform } from '../../platform'\nimport { UserStorage } from '../../platform/user-strage'\nimport { Lists } from '../common-logics'\nimport { LocalSetting, LocalSettingFileSection } from './local-setting'\nimport { ShortcutKeyLogic } from './shortcut-key'\nimport { UserUIStateLogic } from './user-ui-state'\n\nexport class UserSettingFileLogic {\n\n  localSetting = new LocalSetting()\n\n  static readonly localStorage_ActiveSettingNameKey = 'activeSettingName'\n  static readonly localStorage_DefaultDocumentDataKey = 'Manual tracing tool save data'\n\n  private uiState: UserUIStateLogic | null = null\n  private shortcutKey: ShortcutKeyLogic | null = null\n\n  link (uiState: UserUIStateLogic, shortcutKey: ShortcutKeyLogic) {\n\n    this.uiState = uiState\n    this.shortcutKey = shortcutKey\n  }\n\n  loadSettings() {\n\n    const activeSettingName = UserStorage.getItem<string>(UserSettingFileLogic.localStorage_ActiveSettingNameKey)\n    const localSetting: LocalSetting = UserStorage.getItem(activeSettingName)\n\n    if (!localSetting) {\n      return\n    }\n\n    this.uiState.fixLoadedUIStates(localSetting)\n\n    // @migration\n    if (localSetting.fileSections == undefined) {\n\n      localSetting.fileSections = []\n    }\n\n    if (localSetting.shortcutKeySettings == undefined) {\n\n      localSetting.shortcutKeySettings = this.shortcutKey.createDefaultShortcutKeySettings()\n    }\n\n    if (localSetting.autoNumberingEnabled == undefined) {\n\n      localSetting.autoNumberingEnabled = false\n    }\n\n    // TODO: デバッグ用。削除する\n    // localSetting.shortcutKeySettings = shortcutKey.createDefaultShortcutKeySettings()\n\n    this.localSetting = localSetting\n\n    this.shortcutKey.shortcutKeySettings = localSetting.shortcutKeySettings\n  }\n\n  saveSettings() {\n\n    this.localSetting.shortcutKeySettings = this.shortcutKey.shortcutKeySettings\n\n    const activeSettingName = UserStorage.getItem<string>(UserSettingFileLogic.localStorage_ActiveSettingNameKey)\n\n    UserStorage.setItem(activeSettingName, this.localSetting)\n  }\n\n  getOpenFileEnvironments() {\n\n    return {\n      fileSections: this.localSetting.fileSections,\n      lastUsedFilePaths: this.localSetting.lastUsedFilePaths\n    }\n  }\n\n  addFileSection(fileSection: LocalSettingFileSection) {\n\n    const new_FileSections = this.localSetting.fileSections\n      .filter(section => section.path != fileSection.path)\n\n    new_FileSections.push(fileSection)\n\n    this.setFileSections(new_FileSections)\n\n    this.saveSettings()\n  }\n\n  removeFileSection(fileSection: LocalSettingFileSection) {\n\n    const new_FileSections = this.localSetting.fileSections\n      .filter(section => section != fileSection)\n\n    this.setFileSections(new_FileSections)\n\n    this.saveSettings()\n  }\n\n  registerLastUsedFile(filePath: string) {\n\n    const fileName = Platform.path.getFileName(filePath)\n\n    let paths = this.localSetting.lastUsedFilePaths\n\n    for (let index = 0; index < paths.length; index++) {\n\n        if (paths[index] == filePath) {\n\n          Lists.removeAt(paths, index)\n        }\n    }\n\n    Lists.insertAt(paths, 0, filePath)\n\n    if (paths.length > this.localSetting.maxLastUsedFilePaths) {\n\n        paths = Lists.getRange(paths, 0, this.localSetting.maxLastUsedFilePaths)\n    }\n\n    this.localSetting.lastUsedFilePaths = paths\n\n    // TODO: ファイルパスの書式の検証\n    this.localSetting.currentDirectoryPath = Platform.path.getDirectoryPath(filePath)\n\n    this.saveSettings()\n  }\n\n  private setFileSections(new_FileSections: LocalSettingFileSection[]) {\n\n    let index = 0\n    new_FileSections.forEach(item => item.index = index++)\n\n    this.localSetting.fileSections = new_FileSections\n  }\n}\n","﻿import { LocalSetting,  UIState, UIStateNames } from './local-setting'\nimport { UserSettingFileLogic } from './user-setting-file'\n\nexport class UserUIStateLogic {\n\n  private settingFile: UserSettingFileLogic | null = null\n\n  link(settingFile: UserSettingFileLogic) {\n\n    this.settingFile = settingFile\n  }\n\n  static createDefaultUIStates(): UIState[] {\n\n    return [\n      { name: UIStateNames.touchOperationPanel, visible: true },\n      { name: UIStateNames.layerWindow, visible: true },\n      { name: UIStateNames.paletteSelectorWindow, visible: false },\n      { name: UIStateNames.colorMixerWindow, visible: false },\n      { name: UIStateNames.timeLineWindow, visible: false },\n    ]\n  }\n\n  fixLoadedUIStates(localSetting: LocalSetting) {\n\n    const defaultStates = UserUIStateLogic.createDefaultUIStates()\n\n    if (localSetting.uiStates == undefined) {\n\n      localSetting.uiStates = []\n    }\n\n    for (const defaultState of defaultStates) {\n\n      if (localSetting.uiStates.findIndex(state => state.name == defaultState.name) == -1) {\n\n        localSetting.uiStates.push(defaultState)\n      }\n    }\n  }\n\n  getUIState(uiStateName: string): UIState | null {\n\n    const uiState = this.settingFile.localSetting.uiStates.find(state => state.name == uiStateName)\n\n    return uiState ?? null\n  }\n}\n","import { Platform } from '../platform'\nimport { UserStorage } from '../platform/user-strage'\nimport { App_Drawing } from './app-drawing'\nimport { App_Tool } from './app-tool'\nimport { App_View } from './app-view'\nimport {\n  Command_Animation_DeleteKeyframeAllLayer, Command_Animation_InsertKeyframeAllLayer, Command_Layer_CommandBase,\n  Command_Layer_CreateDefaultDocumentLayers\n} from './commands'\nimport { DocumentContext, SubToolContext, SubToolContext_AppDocument_Interface } from './context'\nimport {\n  AnimationSettingData,\n  DocumentBackGroundTypeID, DocumentData, DocumentFileType, ImageFileTypeID, Layer, LayerTypeID, OnionSkinMode\n} from './document-data'\nimport { DocumentDataSerializingState, DocumentDeserializingLogic, DocumentFileNameLogic, DocumentSerializingLogic, EditAnimationFrameLogic } from './document-logic'\nimport { DocumentLoaderOraSettings, DocumentLoading } from './loading'\nimport { float, int, Strings } from './common-logics'\nimport { ModelFile, Posing3DLogic, Posing3DModelLogic } from './posing3d'\nimport { CanvasWindow } from './render'\nimport { DeleteKeyframeTypeID, NewKeyframeTypeID } from './ui'\nimport { UserSettingFileLogic } from './user-setting'\nimport { ViewKeyframe } from './view'\n\nexport class App_Document implements SubToolContext_AppDocument_Interface {\n\n  documentLoading = new DocumentLoading()\n  oraSettings = new DocumentLoaderOraSettings()\n\n  posing3D = new Posing3DLogic()\n  posing3DModel = new Posing3DModelLogic()\n\n  private appView: App_View = null\n  private appDrawing: App_Drawing = null\n  private appTool: App_Tool = null\n  private userSetting: UserSettingFileLogic = null\n\n  private docContext: DocumentContext = null\n  private subtoolContext: SubToolContext = null\n\n  link(appView: App_View, appDrawing: App_Drawing, appTool: App_Tool, userSetting: UserSettingFileLogic) {\n\n    this.appView = appView\n    this.appDrawing = appDrawing\n    this.appTool = appTool\n    this.userSetting = userSetting\n\n    this.documentLoading.link(this.appDrawing.posing3DViewRender, this.posing3DModel, this.oraSettings)\n  }\n\n  linkContexts(docContext: DocumentContext, toolContext: SubToolContext) {\n\n    this.docContext = docContext\n    this.subtoolContext = toolContext\n  }\n\n  // Loading\n\n  fixLoadedDocumentData(documentData: DocumentData, modelFile: ModelFile) {\n\n    const state = new DocumentDataSerializingState()\n    state.modelFile = modelFile\n\n    const loadedVersiotn = documentData.version\n\n    DocumentDeserializingLogic.fixLoadedDocumentData(documentData, state)\n\n    if (documentData.version != loadedVersiotn) {\n      console.log('Document migrated:', loadedVersiotn, '->', documentData.version)\n    }\n  }\n\n  // Saving\n\n  saveDocumentData(save_filePath: string, documentData: DocumentData, forceToLocal: boolean) {\n\n    const save_DocumentData = this.createSaveDocumentData(documentData, save_filePath)\n\n    this.userSetting.registerLastUsedFile(save_filePath)\n\n    if (forceToLocal) {\n\n      UserStorage.setItem(UserSettingFileLogic.localStorage_DefaultDocumentDataKey, save_DocumentData)\n\n      return\n    }\n\n    const fileType = DocumentFileNameLogic.getDocumentFileTypeFromName(save_filePath)\n\n    const documentDataString = JSON.stringify(save_DocumentData)\n\n    if (fileType == DocumentFileType.json) {\n\n      this.saveDocumentJsonFile(save_filePath, documentDataString)\n    }\n    else if (fileType == DocumentFileType.ora) {\n\n      const margedImage = this.createExportImage(documentData, this.docContext.currentViewKeyframe, 1.0, documentData.exportImageSetting.backGroundType)\n\n      this.saveDocumentOraFile(save_filePath, documentDataString, margedImage)\n    }\n  }\n\n  saveDocumentJsonFile(filePath: string, documentDataString: string) {\n\n    Platform.fileSystem.writeFile(filePath, documentDataString, 'utf8')\n  }\n\n  saveDocumentOraFile(filePath: string, documentDataString: string, margedImage: HTMLCanvasElement) {\n\n    ora.scriptsPath = this.documentLoading.oraSettings.scriptsPath\n    // ora.blending = false\n    ora.enableWorkers = false // TODO: ElectronのあるバージョンからWebWorkerが挙動が変わったのかなんなのか動作しないので、そのうち自作するしかないかと思っています。WebAssemblyとか？\n\n    const oraFile = new ora.Ora(margedImage.width, margedImage.height)\n\n    const layer = oraFile.addLayer('marged', 0)\n    layer.image = margedImage\n\n    oraFile.save(\n      this.documentLoading.oraSettings.vectorFileName\n      , documentDataString\n      , (dataURL: string) => {\n        Platform.fileSystem.writeFile(filePath, dataURL, 'base64')\n      }\n    )\n  }\n\n  createSaveDocumentData(documentData: DocumentData, save_filePath: string): DocumentData {\n\n    return DocumentSerializingLogic.duplicateDocumentDataForSave(documentData, save_filePath)\n  }\n\n  // Exporting\n\n  createExportImage(documentData: DocumentData, viewKeyframe: ViewKeyframe, scale: float, backGroundType: DocumentBackGroundTypeID): HTMLCanvasElement {\n\n    const layout = DocumentData.getDocumentLayout(documentData, scale)\n\n    if (layout.width <= 0 || layout.height <= 0) {\n      return null\n    }\n\n    const exportRenderWindow = new CanvasWindow()\n\n    exportRenderWindow.createCanvas(layout.width, layout.height)\n\n    this.appDrawing.drawExportImage(\n      exportRenderWindow,\n      documentData,\n      viewKeyframe,\n      layout.left,\n      layout.top,\n      layout.width,\n      layout.height,\n      scale,\n      backGroundType\n    )\n\n    const canvas = exportRenderWindow.releaseCanvas()\n\n    return canvas\n  }\n\n  exportImageFile(fileName: string, exportPath: string, scale: float, imageFileType: ImageFileTypeID, backGroundType: DocumentBackGroundTypeID, exportingCount: int) {\n\n    const documentData = this.docContext.documentData\n    const viewKeyframe = this.docContext.currentViewKeyframe\n\n    const canvas = this.createExportImage(documentData, viewKeyframe, scale, backGroundType)\n\n    if (canvas == null) {\n      return\n    }\n\n    let extText = '.png'\n    if (imageFileType == 2) {\n      extText = '.jpg'\n    }\n\n    // TODO: ファイルシステムかファイルごとの\\か/かを統一してファイル名を作成する\n    const fileFullPath = Platform.path.join(exportPath, fileName + extText)\n\n    let imageFileTypeText = 'image/png'\n    if (imageFileType == 2) {\n      imageFileTypeText = 'image/jpeg'\n    }\n\n    const dataURL = canvas.toDataURL(imageFileTypeText, 0.9)\n\n    Platform.fileSystem.writeFile(fileFullPath, dataURL, 'base64')\n\n    // Free canvas memory\n    canvas.width = 10\n    canvas.height = 10\n\n    // increment the count\n    documentData.exportImageSetting.exportingCount = exportingCount + 1\n  }\n\n  // Document operation\n\n  findLayers(layers: Layer[], matchingCallback: (layer: Layer) => boolean): Layer[] {\n\n    const result: Layer[] = []\n\n    this.findLayerRecursive(result, layers, matchingCallback)\n\n    return result\n  }\n\n  private findLayerRecursive(result: Layer[], layers: Layer[], matchingCallback: (layer: Layer) => boolean) {\n\n    for (const layer of layers) {\n\n      if (matchingCallback(layer)) {\n        result.push(layer)\n      }\n\n      this.findLayerRecursive(result, layer.childLayers, matchingCallback)\n    }\n  }\n\n  createDefaultDocumentData(): DocumentData {\n\n    const localData = UserStorage.getItem<string>(UserSettingFileLogic.localStorage_DefaultDocumentDataKey)\n    if (!Strings.isNullOrEmpty(localData)) {\n\n      const documentData: DocumentData = JSON.parse(localData)\n      documentData.loaded = true\n\n      return documentData\n    }\n\n    const documentData = new DocumentData()\n\n    const createCommand = new Command_Layer_CreateDefaultDocumentLayers()\n    createCommand.executeWithoutRedraw(documentData, this.subtoolContext)\n\n    //{\n    //    let layer1 = new PosingLayer()\n    //    layer1.name = 'posing1'\n    //    rootLayer.childLayers.push(layer1)\n    //    layer1.posingModel = this.modelFile.posingModelDictionary['dummy_skin']\n    //}\n\n    documentData.loaded = true\n\n    return documentData\n  }\n\n  executeNewKeyframe(typeID: NewKeyframeTypeID) {\n\n    switch (typeID) {\n\n      case NewKeyframeTypeID.insertToCurrentFrameAllLayer:\n        {\n          const command = new Command_Animation_InsertKeyframeAllLayer()\n          command.rootLayer = this.subtoolContext.documentData.rootLayer\n          command.frame = this.subtoolContext.documentData.animationSettingData.currentTimeFrame\n          command.prepareEditData(this.subtoolContext)\n\n          if (command.isAvailable(this.subtoolContext)) {\n\n            this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n          }\n        }\n        break\n\n      case NewKeyframeTypeID.insertToCurrentFrameActiveLayer:\n        break\n\n      case NewKeyframeTypeID.insertEmptyToAllLayer:\n        break\n\n      case NewKeyframeTypeID.insertEmptyToActiveLayer:\n        break\n    }\n  }\n\n  executeDeleteKeyframe(typeID: DeleteKeyframeTypeID) {\n\n    switch (typeID) {\n\n      case DeleteKeyframeTypeID.deleteCurrentFrameAllLayer: {\n\n        const command = new Command_Animation_DeleteKeyframeAllLayer()\n        command.rootLayer = this.subtoolContext.documentData.rootLayer\n        command.frame = this.subtoolContext.documentData.animationSettingData.currentTimeFrame\n        command.prepareEditData(this.subtoolContext)\n\n        if (command.isAvailable(this.subtoolContext)) {\n\n          this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n        }\n\n        break\n      }\n\n      case DeleteKeyframeTypeID.deleteCurrentFrameActiveLayer:\n        break\n    }\n  }\n\n  executeLayerCommand(layerCommand: Command_Layer_CommandBase) {\n\n    const currentLayerWindowItem = this.appView.viewLayerList.findItemForLayer(this.docContext, this.subtoolContext.currentLayer)\n\n    if (currentLayerWindowItem == null) {\n\n      return\n    }\n\n    this.appTool.setLayerCommandParameters(layerCommand, currentLayerWindowItem, this.subtoolContext.documentData)\n\n    if (layerCommand.isAvailable(this.subtoolContext)) {\n\n      this.subtoolContext.commandHistory.executeCommand(layerCommand, this.subtoolContext)\n    }\n  }\n\n  moveKeyframe(moveForward: boolean) {\n\n    const done = EditAnimationFrameLogic.moveKeyframeData(\n      this.docContext.currentViewKeyframe,\n      this.docContext.previousKeyframe,\n      this.docContext.nextKeyframe,\n      moveForward\n    )\n\n    if (done) {\n\n      this.subtoolContext.setRedrawMainWindowEditorWindow()\n      this.subtoolContext.setRedrawTimeLineWindow()\n    }\n  }\n\n  changeAnimationMaxFrame(moveForward: boolean) {\n\n    EditAnimationFrameLogic.changeAnimationMaxFrame(this.docContext.documentData.animationSettingData, moveForward)\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  changeLoopStartFrame(moveForward: boolean) {\n\n    EditAnimationFrameLogic.changeLoopStartFrame(this.docContext.documentData.animationSettingData, moveForward)\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  changeLoopEndFrame(moveForward: boolean) {\n\n    EditAnimationFrameLogic.changeLoopEndFrame(this.docContext.documentData.animationSettingData, moveForward)\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  changeOnionSkinMode(mode: OnionSkinMode) {\n\n    this.docContext.documentData.animationSettingData.onionSkinMode = mode\n\n    this.subtoolContext.updateLayerStructure()\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  changeOnionSkinBackwardLevel(add: boolean) {\n\n    const newValue = this.docContext.documentData.animationSettingData.onionSkinBackwardLevel + (add ? 1 : -1)\n\n    this.docContext.documentData.animationSettingData.onionSkinBackwardLevel = Math.min(AnimationSettingData.MAX_ONION_SIKIN_FRAMES, Math.max(newValue, 0))\n\n    this.subtoolContext.updateLayerStructure()\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  changeOnionSkinForwardLevel(add: boolean) {\n\n    const newValue = this.docContext.documentData.animationSettingData.onionSkinForwardLevel + (add ? 1 : -1)\n\n    this.docContext.documentData.animationSettingData.onionSkinForwardLevel = Math.min(AnimationSettingData.MAX_ONION_SIKIN_FRAMES, Math.max(newValue, 0))\n\n    this.subtoolContext.updateLayerStructure()\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  // SubToolContext_AppDocument_Interface implementations\n\n  getLayerBaseName(layerType: LayerTypeID): string { // @implements SubToolContext_AppDocument_Interface\n\n    let base_LayerName = ''\n\n    switch (layerType) {\n\n      case LayerTypeID.groupLayer:\n        base_LayerName = 'グループ'\n        break\n\n      case LayerTypeID.vectorLayer:\n        base_LayerName = '線画'\n        break\n\n      case LayerTypeID.surroundingFillLayer:\n        base_LayerName = '囲み塗り'\n        break\n\n      case LayerTypeID.pointBrushFillLayer:\n        base_LayerName = 'ブラシ塗り'\n        break\n\n      case LayerTypeID.vectorLayerReferenceLayer:\n        base_LayerName = '線画参照'\n        break\n\n      case LayerTypeID.imageFileReferenceLayer:\n        base_LayerName = '画像ファイル'\n        break\n\n      case LayerTypeID.autoFillLayer:\n        base_LayerName = '自動囲み塗り'\n        break\n\n      case LayerTypeID.posingLayer:\n        base_LayerName = 'ポージング'\n        break\n\n      default:\n        throw new Error('ERROR 0000:No implementation for new layer name.')\n    }\n\n    return base_LayerName\n  }\n\n  getNewLayerName(layerType: LayerTypeID, isForDefaultDocument = false): string { // @implements SubToolContext_AppDocument_Interface\n\n    let base_LayerName = this.getLayerBaseName(layerType)\n\n    let new_index = 1\n\n    if (!isForDefaultDocument) {\n\n      const sameName_Layers = this.findLayers(\n        this.docContext.documentData.rootLayer.childLayers,\n        (layer) => Strings.startsWith(layer.name, base_LayerName)\n      )\n\n      for (const layer of sameName_Layers) {\n\n        const afterName_Text = Strings.substring(layer.name, base_LayerName.length)\n\n        if (Strings.isNullOrEmpty(afterName_Text)) {\n          continue\n        }\n\n        const index = Number(afterName_Text)\n\n        if (index && !isNaN(index) && index >= new_index) {\n\n          new_index = index + 1\n        }\n      }\n    }\n\n    return `${base_LayerName}${new_index}`\n  }\n}\n","﻿import { int } from '../common-logics'\nimport { CanvasWindow } from '../render'\n\nexport class DrawPathCompositionBuffer {\n\n  isUsed = false\n  canvasWindow: CanvasWindow = null\n  width = 0.0\n  height = 0.0\n}\n\nexport class DrawPathBufferStore {\n\n  buffers: DrawPathCompositionBuffer[] = []\n\n  clearBufferUsedFlags() {\n\n    for (const buffer of this.buffers) {\n\n      buffer.isUsed = false\n    }\n  }\n\n  getBufferForCanvas(canvasWindow: CanvasWindow): DrawPathCompositionBuffer {\n\n    return this.getBuffer(canvasWindow.width, canvasWindow.height)\n  }\n\n  getBuffer(width: int, height: int): DrawPathCompositionBuffer {\n\n    let buffer = this.buffers.find(buffer =>\n      buffer.isUsed == false\n      && buffer.width == width\n      && buffer.height == height\n    ) ?? null\n\n    if (buffer == null) {\n\n      buffer = new DrawPathCompositionBuffer()\n      this.buffers.push(buffer)\n    }\n\n    buffer.isUsed = true\n\n    return buffer\n  }\n\n  freeUnusedBuffers() {\n\n    this.buffers = this.buffers.filter(buffer => buffer.isUsed)\n  }\n}\n","﻿import { int } from '../common-logics'\nimport { Layer, VectorLayerGeometry } from '../document-data'\nimport { CanvasWindow } from '../render'\nimport { ViewKeyframeLayer } from '../view'\nimport { DrawPathOperationTypeID } from './draw-path'\n\nexport class DrawPathRenderMaskData {\n\n  data: Uint8Array = null\n  width = 0.0\n  height = 0.0\n  lineBytes = 0\n  pixelBytes = 0\n\n  createDataArray(width: int, height: int) {\n\n    this.data = new Uint8Array(width * height)\n    this.width = width\n    this.height = height\n    this.pixelBytes = 1\n    this.lineBytes = this.pixelBytes * width\n  }\n\n  clear() {\n\n    this.data.fill(0)\n  }\n}\n\nexport class DrawPathRenderMaskImageData {\n\n  canvasWindow = new CanvasWindow()\n  imageData: ImageData = null\n  width = 0.0\n  height = 0.0\n  lineBytes = 0\n  pixelBytes = 0\n\n  clear() {\n\n    this.imageData.data.fill(0)\n  }\n}\n\nexport class DrawPathRenderCacheRelatedData {\n\n  geometries: VectorLayerGeometry[] = null\n}\n\nexport class DrawPathRenderCache {\n\n  isUsed = false\n  layer: Layer = null\n  drawPathOperationType = DrawPathOperationTypeID.none\n  canvasWindow: CanvasWindow = null\n  maskData: DrawPathRenderMaskData = null\n  maskImageData: DrawPathRenderMaskImageData = null\n  relatedData: DrawPathRenderCacheRelatedData = null\n  width: int = 0\n  height: int = 0\n  location = vec2.fromValues(0.0 , 0.0)\n\n  isInitialized() {\n\n    return (this.canvasWindow != null)\n  }\n\n  free() {\n\n    this.isUsed = false\n    this.canvasWindow = null\n    this.maskData = null\n    this.maskImageData = null\n    this.relatedData = null\n    this.width = 0\n    this.height = 0\n    vec2.set(this.location, 0.0, 0.0)\n  }\n\n  clearMaskData() {\n\n    this.maskData.clear()\n  }\n}\n\nexport class DrawPathRenderCacheStore {\n\n  caches: DrawPathRenderCache[] = []\n\n  clearUsedFlags() {\n\n    for (const cache of this.caches) {\n\n      cache.isUsed = false\n    }\n  }\n\n  getCache(layer: Layer, drawPathOperationType: DrawPathOperationTypeID): DrawPathRenderCache {\n\n    let cache = this.caches.find(cache =>\n      cache.isUsed == false\n      && cache.layer == layer\n      && cache.drawPathOperationType == drawPathOperationType\n    ) ?? null\n\n    if (cache == null) {\n\n      cache = new DrawPathRenderCache()\n      cache.layer = layer\n      cache.drawPathOperationType = drawPathOperationType\n      this.caches.push(cache)\n    }\n\n    cache.isUsed = true\n\n    return cache\n  }\n\n  freeUnusedBuffers() {\n\n    this.caches = this.caches.filter(buffer => buffer.isUsed)\n  }\n}\n","﻿import { LazyUpdateState } from '../deffered-process'\nimport { DocumentData } from '../document-data'\nimport { CanvasRender, CanvasWindow } from '../render'\nimport { DrawPathBufferStore, DrawPathCompositionBuffer } from './draw-path-buffer'\nimport { DrawPathRenderCacheStore } from './draw-path-render-cache'\nimport { DrawPathStep } from './draw-path-step'\n\nexport class DrawPathContext {\n\n  drawPathModeID = DrawPathModeID.none\n  steps: DrawPathStep[] = []\n  onionSkinLevel = 0\n  maxOnionSkinLevel = 0\n\n  render: CanvasRender = null\n  local_render: CanvasRender = null\n  documentData: DocumentData = null\n  drawCPUOnly = true\n  isEditModeDraw = false\n  redrawActiveLayerOnly = false\n  currentLayerOnly = false\n  isModalToolRunning = false\n  activeDrawPathStartIndex = -1\n  activeDrawPathEndIndex = -1\n  startIndex = 0\n  endIndex = 0\n  lastDrawPathIndex = -1\n  isNonActiveLayerBufferDrawingDone = false\n  bufferStack: CanvasWindow[] = []\n\n  bufferStore = new DrawPathBufferStore()\n  renderCacheStore = new DrawPathRenderCacheStore()\n  lazyDraw_compositionBuffer = new DrawPathCompositionBuffer()\n  lazyUpdateState: LazyUpdateState = null\n\n  clearDrawingStates() {\n\n    this.lastDrawPathIndex = -1\n\n    if (this.bufferStack.length > 0) {\n\n      this.bufferStack = []\n    }\n  }\n\n  existsDrawnStepsAtLastTime(): boolean {\n\n    return (this.lastDrawPathIndex != -1)\n  }\n\n  isEditMode(): boolean {\n\n    return (this.isEditModeDraw)\n  }\n\n  isFinished(): boolean {\n\n    return (this.lazyUpdateState.processedIndex >= this.steps.length - 1)\n  }\n\n  isFullRendering(): boolean {\n\n    return (this.drawPathModeID == DrawPathModeID.exportRendering)\n  }\n\n  isExporting(): boolean {\n\n    return (this.drawPathModeID == DrawPathModeID.export\n      || this.drawPathModeID == DrawPathModeID.exportRendering)\n  }\n\n  isLazyUpdate(): boolean {\n\n    return (this.drawPathModeID == DrawPathModeID.lazyUpdate)\n  }\n\n  isOnionSkin(): boolean {\n\n    return (\n      this.drawPathModeID == DrawPathModeID.onionSkinBackward\n      || this.drawPathModeID == DrawPathModeID.onionSkinForward\n    )\n  }\n\n  getCurrentBuffer(): CanvasWindow {\n\n    if (this.bufferStack.length == 0) {\n\n      throw new Error('ERROR 0601:バッファスタックがありません。')\n    }\n\n    return this.bufferStack[this.bufferStack.length - 1]\n  }\n\n  log(tag: any) {\n\n    console.log(tag, {startIndex: this.startIndex, endIndex: this.endIndex})\n  }\n}\n\nexport enum DrawPathOperationTypeID {\n\n  none = 0,\n  startDrawPaths,\n  finishDrawPaths,\n  drawForeground,\n  drawBackground,\n  prepareRenderingForeground,\n  flushRenderingForeground,\n  prepareBuffer,\n  flushBuffer\n}\n\nexport enum DrawPathModeID {\n\n  none = 0,\n  editor = 1,\n  lazyUpdate = 2,\n  export = 3,\n  exportRendering = 4,\n  onionSkinBackward = 5,\n  onionSkinForward = 6\n}\n","﻿import { int } from '../common-logics'\nimport { Layer, VectorLayer } from '../document-data'\nimport { CanvasWindow } from '../render'\nimport { ViewKeyframe, ViewKeyframeLayer } from '../view'\nimport { DrawPathContext, DrawPathOperationTypeID } from './draw-path'\nimport { DrawPathCompositionBuffer } from './draw-path-buffer'\nimport { DrawPathRenderCacheRelatedData, DrawPathRenderMaskData, DrawPathRenderMaskImageData } from './draw-path-render-cache'\nimport { DrawPathStep } from './draw-path-step'\n\nexport class DrawPathBufferingLogic {\n\n  prepareForLazyDrawComposition(drawPathContext: DrawPathContext, width: int, height: int, isExporting: boolean) {\n\n    drawPathContext.lazyDraw_compositionBuffer = this.createOrUpdateCompositionCanvas(drawPathContext.lazyDraw_compositionBuffer, width, height, isExporting, drawPathContext)\n  }\n\n  prepareDrawPathBuffers(drawPathContext: DrawPathContext, drawTo_CanvasWindow: CanvasWindow, isExporting: boolean = false) {\n\n    drawPathContext.bufferStore.clearBufferUsedFlags()\n\n    for (const drawPathStep of drawPathContext.steps) {\n\n      if (drawPathStep.operationType == DrawPathOperationTypeID.prepareBuffer) {\n\n        this.prepareForLayerComposition(drawPathStep, drawTo_CanvasWindow, isExporting, drawPathContext)\n      }\n    }\n\n    drawPathContext.bufferStore.freeUnusedBuffers()\n  }\n\n  private prepareForLayerComposition(drawPathStep: DrawPathStep, drawTo_CanvasWindow: CanvasWindow, isExporting: boolean, drawPathContext: DrawPathContext) {\n\n    drawPathStep.buffer = this.createOrUpdateCompositionCanvas(drawPathStep.buffer, drawTo_CanvasWindow.width, drawTo_CanvasWindow.height, isExporting, drawPathContext)\n  }\n\n  private createOrUpdateCompositionCanvas(buffer: DrawPathCompositionBuffer, width: int, height: int, isExporting: boolean, drawPathContext: DrawPathContext) {\n\n    const needsUpdateBufferCanvas = (\n      buffer == null\n      || buffer.canvasWindow == null\n      || buffer.width != width\n      || buffer.height != height\n    )\n\n    if (!needsUpdateBufferCanvas) {\n      return\n    }\n\n    if (isExporting) {\n\n      buffer = new DrawPathCompositionBuffer()\n    }\n    else {\n\n      buffer = drawPathContext.bufferStore.getBuffer(width, height)\n    }\n\n    const canvasWindow = new CanvasWindow()\n    canvasWindow.createCanvas(width, height)\n\n    buffer.canvasWindow = canvasWindow\n    buffer.width = width\n    buffer.height = height\n\n    return buffer\n  }\n\n  setUpdateCacheToDrawPathSteps(layer: Layer, drawPathContext: DrawPathContext, needsRedraw: boolean) {\n\n    for (const drawPathStep of drawPathContext.steps) {\n\n      if (drawPathStep.layer == layer) {\n\n        drawPathStep.needsUpdateCache = true\n        drawPathStep.needsRedraw = drawPathStep.needsRedraw || needsRedraw\n      }\n    }\n  }\n\n  updateRenderCaches(drawPathContext: DrawPathContext, viewKeyframe: ViewKeyframe) {\n\n    for (const drawPathStep of drawPathContext.steps) {\n\n      if (!drawPathStep.needsUpdateCache) {\n        continue\n      }\n\n      if (VectorLayer.isPointBrushFillLayer(drawPathStep.layer)) {\n\n        const isCacheChanged = this.updateCacheForVectorLayer(drawPathStep, drawPathContext)\n\n        if (isCacheChanged) {\n\n          drawPathStep.needsRedraw = true\n        }\n\n        if (drawPathStep.renderCache.isInitialized()) {\n\n          if (drawPathStep.renderCache.relatedData == null) {\n\n            drawPathStep.renderCache.relatedData = new DrawPathRenderCacheRelatedData()\n          }\n\n          drawPathStep.renderCache.relatedData.geometries = []\n\n          for (const vkfLayer of viewKeyframe.layers) {\n\n            if (vkfLayer.layer == drawPathStep.layer\n              || vkfLayer.layer.runtime.parentLayer != drawPathStep.layer.runtime.parentLayer) {\n              continue\n            }\n\n            if (VectorLayer.isVectorStrokeLayer(vkfLayer.layer)) {\n\n              drawPathStep.renderCache.relatedData.geometries.push(vkfLayer.vectorLayerKeyframe.geometry)\n\n              const vectorLaye = <VectorLayer>vkfLayer.layer\n\n              if (vectorLaye.eyesSymmetryEnabled && vectorLaye.runtime.eyesSymmetryGeometry != null) {\n\n                drawPathStep.renderCache.relatedData.geometries.push(vectorLaye.runtime.eyesSymmetryGeometry)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private updateCacheForVectorLayer(drawPathStep: DrawPathStep, drawPathContext: DrawPathContext): boolean {\n\n    const geometry = drawPathStep.viewKeyframeLayer.vectorLayerKeyframe.geometry\n\n    if (!geometry.runtime.area.existsValidArea()) {\n\n      if (drawPathStep.renderCache.isInitialized()) {\n\n        drawPathStep.renderCache.free()\n      }\n\n      return false\n    }\n\n    const width = geometry.runtime.area.getBitmapWidth()\n    const height = geometry.runtime.area.getBitmapHeight()\n\n    const needsCacheReallocate = (\n      drawPathStep.renderCache.canvasWindow == null\n      || drawPathStep.renderCache.maskData == null\n      || drawPathStep.renderCache.width != width\n      || drawPathStep.renderCache.height != height\n    )\n\n    const needsUpdate = (\n      needsCacheReallocate\n      || drawPathStep.renderCache.location[0] != geometry.runtime.area.left\n      || drawPathStep.renderCache.location[1] != geometry.runtime.area.top\n    )\n\n    if (!needsUpdate) {\n      return false\n    }\n\n    if (needsCacheReallocate) {\n\n      const new_renderCache = drawPathContext.renderCacheStore.getCache(drawPathStep.layer, drawPathStep.operationType)\n\n      const canvasWindow = new CanvasWindow()\n      canvasWindow.createCanvas(width, height)\n\n      new_renderCache.canvasWindow = canvasWindow\n      new_renderCache.width = width\n      new_renderCache.height = height\n\n      const maskData = new DrawPathRenderMaskData()\n      maskData.createDataArray(width, height)\n\n      new_renderCache.maskData = maskData\n\n      new_renderCache.maskImageData = new DrawPathRenderMaskImageData()\n      new_renderCache.maskImageData.canvasWindow.createCanvas(width, height)\n      new_renderCache.maskImageData.imageData = canvasWindow.context.createImageData(width, height)\n      new_renderCache.maskImageData.pixelBytes = 4\n      new_renderCache.maskImageData.lineBytes = new_renderCache.maskImageData.pixelBytes * width\n\n      drawPathStep.renderCache = new_renderCache\n    }\n\n    drawPathStep.renderCache.location[0] = geometry.runtime.area.left\n    drawPathStep.renderCache.location[1] = geometry.runtime.area.top\n\n    drawPathStep.renderCache.canvasWindow.viewLocation[0] = drawPathStep.renderCache.location[0]\n    drawPathStep.renderCache.canvasWindow.viewLocation[1] = drawPathStep.renderCache.location[1]\n\n    return true\n  }\n\n  updateAllRenderCaches(drawPathContext: DrawPathContext, viewKeyframe: ViewKeyframe) {\n\n    drawPathContext.renderCacheStore.clearUsedFlags()\n\n    for (const viewKeyframeLayer of viewKeyframe.layers) {\n\n      this.setUpdateCacheToDrawPathSteps(viewKeyframeLayer.layer, drawPathContext, true)\n    }\n\n    this.updateRenderCaches(drawPathContext, viewKeyframe)\n\n    drawPathContext.renderCacheStore.freeUnusedBuffers()\n  }\n}\n","﻿import { Layer } from '../document-data'\nimport { CanvasRenderBlendMode } from '../render'\nimport { ViewKeyframeLayer } from '../view'\nimport { DrawPathOperationTypeID } from './draw-path'\nimport { DrawPathCompositionBuffer } from './draw-path-buffer'\nimport { DrawPathRenderCache } from './draw-path-render-cache'\n\nexport class DrawPathStep {\n\n  operationType = DrawPathOperationTypeID.none\n  compositeOperation = CanvasRenderBlendMode.default\n  layer: Layer = null\n  viewKeyframeLayer: ViewKeyframeLayer = null\n\n  buffer: DrawPathCompositionBuffer = null\n  renderCache = new DrawPathRenderCache()\n  useCache = false\n  needsUpdateCache = false\n  needsRedraw = false\n\n  _debugText = ''\n  _debugText2 = ''\n\n  isCacheEnabled() {\n\n    return (this.useCache && this.renderCache.isInitialized())\n  }\n}\n","﻿import { AutoFillLayer, DocumentData, Layer, PointBrushFillLayer, VectorLayer } from '../document-data'\nimport { FillAreaTypeID, FillDrawable, FillDrawableLayer } from '../document-data/fill-drawable'\nimport { DrawLineTypeID, StrokeDrawable, StrokeDrawableLayer } from '../document-data/stroke-drawable'\nimport { CanvasRenderBlendMode } from '../render'\nimport { ViewKeyframe, ViewKeyframeLayer } from '../view'\nimport { DrawPathContext, DrawPathOperationTypeID } from './draw-path'\nimport { DrawPathStep } from './draw-path-step'\n\nenum TempVirtualLayerTypeID {\n\n  none = 0,\n  normal,\n  virtualGroup,\n}\n\nclass TempVirtualLayer {\n\n  constructor(public readonly type: TempVirtualLayerTypeID, public readonly layer: Layer) {\n\n    if (!layer) {\n      throw new Error('ERROR0000:virtual layer can not take layer value of null')\n    }\n  }\n\n  children: TempVirtualLayer[] = []\n}\n\nexport class DrawPathCollectingLogic {\n\n  collectDrawPaths(drawPathContext: DrawPathContext, documentData: DocumentData, currentViewKeyframe: ViewKeyframe, ouputDebugText = false) {\n\n    const drawPathSteps: DrawPathStep[] = []\n\n    // Insert a step for begin\n    {\n      const vLayer = new TempVirtualLayer(TempVirtualLayerTypeID.normal, documentData.rootLayer)\n      drawPathSteps.push(\n        this.createDrawPathStep(vLayer, DrawPathOperationTypeID.startDrawPaths, false, '')\n      )\n    }\n\n    // Collect virtual-grouped layer info\n    const vLayers: TempVirtualLayer[] = []\n    this.collectVirtualLayerRecursive(vLayers, documentData.rootLayer.childLayers)\n\n    // Collect steps recursive\n    this.collectDrawPathsRecursive(drawPathSteps, vLayers, drawPathContext.isFullRendering(), drawPathContext.isOnionSkin())\n\n    // Insert a step for end\n    {\n      const vLayer = new TempVirtualLayer(TempVirtualLayerTypeID.normal, documentData.rootLayer)\n      drawPathSteps.push(\n        this.createDrawPathStep(vLayer, DrawPathOperationTypeID.finishDrawPaths, false, '')\n      )\n    }\n\n    // Attach layers to paths\n    this.updateViewKeyframeReferences(drawPathSteps, currentViewKeyframe.layers)\n\n    drawPathContext.documentData = documentData\n    drawPathContext.steps = drawPathSteps\n    drawPathContext.isNonActiveLayerBufferDrawingDone = false\n\n    // Collect active part from selection state\n    this.updateActiveDrawPathIndex(drawPathContext)\n\n    // Debug output\n    if (ouputDebugText) {\n      console.debug(`DrawPath collectDrawPaths`)\n      let stepIndex = 0\n      for (const step of drawPathContext.steps) {\n        console.debug(` ${stepIndex}: ${step._debugText} ${(step.layer && step.layer.name) ? '[' + step.layer.name + ']' : ''} ${CanvasRenderBlendMode[step.compositeOperation]}${step._debugText2}`)\n        stepIndex++\n      }\n    }\n  }\n\n  private collectVirtualLayerRecursive(result: TempVirtualLayer[], layers: Layer[]) {\n\n    for (let i = 0; i < layers.length; i++) {\n\n      const layer = layers[i]\n\n      const vLayer = new TempVirtualLayer(TempVirtualLayerTypeID.normal, layer)\n\n      this.collectVirtualLayerRecursive(vLayer.children, layer.childLayers)\n\n      if (layer.isMaskedByBelowLayer) {\n\n        // Creates vitual group, inserts the layer and following layers into the group\n\n        const group_virtualLayer = new TempVirtualLayer(TempVirtualLayerTypeID.virtualGroup, layer)\n\n        // the layer\n        group_virtualLayer.children.push(vLayer)\n\n        // following layers\n        let nextIndex = i + 1\n        while (nextIndex < layers.length) {\n\n          const nextLayer = layers[nextIndex]\n\n          const next_vLayer = new TempVirtualLayer(TempVirtualLayerTypeID.normal, nextLayer)\n\n          this.collectVirtualLayerRecursive(next_vLayer.children, nextLayer.childLayers)\n\n          group_virtualLayer.children.push(next_vLayer)\n\n          if (nextLayer.isMaskedByBelowLayer) {\n\n            nextIndex++\n          }\n          else {\n\n            i = nextIndex\n\n            break\n          }\n        }\n\n        result.push(group_virtualLayer)\n      }\n      else {\n\n        result.push(vLayer)\n      }\n    }\n  }\n\n  private collectDrawPathsRecursive(result: DrawPathStep[], vLayers: TempVirtualLayer[], isFullRendering: boolean, isOnionSkin: boolean) {\n\n    let isGPUDrawContinuing = false\n\n    for (let i = vLayers.length - 1; i >= 0; i--) {\n\n      const vLayer = vLayers[i]\n\n      // Proccess virtual parent-children\n      if (vLayer.children.length > 0) {\n\n        const debugText = (vLayer.type == TempVirtualLayerTypeID.virtualGroup) ? ' virtual' : ''\n\n        // Insert a step to begin buffering for layer composition\n        const needsCompositionForSelf = (\n          vLayer.layer.isMaskedByBelowLayer\n        )\n\n        const needsCompositionForChildren = (\n          vLayer.children.findIndex(child =>\n            child.type != TempVirtualLayerTypeID.virtualGroup && child.layer.isMaskedByBelowLayer\n          ) != -1\n        )\n\n        const needsComposition = (needsCompositionForSelf || needsCompositionForChildren) && !isOnionSkin\n\n        if (needsComposition) {\n\n          result.push(\n            this.createDrawPathStep(vLayer, DrawPathOperationTypeID.prepareBuffer, isOnionSkin, debugText)\n          )\n        }\n\n        // Insert steps for children\n        this.collectDrawPathsRecursive(result, vLayer.children, isFullRendering, isOnionSkin)\n\n        if (needsComposition) {\n\n          // insert a step to finish buffering\n          result.push(\n            this.createDrawPathStep(vLayer, DrawPathOperationTypeID.flushBuffer, isOnionSkin, debugText)\n          )\n        }\n\n        continue\n      }\n\n      // Insert a step to draw fill\n      const fillDrawable: FillDrawable = this.isFillDrawableLayer(vLayer.layer) ? <FillDrawableLayer>vLayer.layer : null\n\n      if (fillDrawable && fillDrawable.fillAreaType != FillAreaTypeID.none && !isOnionSkin) {\n\n        result.push(\n          this.createDrawPathStep(vLayer, DrawPathOperationTypeID.drawBackground, isOnionSkin)\n        )\n      }\n\n      // Insert steps to draw stroke\n      const strokeDrawable: StrokeDrawable = this.isStrokeDrawableLayer(vLayer.layer) ? <StrokeDrawableLayer>vLayer.layer : null\n\n      if (strokeDrawable && strokeDrawable.drawLineType != DrawLineTypeID.none) {\n\n          // Insert a step to clear gl buffer\n          if (isFullRendering && !isGPUDrawContinuing) {\n\n            result.push(\n              this.createDrawPathStep(vLayer, DrawPathOperationTypeID.prepareRenderingForeground, isOnionSkin)\n            )\n          }\n\n          // Insert a step to draw\n          {\n            const drawPathStep = this.createDrawPathStep(vLayer, DrawPathOperationTypeID.drawForeground, isOnionSkin)\n            drawPathStep.useCache = this.isLayerUseCache(vLayer.layer)\n            result.push(drawPathStep)\n          }\n\n          // Insert a step to flush gl buffer if the next layer dont need draw lines\n          isGPUDrawContinuing = false\n          if (fillDrawable && fillDrawable.fillAreaType == FillAreaTypeID.none && i > 0) {\n\n            const next_layer = vLayers[i - 1].layer\n\n            if (VectorLayer.isVectorLayer(next_layer)) {\n\n              const next_vectorLayer = <VectorLayer>next_layer\n\n              if (next_vectorLayer.drawLineType != DrawLineTypeID.none\n                && next_vectorLayer.fillAreaType == FillAreaTypeID.none) {\n\n                isGPUDrawContinuing = true\n              }\n            }\n          }\n\n          if (isFullRendering && !isGPUDrawContinuing) {\n\n            result.push(\n              this.createDrawPathStep(vLayer, DrawPathOperationTypeID.flushRenderingForeground, isOnionSkin)\n            )\n          }\n      }\n\n      if (strokeDrawable || fillDrawable) {\n\n        continue\n      }\n      else {\n\n        // For other type of layer such as image file layer\n        if (!isOnionSkin) {\n\n          result.push(\n            this.createDrawPathStep(vLayer, DrawPathOperationTypeID.drawForeground, isOnionSkin)\n          )\n        }\n      }\n    }\n  }\n\n  private isStrokeDrawableLayer(layer: Layer): boolean {\n\n    return VectorLayer.isVectorLayer(layer)\n  }\n\n  private isFillDrawableLayer(layer: Layer): boolean {\n\n    return VectorLayer.isVectorLayer(layer) || AutoFillLayer.isAutoFillLayer(layer)\n  }\n\n  private isLayerUseCache(layer: Layer): boolean {\n\n    return PointBrushFillLayer.isPointBrushFillLayer(layer)\n  }\n\n\n  private createDrawPathStep(vLayer: TempVirtualLayer, operationType: DrawPathOperationTypeID, isOnionSkin: boolean, debugText = ''): DrawPathStep {\n\n    if (!vLayer.layer) {\n      throw new Error('ERROR0000:drawPathStep can not take layer value of null')\n    }\n\n    const drawPathStep = new DrawPathStep()\n    drawPathStep.layer = vLayer.layer\n    drawPathStep.operationType = operationType\n\n    if (vLayer.type != TempVirtualLayerTypeID.virtualGroup) {\n\n      drawPathStep.compositeOperation = this.getBlendMode(vLayer.layer, isOnionSkin)\n    }\n\n    drawPathStep._debugText = DrawPathOperationTypeID[operationType]\n    drawPathStep._debugText2 = debugText\n\n    return drawPathStep\n  }\n\n  private getBlendMode(layer: Layer, isOnionSkin: boolean): CanvasRenderBlendMode {\n\n    return ((layer.isMaskedByBelowLayer && !isOnionSkin) ? CanvasRenderBlendMode.sourceAtop : CanvasRenderBlendMode.default)\n  }\n\n  private updateViewKeyframeReferences(drawPathSteps: DrawPathStep[], viewKeyframeLayers: ViewKeyframeLayer[]) {\n\n    for (const drawPathStep of drawPathSteps) {\n\n      drawPathStep.viewKeyframeLayer = null\n\n      for (const viewKeyframeLayer of viewKeyframeLayers) {\n\n        if (viewKeyframeLayer.layer == drawPathStep.layer) {\n\n          drawPathStep.viewKeyframeLayer = viewKeyframeLayer\n          break\n        }\n      }\n    }\n  }\n\n  updateActiveDrawPathIndex(drawPathContext: DrawPathContext) {\n\n    let firstSelectedIndex = -1\n    let lastSelectedIndex = -1\n\n    let bufferNestStartIndex = -1\n    let bufferNestLevel = 0\n    let isSelectedNest = false\n\n    for (let i = 0; i < drawPathContext.steps.length; i++) {\n\n      const drawPathStep = drawPathContext.steps[i]\n\n      if (Layer.isSelected(drawPathStep.layer)) {\n\n        // Detect selected range for level = 0\n        if (bufferNestLevel == 0) {\n\n          if (firstSelectedIndex == -1) {\n\n            firstSelectedIndex = i\n          }\n\n          lastSelectedIndex = i\n        }\n        else {\n\n          // Set flag for level > 0\n          isSelectedNest = true\n        }\n      }\n\n      if (drawPathStep.operationType == DrawPathOperationTypeID.prepareBuffer) {\n\n        if (bufferNestLevel == 0) {\n\n          bufferNestStartIndex = i\n        }\n\n        bufferNestLevel++\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.flushBuffer) {\n\n        bufferNestLevel--\n\n        // Detect selected range for level > 0\n        if (bufferNestLevel == 0) {\n\n          if (isSelectedNest) {\n\n            if (firstSelectedIndex == -1) {\n\n              firstSelectedIndex = bufferNestStartIndex\n            }\n\n            lastSelectedIndex = i\n\n            isSelectedNest = false\n          }\n        }\n      }\n    }\n\n    drawPathContext.activeDrawPathStartIndex = firstSelectedIndex\n    drawPathContext.activeDrawPathEndIndex = lastSelectedIndex\n\n    //console.debug('CollectSelectionInfo', firstSelectedIndex, lastSelectedIndex)\n  }\n}\n","﻿import { VectorLayer } from '../document-data'\nimport { ToolDrawingStyle } from \"./drawing-style\"\nimport { CanvasRender } from '../render'\nimport { SubToolContext } from '../context'\nimport { ViewLayerListItem } from '../view'\nimport { DrawingStrokeLogic } from './drawing-stroke'\nimport { MainCanvasEditorDrawer } from 'app/editor'\n\nexport class DrawingEyesSymmetryLogic {\n\n  private canvasRender: CanvasRender = null\n  private drawStyle: ToolDrawingStyle = null\n  private editorDrawer: MainCanvasEditorDrawer = null\n\n  private location2D = vec3.create()\n  private eyeLocation = vec3.create()\n  private direction = vec3.create()\n  private localLocation = vec3.create()\n  private radiusLocation = vec3.create()\n  private radiusLocationWorld = vec3.create()\n  private radiusLocation2D = vec3.create()\n\n  link(canvasRender: CanvasRender, drawStyle: ToolDrawingStyle, editorDrawer: MainCanvasEditorDrawer) {\n\n    this.canvasRender = canvasRender\n    this.drawStyle = drawStyle\n    this.editorDrawer = editorDrawer\n  }\n\n  drawEyesSymmetries(layerWindowItems: ViewLayerListItem[], ctx: SubToolContext) {\n\n    for (const item of layerWindowItems) {\n\n      if (VectorLayer.isVectorLayerWithOwnData(item.layer)) {\n\n        const vectorLayer = <VectorLayer>item.layer\n\n        this.drawEyesSymmetry(vectorLayer, ctx)\n      }\n    }\n  }\n\n  drawEyesSymmetry(vectorLayer: VectorLayer, ctx: SubToolContext) {\n\n    if (vectorLayer == null\n      || vectorLayer.eyesSymmetryEnabled == false\n      || vectorLayer.runtime.posingLayer == null\n      || !vectorLayer.isVisible\n      || !vectorLayer.isSelected\n    ) {\n      return\n    }\n\n    const posingData = vectorLayer.runtime.posingLayer.posingData\n\n    if (!posingData.headLocationInputData.inputDone) {\n      return\n    }\n\n    ctx.posing3DLogic.getEyeSphereLocation(this.eyeLocation, posingData, vectorLayer.eyesSymmetryInputSide)\n    ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2D, this.eyeLocation, posingData)\n\n    const eyeSize = ctx.posing3DLogic.getEyeSphereSize()\n    vec3.transformMat4(this.localLocation, this.eyeLocation, ctx.posing3DView.viewMatrix)\n    vec3.set(this.direction, eyeSize, 0.0, 0.0)\n    vec3.add(this.radiusLocation, this.localLocation, this.direction)\n    vec3.transformMat4(this.radiusLocationWorld, this.radiusLocation, ctx.posing3DView.cameraMatrix)\n    ctx.posing3DView.calculate2DLocationFrom3DLocation(this.radiusLocation2D, this.radiusLocationWorld, posingData)\n    const raduis2D = vec3.distance(this.location2D, this.radiusLocation2D)\n\n    const strokeWidth = this.editorDrawer.getCurrentViewScaleLineWidth(1.0)\n\n    this.canvasRender.setStrokeColorV(this.drawStyle.eyesSymmetryGuideColor)\n    this.canvasRender.setStrokeWidth(strokeWidth)\n    this.canvasRender.beginPath()\n    this.canvasRender.circle(this.location2D[0], this.location2D[1], raduis2D)\n    this.canvasRender.stroke()\n  }\n}\n","﻿import { ImageFileReferenceLayer } from '../document-data'\nimport { CanvasRender } from '../render'\n\nexport class DrawingImageFileReferenceLayerLogic {\n\n  private canvasRender: CanvasRender = null\n\n  private tempMat4 = mat4.create()\n\n  link(canvasRender: CanvasRender) {\n\n    this.canvasRender = canvasRender\n  }\n\n  drawImageFileReferenceLayer(layer: ImageFileReferenceLayer, isModalToolRunning: boolean) {\n\n    if (layer.runtime.imageResource.image == null\n      || layer.runtime.imageResource.image.imageData == null) {\n\n      return\n    }\n\n    const image = layer.runtime.imageResource.image.imageData\n\n    const location = (isModalToolRunning ? layer.runtime.adjustingLocation : layer.location)\n    const rotation = (isModalToolRunning ? layer.runtime.adjustingRotation[0] : layer.rotation[0])\n    const scale = (isModalToolRunning ? layer.runtime.adjustingScale : layer.scale)\n\n    mat4.identity(this.tempMat4)\n    mat4.translate(this.tempMat4, this.tempMat4, location)\n    mat4.rotateZ(this.tempMat4, this.tempMat4, rotation)\n    mat4.scale(this.tempMat4, this.tempMat4, scale)\n\n    this.canvasRender.setLocalTransform(this.tempMat4)\n\n    this.canvasRender.setGlobalAlpha(layer.layerColor[3])\n\n    this.canvasRender.drawImage(image\n      , 0.0, 0.0\n      , image.width, image.height\n      , 0.0, 0.0\n      , image.width, image.height\n    )\n\n    this.canvasRender.cancelLocalTransform()\n    this.canvasRender.setGlobalAlpha(1.0)\n  }\n}\n","﻿import { float, int, Logic_Points } from '../common-logics'\nimport { VectorLayerGeometry, VectorPoint, VectorStroke } from '../document-data'\nimport { VectorPointLogic } from '../document-logic'\nimport { CanvasRender, CanvasRenderBlendMode } from '../render'\nimport { ViewKeyframeLayer } from '../view'\nimport { DrawPathRenderCache, DrawPathRenderMaskData, DrawPathRenderMaskImageData } from './draw-path-render-cache'\nimport { ToolDrawingStyle } from \"./drawing-style\"\n\nclass OcclusionMap {\n\n  data = new Float32Array(2000)\n  mapLength: int = 0\n\n  clear() {\n\n    this.data.fill(0.0, 0, this.mapLength)\n  }\n}\n\nexport class DrawingPointBrushLogic {\n\n  private drawStyle: ToolDrawingStyle = null\n\n  private occlusionMap = new OcclusionMap()\n\n  private local_Mat = mat4.create()\n  private local_center = vec2.create()\n\n  link(drawStyle: ToolDrawingStyle) {\n\n    this.drawStyle = drawStyle\n  }\n\n  drawPointBrushStroke(render: CanvasRender, stroke: VectorStroke, color: Vec4, useAdjustingLocation: boolean, renderCache: DrawPathRenderCache) {\n\n    const gradient = render.createRadialGradient(0.0, 0.0, 1.0);\n    gradient.addColorStop(0.0, this.getRGBAText(color, 1.0));\n    gradient.addColorStop(1.0, this.getRGBAText(color, 0.0));\n    render.setFillGradiaent(gradient);\n\n    mat4.identity(this.local_Mat)\n\n    for (const point of stroke.points) {\n\n      const lengthFrom = (useAdjustingLocation ? point.adjustingLengthFrom : 1.0)\n      const lengthTo = (useAdjustingLocation ? point.adjustingLengthTo : 0.0)\n\n      if (lengthFrom <= 0.0 && lengthTo >= 1.0) {\n        continue\n      }\n\n      const location = this.getPointLocation(point, useAdjustingLocation)\n      const radius = VectorPointLogic.getPointRadius(point)\n\n      this.local_Mat[0] = radius\n      this.local_Mat[5] = radius\n      this.local_Mat[12] = location[0]\n      this.local_Mat[13] = location[1]\n\n      render.setLocalTransform(this.local_Mat)\n\n      render.fillRect(-1.0, -1.0, 2.0, 2.0)\n\n      if (renderCache != null) {\n\n        this.collectOcclusionMap(this.occlusionMap, location, radius, 2, renderCache)\n\n        this.setMaskForBrushShape(renderCache, location, radius, this.occlusionMap)\n      }\n    }\n  }\n\n  private getPointLocation(point: VectorPoint, useAdjustingLocation: boolean): Vec3 {\n\n    return (useAdjustingLocation ? point.adjustingLocation : point.location)\n  }\n\n  private getRGBAText(color: Vec4, alpha: float): string {\n\n    const r = color[0] * 255\n    const g = color[1] * 255\n    const b = color[2] * 255\n    const a = color[3] * alpha\n\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(3)})`\n  }\n\n  private collectOcclusionMap(occlusionMap: OcclusionMap, center_location: Vec3, radius: float, division: number, renderCache: DrawPathRenderCache) {\n\n    const occlusionMapLength = Math.floor(radius * 2 * Math.PI / division)\n    const occlusionMap_unitAngle = Math.PI * 2 / occlusionMapLength\n\n    if (occlusionMap.data.length < occlusionMapLength) {\n\n      occlusionMap.data = new Float32Array(occlusionMapLength)\n    }\n\n    occlusionMap.mapLength = occlusionMapLength\n    occlusionMap.clear()\n\n    const map_data = occlusionMap.data\n    const minDistanceSQ = radius * radius\n    const segmentMatrix = mat2d.create()\n\n    // Collects intersected segements\n    const intersected_segments: { from_point: VectorPoint, to_point: VectorPoint, length: float, angle: float, invMat: Mat2d }[] = []\n\n    for (const geometry of renderCache.relatedData.geometries) {\n\n      if (!geometry.runtime.area.hittestLocationWithRadius(center_location, radius)) {\n        continue\n      }\n\n      VectorLayerGeometry.forEachStroke(geometry, (stroke) => {\n\n        if (stroke.runtime.area.hittestLocationWithRadius(center_location, radius)) {\n\n          for (let index = 0; index < stroke.points.length - 1; index++) {\n\n            const from_point = stroke.points[index]\n            const to_point = stroke.points[index + 1]\n\n            const distanceSQ = Logic_Points.pointToLineSegment_SorroundingDistanceSQ(\n              from_point.location,\n              to_point.location,\n              center_location\n            )\n\n            if (distanceSQ <= minDistanceSQ) {\n\n              const dx = to_point.location[0] - from_point.location[0]\n              const dy = to_point.location[1] - from_point.location[1]\n              const segment_length = Math.sqrt(dx * dx + dy * dy)\n\n              if (segment_length == 0.0) {\n                continue\n              }\n\n              const nx = dx / segment_length\n              const ny = dy / segment_length\n              const angle = this.atan2Rounded(ny, nx)\n\n              segmentMatrix[0] = Math.cos(angle)\n              segmentMatrix[1] = -Math.sin(angle)\n              segmentMatrix[2] = Math.sin(angle)\n              segmentMatrix[3] = Math.cos(angle)\n              segmentMatrix[4] = from_point.location[0]\n              segmentMatrix[5] = from_point.location[1]\n\n              const invMat = [\n                segmentMatrix[0],\n                segmentMatrix[2],\n                segmentMatrix[1],\n                segmentMatrix[3],\n                -(segmentMatrix[4] * segmentMatrix[0] + segmentMatrix[5] * segmentMatrix[1]),\n                -(segmentMatrix[4] * segmentMatrix[2] + segmentMatrix[5] * segmentMatrix[3])\n              ]\n\n              intersected_segments.push({ from_point: from_point, to_point: to_point, length: segment_length, angle: angle, invMat: invMat })\n            }\n          }\n        }\n      })\n    }\n\n    let loopCount = 0\n\n    for (const segement of intersected_segments) {\n\n      // Gets segment-local location\n      this.traslateMat2d(this.local_center, center_location, segement.invMat)\n\n      if (Math.abs(this.local_center[1]) >= radius) {\n        continue\n      }\n\n      // Calculate locations and angles of two intersection points for the segment and the blush location\n      const dy = -this.local_center[1]\n      const dx = Math.sqrt(radius * radius - dy * dy)\n\n      let left_intersect_locationX = this.local_center[0] - dx\n      if (left_intersect_locationX < 0.0) {\n        left_intersect_locationX = 0.0\n      }\n\n      const local_leftSideAngle = this.atan2Rounded(dy, left_intersect_locationX - this.local_center[0])\n      const world_leftSideAngle = this.roundAngle(segement.angle + local_leftSideAngle)\n\n      let right_intersect_locationX = this.local_center[0] + dx\n      if (right_intersect_locationX > segement.length) {\n        right_intersect_locationX = segement.length\n      }\n\n      const local_rightSideAngle = this.atan2Rounded(dy, right_intersect_locationX - this.local_center[0])\n\n      // Determine ranges to calculation\n      const angleDistance = local_rightSideAngle - local_leftSideAngle\n\n      const angleAdvanceDirection = Math.sign(angleDistance)\n\n      let angleDistanceRouded = Math.abs(angleDistance)\n      if (angleDistanceRouded >= Math.PI) {\n        angleDistanceRouded -= Math.PI\n      }\n\n      const max_angleIndexCount = Math.abs(Math.floor(angleDistanceRouded / occlusionMap_unitAngle)) + 1\n\n      // Set mask value for each angle\n      const offset_y = -this.local_center[1]\n      const scan_unitAngle = occlusionMap_unitAngle * angleAdvanceDirection\n      let angleIndex = Math.floor(world_leftSideAngle / occlusionMap_unitAngle)\n      for (let angleIndexCount = 0; angleIndexCount < max_angleIndexCount; angleIndexCount++) {\n\n        const angle = local_leftSideAngle + angleIndexCount * scan_unitAngle\n\n        // angleで傾きが決まる直線とy=0との交点を計算します。式を整理するとtanを使った式で計算できます。\n        // const angle_dx = Math.cos(angle) * radius\n        // const angle_dy = -Math.sin(angle) * radius\n        // const offset_x = angle_dx / angle_dy * offset_y\n        const offset_x = offset_y / Math.tan(angle)\n\n        const distanceSq = offset_x * offset_x + offset_y * offset_y\n\n        const existing_distanceSq = map_data[angleIndex]\n        if (existing_distanceSq == 0.0 || existing_distanceSq > distanceSq) {\n\n          map_data[angleIndex] = distanceSq\n        }\n\n        angleIndex += angleAdvanceDirection\n        if (angleIndex >= occlusionMapLength) {\n          angleIndex = 0\n        }\n        else if (angleIndex < 0) {\n          angleIndex += occlusionMapLength\n        }\n\n        loopCount++\n      }\n    }\n\n    // console.log(radius, intersected_segments.length, occlusionMapLength, loopCount)\n  }\n\n  private atan2Rounded(y, x) {\n\n    let angle = Math.atan2(-y, x)\n\n    if (angle < 0.0) {\n      angle += Math.PI * 2\n    }\n\n    return this.roundAngle(angle)\n  }\n\n  private roundAngle(angle) {\n\n    if (angle < 0.0) {\n      angle += Math.PI * 2\n    }\n\n    if (angle >= Math.PI * 2) {\n      angle -= Math.PI * 2\n    }\n\n    return angle\n  }\n\n  private traslateMat2d(result: Vec2, target: Vec3, mat2d: Mat2d) {\n\n    const x = target[0]\n    const y = target[1]\n\n    result[0] = x * mat2d[0] + y * mat2d[2] + mat2d[4]\n    result[1] = x * mat2d[1] + y * mat2d[3] + mat2d[5]\n  }\n\n  private setMaskForBrushShape(renderCache: DrawPathRenderCache, center_location: Vec3, radius: float, occlusionMap: OcclusionMap) {\n\n    const mask_array = renderCache.maskData.data\n    const pixelBytes = renderCache.maskData.pixelBytes\n    const lineBytes = renderCache.maskData.lineBytes\n\n    const center_x = center_location[0] - renderCache.location[0]\n    const center_y = center_location[1] - renderCache.location[1]\n\n    const bound_radius = Math.floor(radius + 1.0)\n    const pixel_center_left = Math.floor(center_x - bound_radius)\n    const pixel_center_right = Math.floor(center_x + bound_radius)\n    const pixel_center_top = Math.floor(center_y - bound_radius)\n    const pixel_center_bottom = Math.floor(center_y + bound_radius)\n    const minX = Math.min(Math.max(pixel_center_left, 0), renderCache.width - 2)\n    const minY = Math.min(Math.max(pixel_center_top, 0), renderCache.height - 2)\n    const maxX = Math.min(Math.max(pixel_center_right, 0), renderCache.width - 2)\n    const maxY = Math.min(Math.max(pixel_center_bottom, 0), renderCache.height - 2)\n\n    const radiusSq = bound_radius * bound_radius\n    const pixel_centering_offset = 0.5\n\n    for (let y = minY; y <= maxY; y++) {\n\n      let mask_offset = y * lineBytes + minX * pixelBytes\n\n      for (let x = minX; x <= maxX; x++) {\n\n        if (mask_array[mask_offset] != 0) {\n          mask_offset += pixelBytes\n          continue\n        }\n\n        const dx = x + pixel_centering_offset - center_x\n        const dy = y + pixel_centering_offset - center_y\n        const distance = dx * dx + dy * dy\n\n        let angle = Math.atan2(-dy, dx)\n        if (angle < 0) {\n          angle = Math.PI * 2 + angle\n        }\n        const angleIndex = Math.floor(angle / Math.PI / 2 * occlusionMap.mapLength)\n\n        const occlusion_distance = occlusionMap.data[angleIndex]\n\n        if (distance <= radiusSq && (occlusion_distance == 0 || distance <= occlusion_distance)) {\n          mask_array[mask_offset] = 1\n        }\n\n        // mask_array[mask_offset] = 1\n        mask_offset += pixelBytes\n      }\n    }\n  }\n\n  drawRenderResult(render: CanvasRender, renderCache: DrawPathRenderCache) {\n\n    this.setMaskImageToImageData(renderCache.maskImageData, renderCache.maskData, [255, 255, 0, 255])\n\n    render.setBlendMode(CanvasRenderBlendMode.destinationIn)\n\n    render.resetTransform()\n    render.drawImage(\n      renderCache.maskImageData.canvasWindow.canvas,\n      0, 0,\n      renderCache.maskImageData.canvasWindow.width, renderCache.maskImageData.canvasWindow.height,\n      0, 0,\n      renderCache.maskImageData.canvasWindow.width, renderCache.maskImageData.canvasWindow.height,\n    )\n\n    render.setBlendMode(CanvasRenderBlendMode.default)\n\n    // DEBUG\n    // render.putImageData(renderCache.maskImageData.imageData, 0, 0)\n\n    // DEBUG\n    // render.setStrokeWidth(render.getViewScaledSize(1.0))\n    // render.beginPath()\n    // render.moveTo(0.0, 0.0)\n    // render.lineTo(renderCache.width - 1, 0.0)\n    // render.lineTo(renderCache.width - 1.0, renderCache.height - 1.0)\n    // render.lineTo(0.0, renderCache.height - 1.0)\n    // render.lineTo(0.0, 0.0)\n    // render.stroke()\n  }\n\n  private setMaskImageToImageData(maskImageData: DrawPathRenderMaskImageData, maskData: DrawPathRenderMaskData, color: Vec4) {\n\n    const image_array = maskImageData.imageData.data\n    const mask_data = maskData.data\n\n    for (let y = 0; y < maskData.height; y++) {\n\n      let iamge_offset = y * maskImageData.lineBytes\n      let mask_offset = y * maskData.lineBytes\n\n      for (let x = 0; x < maskData.width; x++) {\n\n        if (mask_data[mask_offset] != 0) {\n\n          image_array[iamge_offset] = color[0]\n          image_array[iamge_offset + 1] = color[1]\n          image_array[iamge_offset + 2] = color[2]\n          image_array[iamge_offset + 3] = color[3]\n        }\n        else {\n\n          image_array[iamge_offset] = 0\n          image_array[iamge_offset + 1] = 0\n          image_array[iamge_offset + 2] = 0\n          image_array[iamge_offset + 3] = 0\n        }\n\n        iamge_offset += maskImageData.pixelBytes\n        mask_offset += maskData.pixelBytes\n      }\n    }\n\n    maskImageData.canvasWindow.context.putImageData(maskImageData.imageData, 0, 0)\n  }\n}\n","﻿import { Layer, PosingLayer } from '../document-data'\nimport { Posing3DView } from '../posing3d'\nimport { CanvasWindow, WebGLRender } from '../render'\nimport { MainToolID } from '../tool'\nimport { ViewLayerListItem } from '../view'\nimport { DocumentContext } from '../context'\n\nexport class DrawingPosing3DLogic {\n\n  private posing3DViewRender = new WebGLRender()\n  private posing3dView = new Posing3DView()\n\n  link(posing3DViewRender: WebGLRender, posing3dView: Posing3DView) {\n\n    this.posing3DViewRender = posing3DViewRender\n    this.posing3dView = posing3dView\n  }\n\n  drawPosing3DView(webglWindow: CanvasWindow, layerWindowItems: ViewLayerListItem[], mainWindow: CanvasWindow, ctx: DocumentContext, redrawActiveLayerOnly: boolean) {\n\n    this.posing3DViewRender.setViewport(0.0, 0.0, webglWindow.width, webglWindow.height)\n    this.posing3dView.clear()\n\n    mainWindow.copyTransformTo(webglWindow)\n\n    for (const item of layerWindowItems) {\n\n      if (!PosingLayer.isPosingLayer(item.layer)) {\n        continue\n      }\n\n      const posingLayer = <PosingLayer>item.layer\n      this.posing3dView.prepareDrawingStructures(posingLayer)\n    }\n\n    if (ctx.currentPosingLayer != null\n      && Layer.isVisible(ctx.currentPosingLayer)\n      && ctx.mainToolID == MainToolID.posing3D\n    ) {\n\n      const posingLayer = ctx.currentPosingLayer\n      this.posing3dView.drawManipulaters(posingLayer, ctx)\n    }\n\n    for (let index = layerWindowItems.length - 1; index >= 0; index--) {\n\n      const item = layerWindowItems[index]\n\n      if (!PosingLayer.isPosingLayer(item.layer)) {\n        continue\n      }\n\n      if (redrawActiveLayerOnly) {\n\n        if (!Layer.isSelected(item.layer)) {\n          continue\n        }\n      }\n      else {\n\n        if (!Layer.isVisible(item.layer)) {\n          continue\n        }\n      }\n\n      const posingLayer = <PosingLayer>item.layer\n\n      this.posing3dView.drawPosingModel(posingLayer, ctx)\n    }\n  }\n}\n","﻿import { float, int } from '../common-logics'\nimport { VectorPoint, VectorStroke } from '../document-data'\nimport { VectorStrokeLogic } from '../document-logic'\nimport { CanvasRender, CanvasRenderLineCap } from '../render'\n\nenum StrokeDrawingMode {\n  stroke,\n  fill,\n}\n\nenum CurrentSelectionStateID {\n  unset,\n  selected,\n  notSelected,\n}\n\nclass StrokeDrawingState {\n\n  drawingMode = StrokeDrawingMode.stroke\n  color: Vec4 | null = null\n  useAdjustingLocation = false\n  isExporting = false\n  strokeWidthBiasRate = 1.0\n  strokeWidthBolding = 0.0\n\n  strokeStarted = false\n  drawingRemainging = false\n  currentLineWidth = -1.0\n  currentSelection = CurrentSelectionStateID.unset\n\n  begin(drawingMode: StrokeDrawingMode) {\n\n    this.drawingMode = drawingMode\n    this.useAdjustingLocation = false\n    this.isExporting = false\n    this.strokeWidthBiasRate = 1.0\n    this.strokeWidthBolding = 0.0\n\n    this.strokeStarted = false\n    this.drawingRemainging = false\n    this.currentLineWidth = 0.0\n    this.currentSelection = CurrentSelectionStateID.unset\n  }\n}\n\nexport class DrawingStrokeLogic {\n\n  private toLocation = vec3.create()\n  private fromLocation = vec3.create()\n  private drawingState = new StrokeDrawingState()\n\n  isStrokeInViewRectangle(render: CanvasRender, stroke: VectorStroke): boolean {\n\n    if (VectorStrokeLogic.isEmptyStroke(stroke)) {\n      return true\n    }\n\n    return render.isInViewRectangle(stroke.runtime.area.centerLocation, stroke.runtime.area.range)\n  }\n\n  beginStroke(color: Vec4, strokeWidthBiasRate: float, strokeWidthBolding: float, useAdjustingLocation: boolean, isExporting: boolean) {\n\n    this.drawingState.begin(StrokeDrawingMode.stroke)\n    this.drawingState.color = color\n    this.drawingState.useAdjustingLocation = useAdjustingLocation\n    this.drawingState.isExporting = isExporting\n    this.drawingState.strokeWidthBiasRate = strokeWidthBiasRate\n    this.drawingState.strokeWidthBolding = strokeWidthBolding\n    this.drawingState.isExporting = isExporting\n  }\n\n  finishStroke(render: CanvasRender) {\n\n    if (this.drawingState.drawingRemainging) {\n\n      render.stroke()\n      this.drawingState.drawingRemainging = false\n    }\n  }\n\n  drawVectorStroke(\n    render: CanvasRender,\n    stroke: VectorStroke,\n    color: Vec4,\n    strokeWidthBiasRate: float,\n    strokeWidthBolding: float,\n    useAdjustingLocation: boolean,\n    isExporting: boolean\n  ) {\n\n    this.beginStroke(color, strokeWidthBiasRate, strokeWidthBolding, useAdjustingLocation, isExporting)\n\n    this.processStroke(render, stroke)\n\n    this.finishStroke(render)\n  }\n\n  processStroke(render: CanvasRender, stroke: VectorStroke) {\n\n    const state = this.drawingState\n\n    if ((!state.isExporting && !this.isStrokeInViewRectangle(render, stroke))\n      || VectorStrokeLogic.isEmptyStroke(stroke)\n    ) {\n      return\n    }\n\n    if (!state.strokeStarted) {\n\n      render.setStrokeColorV(state.color)\n      render.setLineCap(CanvasRenderLineCap.round)\n    }\n\n    for (let pointIndex = 0; pointIndex < stroke.points.length - 1;) {\n\n      const fromPoint = stroke.points[pointIndex]\n      const lineWidth = (state.useAdjustingLocation ? fromPoint.adjustingLineWidth : fromPoint.lineWidth)\n\n      if (state.drawingMode == StrokeDrawingMode.stroke && lineWidth != state.currentLineWidth) {\n\n        if (state.drawingRemainging) {\n\n          render.stroke()\n          state.strokeStarted = false\n          state.drawingRemainging = false\n        }\n\n        render.setStrokeWidth(lineWidth * state.strokeWidthBiasRate + state.strokeWidthBolding)\n        state.currentLineWidth = lineWidth\n      }\n\n      this.processStrokeSegment(render, stroke, pointIndex, state)\n\n      pointIndex++\n    }\n  }\n\n  drawVectorStrokeSegment(render: CanvasRender, stroke: VectorStroke, color: Vec4, selected_color: Vec4, strokeWidthBiasRate: float, useAdjustingLocation: boolean) {\n\n    if (!this.isStrokeInViewRectangle(render, stroke)) {\n      return\n    }\n\n    if (VectorStrokeLogic.isEmptyStroke(stroke)) {\n      return\n    }\n\n    const state = this.drawingState\n\n    state.begin(StrokeDrawingMode.stroke)\n    state.useAdjustingLocation = useAdjustingLocation\n\n    render.setLineCap(CanvasRenderLineCap.round)\n\n    for (let pointIndex = 0; pointIndex < stroke.points.length - 1; pointIndex++) {\n\n      const fromPoint = stroke.points[pointIndex]\n      const lineWidth = this.getPointWidth(fromPoint, state.useAdjustingLocation)\n      const selection = fromPoint.isSelected ? CurrentSelectionStateID.selected : CurrentSelectionStateID.notSelected\n\n      if (lineWidth != state.currentLineWidth || selection != state.currentSelection) {\n\n        if (state.drawingRemainging) {\n\n          render.stroke()\n          state.strokeStarted = false\n          state.drawingRemainging = false\n        }\n\n        render.setStrokeWidth(lineWidth * strokeWidthBiasRate)\n        state.currentLineWidth = lineWidth\n\n        render.setStrokeColorV(selection == CurrentSelectionStateID.selected ? selected_color : color)\n        state.currentSelection = selection\n      }\n\n      this.processStrokeSegment(render, stroke, pointIndex, state)\n    }\n\n    if (state.drawingRemainging) {\n\n      render.stroke()\n      state.drawingRemainging = false\n    }\n  }\n\n  beginFill(color: Vec4, useAdjustingLocation: boolean) {\n\n    this.drawingState.begin(StrokeDrawingMode.fill)\n    this.drawingState.color = color\n    this.drawingState.useAdjustingLocation = useAdjustingLocation\n  }\n\n  finishFill(render: CanvasRender) {\n\n    if (this.drawingState.drawingRemainging) {\n\n      render.fill()\n      this.drawingState.drawingRemainging = false\n    }\n  }\n\n  processFill(render: CanvasRender, stroke: VectorStroke) {\n\n    if (VectorStrokeLogic.isEmptyStroke(stroke)) {\n      return\n    }\n\n    const state = this.drawingState\n\n    if (!state.strokeStarted) {\n\n      render.setLineCap(CanvasRenderLineCap.round)\n      render.setFillColorV(state.color)\n    }\n\n    for (let pointIndex = 0; pointIndex < stroke.points.length - 1; pointIndex++) {\n\n      this.processStrokeSegment(render, stroke, pointIndex, state)\n    }\n  }\n\n  private getPointLocation(point: VectorPoint, useAdjustingLocation: boolean): Vec3 {\n\n    return (useAdjustingLocation ? point.adjustingLocation : point.location)\n  }\n\n  private getPointWidth(point: VectorPoint, useAdjustingLocation: boolean): float {\n\n    return (useAdjustingLocation ? point.adjustingLineWidth : point.lineWidth)\n  }\n\n  private processStrokeSegment(render: CanvasRender, stroke: VectorStroke, pointIndex: int, state: StrokeDrawingState) {\n\n    const fromPoint = stroke.points[pointIndex]\n    const fromLocation = this.getPointLocation(fromPoint, state.useAdjustingLocation)\n\n    const toPoint = stroke.points[pointIndex + 1]\n    const toLocation = this.getPointLocation(toPoint, state.useAdjustingLocation)\n\n    const lengthFrom = (state.useAdjustingLocation ? fromPoint.adjustingLengthFrom : 1.0)\n    const lengthTo = (state.useAdjustingLocation ? fromPoint.adjustingLengthTo : 0.0)\n\n    if (lengthFrom == 1.0) {\n\n      // draw segment's full length\n      if (!state.strokeStarted) {\n\n        render.beginPath()\n        render.moveToV(fromLocation)\n        state.strokeStarted = true\n      }\n      else if (pointIndex == 0) {\n\n        render.lineToV(fromLocation)\n      }\n\n      render.lineToV(toLocation)\n      state.drawingRemainging = true\n    }\n    else {\n\n      // draw segment's from-side part\n      if (lengthFrom > 0.0) {\n\n        if (!state.strokeStarted) {\n\n          render.beginPath()\n          render.moveToV(fromLocation)\n          state.strokeStarted = true\n        }\n\n        vec3.lerp(this.toLocation, fromLocation, toLocation, lengthFrom)\n        render.lineToV(this.toLocation)\n        state.drawingRemainging = true\n\n        if (state.drawingMode == StrokeDrawingMode.stroke) {\n\n          render.stroke()\n          state.strokeStarted = false\n          state.drawingRemainging = false\n        }\n      }\n\n      // draw segment's to-side part\n      if (lengthTo > 0.0 && lengthTo < 1.0) {\n\n        if (state.drawingMode == StrokeDrawingMode.stroke && state.drawingRemainging) {\n\n          render.stroke()\n          state.strokeStarted = false\n          state.drawingRemainging = false\n        }\n\n        vec3.lerp(this.fromLocation, fromLocation, toLocation, lengthTo)\n\n        if (!state.strokeStarted) {\n\n          render.beginPath()\n          render.moveToV(this.fromLocation)\n          state.strokeStarted = true\n        }\n        else {\n\n          render.lineToV(this.fromLocation)\n          state.drawingRemainging = false\n        }\n\n        render.lineToV(toLocation)\n        state.drawingRemainging = true\n      }\n    }\n  }\n}\n","import { float } from \"app/common-logics\"\n\nexport class ToolDrawingStyle {\n\n  windowBorderColor = vec4.fromValues(8 / 16, 8 / 16, 8 / 16, 1.0)\n  windowBackgroundColor = vec4.fromValues(0xf6 / 255, 0xf6 / 255, 0xf8 / 255, 1.0)\n\n  controlHoverColor = vec4.fromValues(0.91, 0.91, 0.91, 1.0) // = CSS $hoverBackground\n\n  linePointColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  sampledPointColor = vec4.fromValues(0.0, 0.5, 1.0, 0.7)\n  extrutePointColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  editingLineColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n  selectedVectorLineColor = vec4.fromValues(1.0, 0.5, 0.0, 0.8)\n  selectedLineColorVisibilityAdjustThreshold1 = 0.07\n  selectedLineColorVisibilityAdjustThreshold2 = 0.7\n  selectedLineColorVisibilityAdjustHue = 0.1\n  linePointVisualBrightnessAdjustRate = 0.4\n  editModeOtherLayerAlphaAdjustRate = 0.3\n  editorThinLineWidth = 1.5\n\n  strokeConnectionInfoColor = vec4.fromValues(0.0, 0.0, 0.0, 0.5)\n\n  brushCursorCircleColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n  mouseCursorCircleColor = vec4.fromValues(1.0, 0.5, 0.5, 1.0)\n  operatorCursorCircleColor = vec4.fromValues(1.0, 0.5, 0.5, 1.0)\n  operatorCurosrLineDash = [2.0, 2.0]\n\n  operationPanelButtonBorderColor = vec4.fromValues(14 / 16, 14 / 16, 14 / 16, 1.0)\n\n  rulerHeight = 13.0\n  rulerTextSize = 12.0\n  rulerTextMargin = { x: 3.0, y: 2.0 }\n  rulerLineColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n  rulerBackGroundColor = vec4.fromValues(0.8, 0.8, 0.8, 1.0)\n  rulerDocumentAreaColor = vec4.fromValues(0.95, 0.95, 0.95, 1.0)\n\n  documentFrameOutAreaColor = vec4.fromValues(0.0, 0.0, 0.0, 0.7)\n\n  onionSkinForwardLineColor = vec4.fromValues(0.0, 0.5, 0.0, 0.6)\n  onionSkinBackwardLineColor = vec4.fromValues(0.5, 0.0, 0.0, 0.6)\n\n  modalToolSelectedAreaLineColor = vec4.fromValues(1.0, 0.5, 0.5, 1.0)\n  latticePointRadius = 4.0\n  latticePointHitRadius = 10.0\n  latticePointPadding = 8.0\n\n  autoFillPointLineColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  autoFillPointEdgeColor = vec4.fromValues(1.0, 1.0, 1.0, 1.0)\n\n  paletteSelectorItemEdgeColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  paletteSelectorItemSelectedColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n\n  timeLineUnitFrameColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n  timeLineCurrentFrameColor = vec4.fromValues(0.2, 1.0, 0.2, 0.5)\n  timeLineKeyFrameColor = vec4.fromValues(0.0, 0.0, 1.0, 0.1)\n  timeLineLayerKeyFrameColor = vec4.fromValues(0.8, 0.8, 0.0, 1.0)\n  timeLineOutOfLoopingColor = vec4.fromValues(0.0, 0.0, 0.0, 0.1)\n\n  posing3DBoneGrayColor = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n  posing3DBoneHeadColor = vec4.fromValues(0.2, 0.2, 1.0, 1.0)\n  posing3DBoneForwardColor = vec4.fromValues(0.2, 1.0, 0.2, 1.0)\n  posing3DBoneInputCircleRadius = 15.0\n  posing3DBoneInputCircleHitRadius = 1.8\n  posing3DHelperGrayColor1 = vec4.fromValues(0.5, 0.5, 0.5, 1.0)\n  posing3DHelperGrayColor2 = vec4.fromValues(0.5, 0.5, 0.5, 0.3)\n\n  generalLinePointRadius = 2.0\n  selectedLinePointRadius = 3.0\n  viewZoomAdjustingSpeedRate = 0.2\n\n  eyesSymmetryGuideColor = vec4.fromValues(0.0, 0.5, 1.0, 0.3)\n}\n","﻿import { int, Lists } from '../common-logics'\nimport { ToolDrawingStyle } from \"../document-drawing\"\nimport { CanvasRender, CanvasWindow } from '../render'\nimport { DocumentData } from '../document-data'\n\nexport class CanvasFrame {\n\n  private drawStyle: ToolDrawingStyle = null\n\n  private documentFrameCornerIndexs: int[][] = [[0, 1], [0, 3], [2, 3], [2, 1], [0, 1]]\n  private documentFrameCornerIndexsReverse = Lists.reverse(Lists.clone(this.documentFrameCornerIndexs))\n\n  private cornerPosition = vec3.fromValues(0.0, 0.0, 0.0)\n  private tempVec3 = vec3.create()\n\n  link(drawStyle: ToolDrawingStyle) {\n\n    this.drawStyle = drawStyle\n  }\n\n  draw(render: CanvasRender, documentData: DocumentData, mirrored: boolean) {\n\n    // TODO: ズームが大きいなどでビュー全体がフレーム内である場合は描画不要なため、そのときは描画をキャンセルする処理の実装\n\n    render.resetTransform()\n\n    render.setFillColorV(this.drawStyle.documentFrameOutAreaColor)\n\n    const cornerIndeces = mirrored\n      ? this.documentFrameCornerIndexs\n      : this.documentFrameCornerIndexsReverse\n\n    render.beginPath()\n    let index = 0\n    for (const cornerIndex of cornerIndeces) {\n\n      const x = documentData.documentFrame[cornerIndex[0]]\n      const y = documentData.documentFrame[cornerIndex[1]]\n\n      vec3.set(this.tempVec3, x, y, 0.0)\n      vec3.transformMat4(this.cornerPosition, this.tempVec3, render.transformMatrix)\n\n      if (index == 0) {\n\n        render.moveToV(this.cornerPosition)\n      }\n      else {\n\n        render.lineToV(this.cornerPosition)\n      }\n\n      index++\n    }\n\n    render.moveTo(0, 0)\n    render.lineTo(render.canvasWidth, 0)\n    render.lineTo(render.canvasWidth, render.canvasHeight)\n    render.lineTo(0, render.canvasHeight)\n    render.lineTo(0, 0)\n\n    render.fill()\n  }\n}\n","﻿import { float, int } from '../common-logics'\nimport { ToolDrawingStyle } from \"../document-drawing\"\nimport { CanvasRender, CanvasWindow } from '../render'\nimport { DocumentData } from '../document-data'\n\nexport enum CanvasRulerOrientation {\n\n  horizontalTop,\n  verticalLeft\n}\n\nexport class CanvasRuler {\n\n  private drawStyle: ToolDrawingStyle = null\n\n  private orientation = CanvasRulerOrientation.horizontalTop\n  private viewHeight = 0.0\n  private width = 0.0\n  private height = 13.0\n\n  private documentFrameCornerIndexs: int[][] = [[0, 1], [2, 3], [2, 1], [0, 3]]\n  private documentFramePositions: float[] = [0.0, 0.0, 0.0, 0.0]\n  private documentPositionInfo = {\n    origin: 0.0,\n    frameLeft: 0.0,\n    frameRight: 0.0\n  }\n  private unitScaleNumbers: float[] = [1, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000, 2500, 5000]\n\n  private origin = vec3.fromValues(0.0, 0.0, 0.0)\n  private cornerPosition = vec3.fromValues(0.0, 0.0, 0.0)\n  private tempVec3 = vec3.create()\n  private viewMatrix = mat4.create()\n\n  link(drawStyle: ToolDrawingStyle) {\n\n    this.drawStyle = drawStyle\n  }\n\n  isHorizontal(): boolean {\n\n    return (this.orientation == CanvasRulerOrientation.horizontalTop)\n  }\n\n  updateLayout(canvasWindow: CanvasWindow, orientation: CanvasRulerOrientation) {\n\n    this.orientation = orientation\n\n    this.viewHeight = canvasWindow.height\n\n    if (this.isHorizontal()) {\n\n      this.width = canvasWindow.width\n    }\n    else {\n\n      this.width = canvasWindow.height\n    }\n\n    this.height = this.drawStyle.rulerHeight\n  }\n\n  draw(render: CanvasRender, canvasWindow: CanvasWindow, documentData: DocumentData) {\n\n    const isHorizontal = this.isHorizontal()\n    const cornerPositionIndex = (isHorizontal ? 0 : 1)\n    const right = this.width\n    const bottom = this.height\n    const cornerMargin = this.height\n    const { frameLeft, frameRight, origin } = this.calculateDocumentFramePositionInfo(canvasWindow, documentData, cornerPositionIndex)\n\n    // set base transform\n    this.setBaseTransform(render, isHorizontal)\n\n    render.setStrokeWidth(1.0)\n\n    // background\n    render.setFillColorV(this.drawStyle.rulerBackGroundColor)\n    this.fillRect(cornerMargin, 0, frameLeft, bottom, isHorizontal, render)\n\n    render.setFillColorV(this.drawStyle.rulerDocumentAreaColor)\n    this.fillRect(frameLeft, 0, frameRight - frameLeft, bottom, isHorizontal, render)\n\n    render.setFillColorV(this.drawStyle.rulerBackGroundColor)\n    this.fillRect(frameRight, 0, right - frameRight, bottom, isHorizontal, render)\n\n    // bottom line\n    render.setStrokeColorV(this.drawStyle.rulerLineColor)\n    this.drawLine(0, bottom + 0.5, right, bottom + 0.5, isHorizontal, render)\n\n    // scale lines\n    render.setStrokeColorV(this.drawStyle.rulerLineColor)\n    this.drawScales(render, canvasWindow, origin, bottom, isHorizontal, this.drawScaleLine)\n\n    // scale numbers\n    render.setFontSize(this.drawStyle.rulerTextSize)\n    render.setFillColorV(this.drawStyle.rulerLineColor)\n    this.drawScales(render, canvasWindow, origin, bottom, isHorizontal, this.drawScaleNumber)\n  }\n\n  private calculateDocumentFramePositionInfo(canvasWindow: CanvasWindow, documentData: DocumentData, cornerPositionIndex: int) {\n\n    let index = 0\n    for (const documentFrameCornerIndex of this.documentFrameCornerIndexs) {\n\n      const x = documentData.documentFrame[documentFrameCornerIndex[0]]\n      const y = documentData.documentFrame[documentFrameCornerIndex[1]]\n\n      vec3.set(this.tempVec3, x, y, 0.0)\n      vec3.transformMat4(this.cornerPosition, this.tempVec3, canvasWindow.transformMatrix)\n\n      this.documentFramePositions[index] = this.cornerPosition[cornerPositionIndex]\n      index++\n    }\n\n    vec3.set(this.tempVec3, 0.0, 0.0, 0.0)\n    vec3.transformMat4(this.origin, this.tempVec3, canvasWindow.transformMatrix)\n\n    this.documentPositionInfo.frameLeft = this.documentFramePositions.reduce((a, b) => Math.min(a, b))\n    this.documentPositionInfo.frameRight = this.documentFramePositions.reduce((a, b) => Math.max(a, b))\n    this.documentPositionInfo.origin = this.origin[cornerPositionIndex]\n\n    return this.documentPositionInfo\n  }\n\n  private setBaseTransform(render: CanvasRender, isHorizontal: boolean) {\n\n    mat4.identity(this.viewMatrix)\n    if (!isHorizontal) {\n      mat4.translate(this.viewMatrix, this.viewMatrix, vec3.set(this.tempVec3, 0, this.viewHeight, 0.0))\n      mat4.rotateZ(this.viewMatrix, this.viewMatrix, -Math.PI / 2)\n    }\n\n    render.setTransformFromMatrix(this.viewMatrix)\n  }\n\n  private getUnitScaleNumber(canvasWindow: CanvasWindow, scaleUnitWidth: float) {\n\n    const letterUnitWidth = 6.0\n    const letterDigits = 4\n    const letterTextMargin = letterUnitWidth * 4\n    const scaleTextWidth = letterUnitWidth * letterDigits + letterTextMargin\n\n    let unitScaleNumber = 1\n\n    for (let scaleNumber of this.unitScaleNumbers) {\n\n      if (scaleNumber * scaleUnitWidth > scaleTextWidth) {\n\n        unitScaleNumber = scaleNumber\n        break\n      }\n    }\n\n    return unitScaleNumber\n  }\n\n  private drawScales(\n    render: CanvasRender,\n    canvasWindow: CanvasWindow,\n    origin: float,\n    bottom: float,\n    isHorizontal: boolean,\n    drawFunction: (scaleNumber: int, x: float, scaleHeight: float, bottom: float, isLargeScale: boolean, isHorizontal: boolean, render: CanvasRender) => void\n  ) {\n\n    const scaleHeightL = this.height * 0.8\n    const scaleHeightM = this.height * 0.4\n    const scaleHeightS = this.height * 0.2\n\n    const scaleUnitWidth = canvasWindow.viewScale\n    const unitScaleNumber = this.getUnitScaleNumber(canvasWindow, scaleUnitWidth)\n    const scaleStep = unitScaleNumber * scaleUnitWidth\n    const subscaleDivision = unitScaleNumber > 1 ? 5 : 2\n    const subScaleStep = scaleStep / subscaleDivision\n\n    const startScaleCount = - (Math.floor(origin / scaleStep) + 1)\n    const endScaleCount = (Math.floor((this.width - origin) / scaleStep) + 1)\n\n    let scaleCount = startScaleCount\n    let subScaleCount = 0\n    while (scaleCount <= endScaleCount) {\n\n      let scaleX = origin + scaleCount * scaleStep + subScaleCount * subScaleStep\n      let scaleNumber = scaleCount * unitScaleNumber\n\n      let scaleHeight: float\n      let isLargeScale: boolean\n      if (scaleCount == 0 && subScaleCount == 0) {\n\n        scaleHeight = scaleHeightL\n        isLargeScale = true\n      }\n      else if (subScaleCount == 0) {\n\n        scaleHeight = scaleHeightM\n        isLargeScale = true\n      }\n      else {\n\n        scaleHeight = scaleHeightS\n        isLargeScale = false\n      }\n\n      drawFunction.call(this, scaleNumber, scaleX, scaleHeight, bottom, isLargeScale, isHorizontal, render)\n\n      scaleX += subScaleStep\n\n      subScaleCount++\n      if(subScaleCount >= subscaleDivision) {\n        subScaleCount = 0\n        scaleCount++\n      }\n    }\n  }\n\n  private drawScaleLine(_scaleNumber: int, x: float, scaleHeight: float, bottom: float, _isLargeScale: boolean, isHorizontal: boolean, render: CanvasRender) {\n\n    this.drawLine(x, bottom - scaleHeight, x, bottom, isHorizontal, render)\n  }\n\n  private drawScaleNumber(scaleNumber: int, x: float, _scaleHeight: float, bottom: float, isLargeScale: boolean, isHorizontal: boolean, render: CanvasRender) {\n\n    if (!isLargeScale) {\n      return\n    }\n\n    let destX: float\n    if (isHorizontal) {\n\n      destX = x\n    }\n    else {\n\n      destX = this.viewHeight - x\n    }\n\n    render.fillText(scaleNumber.toFixed(0), destX + this.drawStyle.rulerTextMargin.x, bottom -  + this.drawStyle.rulerTextMargin.y)\n  }\n\n  private drawLine(x1: float, y1: float, x2: float, y2: float, isHorizontal: boolean, render: CanvasRender) {\n\n    if (isHorizontal) {\n\n      render.drawLine(x1, y1, x2, y2)\n    }\n    else {\n\n      render.drawLine(this.viewHeight - x1, y1, this.viewHeight - x2, y2)\n    }\n  }\n\n  private fillRect(left: float, top: float, width: float, height: float, isHorizontal: boolean, render: CanvasRender) {\n\n    if (isHorizontal) {\n\n      render.fillRect(left, top, width, height)\n    }\n    else {\n\n      render.fillRect(this.viewHeight - left - width, top, width, height)\n    }\n  }\n\n  drawCorner(render: CanvasRender) {\n\n    render.resetTransform()\n    render.setStrokeWidth(1.0)\n    render.setStrokeColorV(this.drawStyle.rulerLineColor)\n    render.setFillColorV(this.drawStyle.windowBackgroundColor)\n\n    render.fillRect(0, 0, this.height, this.height)\n    render.drawLine(0, this.height + 0.5, this.height + 0.5, this.height + 0.5)\n    render.drawLine(this.height + 0.5, 0, this.height + 0.5, this.height + 0.5)\n  }\n}\n","﻿import { ColorLogic, float } from '../common-logics'\nimport { VectorPoint, VectorStroke, VectorStrokeConnectionInfo } from '../document-data'\nimport { ToolDrawingStyle } from \"../document-drawing/drawing-style\"\nimport { CanvasRender, CanvasRenderLineCap } from '../render'\nimport { DrawingPointBrushLogic, DrawingStrokeLogic } from '../document-drawing'\nimport { SubToolDrawingContext_EditorDrawer_Interface } from '../context'\nimport { PointerInputWindow } from '../view'\nimport { VectorPointLogic, VectorStrokeLogic } from '../document-logic'\n\nexport class MainCanvasEditorDrawer implements SubToolDrawingContext_EditorDrawer_Interface {\n\n  private canvasRender: CanvasRender = null\n  private drawStyle: ToolDrawingStyle = null\n  private drawingStroke: DrawingStrokeLogic = null\n  private drawingPointBrush: DrawingPointBrushLogic = null\n  private mainWindow: PointerInputWindow = null\n\n  private linePointColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private selectedLinePointColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private hsv = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private sel_hsv = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  private editorStrokeDashScaled = [0.0, 0.0]\n  private strokeConnectionDash = [4.0, 4.0]\n\n  link(canvasRender: CanvasRender, drawStyle: ToolDrawingStyle, mainWindow: PointerInputWindow, drawingStroke: DrawingStrokeLogic, drawingPointBrush: DrawingPointBrushLogic) {\n\n    this.canvasRender = canvasRender\n    this.drawStyle = drawStyle\n    this.mainWindow = mainWindow\n    this.drawingStroke = drawingStroke\n    this.drawingPointBrush = drawingPointBrush\n  }\n\n  getCurrentViewScaleLineWidth(width: float) {\n\n    return this.canvasRender.getViewScaledSize(width)\n  }\n\n  drawPointerCursor(radius: float) { // @implements MainEditorDrawer\n\n    this.drawCursorCircle(this.mainWindow.pointerEvent.location, radius, this.drawStyle.mouseCursorCircleColor)\n  }\n\n  drawaBrushCursor(lineWidth: float, lineWidthBiasRate: float) { // @implements MainEditorDrawer\n\n    this.drawCursorCircle(\n      this.mainWindow.pointerEvent.location,\n      VectorPointLogic.getLineRadiusFromLineWidth(lineWidth * lineWidthBiasRate),\n      this.drawStyle.brushCursorCircleColor\n    )\n  }\n\n  drawCursorCircle(location: Vec3, radius: float, color: Vec4) { // @implements MainEditorDrawer\n\n    this.canvasRender.beginPath()\n\n    this.canvasRender.setStrokeColorV(color)\n    this.canvasRender.setStrokeWidth(this.getCurrentViewScaleLineWidth(1.0))\n\n    this.canvasRender.circle(\n      location[0]\n      , location[1]\n      , radius\n    )\n\n    this.canvasRender.stroke()\n  }\n\n  drawOperatorSolidStroke(stroke: VectorStroke, strokeWidthBiasRate = 1.0) { // @implements MainEditorDrawer\n\n    this.drawingStroke.drawVectorStroke(this.canvasRender, stroke, this.drawStyle.editingLineColor, strokeWidthBiasRate, 0.0, false, false)\n  }\n\n  drawOperatorPointBrushStroke(stroke: VectorStroke, color: Vec4, useAdjustingLocation: boolean) { // @implements MainEditorDrawer\n\n    this.drawingPointBrush.drawPointBrushStroke(this.canvasRender, stroke, color, useAdjustingLocation, null)\n  }\n\n  drawEditorStroke(stroke: VectorStroke, color: Vec4, strokeWidthBolding: float, useAdjustingLocation: boolean) { // @implements MainEditorDrawer\n\n    this.drawingStroke.drawVectorStroke(this.canvasRender, stroke, color, 1.0, strokeWidthBolding, useAdjustingLocation, false)\n  }\n\n  drawEditorStrokePoints(stroke: VectorStroke, color: Vec4, useAdjustingLocation: boolean) { // @implements MainEditorDrawer\n\n    this.drawVectorLinePoints(stroke, color, useAdjustingLocation)\n  }\n\n  drawVectorLinePoints(stroke: VectorStroke, color: Vec4, useAdjustingLocation: boolean) { // @implements MainEditorDrawer\n\n    if (!this.isStrokeInViewRectangle(stroke)) {\n      return\n    }\n\n    const render = this.canvasRender\n\n    render.setStrokeWidth(this.getCurrentViewScaleLineWidth(1.0))\n\n    // make line point color darker or lighter than original to easy to see on the line\n    ColorLogic.rgbToHSVv(this.hsv, color)\n    if (this.hsv[2] > 0.5) {\n\n      this.hsv[2] -= this.drawStyle.linePointVisualBrightnessAdjustRate\n    }\n    else {\n\n      this.hsv[2] += this.drawStyle.linePointVisualBrightnessAdjustRate\n    }\n    if (this.hsv[1] < 0.2) {\n\n      this.hsv[0] = 0.2\n      this.hsv[1] = 0.2\n    }\n    ColorLogic.hsvToRGBv(this.linePointColor, this.hsv)\n\n    // make slected color easy to see on the line\n    vec4.copy(this.selectedLinePointColor, this.drawStyle.selectedVectorLineColor)\n    if ((this.hsv[0] < this.drawStyle.selectedLineColorVisibilityAdjustThreshold1\n        || this.hsv[0] > this.drawStyle.selectedLineColorVisibilityAdjustThreshold2)\n      && this.hsv[1] > 0.0) {\n\n      ColorLogic.rgbToHSVv(this.sel_hsv, this.selectedLinePointColor)\n\n      this.sel_hsv[0] += this.drawStyle.selectedLineColorVisibilityAdjustHue\n\n      ColorLogic.hsvToRGBv(this.selectedLinePointColor, this.sel_hsv)\n    }\n\n    this.linePointColor[3] = 0.8\n\n    render.setLineCap(CanvasRenderLineCap.round)\n\n    for (const point of stroke.points) {\n\n      this.drawVectorLinePoint(render, point, this.linePointColor, useAdjustingLocation, this.selectedLinePointColor)\n    }\n  }\n\n  drawVectorLinePoint(render: CanvasRender, point: VectorPoint, color: Vec4, useAdjustingLocation: boolean, slectedColor: Vec4) {\n\n    const viewScale = render.getViewScale()\n\n    let radius = this.drawStyle.generalLinePointRadius / viewScale\n\n    let location: Vec3\n\n    if (useAdjustingLocation) {\n\n      location = point.adjustingLocation\n    }\n    else {\n\n      location = point.location\n    }\n\n    if (!render.isInViewRectangle(location, radius)) {\n      return\n    }\n\n    if (point.isSelected) {\n\n      radius = this.drawStyle.selectedLinePointRadius / viewScale\n      render.setStrokeColorV(slectedColor)\n    }\n    else {\n\n      render.setStrokeColorV(color)\n    }\n\n    render.setStrokeWidth(radius * 2)\n    render.beginPath()\n    render.moveTo(location[0], location[1])\n    render.lineTo(location[0] + 0.01, location[1])\n    render.stroke()\n  }\n\n  drawEditorStrokePoint(point: VectorPoint, color: Vec4, useAdjustingLocation: boolean) { // @implements MainEditorDrawer\n\n    this.drawVectorLinePoint(this.canvasRender, point, color, useAdjustingLocation, this.drawStyle.selectedVectorLineColor)\n  }\n\n  drawStrokeConnectionInfoLine(from: Vec3, to: Vec3) { // @implements MainEditorDrawer\n\n    this.drawVectorStrokeConnectionInfoLine(this.canvasRender, from, to)\n  }\n\n  drawVectorStrokeConnectionInfo(render: CanvasRender, connectionInfo: VectorStrokeConnectionInfo, useAdjustingLocation: boolean) {\n\n    if (connectionInfo.from_Stroke.points.length <= 1\n      || connectionInfo.to_Stroke.points.length <= 1) {\n      return\n    }\n\n    // set first location\n    const from_point = connectionInfo.from_Stroke.points.at(-1)\n    const from_location = (useAdjustingLocation ? from_point.adjustingLocation : from_point.location)\n\n    const to_point = connectionInfo.to_Stroke.points.at(0)\n    const to_location = (useAdjustingLocation ? to_point.adjustingLocation : to_point.location)\n\n    this.drawVectorStrokeConnectionInfoLine(render, from_location, to_location)\n  }\n\n  drawVectorStrokeConnectionInfoLine(render: CanvasRender, from: Vec3, to: Vec3) {\n\n    render.setFillColorV(this.drawStyle.strokeConnectionInfoColor)\n\n    this.setEditorThinLineStyle(this.strokeConnectionDash)\n\n    render.beginPath()\n\n    render.moveToV(from)\n    render.lineToV(to)\n\n    render.stroke()\n\n    render.clearLineDash()\n  }\n\n  getEditorThinLineWidth() {\n\n    return this.canvasRender.getViewScaledSize(this.drawStyle.editorThinLineWidth)\n  }\n\n  setEditorThinLineStyle(dashSetting: float[]) {\n\n    const render = this.canvasRender\n\n    render.setLineCap(CanvasRenderLineCap.round)\n    render.setStrokeWidth(this.getEditorThinLineWidth())\n\n    const viewScale = render.getViewScaledSize(1.0)\n    this.editorStrokeDashScaled[0] = dashSetting[0] * viewScale\n    this.editorStrokeDashScaled[1] = dashSetting[1] * viewScale\n    render.setLineDash(this.editorStrokeDashScaled)\n  }\n\n  isStrokeInViewRectangle(stroke: VectorStroke): boolean {\n\n    if (VectorStrokeLogic.isEmptyStroke(stroke)) {\n      return true\n    }\n\n    return this.canvasRender.isInViewRectangle(stroke.runtime.area.centerLocation, stroke.runtime.area.range)\n  }\n}\n","﻿export class SVGFiles {\n\n  static icons = {\n    dummy: './res/icon_dummy.svg',\n    openImage: './res/perm_media_black_24dp.svg',\n    move: './res/open_with-24px.svg',\n    rotate:  './res/rotate_right-24px.svg',\n    scale: './res/icon_scale.svg',\n    zoom: './res/zoom_in-24px.svg',\n    draw: './res/icon_draw.svg',\n    eracer: './res/icon_eracer.svg',\n    extrudeLine: './res/icon_extrude_line.svg',\n    scratchLine: './res/icon_scratch_line.svg',\n    drawStrokeWidth: './res/icon_draw_stroke_width.svg',\n    selectLine: './res/icon_select_line.svg',\n    selectSegment: './res/icon_select_segment.svg',\n    selectPoint: './res/icon_select_point.svg',\n    editTransform: './res/icon_edit_transform.svg',\n    divideLineSegment: './res/icon_divide_line_segment.svg',\n  }\n}\n","﻿import { ToolDrawingStyle } from \"../document-drawing\"\nimport { float, LayoutLogic, RectangleLayoutArea } from '../common-logics'\nimport { CanvasRender, CanvasWindow } from '../render'\nimport { SVGFiles } from '../resource-files'\nimport { ToolPointerEvent } from '../tool'\n\nexport enum OperationPanelButtonID {\n\n  view_zoom = 1,\n  view_rotate = 2,\n  view_move = 3,\n  draw = 4,\n  eraser = 5,\n  brushSize = 6,\n  scratchLine = 7,\n}\n\nexport class OperationPanel {\n\n  private visible = false\n  private drawStyle: ToolDrawingStyle = null\n\n  private mainOperationUI_Icons = [\n    { image: new Image(), filePath: SVGFiles.icons.zoom },\n    { image: new Image(), filePath: SVGFiles.icons.rotate },\n    { image: new Image(), filePath: SVGFiles.icons.move },\n    { image: new Image(), filePath: SVGFiles.icons.draw },\n    { image: new Image(), filePath: SVGFiles.icons.eracer },\n    { image: new Image(), filePath: SVGFiles.icons.scratchLine },\n  ]\n\n  private mainOperationUI_PanelBorderPoints: float[][] = []\n\n  private mainOperationUI_Area = new RectangleLayoutArea()\n    .setSize(250, 170)\n    .setPadding({ left: 10, top: 10, right: 10, bottom: 10})\n    .setGridLayout({ columns: 3, columnGap: 7, rows: 2 ,rowGap: 7 })\n    .setChildren([\n      // new RectangleLayoutArea().setIndex(OperationPanelButtonID.brushSize).setCellSpan(1, 1),\n      new RectangleLayoutArea().setIndex(OperationPanelButtonID.draw).setIcon(3),\n      new RectangleLayoutArea().setIndex(OperationPanelButtonID.view_rotate).setIcon(1),\n      new RectangleLayoutArea().setIndex(OperationPanelButtonID.view_move).setIcon(2),\n      new RectangleLayoutArea().setIndex(OperationPanelButtonID.eraser).setIcon(4),\n      new RectangleLayoutArea().setIndex(OperationPanelButtonID.scratchLine).setIcon(5),\n      new RectangleLayoutArea().setIndex(OperationPanelButtonID.view_zoom).setIcon(0),\n    ])\n\n  link(drawStyle: ToolDrawingStyle) {\n\n    this.drawStyle = drawStyle\n  }\n\n  startLoadingImageResources() {\n\n    for (const icon of this.mainOperationUI_Icons) {\n\n      icon.image.src = icon.filePath\n    }\n  }\n\n  isVisible(): boolean {\n\n    return this.visible\n  }\n\n  setVisibility(visible: boolean) {\n\n    return this.visible = visible\n  }\n\n  toggleVisibility() {\n\n    return this.visible = !this.visible\n  }\n\n  hittestToButtons(e: ToolPointerEvent): RectangleLayoutArea | null {\n\n    if (!this.visible) {\n      return null\n    }\n\n    return LayoutLogic.hitTestLayout(this.mainOperationUI_Area.children, e.offsetX, e.offsetY)\n  }\n\n  hittestToPanel(e: ToolPointerEvent): RectangleLayoutArea | null {\n\n    if (!this.visible) {\n      return null\n    }\n\n    return LayoutLogic.hitTestLayout(this.mainOperationUI_Area, e.offsetX, e.offsetY)\n  }\n\n  updateLayout(canvasWindow: CanvasWindow) {\n\n    const area = this.mainOperationUI_Area\n    const offsetToCancelAntialius = 0.5\n\n    area.left = -offsetToCancelAntialius\n    area.right = area.left + area.width\n    area.top = offsetToCancelAntialius + canvasWindow.height - area.height\n    area.bottom = area.top + area.height\n\n    const windowBorderRadius = 20 // [px]\n    const windowBorderRadiusUnit = 90 / 10\n\n    // 外枠の形状の計算\n    this.mainOperationUI_PanelBorderPoints = []\n\n    this.mainOperationUI_PanelBorderPoints.push([area.left, area.top])\n    this.mainOperationUI_PanelBorderPoints.push([area.right - windowBorderRadius, area.top])\n\n    for (let r = 90 - windowBorderRadiusUnit; r >= 0; r -= windowBorderRadiusUnit) {\n\n      this.mainOperationUI_PanelBorderPoints.push([\n        area.right - windowBorderRadius + Math.cos(r * Math.PI / 180) * windowBorderRadius,\n        area.top + windowBorderRadius - Math.sin(r * Math.PI / 180) * windowBorderRadius\n      ])\n    }\n\n    this.mainOperationUI_PanelBorderPoints.push([area.right, area.bottom])\n    this.mainOperationUI_PanelBorderPoints.push([area.left, area.bottom])\n\n    LayoutLogic.calculateGridLayout(area, area.gridLayoutOptions)\n  }\n\n  draw(render: CanvasRender) {\n\n    if (!this.visible) {\n      return null\n    }\n\n    render.resetTransform()\n\n    render.setStrokeWidth(1.0)\n    render.setFillColorV(this.drawStyle.windowBackgroundColor)\n\n    // 背景\n    render.fillPath(this.mainOperationUI_PanelBorderPoints)\n\n    // 枠線\n    render.setStrokeColorV(this.drawStyle.windowBorderColor)\n    render.strokePath(this.mainOperationUI_PanelBorderPoints)\n\n    // ボタン\n    render.setStrokeColorV(this.drawStyle.operationPanelButtonBorderColor)\n    for (const area of this.mainOperationUI_Area.children) {\n\n      if (area.iconID != -1) {\n\n        if (area.hover) {\n\n          render.setFillColorV(this.drawStyle.controlHoverColor)\n          render.fillRoundRect(area.left, area.top, area.width, area.width, 10)\n        }\n\n        // render.strokeRect(area.left, area.top, area.width, area.width)\n        render.setStrokeWidth(3.0)\n        render.strokeRoundRect(area.left, area.top, area.width, area.width, 10)\n\n        const icon = this.mainOperationUI_Icons[area.iconID]\n        render.drawImage(icon.image, 0, 0, 24, 24, area.left, area.top, area.width, area.width)\n      }\n    }\n  }\n}\n","﻿import { ToolDrawingStyle } from \"../document-drawing/drawing-style\"\nimport { CanvasRender } from '../render'\nimport { DrawingStrokeLogic } from '../document-drawing'\nimport { MainCanvasEditorDrawer } from \"./editor-drawer\"\n\nexport class OperatorCursor {\n\n  location = vec3.fromValues(0.0, 0.0, 0.0)\n  radius = 15.0\n}\n\nexport class OperatorCursorLogic {\n\n  private canvasRender: CanvasRender = null\n  private drawStyle: ToolDrawingStyle = null\n  private editorDrawer: MainCanvasEditorDrawer = null\n\n  private operatorCurosrLineDash = [2.0, 2.0]\n\n  link(canvasRender: CanvasRender, drawStyle: ToolDrawingStyle, editorDrawer: MainCanvasEditorDrawer) {\n\n    this.canvasRender = canvasRender\n    this.drawStyle = drawStyle\n    this.editorDrawer = editorDrawer\n  }\n\n  drawOperatorCursor(operatorCursor: OperatorCursor) {\n\n    this.canvasRender.beginPath()\n\n    this.canvasRender.setStrokeColorV(this.drawStyle.operatorCursorCircleColor)\n    this.canvasRender.setStrokeWidth(this.editorDrawer.getEditorThinLineWidth())\n\n    this.editorDrawer.setEditorThinLineStyle(this.operatorCurosrLineDash)\n\n    const viewScale = this.canvasRender.getViewScaledSize(1.0)\n\n    this.canvasRender.circle(\n      operatorCursor.location[0]\n      , operatorCursor.location[1]\n      , operatorCursor.radius * viewScale\n    )\n\n    this.canvasRender.stroke()\n\n    const centerX = operatorCursor.location[0]\n    const centerY = operatorCursor.location[1]\n    const clossBeginPosition = operatorCursor.radius * viewScale * 1.5\n    const clossEndPosition = operatorCursor.radius * viewScale * 0.5\n\n    this.canvasRender.drawLine(centerX - clossBeginPosition, centerY, centerX - clossEndPosition, centerY)\n    this.canvasRender.drawLine(centerX + clossBeginPosition, centerY, centerX + clossEndPosition, centerY)\n    this.canvasRender.drawLine(centerX, centerY - clossBeginPosition, centerX, centerY - clossEndPosition)\n    this.canvasRender.drawLine(centerX, centerY + clossBeginPosition, centerX, centerY + clossEndPosition)\n\n    this.canvasRender.clearLineDash()\n  }\n}\n","import { App_View } from './app-view'\nimport { float, int } from './common-logics'\nimport { DocumentContext } from './context'\nimport {\n  AutoFillLayer, DocumentBackGroundTypeID, DocumentData, ImageFileReferenceLayer,\n  Layer, OnionSkinMode, VectorLayer\n} from './document-data'\nimport {\n  DrawingEyesSymmetryLogic, DrawingImageFileReferenceLayerLogic, DrawingPointBrushLogic, DrawingPosing3DLogic, DrawingStrokeLogic,\n  DrawingVectorLayerLogic, DrawPathBufferingLogic, DrawPathCollectingLogic, DrawPathContext, DrawPathModeID,\n  DrawPathOperationTypeID, DrawPathStep, ToolDrawingStyle\n} from \"./document-drawing\"\nimport { BezierDistanceLineShader, BezierLineShader, GPULineShader, Logic_GPULine, PolyLineShader, RenderingVectorLayerLogic } from './document-rendering'\nimport { MainCanvasEditorDrawer, OperatorCursorLogic } from './editor'\nimport { Posing3DView } from './posing3d'\nimport { CanvasRender, CanvasRenderBlendMode, CanvasWindow, WebGLRender } from './render'\nimport { OperationUnitID } from './tool'\nimport { ViewKeyframe, ViewKeyframeLayer } from './view'\n\nenum DrawingLayerTargetID {\n\n  foreLayer,\n  backLayer\n}\n\nclass OnionSiknDrawing {\n\n  onionSkinMode = OnionSkinMode.disabled\n  backward_DrawPathContexts: DrawPathContext[] = []\n  forward_DrawPathContexts: DrawPathContext[] = []\n}\n\nexport class App_Drawing {\n\n  // Sub logics\n\n  canvasRender = new CanvasRender()\n  fullScreen_canvasRender = new CanvasRender()\n  local_canvasRender = new CanvasRender()\n  drawGPURender = new WebGLRender()\n  drawingStroke = new DrawingStrokeLogic()\n  drawingPointBrush = new DrawingPointBrushLogic()\n  editorDrawer = new MainCanvasEditorDrawer()\n  operatorCursor = new OperatorCursorLogic()\n  drawingVectorLayer = new DrawingVectorLayerLogic()\n  drawingIFRLayer = new DrawingImageFileReferenceLayerLogic()\n  drawingEyesSymmetry = new DrawingEyesSymmetryLogic()\n  drawingPosing3D = new DrawingPosing3DLogic()\n  drawPathCollecting = new DrawPathCollectingLogic()\n  drawPathBuffering = new DrawPathBufferingLogic()\n  logic_GPULine = new Logic_GPULine()\n  renderingVectorLayer = new RenderingVectorLayerLogic()\n  posing3DViewRender = new WebGLRender()\n  posing3DView = new Posing3DView()\n  drawStyle = new ToolDrawingStyle()\n\n  private appView: App_View = null\n\n  // Own variables\n\n  main_drawPathContext = new DrawPathContext()\n  lazy_drawPathContext = new DrawPathContext()\n\n  private layerPickingLocations = [[0.0, 0.0], [0.0, -2.0], [2.0, 0.0], [0.0, 2.0], [-2.0, 0.0]]\n  private onionSiknDrawing = new OnionSiknDrawing()\n  private polyLineShader = new PolyLineShader()\n  private bezierLineShader = new BezierLineShader()\n  private bezierDistanceLineShader = new BezierDistanceLineShader()\n  private lineShader: GPULineShader = this.bezierDistanceLineShader\n  private tempColor4 = vec4.create()\n  private pickLayer_canvasWindow = new CanvasWindow()\n  private drawPath_logging = false\n\n  link(appView: App_View) {\n\n    this.appView = appView\n    this.drawingPointBrush.link(this.drawStyle)\n    this.editorDrawer.link(this.canvasRender, this.drawStyle, this.appView.mainWindow, this.drawingStroke, this.drawingPointBrush)\n    this.operatorCursor.link(this.canvasRender, this.drawStyle, this.editorDrawer)\n    this.drawingVectorLayer.link(this.canvasRender, this.drawStyle, this.drawingStroke, this.drawingPointBrush, this.editorDrawer)\n    this.drawingIFRLayer.link(this.canvasRender)\n    this.drawingEyesSymmetry.link(this.canvasRender, this.drawStyle, this.editorDrawer)\n    this.drawingPosing3D.link(this.posing3DViewRender, this.posing3DView)\n    this.renderingVectorLayer.link(this.drawGPURender, this.lineShader, this.drawingVectorLayer, this.logic_GPULine)\n  }\n\n  // Initializing\n\n  initializeDrawingDevices(webglWindow: CanvasWindow, drawGPUWindow: CanvasWindow) {\n\n    if (this.posing3DViewRender.initializeWebGL(webglWindow.canvas, true)) {\n\n      console.log('３Ｄポージング機能を初期化できませんでした。')\n    }\n\n    //this.pickingWindow.initializeContext()\n\n    this.posing3DView.initialize(this.posing3DViewRender, webglWindow)\n\n    if (this.drawGPURender.initializeWebGL(drawGPUWindow.canvas, false)) {\n\n      console.log('３Ｄ描画機能を初期化できませんでした。')\n    }\n\n    try {\n\n      this.drawGPURender.initializeShader(this.polyLineShader)\n      this.drawGPURender.initializeShader(this.bezierLineShader)\n      this.drawGPURender.initializeShader(this.bezierDistanceLineShader)\n    }\n    catch (errorMessage) {\n\n      console.log('シェーダの初期化に失敗しました。' + errorMessage)\n    }\n  }\n\n  // Common drawing methods\n\n  private drawFullWindowImage(dstWindow: CanvasWindow, srcWindow: CanvasWindow) {\n\n    this.fullScreen_canvasRender.setContext(dstWindow)\n\n    this.fullScreen_canvasRender.resetTransform()\n\n    this.fullScreen_canvasRender.drawImage(\n      srcWindow.canvas,\n      0, 0,\n      srcWindow.width, srcWindow.height,\n      0, 0,\n      dstWindow.width, dstWindow.height\n    )\n  }\n\n  clearWindow(canvasWindow: CanvasWindow) {\n\n    this.fullScreen_canvasRender.setContext(canvasWindow)\n    this.fullScreen_canvasRender.clear()\n  }\n\n  // Collecting draw paths\n\n  collectDrawPathsForDocument(docContext: DocumentContext) {\n\n    this.drawPathCollecting.collectDrawPaths(\n      this.main_drawPathContext,\n      docContext.documentData,\n      docContext.currentViewKeyframe\n    )\n\n    this.lazy_drawPathContext.steps = this.main_drawPathContext.steps\n\n    if (docContext.documentData.animationSettingData.onionSkinMode != OnionSkinMode.disabled) {\n\n      this.onionSiknDrawing.backward_DrawPathContexts = this.collectOnionSkinDrawPaths(docContext, false)\n      this.onionSiknDrawing.forward_DrawPathContexts = this.collectOnionSkinDrawPaths(docContext, true)\n    }\n    else {\n\n      this.onionSiknDrawing.backward_DrawPathContexts = []\n      this.onionSiknDrawing.forward_DrawPathContexts = []\n    }\n  }\n\n  private collectOnionSkinDrawPaths(docContext: DocumentContext, forward: boolean): DrawPathContext[] {\n\n    const currentIndex = docContext.keyframes.findIndex(keyframe => keyframe == docContext.currentViewKeyframe)\n\n    if (currentIndex === undefined) {\n      throw new Error('ERROR 0000:Could not find current keyframe')\n    }\n\n    const indexStep = (forward ? 1 : -1)\n    const oniokSkinLevelRate = (forward ? 1 : -1)\n    const maxOnionSkinLevel = (forward ? docContext.documentData.animationSettingData.onionSkinForwardLevel : docContext.documentData.animationSettingData.onionSkinBackwardLevel)\n\n    const result: DrawPathContext[] = []\n    for (let index = currentIndex + indexStep; index >= 0 && index < docContext.keyframes.length;) {\n\n      const viewKeyframe = docContext.keyframes[index]\n\n      const drawPathContext = new DrawPathContext()\n      drawPathContext.drawPathModeID = forward ? DrawPathModeID.onionSkinForward : DrawPathModeID.onionSkinBackward\n      drawPathContext.onionSkinLevel = (1 + result.length) * oniokSkinLevelRate\n      drawPathContext.maxOnionSkinLevel = maxOnionSkinLevel\n\n      this.drawPathCollecting.collectDrawPaths(\n        drawPathContext,\n        docContext.documentData,\n        viewKeyframe,\n        false\n      )\n\n      result.push(drawPathContext)\n\n      if (result.length >= maxOnionSkinLevel) {\n        break\n      }\n\n      index += indexStep\n    }\n\n    return result\n  }\n\n  // Foundations for drawing draw path\n\n  drawDrawPathContext(\n    canvasWindow: CanvasWindow,\n    drawPathContext: DrawPathContext,\n    clearState = true,\n    needsClearBackground = true,\n    transformWindow: CanvasWindow = null\n  ) {\n\n    const documentData = drawPathContext.documentData\n    const isFullRendering = drawPathContext.isFullRendering()\n    const isExporting = drawPathContext.isExporting()\n    const isLazyUpdate = drawPathContext.isLazyUpdate()\n    const isEditMode = drawPathContext.isEditMode()\n\n    // Preparing lazy process\n    if (isLazyUpdate) {\n\n      drawPathContext.lazyUpdateState.startPartialProcess()\n    }\n\n    // Transform for exporting\n    if (transformWindow == null) {\n\n      transformWindow = this.appView.mainWindow\n    }\n\n    // Determine a destination canvas\n    let destination_canvasWindow = canvasWindow\n\n    if (clearState) {\n\n      drawPathContext.clearDrawingStates()\n\n      drawPathContext.bufferStack.push(canvasWindow)\n\n      drawPathContext.render.setContext(canvasWindow)\n    }\n    else {\n\n      destination_canvasWindow = drawPathContext.bufferStack.pop()\n\n      drawPathContext.render.setContext(destination_canvasWindow)\n    }\n\n    if (this.drawPath_logging) {\n\n      console.debug('  DrawPath start clearState', clearState)\n    }\n\n    for (let i = drawPathContext.startIndex; i <= drawPathContext.endIndex; i++) {\n\n      const drawPathStep = drawPathContext.steps[i]\n\n      drawPathContext.lastDrawPathIndex = i\n\n      const viewKeyFrameLayer = drawPathStep.viewKeyframeLayer\n      const layer = viewKeyFrameLayer ? viewKeyFrameLayer.layer : null\n\n      if (this.drawPath_logging) {\n\n        console.debug('  DrawPath', i, drawPathStep._debugText, layer ? layer.name : '', 'stack:', drawPathContext.bufferStack.length)\n      }\n\n      // Process for each type of opetaion\n\n      if (drawPathStep.operationType == DrawPathOperationTypeID.startDrawPaths) {\n\n        if (needsClearBackground) {\n          drawPathContext.render.clear()\n        }\n\n        drawPathContext.render.copyTransformFromWindow(transformWindow)\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.drawForeground\n        || drawPathStep.operationType == DrawPathOperationTypeID.drawBackground) {\n\n        if (isExporting && !layer.isRenderTarget) {\n          continue\n        }\n\n        if (!this.isLayerDrawTarget(layer, drawPathContext.currentLayerOnly)) {\n          continue\n        }\n\n        // Prepare for layer composition\n        this.setCompositeOperation(drawPathContext, drawPathStep)\n\n        // Prepare for render cache\n        let render: CanvasRender\n        let needsDraw = false\n        if (drawPathStep.isCacheEnabled()) {\n\n          if (drawPathStep.needsRedraw) {\n\n            drawPathContext.local_render.setContext(drawPathStep.renderCache.canvasWindow)\n            drawPathContext.local_render.clear()\n\n            render = drawPathContext.local_render\n            needsDraw = true\n\n            // DEBUG\n            // console.debug('drawDrawPathContext', drawPathStep.layer.name, drawPathStep.renderCache.width, drawPathStep.renderCache.height)\n          }\n        }\n        else {\n\n          drawPathContext.render.setContext(destination_canvasWindow)\n          drawPathContext.render.copyTransformFromWindow(transformWindow)\n\n          render = drawPathContext.render\n          needsDraw = true\n        }\n\n        // Draw layer to current buffer\n        if (needsDraw) {\n\n          if (drawPathStep.operationType == DrawPathOperationTypeID.drawForeground) {\n\n            if (isFullRendering) {\n\n              // GPU rendering\n              if (VectorLayer.isVectorLayer(layer)) {\n\n                transformWindow.copyTransformTo(this.appView.drawGPUWindow)\n\n                this.appView.drawGPUWindow.viewScale *= (this.appView.drawGPUWindow.width / transformWindow.width)\n\n                this.renderingVectorLayer.renderForeground_VectorLayer(\n                  this.appView.drawGPUWindow,\n                  viewKeyFrameLayer,\n                  documentData,\n                  isEditMode,\n                  drawPathContext.isModalToolRunning)\n              }\n            }\n            else {\n\n              // CPU drawing\n              this.drawLayerForeground(\n                render,\n                drawPathStep,\n                documentData,\n                isExporting,\n                drawPathContext.isModalToolRunning,\n                isEditMode,\n                drawPathContext.onionSkinLevel\n              )\n            }\n          }\n          else if (drawPathStep.operationType == DrawPathOperationTypeID.drawBackground) {\n\n            this.drawLayerBackground(\n              render,\n              drawPathStep,\n              documentData,\n              isExporting,\n              drawPathContext.isModalToolRunning,\n              isEditMode\n            )\n          }\n\n          drawPathStep.needsRedraw = false\n        }\n\n        if (drawPathStep.isCacheEnabled()) {\n\n          this.drawRenderCache(destination_canvasWindow, drawPathStep)\n        }\n\n        drawPathContext.render.setBlendMode(CanvasRenderBlendMode.default)\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.prepareRenderingForeground) {\n\n        if (!isFullRendering) {\n          continue\n        }\n\n        this.renderingVectorLayer.renderClearBuffer(this.appView.drawGPUWindow)\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.flushRenderingForeground) {\n\n        if (!isFullRendering) {\n          continue\n        }\n\n        drawPathContext.render.setContext(destination_canvasWindow)\n\n        this.setCompositeOperation(drawPathContext, drawPathStep)\n\n        this.drawFullWindowImage(destination_canvasWindow, this.appView.drawGPUWindow)\n\n        drawPathContext.render.setBlendMode(CanvasRenderBlendMode.default)\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.prepareBuffer) {\n\n        if (!this.isLayerDrawTarget(layer, drawPathContext.currentLayerOnly)) {\n          continue\n        }\n\n        // Prepare buffer\n\n        drawPathContext.bufferStack.push(destination_canvasWindow)\n\n        destination_canvasWindow = drawPathStep.buffer.canvasWindow\n\n        drawPathContext.render.setContext(destination_canvasWindow)\n        drawPathContext.render.clear()\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.flushBuffer) {\n\n        if (!this.isLayerDrawTarget(layer, drawPathContext.currentLayerOnly)) {\n          continue\n        }\n\n        // Flush buffered image to upper buffer\n\n        const before_BufferCanvasWindow = drawPathContext.bufferStack.pop()\n\n        drawPathContext.render.setContext(before_BufferCanvasWindow)\n\n        this.setCompositeOperation(drawPathContext, drawPathStep)\n\n        this.drawFullWindowImage(before_BufferCanvasWindow, destination_canvasWindow)\n\n        destination_canvasWindow = before_BufferCanvasWindow\n      }\n\n      // Suspend for lazy process when over the max-time\n      if ((isLazyUpdate && drawPathContext.lazyUpdateState.isOverPartialProcessMaxTime())\n        || i == drawPathContext.endIndex) {\n\n        drawPathContext.bufferStack.push(destination_canvasWindow)\n        break\n      }\n    }\n  }\n\n  private drawDrawPathContexts(bufferCanvasWindow: CanvasWindow, drawPathContexts: DrawPathContext[], needsClearBackground: boolean) {\n\n    for (const drawPathContext of drawPathContexts) {\n\n      drawPathContext.startIndex = 0\n      drawPathContext.endIndex = drawPathContext.steps.length - 1\n\n      this.drawDrawPathContext(bufferCanvasWindow, drawPathContext, true, needsClearBackground)\n\n      needsClearBackground = false\n    }\n  }\n\n  private drawRenderCache(destination_canvasWindow: CanvasWindow, drawPathStep: DrawPathStep) {\n\n    this.fullScreen_canvasRender.setContext(destination_canvasWindow)\n\n    this.fullScreen_canvasRender.drawImage(\n      drawPathStep.renderCache.canvasWindow.canvas,\n      0, 0,\n      drawPathStep.renderCache.width, drawPathStep.renderCache.height,\n      drawPathStep.renderCache.location[0], drawPathStep.renderCache.location[1],\n      drawPathStep.renderCache.width, drawPathStep.renderCache.height\n    )\n  }\n\n  private isLayerDrawTarget(layer: Layer, currentLayerOnly: boolean) {\n\n    if (currentLayerOnly) {\n\n      return this.isdrawTargetForCurrentLayerOnly(layer)\n    }\n    else {\n\n      return Layer.isVisible(layer)\n    }\n  }\n\n  private isdrawTargetForCurrentLayerOnly(layer: Layer) {\n\n    return (Layer.isSelected(layer))\n  }\n\n  private setCompositeOperation(drawPathContext: DrawPathContext, drawPathStep: DrawPathStep) {\n\n    if (!drawPathContext.currentLayerOnly) {\n\n      drawPathContext.render.setBlendMode(drawPathStep.compositeOperation)\n    }\n    else {\n\n      drawPathContext.render.setBlendMode(CanvasRenderBlendMode.default)\n    }\n  }\n\n  private drawLayerForeground(\n    render: CanvasRender,\n    drawPathStep: DrawPathStep,\n    documentData: DocumentData,\n    isExporting: boolean,\n    isModalToolRunning: boolean,\n    isEditMode: boolean,\n    onionSkinLevel: int = 0,\n    maxOnionSkinLevel: int = 1\n  ) {\n\n    const layer = drawPathStep.viewKeyframeLayer.layer\n\n    if (VectorLayer.isVectorLayer(layer)) {\n\n      const vectorLayer = <VectorLayer>layer\n\n      this.drawingVectorLayer.drawForeground(\n        render,\n        vectorLayer,\n        drawPathStep.viewKeyframeLayer.vectorLayerKeyframe.geometry,\n        drawPathStep.renderCache,\n        documentData,\n        isEditMode,\n        isExporting,\n        isModalToolRunning,\n        onionSkinLevel,\n        maxOnionSkinLevel\n      )\n\n      if (vectorLayer.eyesSymmetryEnabled && vectorLayer.runtime.eyesSymmetryGeometry != null) {\n\n        this.drawingVectorLayer.drawForeground(\n          render,\n          vectorLayer,\n          vectorLayer.runtime.eyesSymmetryGeometry,\n          drawPathStep.renderCache,\n          documentData,\n          isEditMode,\n          isExporting,\n          isModalToolRunning,\n          onionSkinLevel,\n          maxOnionSkinLevel\n        )\n      }\n    }\n    else if (ImageFileReferenceLayer.isImageFileReferenceLayer(layer)) {\n\n      const ifrLayer = <ImageFileReferenceLayer>layer\n\n      this.drawingIFRLayer.drawImageFileReferenceLayer(ifrLayer, isModalToolRunning)\n    }\n  }\n\n  private drawLayerBackground(\n    render: CanvasRender,\n    drawPathStep: DrawPathStep,\n    documentData: DocumentData,\n    isExporting: boolean,\n    isModalToolRunning: boolean,\n    isEditMode: boolean\n  ) {\n\n    const layer = drawPathStep.viewKeyframeLayer.layer\n\n    if (VectorLayer.isVectorLayer(layer)) {\n\n      const vectorLayer = <VectorLayer>layer\n      const geometry = drawPathStep.viewKeyframeLayer.vectorLayerKeyframe.geometry\n\n      this.drawingVectorLayer.drawBackground(\n        render,\n        vectorLayer,\n        geometry,\n        documentData,\n        Layer.isSelected(layer),\n        isEditMode,\n        isExporting,\n        isModalToolRunning\n      )\n\n      if (isEditMode) {\n\n        this.drawingVectorLayer.drawBackgroundExtra(\n          render,\n          vectorLayer,\n          geometry,\n          Layer.isSelected(layer),\n          isEditMode,\n          isModalToolRunning\n        )\n      }\n    }\n    else if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n      const autoFillLayer = <AutoFillLayer>layer\n      const geometry = drawPathStep.viewKeyframeLayer.autoFillLayerKeyframe.geometry\n\n      this.drawingVectorLayer.drawBackground(\n        render,\n        autoFillLayer,\n        geometry,\n        documentData,\n        Layer.isSelected(layer),\n        isEditMode,\n        isExporting,\n        isModalToolRunning\n      )\n    }\n  }\n\n  private drawForegroundForEditMode(\n    render: CanvasRender,\n    vectorLayer: VectorLayer,\n    viewKeyFrameLayer: ViewKeyframeLayer,\n    documentData: DocumentData,\n    operationUnitID: OperationUnitID,\n    drawStrokes: boolean,\n    drawPoints: boolean,\n    isModalToolRunning: boolean,\n    isEditMode: boolean\n  ) {\n\n    const isSelectedLayer = Layer.isSelected(vectorLayer)\n\n    this.drawingVectorLayer.drawForegroundForEditMode(\n      render,\n      vectorLayer,\n      viewKeyFrameLayer.vectorLayerKeyframe.geometry,\n      documentData,\n      operationUnitID,\n      isEditMode,\n      isSelectedLayer,\n      drawStrokes,\n      drawPoints,\n      isModalToolRunning\n    )\n\n    if (vectorLayer.eyesSymmetryEnabled && vectorLayer.runtime.eyesSymmetryGeometry != null) {\n\n      this.drawingVectorLayer.drawForegroundForEditMode(\n        render,\n        vectorLayer,\n        vectorLayer.runtime.eyesSymmetryGeometry,\n        documentData,\n        operationUnitID,\n        isEditMode,\n        false,\n        drawStrokes,\n        drawPoints,\n        isModalToolRunning\n      )\n    }\n  }\n\n  // Main window drawing\n\n  drawMainWindow(\n    result_canvasWindow: CanvasWindow,\n    docContext: DocumentContext,\n    isDrawMode: boolean,\n    isEditMode: boolean,\n    isModalToolRunning: boolean,\n    drawCPUOnly: boolean,\n    redrawActiveLayerOnly: boolean,\n    currentLayerOnly: boolean\n  ) {\n\n    this.main_drawPathContext.render = this.canvasRender\n    this.main_drawPathContext.local_render = this.local_canvasRender\n    this.main_drawPathContext.isEditModeDraw = isEditMode\n    this.main_drawPathContext.isModalToolRunning = isModalToolRunning\n    this.main_drawPathContext.currentLayerOnly = currentLayerOnly\n    this.main_drawPathContext.redrawActiveLayerOnly = redrawActiveLayerOnly\n    this.main_drawPathContext.drawCPUOnly = drawCPUOnly\n\n    this.onionSiknDrawing.onionSkinMode = docContext.documentData.animationSettingData.onionSkinMode\n\n    this.main_drawPathContext.render.setContext(result_canvasWindow)\n    this.main_drawPathContext.render.clear()\n\n    if (isDrawMode) {\n\n      this.drawDocumentForDrawMode(result_canvasWindow, this.main_drawPathContext, this.onionSiknDrawing)\n    }\n    else if (isEditMode) {\n\n      this.drawDocumentForEditMode(result_canvasWindow, docContext, this.main_drawPathContext)\n    }\n\n    // Draw frames\n\n    this.drawFrames(result_canvasWindow, docContext)\n  }\n\n  private drawDocumentForDrawMode(\n    result_canvasWindow: CanvasWindow,\n    drawPathContext: DrawPathContext,\n    onionSiknDrawing: OnionSiknDrawing\n  ) {\n\n    // TODO: 必要なときだけ実行する\n    this.drawPathCollecting.updateActiveDrawPathIndex(drawPathContext)\n    const redrawActiveLayerOnly = drawPathContext.redrawActiveLayerOnly\n    const activeRangeStartIndex = drawPathContext.activeDrawPathStartIndex\n    const activeRangeEndIndex = drawPathContext.activeDrawPathEndIndex\n    const maxStepIndex = drawPathContext.steps.length - 1\n\n    const needsDrawForBackLayer = (redrawActiveLayerOnly && activeRangeStartIndex != -1)\n    const needsDrawForForeLayer = (redrawActiveLayerOnly && activeRangeEndIndex < maxStepIndex)\n\n    const needsOnionSkinDrawForBackLayer = (onionSiknDrawing.onionSkinMode == OnionSkinMode.showOnLowestLayer)\n    const needsOnionSkinDrawForForeLayer = (onionSiknDrawing.onionSkinMode == OnionSkinMode.showOnTopLayer)\n\n    const needsRedrawAllLayer = (!needsDrawForBackLayer && !needsDrawForForeLayer)\n\n    // TODO: GPU描画に対応する\n    // drawPathContext.drawPathModeID = DrawPathModeID.none\n    // if (this.lazy_DrawPathContext.lazyUpdateState.isRendered && !isModalToolRunning && !drawCPUOnly) {\n    //   drawPathContext.drawPathModeID = DrawPathModeID.lazyUpdate\n    // }\n    // else {\n    //   drawPathContext.drawPathModeID = DrawPathModeID.editor\n    // }\n    drawPathContext.drawPathModeID = DrawPathModeID.editor\n\n    drawPathContext.render.setContext(result_canvasWindow)\n\n    let needsClearBackground = true\n\n    // console.log('********')\n\n    // Draw back layers\n    if (needsDrawForBackLayer || needsOnionSkinDrawForBackLayer) {\n\n      drawPathContext.startIndex = 0\n      drawPathContext.endIndex = activeRangeStartIndex - 1\n\n      // drawPathContext.log({tag: 'back', buffer: this.isBufferDrawnForNonActiveLayer, needsDrawForBackLayer, needsOnionSkinDrawForBackLayer})\n\n      this.drawViaBufferForDrawMode(\n        result_canvasWindow,\n        this.appView.backLayerRenderBuffer,\n        drawPathContext,\n        DrawingLayerTargetID.backLayer,\n        !drawPathContext.isNonActiveLayerBufferDrawingDone,\n        needsDrawForBackLayer,\n        needsOnionSkinDrawForBackLayer,\n        onionSiknDrawing\n      )\n\n      needsClearBackground = false\n    }\n\n    // Draw current layers\n    if (needsRedrawAllLayer) {\n\n      drawPathContext.startIndex = 0\n      drawPathContext.endIndex = maxStepIndex\n    }\n    else {\n\n      drawPathContext.startIndex = activeRangeStartIndex\n      drawPathContext.endIndex = activeRangeEndIndex\n    }\n\n    // drawPathContext.log({tag: 'current', redrawActiveLayerOnly})\n\n    this.drawDrawPathContext(result_canvasWindow, drawPathContext, true, needsClearBackground)\n\n    // Draw fore layers\n    if (needsDrawForForeLayer || needsOnionSkinDrawForForeLayer) {\n\n      drawPathContext.startIndex = activeRangeEndIndex + 1\n      drawPathContext.endIndex = maxStepIndex\n\n      // drawPathContext.log({tag: 'fore', buffer: this.isBufferDrawnForNonActiveLayer, needsDrawForForeLayer, needsOnionSkinDrawForForeLayer})\n\n      this.drawViaBufferForDrawMode(\n        result_canvasWindow,\n        this.appView.foreLayerRenderBuffer,\n        drawPathContext,\n        DrawingLayerTargetID.foreLayer,\n        !drawPathContext.isNonActiveLayerBufferDrawingDone,\n        needsDrawForForeLayer,\n        needsOnionSkinDrawForForeLayer,\n        onionSiknDrawing\n      )\n    }\n\n    drawPathContext.isNonActiveLayerBufferDrawingDone = !needsRedrawAllLayer\n  }\n\n  private drawViaBufferForDrawMode(\n    result_canvasWindow: CanvasWindow,\n    buffer_canvasWindow: CanvasWindow,\n    drawPathContext: DrawPathContext,\n    drawingLayerTarget: DrawingLayerTargetID,\n    needsRedrawBuffer: boolean,\n    needsDrawMainDrawPath: boolean,\n    needsDrawOnionSkinDrawPath: boolean,\n    onionSiknDrawing: OnionSiknDrawing\n  ) {\n\n    const isForeLayer = (drawingLayerTarget == DrawingLayerTargetID.foreLayer)\n\n    // Draw layers to buffer if requested.\n\n    if (needsRedrawBuffer || needsDrawOnionSkinDrawPath) {\n\n      result_canvasWindow.copyTransformTo(buffer_canvasWindow)\n\n      drawPathContext.render.setContext(buffer_canvasWindow)\n      drawPathContext.render.clear()\n\n      let needsClearBackground = true\n\n      if (needsDrawOnionSkinDrawPath && !isForeLayer && onionSiknDrawing.onionSkinMode == OnionSkinMode.showOnLowestLayer) {\n\n        this.drawDrawPathContexts(buffer_canvasWindow, onionSiknDrawing.backward_DrawPathContexts, true)\n        this.drawDrawPathContexts(buffer_canvasWindow, onionSiknDrawing.forward_DrawPathContexts, false)\n        needsClearBackground = false\n      }\n\n      if (needsDrawMainDrawPath) {\n\n        this.drawDrawPathContext(buffer_canvasWindow, drawPathContext, true, needsClearBackground)\n      }\n\n      if (needsDrawOnionSkinDrawPath && isForeLayer && onionSiknDrawing.onionSkinMode == OnionSkinMode.showOnTopLayer) {\n\n        this.drawDrawPathContexts(buffer_canvasWindow, onionSiknDrawing.backward_DrawPathContexts, false)\n        this.drawDrawPathContexts(buffer_canvasWindow, onionSiknDrawing.forward_DrawPathContexts, false)\n      }\n    }\n\n    // Draw layers from buffer.\n\n    this.drawFullWindowImage(result_canvasWindow, buffer_canvasWindow)\n  }\n\n  drawDocumentForEditMode(\n    result_canvasWindow: CanvasWindow,\n    docContext: DocumentContext,\n    drawPathContext: DrawPathContext\n  ) {\n\n    // TODO: 必要なときだけ実行する\n    this.drawPathCollecting.updateActiveDrawPathIndex(drawPathContext)\n\n    const isModalToolRunning = drawPathContext.isModalToolRunning\n    const currentLayerOnly = drawPathContext.currentLayerOnly\n    const redrawActiveLayerOnly = drawPathContext.redrawActiveLayerOnly\n    const isEditMode = drawPathContext.isEditMode()\n    const maxStepIndex = drawPathContext.steps.length - 1\n\n    drawPathContext.render.setContext(result_canvasWindow)\n\n    //redrawActiveLayerOnly = false\n\n    if (redrawActiveLayerOnly && drawPathContext.activeDrawPathStartIndex != -1) {\n\n      // Draw back layers\n      if (drawPathContext.activeDrawPathStartIndex > 0) {\n\n        drawPathContext.startIndex = 0\n        drawPathContext.endIndex = drawPathContext.activeDrawPathStartIndex - 1\n\n        this.drawViaBufferForEditMode(\n          result_canvasWindow,\n          this.appView.backLayerRenderBuffer,\n          docContext,\n          drawPathContext,\n          !drawPathContext.isNonActiveLayerBufferDrawingDone,\n          currentLayerOnly,\n          isModalToolRunning,\n          isEditMode\n        )\n      }\n\n      // Draw current layers\n      drawPathContext.startIndex = drawPathContext.activeDrawPathStartIndex\n      drawPathContext.endIndex = drawPathContext.activeDrawPathEndIndex\n\n      this.drawViaBufferForEditMode(\n        result_canvasWindow,\n        null,\n        docContext,\n        drawPathContext,\n        true,\n        currentLayerOnly,\n        isModalToolRunning,\n        isEditMode\n      )\n\n      // Draw fore layers\n      if (drawPathContext.activeDrawPathEndIndex < maxStepIndex) {\n\n        drawPathContext.startIndex = drawPathContext.activeDrawPathEndIndex + 1\n        drawPathContext.endIndex = maxStepIndex\n\n        this.drawViaBufferForEditMode(\n          result_canvasWindow,\n          this.appView.foreLayerRenderBuffer,\n          docContext,\n          drawPathContext,\n          !drawPathContext.isNonActiveLayerBufferDrawingDone,\n          currentLayerOnly,\n          isModalToolRunning,\n          isEditMode\n        )\n      }\n\n      drawPathContext.isNonActiveLayerBufferDrawingDone = true\n    }\n    else {\n\n      // Draw all layers\n      drawPathContext.startIndex = 0\n      drawPathContext.endIndex = maxStepIndex\n\n      this.drawViaBufferForEditMode(\n        result_canvasWindow,\n        null,\n        docContext,\n        drawPathContext,\n        true,\n        currentLayerOnly,\n        isModalToolRunning,\n        isEditMode\n      )\n\n      drawPathContext.isNonActiveLayerBufferDrawingDone = false\n    }\n  }\n\n  private drawViaBufferForEditMode(\n    result_canvasWindow: CanvasWindow,\n    buffer_canvasWindow: CanvasWindow,\n    docContext: DocumentContext,\n    drawPathContext: DrawPathContext,\n    needsRedrawBuffer: boolean,\n    currentLayerOnly: boolean,\n    isModalToolRunning: boolean,\n    isEditMode: boolean\n  ) {\n\n    const documentData = docContext.documentData\n    const drawStrokes = true //!isFullRendering\n    const drawPoints = true\n\n    if (needsRedrawBuffer) {\n\n      if (buffer_canvasWindow != null) {\n\n        result_canvasWindow.copyTransformTo(buffer_canvasWindow)\n\n        drawPathContext.render.setContext(buffer_canvasWindow)\n        drawPathContext.render.clear()\n      }\n      else {\n\n        drawPathContext.render.setContext(result_canvasWindow)\n      }\n\n      for (let i = drawPathContext.startIndex; i <= drawPathContext.endIndex; i++) {\n\n        const drawPathStep = drawPathContext.steps[i]\n\n        if (drawPathStep.operationType != DrawPathOperationTypeID.drawForeground\n          && drawPathStep.operationType != DrawPathOperationTypeID.drawBackground) {\n\n          continue\n        }\n\n        const viewKeyFrameLayer = drawPathStep.viewKeyframeLayer\n        const layer = viewKeyFrameLayer ? viewKeyFrameLayer.layer : null\n\n        //console.debug('  DrawPath EditMode', i, drawPathStep._debugText, layer ? layer.name : '')\n\n        if (currentLayerOnly) {\n\n          if (!this.isdrawTargetForCurrentLayerOnly(layer)) {\n            continue\n          }\n        }\n        else {\n\n          if (!Layer.isVisible(layer)) {\n            continue\n          }\n        }\n\n        if (VectorLayer.isVectorLayer(layer)) {\n\n          const vectorLayer = <VectorLayer>layer\n\n          if (drawPathStep.operationType == DrawPathOperationTypeID.drawBackground) {\n\n            this.drawLayerBackground(\n              drawPathContext.render,\n              drawPathStep,\n              documentData,\n              false,\n              isModalToolRunning,\n              isEditMode\n            )\n          }\n\n          this.drawForegroundForEditMode(\n            drawPathContext.render,\n            vectorLayer,\n            viewKeyFrameLayer,\n            documentData,\n            docContext.operationUnitID,\n            drawStrokes,\n            drawPoints,\n            isModalToolRunning,\n            isEditMode\n          )\n        }\n        else if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n          this.drawLayerBackground(\n            drawPathContext.render,\n            drawPathStep,\n            documentData,\n            false,\n            isModalToolRunning,\n            isEditMode\n          )\n        }\n        else {\n\n          this.drawLayerForeground(\n            drawPathContext.render,\n            drawPathStep,\n            documentData,\n            false,\n            drawPathContext.isModalToolRunning,\n            isEditMode\n          )\n        }\n      }\n    }\n\n    if (buffer_canvasWindow != null) {\n\n      this.drawFullWindowImage(result_canvasWindow, buffer_canvasWindow)\n    }\n  }\n\n  drawFrames(canvasWindow: CanvasWindow, docContext: DocumentContext) {\n\n    this.canvasRender.setContext(canvasWindow)\n\n    this.drawDocumentFrame(this.canvasRender, docContext)\n\n    this.drawRulers(this.canvasRender, docContext)\n  }\n\n  private drawDocumentFrame(render: CanvasRender,  docContext: DocumentContext) {\n\n    if (!docContext.documentData.documentFrame_HideOuterArea) {\n      return\n    }\n\n    render.resetTransform()\n\n    const mirrorX = this.appView.mainWindow.mirrorX\n    const mirrorY = this.appView.mainWindow.mirrorY\n    const mirrored = ((!mirrorX && !mirrorY) || (mirrorX && mirrorY))\n\n    this.appView.canvasFrame.draw(this.canvasRender, docContext.documentData, mirrored)\n  }\n\n  private drawRulers(render: CanvasRender, docContext: DocumentContext) {\n\n    render.resetTransform()\n\n    this.appView.canvasRulerH.draw(render, this.appView.mainWindow, docContext.documentData)\n    this.appView.canvasRulerV.draw(render, this.appView.mainWindow, docContext.documentData)\n\n    this.appView.canvasRulerH.drawCorner(render)\n  }\n\n  // Export drawing\n\n  drawExportImage(canvasWindow: CanvasWindow, documentData: DocumentData, viewKeyframe: ViewKeyframe, imageLeft: int, imageTop: int, imageWidth: int, imageHeight: int, scale: float, backGroundType: DocumentBackGroundTypeID) {\n\n    const drawPathContext = new DrawPathContext()\n    drawPathContext.drawPathModeID = DrawPathModeID.export\n    drawPathContext.render = this.canvasRender\n    drawPathContext.local_render = this.local_canvasRender\n\n    this.drawPathCollecting.collectDrawPaths(\n      drawPathContext,\n      documentData,\n      viewKeyframe\n    )\n\n    drawPathContext.render.setContext(canvasWindow)\n    drawPathContext.render.clear()\n\n    if (backGroundType == DocumentBackGroundTypeID.lastPaletteColor) {\n\n      drawPathContext.render.resetTransform()\n      drawPathContext.render.setFillColorV(documentData.paletteColors[documentData.paletteColors.length - 1].color)\n      drawPathContext.render.fillRect(0, 0, imageWidth, imageHeight)\n    }\n\n    canvasWindow.viewLocation[0] = imageLeft\n    canvasWindow.viewLocation[1] = imageTop\n    canvasWindow.viewScale = scale\n    canvasWindow.viewRotation = 0.0\n    canvasWindow.centerLocationRate[0] = 0.0\n    canvasWindow.centerLocationRate[1] = 0.0\n\n    drawPathContext.startIndex = 0\n    drawPathContext.endIndex = drawPathContext.steps.length - 1\n\n    this.drawPathBuffering.prepareDrawPathBuffers(\n      drawPathContext,\n      canvasWindow,\n      true\n    )\n\n    this.drawPathBuffering.updateAllRenderCaches(\n      drawPathContext,\n      viewKeyframe\n    )\n\n    this.drawDrawPathContext(canvasWindow, drawPathContext, true, false, canvasWindow)\n  }\n\n  // Layer picking\n\n  pickLayer(main_canvasWindow: CanvasWindow, documentData: DocumentData, pickLocationX: float, pickLocationY: float): Layer {\n\n    if (!this.pickLayer_canvasWindow.isSameMetrics(main_canvasWindow)) {\n\n      this.pickLayer_canvasWindow.createCanvas(main_canvasWindow.width, main_canvasWindow.height, true)\n    }\n\n    main_canvasWindow.copyTransformTo(this.pickLayer_canvasWindow)\n\n    this.canvasRender.setContext(this.pickLayer_canvasWindow)\n    this.canvasRender.clear()\n\n    let pickedLayer = null\n    for (let index = this.main_drawPathContext.steps.length - 1; index > 0; index--) {\n\n      const drawPathStep = this.main_drawPathContext.steps[index]\n\n      if (drawPathStep.operationType != DrawPathOperationTypeID.drawForeground\n        && drawPathStep.operationType != DrawPathOperationTypeID.drawBackground) {\n        continue\n      }\n\n      if (!Layer.isVisible(drawPathStep.viewKeyframeLayer.layer)) {\n        continue\n      }\n\n      if (drawPathStep.isCacheEnabled()) {\n\n        this.drawRenderCache(this.pickLayer_canvasWindow, drawPathStep)\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.drawBackground) {\n\n        this.drawLayerBackground(\n          this.canvasRender,\n          drawPathStep,\n          documentData,\n          false,\n          false,\n          false\n        )\n      }\n      else {\n\n        this.drawLayerForeground(\n          this.canvasRender,\n          drawPathStep,\n          documentData,\n          false,\n          false,\n          false\n        )\n      }\n\n      for (const location of this.layerPickingLocations) {\n\n        this.canvasRender.pickColor(this.tempColor4, pickLocationX + location[0], pickLocationY + location[1])\n\n        if (this.tempColor4[3] > 0.0) {\n\n          pickedLayer = drawPathStep.viewKeyframeLayer.layer\n          break\n        }\n      }\n\n      if (pickedLayer != null) {\n        break\n      }\n    }\n\n    return pickedLayer\n  }\n}\n","import * as React from 'react'\nimport { DialogScreenRef } from '../ui'\n\nexport interface UI_DialogScreenContainerRef {\n\n  show?: (dialogRef: DialogScreenRef) => void\n  hide?: (dialogRef: DialogScreenRef) => void\n}\n\nexport interface UI_DialogScreenContainerParam {\n\n  children: any\n  className?: string\n  isVisibleOnInit?: boolean\n  overlayContainerRef?: UI_DialogScreenContainerRef\n  onEscape?: (e: React.KeyboardEvent) => void\n}\n\nexport function UI_DialogScreenContainer(\n  { children, className = '', isVisibleOnInit = true, overlayContainerRef = null, onEscape } : UI_DialogScreenContainerParam ) {\n\n  const containerRef = React.useRef<HTMLDivElement>(null)\n  const [visible, set_visible] = React.useState(isVisibleOnInit)\n\n  React.useEffect(() => {\n\n    overlayContainerRef.show = (dialogRef) => {\n      // console.log('UI_DialogScreenContainer show')\n\n      containerRef.current.parentElement.classList.remove('hidden')\n\n      set_visible(true)\n\n      dialogRef.onDialogScreenOpened()\n\n      // for handling keydown event\n      window.setTimeout(() => {\n        containerRef.current.focus()\n      }, 100)\n    }\n\n    overlayContainerRef.hide = (dialogRef) => {\n\n      containerRef.current.parentElement.classList.add('hidden')\n\n      set_visible(false)\n\n      dialogRef.onDialogScreenClosed()\n    }\n\n    return function cleanup() {\n    }\n  }, [])\n\n  function container_keyDown(e: React.KeyboardEvent) {\n\n    // console.log(e.key)\n\n    if (e.key == 'Escape') {\n\n      if (onEscape) {\n\n        onEscape(e)\n\n        e.stopPropagation()\n      }\n    }\n  }\n\n  return (\n    <div ref={containerRef}\n      className={`dialog-screen-container ${className} ${!visible ? 'hidden' : ''}`}\n      tabIndex={0} // for handling keydown event\n      onKeyDown={container_keyDown}\n    >\n      {visible ? children : null}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Platform } from '../../platform'\nimport { Strings } from '../common-logics'\nimport { DialogScreenRef } from '../ui'\nimport { UI_Icon_MaterialIcon, UI_Icon_MaterialIcon_IconName } from '../ui-common-controls'\nimport { LocalSettingFileSection, UserSettingFileLogic } from '../user-setting'\nimport { UI_DialogScreenContainer, UI_DialogScreenContainerRef } from './dialog-screen-conatiner'\n\nexport interface UI_Dialog_DocumentFilerRef extends DialogScreenRef {\n\n  show?(dialogType: UI_Dialog_DocumentFiler_DialogType, lastFilePath: string, userSetting: UserSettingFileLogic): void\n  close?(): void\n\n  fileItem_Selected?: (filePath: string) => void\n  filePath_Fixed?: (directoryPath: string, fileName: string) => void\n}\n\nexport interface UI_Dialog_DocumentFilerParam {\n\n  uiRef: UI_Dialog_DocumentFilerRef\n}\n\nexport enum UI_Dialog_DocumentFiler_DialogType {\n  none,\n  open,\n  saveAS,\n}\n\nenum FileSectionItemType {\n  folder,\n  currentDir,\n  lastUsed,\n  add\n}\n\ninterface FileSectionItem {\n  key: number\n  type: FileSectionItemType\n  name: string\n  path: string\n  icon: UI_Icon_MaterialIcon_IconName\n  section?: LocalSettingFileSection\n}\n\ninterface FileItem {\n  key: number\n  name: string\n  icon: UI_Icon_MaterialIcon_IconName\n  path: string\n}\n\nexport function UI_Dialog_DocumentFiler({ uiRef }: UI_Dialog_DocumentFilerParam) {\n\n  const [dialogType, set_dialogType] = React.useState(UI_Dialog_DocumentFiler_DialogType.none)\n\n  const [currentFileSectionItem, set_currentFileSectionItem] = React.useState<FileSectionItem>(null)\n\n  const [fileSectionItems, set_fileSectionItems] = React.useState<FileSectionItem[]>(() => {\n    return []\n  })\n\n  const [currentFileItem, set_currentFileItem] = React.useState<FileItem>(null)\n\n  const [fileItems, set_fileItems] = React.useState<FileItem[]>(() => {\n    return []\n  })\n\n  const [fileName, set_fileName] = React.useState('')\n  const [directoryPath, set_directoryPath] = React.useState('')\n  const [directoryIcon, set_directoryIcon] = React.useState<UI_Icon_MaterialIcon_IconName>('')\n\n  const userSettingRef = React.useRef<UserSettingFileLogic>(null)\n\n  const overlayContainerRef = React.useMemo<UI_DialogScreenContainerRef>(() => ({}), [])\n\n  React.useEffect(() => {\n\n    uiRef.show = (type, lastFilePath, userSetting) => {\n\n      userSettingRef.current = userSetting\n\n      let reselectSectionPath = ''\n      if (type == UI_Dialog_DocumentFiler_DialogType.saveAS && !Strings.isNullOrEmpty(lastFilePath)) {\n\n        const lastFileName = Platform.path.getFileName(lastFilePath)\n\n        if (!Strings.isNullOrEmpty(lastFileName)) {\n\n          set_fileName(lastFileName)\n\n          reselectSectionPath = Platform.path.getDirectoryPath(lastFilePath)\n        }\n      }\n\n      prepareItems(type, reselectSectionPath)\n\n      set_dialogType(type)\n      set_currentFileItem(null)\n\n      overlayContainerRef.show(uiRef)\n    }\n\n    uiRef.close = () => {\n\n      overlayContainerRef.hide(uiRef)\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.close = null\n    }\n  }, [])\n\n  function prepareItems(dlgType: UI_Dialog_DocumentFiler_DialogType, reselectSectionPath: string) {\n\n    const environments = userSettingRef.current.getOpenFileEnvironments()\n\n    const fileSectionItems: FileSectionItem[] = []\n    let keyCount = 0\n\n    if (dlgType == UI_Dialog_DocumentFiler_DialogType.open) {\n\n      fileSectionItems.push({\n        key: keyCount++,\n        type: FileSectionItemType.lastUsed,\n        name: '最近使用したファイル',\n        path: '最近使用したファイル',\n        icon: 'history'\n      })\n    }\n\n    if (dlgType == UI_Dialog_DocumentFiler_DialogType.saveAS && !Strings.isNullOrEmpty(reselectSectionPath)) {\n\n      fileSectionItems.push({\n        key: keyCount++,\n        type: FileSectionItemType.currentDir,\n        name: '現在の場所',\n        path: Platform.path.getPlatformOrientedPath(reselectSectionPath),\n        icon: 'folder'\n      })\n    }\n\n    environments.fileSections.forEach(section => {\n      fileSectionItems.push({\n        key: keyCount++,\n        type: FileSectionItemType.folder,\n        name: section.name,\n        path: section.path,\n        icon: 'folder',\n        section: section\n      })\n    })\n\n    if (Platform.supportsNative()) {\n\n      fileSectionItems.push({\n        key: keyCount++,\n        type: FileSectionItemType.add,\n        name: '場所の追加',\n        path: '場所の追加',\n        icon: 'add'\n      })\n    }\n\n    set_fileSectionItems(fileSectionItems)\n\n    let select_FileSectionItem = fileSectionItems[0]\n\n    if (!Strings.isNullOrEmpty(reselectSectionPath)) {\n\n      const sectionItem = fileSectionItems.find(item =>\n        (item.type == FileSectionItemType.folder || item.type == FileSectionItemType.currentDir)\n        && item.path == reselectSectionPath)\n\n      if (sectionItem) {\n\n        select_FileSectionItem = sectionItem\n      }\n    }\n\n    changeCurrentFileSection(select_FileSectionItem).then()\n  }\n\n  function setCurrentFileItem(fileItem: FileItem | null) {\n\n    set_currentFileItem(fileItem)\n    set_fileName(fileItem ? fileItem.name : '')\n  }\n\n  async function changeCurrentFileSection(sectionItem: FileSectionItem) {\n\n    switch (sectionItem.type) {\n\n      case FileSectionItemType.folder:\n      case FileSectionItemType.currentDir:\n      {\n\n        const files = await Platform.fileSystem.getFileInfos(sectionItem.path)\n\n        const fileItems: FileItem[] = []\n        let keyCount = 0\n\n        files.filter(file => Strings.endsWith(file.path, '.ora') || Strings.endsWith(file.path, '.json'))\n          .forEach(file => {\n            fileItems.push({\n              key: keyCount++,\n              name: file.name,\n              icon: (Strings.endsWith(file.name, '.ora') ? 'media' : 'image'),\n              path: file.path\n            })\n          })\n\n        set_fileItems(fileItems)\n\n        break\n      }\n\n      case FileSectionItemType.lastUsed: {\n\n        const environments = userSettingRef.current.getOpenFileEnvironments()\n\n        const fileItems: FileItem[] = []\n        let keyCount = 0\n\n        environments.lastUsedFilePaths.forEach(lufPath => {\n          fileItems.push({\n            key: keyCount++,\n            name: Platform.path.getFileName(lufPath),\n            icon: (Strings.endsWith(lufPath, '.ora') ? 'media' : 'image'),\n            path: lufPath\n          })\n        })\n\n        set_fileItems(fileItems)\n\n        break\n      }\n    }\n\n    set_currentFileSectionItem(sectionItem)\n    set_directoryPath(sectionItem.path)\n    set_directoryIcon(sectionItem.icon)\n  }\n\n  async function selectDirectoryToAdd() {\n\n    let defaultDirectoryPath = directoryPath\n    if (Strings.isNullOrEmpty(defaultDirectoryPath)) {\n\n      // TODO: 初期ディレクトリに妥当なものを選択する\n      defaultDirectoryPath = 'c:\\\\'\n    }\n\n    const path = await Platform.fileSystem.openFileDialog(defaultDirectoryPath)\n\n    if (!Strings.isNullOrEmpty(path)) {\n\n      console.log(path)\n\n      const newItem: LocalSettingFileSection = {\n        index: fileItems.length,\n        name: Platform.path.getFileName(path),\n        path: path\n      }\n\n      userSettingRef.current.addFileSection(newItem)\n\n      // TODO: 追加したディレクトリに対応するセクションを正しく選択するようにする（現在のディレクトリが選択されてしまうことがある）\n      prepareItems(dialogType, path)\n    }\n  }\n\n  function sectionItem_Clicked(sectionItem: FileSectionItem) {\n\n    switch (sectionItem.type) {\n\n      case FileSectionItemType.folder:\n      case FileSectionItemType.currentDir:\n      case FileSectionItemType.lastUsed:\n        changeCurrentFileSection(sectionItem).then()\n        break\n\n      case FileSectionItemType.add:\n        selectDirectoryToAdd().then()\n        break\n    }\n  }\n\n  function sectionItem_Delete_Clicked(e: React.MouseEvent, sectionItem: FileSectionItem) {\n\n    e.stopPropagation()\n\n    userSettingRef.current.removeFileSection(sectionItem.section)\n\n    prepareItems(dialogType, null)\n  }\n\n  function fileName_Changed(e) {\n\n    set_fileName(e.target.value)\n  }\n\n  function fileItem_Clicked(fileItem: FileItem) {\n\n    setCurrentFileItem(fileItem)\n  }\n\n  function ok_Clicked() {\n\n    switch (dialogType) {\n\n      case UI_Dialog_DocumentFiler_DialogType.open:\n\n        if (uiRef.fileItem_Selected && currentFileItem != null) {\n\n          uiRef.fileItem_Selected(currentFileItem.path)\n        }\n        break\n\n      case UI_Dialog_DocumentFiler_DialogType.saveAS:\n\n        if (uiRef.filePath_Fixed && !Strings.isNullOrEmpty(directoryPath) && !Strings.isNullOrEmpty(fileName)) {\n\n          uiRef.filePath_Fixed(directoryPath, fileName)\n        }\n        break\n    }\n\n    uiRef.close()\n  }\n\n  function dialog_Escaped() {\n\n    uiRef.close()\n  }\n\n  const isFileNameReadOnly = (dialogType != UI_Dialog_DocumentFiler_DialogType.saveAS)\n\n  return (\n    <UI_DialogScreenContainer\n      overlayContainerRef={overlayContainerRef}\n      className='dialog-document-filer-container'\n      isVisibleOnInit={false}\n      onEscape={dialog_Escaped}\n    >\n\n      <div className='sections-container'>\n        <div className='menu-commands'>\n          <button className='app-button-back' onClick={dialog_Escaped}>\n            <UI_Icon_MaterialIcon iconName='expandleft'/><span>キャンセル</span>\n          </button>\n        </div>\n        <div className='section-label'>ファイルの場所</div>\n        <div className='section-list'>\n        {\n          fileSectionItems.map(sectionItem => (\n            <div key={sectionItem.key} className={`section-item selectable-item ${sectionItem == currentFileSectionItem ? 'selected' : ''}`}>\n\n              <div className=\"section-item-inner selectable-item-inner\"\n                onMouseUp={() => { sectionItem_Clicked(sectionItem) } }\n              >\n                <div className='name'>\n                  <UI_Icon_MaterialIcon iconName={sectionItem.icon} />\n                  <span>{sectionItem.name}</span>\n                </div>\n                {\n                  sectionItem.type == FileSectionItemType.folder &&\n                  <div className='button'\n                    onClick={(e) => { sectionItem_Delete_Clicked(e, sectionItem) } }\n                  >\n                    <UI_Icon_MaterialIcon iconName='close' />\n                  </div>\n                }\n              </div>\n            </div>\n          ))\n        }\n        </div>\n      </div>\n\n      <div className='files-container'>\n        <div className='file-commands'>\n          <input type='text' className={`file-info ${isFileNameReadOnly ? 'readonly' : ''}`} readOnly={isFileNameReadOnly} value={fileName} onChange={fileName_Changed}/>\n          <button className={`app-button-primary${fileName == '' ? ' disabled' : ''}`} onClick={ () => ok_Clicked() }>{dialogType == UI_Dialog_DocumentFiler_DialogType.open ? '開く' : '保存'}</button>\n        </div>\n        <div className='section-info'>\n          <UI_Icon_MaterialIcon iconName={directoryIcon} />\n          <span>{directoryPath}</span>\n        </div>\n        <div className='file-list'>\n          <ul>\n          {\n            fileItems.map(fileItem => (\n              <li key={fileItem.key}\n                className={`selectable-item ${fileItem == currentFileItem ? 'selected' : ''}`}\n                onPointerDown={() => fileItem_Clicked(fileItem) }\n              >\n                <div className=\"selectable-item-inner\">\n                  <UI_Icon_MaterialIcon iconName={fileItem.icon} />\n                  <span className='name'>{fileItem.name}</span>\n                  <span className='path'>{fileItem.path}</span>\n                </div>\n              </li>\n            ))\n          }\n          </ul>\n        </div>\n      </div>\n    </UI_DialogScreenContainer>\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { UI_Icon_MaterialIcon } from '../ui-common-controls'\nimport { UI_SelectBox, UI_SelectBoxOption, UI_SelectBoxPopoverRef } from '../ui-popover'\nimport { ShortcutKeyLogic, ShortcutKeySetting, UserSettingFileLogic } from '../user-setting'\nimport { DialogScreenRef } from '../ui'\nimport { UI_DialogScreenContainer, UI_DialogScreenContainerRef } from './dialog-screen-conatiner'\n\nexport interface UI_Dialog_ShortcutKeysRef extends DialogScreenRef {\n\n  show?(userSetting: UserSettingFileLogic, shortcutKey: ShortcutKeyLogic): void\n  close?(): void\n\n  fileItem_Selected?: (filePath: string) => void\n  filePath_Fixed?: (filePath: string) => void\n\n  selectBoxPopoverRef?: UI_SelectBoxPopoverRef\n}\n\ninterface UI_Dialog_ShortcutKeysParam {\n\n  uiRef: UI_Dialog_ShortcutKeysRef\n}\n\ninterface ShortcutKeyItem {\n\n  index: int\n  keyOption: UI_SelectBoxOption\n  modifierOption: UI_SelectBoxOption\n  commandOption: UI_SelectBoxOption\n  setting: ShortcutKeySetting\n}\n\nexport function UI_Dialog_ShortcutKeys({ uiRef }: UI_Dialog_ShortcutKeysParam) {\n\n  const [keyOptions, set_keyOptions] = React.useState<UI_SelectBoxOption[]>([])\n  const [selected_keyOptions, set_selected_keyOptions] = React.useState<UI_SelectBoxOption[]>([])\n\n  const [modifierOptions, set_modifierOptions] = React.useState<UI_SelectBoxOption[]>([])\n  const [selected_modifierOptions, set_selected_modifierOptions] = React.useState<UI_SelectBoxOption[]>([])\n\n  const [commandOptions, set_commandOptions] = React.useState<UI_SelectBoxOption[]>([])\n  const [selected_commandOptions, set_selected_commandOptions] = React.useState<UI_SelectBoxOption[]>([])\n\n  const [shortcutKeysItems, set_shortcutKeysItems] = React.useState<ShortcutKeyItem[]>([])\n\n  const [selectedItem, set_selectedItem] = React.useState<ShortcutKeyItem | null>(null)\n\n  const overlayContainerRef = React.useMemo<UI_DialogScreenContainerRef>(() => ({}), [])\n\n  const userSettingRef = React.useRef<UserSettingFileLogic>(null)\n  const shortcutKeyRef = React.useRef<ShortcutKeyLogic>(null)\n\n  React.useEffect(() => {\n\n    uiRef.show = (userSetting, shortcutKey) => {\n\n      userSettingRef.current = userSetting\n      shortcutKeyRef.current = shortcutKey\n\n      const new_keyOptions: UI_SelectBoxOption[] = shortcutKey.shortcutKeys.map(key => (\n        { index: key.shortcutKeyID, label: key.keyName, data: key.shortcutKeyID }\n      ))\n\n      const new_modifierOptions: UI_SelectBoxOption[] = shortcutKey.modifierKeys.map(key => (\n        { index: key.modifierKeyID, label: key.keyName, data: key.modifierKeyID }\n      ))\n\n      const new_commandOptions: UI_SelectBoxOption[] = shortcutKey.shortcutCommands.map(com =>(\n        { index: com.commandID, label: `${com.category.categoryName} - ${com.commandName}`, data: com.commandID }\n      ))\n\n      set_keyOptions(new_keyOptions)\n      set_modifierOptions(new_modifierOptions)\n      set_commandOptions(new_commandOptions)\n\n      set_shortcutKeysItems(getShortcutKeyItems(shortcutKey.shortcutKeySettings, new_keyOptions, new_modifierOptions, new_commandOptions))\n\n      set_selected_keyOptions([])\n      set_selected_modifierOptions([new_modifierOptions[0]])\n      set_selected_commandOptions([])\n      set_selectedItem(null)\n\n      overlayContainerRef.show(uiRef)\n    }\n\n    uiRef.close = () => {\n\n      set_keyOptions([])\n      set_modifierOptions([])\n      set_commandOptions([])\n      set_shortcutKeysItems([])\n\n      overlayContainerRef.hide(uiRef)\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.close = null\n    }\n  }, [])\n\n  function dialog_Escaped() {\n\n    userSettingRef.current.saveSettings()\n\n    uiRef.close()\n  }\n\n  function key_Changed(option: UI_SelectBoxOption | null) {\n\n    set_selected_keyOptions([option])\n  }\n\n  function modifier_Changed(option: UI_SelectBoxOption | null) {\n\n    set_selected_modifierOptions([option])\n  }\n\n  function command_Changed(option: UI_SelectBoxOption | null) {\n\n    set_selected_commandOptions([option])\n  }\n\n  function item_Clicked(item: ShortcutKeyItem) {\n\n    {\n      const option = keyOptions.find(option => option.data == item.setting.shortcutKeyID)\n      if (option) {\n        set_selected_keyOptions([option])\n      }\n    }\n\n    {\n      const option = modifierOptions.find(option => option.data == item.setting.modifierKeyID)\n      if (option) {\n        set_selected_modifierOptions([option])\n      }\n    }\n\n    {\n      const option = commandOptions.find(option => option.data == item.setting.commandID)\n      if (option) {\n        set_selected_commandOptions([option])\n      }\n    }\n\n    set_selectedItem(item)\n  }\n\n  function fixItem_Clicked() {\n\n    if (selected_keyOptions.length == 0\n      || selected_modifierOptions.length == 0\n      || selected_commandOptions.length == 0\n    ) {\n      return\n    }\n\n    const key_option = selected_keyOptions[0]\n    const modifier_option =  selected_modifierOptions[0]\n    const command_option = selected_commandOptions[0]\n\n    const isNew = (selectedItem == null)\n\n    let new_item: ShortcutKeyItem\n\n    const same_item = shortcutKeysItems.find(item =>\n      (isNew || item != selectedItem)\n      && (item.keyOption == key_option\n        && item.modifierOption == modifier_option\n        && item.commandOption == command_option\n        )\n    )\n\n    // TODO: エラーメッセージを表示するとかする\n    if (same_item) {\n      return\n    }\n\n    if (!isNew) {\n\n      new_item = selectedItem\n    }\n    else {\n\n      const new_setting: ShortcutKeySetting = {\n        id: 0,\n        shortcutKeyID: 0,\n        modifierKeyID: 0,\n        commandID: 0\n      }\n\n      shortcutKeyRef.current.addShortcutKeySetting(new_setting)\n\n      new_item = {\n        index: 0,\n        keyOption: null,\n        modifierOption: null,\n        commandOption: null,\n        setting: new_setting\n      }\n\n      shortcutKeysItems.push(new_item)\n    }\n\n    new_item.keyOption = key_option,\n    new_item.modifierOption = modifier_option\n    new_item.commandOption = command_option\n\n    new_item.setting.shortcutKeyID = new_item.keyOption.data\n    new_item.setting.modifierKeyID = new_item.modifierOption.data\n    new_item.setting.commandID = new_item.commandOption.data\n\n    set_shortcutKeysItems(getShortcutKeyItems(\n      shortcutKeyRef.current.shortcutKeySettings, keyOptions, modifierOptions, commandOptions))\n\n    if (isNew) {\n\n      cancelItem_Clicked()\n    }\n  }\n\n  function addItem_Clicked() {\n\n    if (selectedItem != null) {\n      return\n    }\n\n    fixItem_Clicked()\n  }\n\n  function deleteItem_Clicked() {\n\n    if (selectedItem == null) {\n      return\n    }\n\n    set_shortcutKeysItems(shortcutKeysItems.filter(item => item != selectedItem))\n\n    shortcutKeyRef.current.removeShortcutKeySetting(selectedItem.setting)\n\n    cancelItem_Clicked()\n  }\n\n  function cancelItem_Clicked() {\n\n    set_selected_keyOptions([])\n    set_selected_modifierOptions([modifierOptions[0]])\n    set_selected_commandOptions([])\n    set_selectedItem(null)\n  }\n\n  function getShortcutKeyItems(\n    shortcutKeySettings: ShortcutKeySetting[],\n    keyOptions: UI_SelectBoxOption[],\n    modifierOptions: UI_SelectBoxOption[],\n    commandOptions: UI_SelectBoxOption[]\n  ): ShortcutKeyItem[] {\n\n    const items = shortcutKeySettings.map(setting => {\n\n      const keyOption = keyOptions.find(opt => opt.data == setting.shortcutKeyID)\n      const modifierOption = modifierOptions.find(opt => opt.data == setting.modifierKeyID)\n      const commandOption = commandOptions.find(opt => opt.data == setting.commandID)\n\n      return {\n        index: setting.id,\n        keyOption,\n        modifierOption,\n        commandOption,\n        setting: setting\n      }\n    })\n\n    let index = 0\n    items.forEach(item => item.index = index++)\n\n    items.sort((a, b) => {\n\n      if (a.commandOption.index != b.commandOption.index) {\n        return a.commandOption.index - b.commandOption.index\n      }\n      else if (a.keyOption.index != b.keyOption.index) {\n        return a.keyOption.index - b.keyOption.index\n      }\n      else {\n        return a.modifierOption.index - b.modifierOption.index\n      }\n    })\n\n    return items\n  }\n\n  return (\n    <UI_DialogScreenContainer\n      overlayContainerRef={overlayContainerRef}\n      className='dialog-shortcut-keys-container'\n      isVisibleOnInit={false}\n      onEscape={dialog_Escaped}\n    >\n      <div className='header'>\n        <button className='app-button-back' onPointerDown={dialog_Escaped}>\n          <UI_Icon_MaterialIcon iconName='expandleft'/><span>完了</span>\n        </button>\n      </div>\n      <div className='form'>\n        <div className='select'>\n          <UI_SelectBox title='コマンド' placeholder='コマンド'\n            selectBoxPopoverRef={uiRef.selectBoxPopoverRef}\n            options={commandOptions}\n            values={selected_commandOptions}\n            large={true}\n            onChange={(item) => command_Changed(item)}\n          />\n          <UI_SelectBox title='キー' placeholder='キー'\n            selectBoxPopoverRef={uiRef.selectBoxPopoverRef}\n            options={keyOptions}\n            values={selected_keyOptions}\n            large={true}\n            onChange={(item) => key_Changed(item)}\n          />\n          <UI_SelectBox title='修飾キー' placeholder='修飾キー'\n            selectBoxPopoverRef={uiRef.selectBoxPopoverRef}\n            options={modifierOptions}\n            values={selected_modifierOptions}\n            large={true}\n            onChange={(item) => modifier_Changed(item)}\n          />\n        </div>\n        <div className='commands'>\n          <button className={`app-button-cancel${selectedItem == null ? ' disabled' : ''}`}\n            onPointerDown={fixItem_Clicked}\n          >\n            <UI_Icon_MaterialIcon iconName='check'/><span>更新</span>\n          </button>\n          <button className={`app-button-cancel${selectedItem != null ? ' disabled' : ''}`}\n            onPointerDown={addItem_Clicked}\n          >\n            <UI_Icon_MaterialIcon iconName='add'/><span>追加</span>\n          </button>\n          <button className={`app-button-cancel${selectedItem == null ? ' disabled' : ''}`}\n            onPointerDown={deleteItem_Clicked}\n          >\n            <UI_Icon_MaterialIcon iconName='remove'/><span>削除</span>\n          </button>\n          <button className={`app-button-cancel`}\n            onPointerDown={cancelItem_Clicked}\n          >\n            <UI_Icon_MaterialIcon iconName='reset_form'/><span>クリア</span>\n          </button>\n        </div>\n      </div>\n      <div className='list'>\n        <div className='header-item'>\n          <div className='item-inner'>\n          <div className='item-column command-text'>コマンド</div>\n            <div className='item-column key-text'>キー</div>\n            <div className='item-column modifier-text'>修飾キー</div>\n          </div>\n        </div>\n        {\n          shortcutKeysItems.map(item => (\n            <div key={item.index}\n              className={`shortcutkey-item selectable-item${item == selectedItem ? ' selected' : ''}`}\n              onPointerDown={() => item_Clicked(item)}\n            >\n              <div className='selectable-item-inner'>\n              <div className='item-column command-text'>{item.commandOption.label}</div>\n                <div className='item-column key-text'>{item.keyOption.label}</div>\n                <div className='item-column modifier-text'>{item.modifierOption.label}</div>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </UI_DialogScreenContainer>\n  )\n}\n","import { Platform } from '../platform'\nimport { App_Document } from './app-document'\nimport { App_Drawing } from './app-drawing'\nimport { App_Tool } from './app-tool'\nimport { App_UserSetting } from './app-user-setting'\nimport { App_View } from './app-view'\nimport {\n  Command_CopyGeometry, Command_Layer_AddAutoFillLayerToCurrentPosition,\n  Command_Layer_AddGroupLayerToCurrentPosition, Command_Layer_AddImageFileReferenceLayerToCurrentPosition,\n  Command_Layer_AddPosingLayerToCurrentPosition, Command_Layer_AddVectorLayerReferenceLayerToCurrentPosition,\n  Command_Layer_AddVectorLayerToCurrentPosition, Command_Layer_CommandBase, Command_Layer_Delete,\n  Command_Layer_MoveDown, Command_Layer_MoveUp, Command_PasteGeometry, Command_SetReferenceImageToLayer,\n  Command_VectorLayer_SetProperty, Command_VectorLayer_DeleteSelected\n} from './commands'\nimport { DocumentContext, SubToolContext } from './context'\nimport { Layer, LayerTypeID, PaletteColor } from './document-data'\nimport { LayerLogic } from './document-logic'\nimport { OperationPanelButtonID } from './editor'\nimport { float, int, LayoutLogic, RectangleLayoutArea, Strings } from './common-logics'\nimport { CanvasWindow } from './render'\nimport { EditModeID, MainToolTabID, SubToolID, ToolPointerEvent } from './tool'\nimport { DeleteKeyframeTypeID, MainCommandButtonID, NewKeyframeTypeID, NewLayerTypeID, NumberInputControlID, PaletteSelectorWindowButtonID, RibbonUIControlID, SideBarContentID, SubToolViewItem } from './ui'\nimport { UI_CommandButtonItem } from './ui-common-controls'\nimport { UI_Dialog_DocumentFiler_DialogType } from './ui-dialog-screen'\nimport { ExportImageFileParam } from './ui-modal-window'\nimport { UI_SelectBoxOption } from './ui-popover'\nimport { UI_SideBarContentInfo } from './ui-sidebar'\nimport { LocalSetting, ShortcutCommandID, UIStateNames } from './user-setting'\nimport { ViewCoordinateLogic, ViewOperationMode } from './view'\nimport { PointerInputWindow } from './view/view-pointer_event'\nimport { PointerInputLogic } from './view/pointer-input'\n\nexport interface AppEvent_Main_Interface {\n\n  executeSubToolKeyDown(key: string, commandID: ShortcutCommandID): boolean\n  executeSubToolMouseDown(e: ToolPointerEvent)\n  executeSubToolMouseMove(e: ToolPointerEvent)\n  executeSubToolMouseUp(e: ToolPointerEvent)\n  executeUndo()\n  executeRedo()\n  executePostUpdateForCurrentLayer()\n  executePostUpdate()\n\n  resetDocument()\n  saveDocument()\n  saveAsDocument(directoryPath: string, fileName: string)\n  startReloadDocument(filepath: string)\n  startReloadDocumentFromFile(file: File, url: string)\n  isEventDisabled(): boolean\n  isWhileLoading(): boolean\n  onWindowBlur()\n  onWindowFocus()\n  setDefferedWindowResize()\n  executeLayerCommand(layerCommand: Command_Layer_CommandBase)\n  updateForLayerProperty()\n  setCurrentFrame(frame: int)\n  getLocalSetting(): LocalSetting\n  exportImageFile(param: ExportImageFileParam)\n  setUIStateVisible(uiStateName: string, visible: boolean)\n  setOperatorCursorLocationToMouse()\n}\n\nexport class AppKeyboardEvent {\n\n  e: KeyboardEvent = null\n  key: string = ''\n  shiftKey: boolean = false\n  ctrlKey: boolean = false\n  altKey: boolean = false\n\n  attach(e: KeyboardEvent): AppKeyboardEvent {\n\n    this.e = e\n    this.key = e.key\n    this.shiftKey = e.shiftKey\n    this.ctrlKey = e.ctrlKey\n    this.altKey = e.altKey\n\n    return this\n  }\n\n  set(e: { key: string, ctrlKey?: boolean, altKey?: boolean, shiftKey?: boolean }): AppKeyboardEvent {\n\n    this.key = e.key\n    this.shiftKey = (e.shiftKey === true)\n    this.ctrlKey = (e.ctrlKey === true)\n    this.altKey = (e.altKey === true)\n\n    return this\n  }\n\n  preventDefault() {\n\n    if (this.e != null) {\n\n      this.e.preventDefault()\n    }\n  }\n}\n\nexport class App_Event {\n\n  isEventSetDone = false\n\n  private appView: App_View = null\n  private appDrawing: App_Drawing = null\n  private appDocument: App_Document = null\n  private appUserSetting: App_UserSetting = null\n  private appTool: App_Tool = null\n  private appMain: AppEvent_Main_Interface = null\n\n  private documentContext: DocumentContext = null\n  private subtoolContext: SubToolContext = null\n\n  private lastHoverLayoutArea: RectangleLayoutArea = null\n\n  private tempVec3 = vec3.create()\n  private tempColor4 = vec4.create()\n\n  link(view: App_View, drawing: App_Drawing, appDocument: App_Document, apptool: App_Tool, appPreferences: App_UserSetting, main: AppEvent_Main_Interface) {\n\n    this.appView = view\n    this.appDrawing = drawing\n    this.appDocument = appDocument\n    this.appTool = apptool\n    this.appMain = main\n    this.appUserSetting = appPreferences\n  }\n\n  linkContexts(docContext: DocumentContext, toolContext: SubToolContext) {\n\n    this.documentContext = docContext\n    this.subtoolContext = toolContext\n  }\n\n  setEvents() {\n\n    this.isEventSetDone = true\n\n    this.setCanvasWindowMouseEvent(this.appView.editorWindow, this.appView.mainWindow\n      , this.mainWindow_mousedown\n      , this.mainWindow_mousemove\n      , this.mainWindow_mouseup\n      , this.mainWindow_mousewheel\n      , false\n    )\n\n    this.setCanvasWindowMouseEvent(this.appView.timeLineWindow.canvasWindow, this.appView.timeLineWindow.canvasWindow\n      , this.timeLineWindow_mousedown\n      , this.timeLineWindow_mousemove\n      , null\n      , this.timeLineWindow_mousewheel\n      , false\n    )\n\n    document.addEventListener('keydown', (e: KeyboardEvent) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      if (document.activeElement.nodeName == 'INPUT') {\n        return\n      }\n\n      this.document_keydown(new AppKeyboardEvent().attach(e))\n    })\n\n    document.addEventListener('keyup', (e: KeyboardEvent) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      if (document.activeElement.nodeName == 'INPUT') {\n        return\n      }\n\n      this.document_keyup(new AppKeyboardEvent().attach(e))\n    })\n\n    window.addEventListener('resize', () => {\n\n      this.htmlWindow_resize()\n    })\n\n    window.addEventListener('contextmenu', (e: Event) => {\n\n      return this.htmlWindow_contextmenu(e)\n    })\n\n    window.addEventListener('blur', () => {\n\n      // cancel all to flush invalid pointers\n      PointerInputLogic.cancelAllPointers(this.appView.editorWindow.pointerEvent)\n\n      this.appMain.onWindowBlur()\n    })\n\n    window.addEventListener('focus', () => {\n\n      this.appMain.onWindowFocus()\n    })\n\n    document.addEventListener('dragover', (e: DragEvent) => {\n\n      e.stopPropagation()\n      e.preventDefault()\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      let available = false\n      if (e.dataTransfer.types.length > 0) {\n\n        for (const type of e.dataTransfer.types) {\n\n          if (type == 'Files') {\n\n            available = true\n            break\n          }\n        }\n      }\n\n      if (available) {\n\n        e.dataTransfer.dropEffect = 'move'\n      }\n      else {\n\n        e.dataTransfer.dropEffect = 'none'\n      }\n    })\n\n    document.addEventListener('drop', (e: DragEvent) => {\n\n      e.stopPropagation()\n      e.preventDefault()\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.document_drop(e)\n    })\n\n    // React components\n\n    this.appView.headerWindow.uiHeaderWindowRef.commandButton_Click = (id) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.menuButton_Click(id)\n    }\n\n    this.appView.footerWindow.uiFooterOperationpanelRef.button_Click = (id) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.menuButton_Click(id)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.ribbonUITabsRef.item_Clicked = (tabID) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.ribbonUI_TabClick(tabID)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.button_Clicked = (id) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.ribbonUI_button_Click(id)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.subtoolButton_Clicked = (subtoolID) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.subtoolButton_Click(subtoolID)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.mainMenuButtonRef.commandButton_Clicked = (id) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.menuButton_Click(id)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.toggleButton_Clicked = (id, value) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.ribbonUI_toggleButton_Click(id, value)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.textInput_Changed = (id, value) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.ribbonUI_textInput_Change(id, value)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.numberInput_Changed = (id, value, isModal = false) => {\n\n      if (this.appMain.isEventDisabled() && !isModal) {\n        return\n      }\n\n      this.ribbonUI_NumberInput_Changed(id, value)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.checkBox_Changed = (id, checked, value) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.ribbonUI_checkBox_Change(id, checked, value)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.selectBox_Changed = (id, selected_Option) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.ribbonUI_selectBox_Change(id, selected_Option)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.documentFrame_Changed = (left, top, width, height) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.documentFrame_Change(left, top, width, height)\n    }\n\n    this.appView.ribbonUIWindow.uiRibbonUIRef.documentViewSettings_Changed = (new_defaultViewScale) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.documentViewSettings_change(new_defaultViewScale)\n    }\n\n    this.appView.subToolWindow.uiSubToolWindowRef.item_Click = (item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.subtoolWindow_Item_Click(item)\n    }\n\n    this.appView.subToolWindow.uiSubToolWindowRef.itemButton_Click = (item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.subtoolWindow_Button_Click(item)\n    }\n\n    const updateSideBarUIStateVisible = (cotentInfo: UI_SideBarContentInfo) => {\n\n      const setting = this.appView.sideBarContentStateSettings.find(st => st.contentID == cotentInfo.id)\n\n      this.appMain.setUIStateVisible(setting.uiStateName, cotentInfo.isOpened)\n    }\n\n    this.appView.right_SideBarContainerRef.onContentOpened = (cotentInfo) => {\n\n      if (cotentInfo.id == SideBarContentID.colorMixerWindow) {\n\n        this.documentContext.redrawColorMixerSample = true\n      }\n\n      updateSideBarUIStateVisible(cotentInfo)\n    }\n\n    this.appView.right_SideBarContainerRef.onContentClosed = (cotentInfo) => {\n\n      updateSideBarUIStateVisible(cotentInfo)\n    }\n\n    this.layerWindow_SetEvents()\n\n    this.appView.paletteSelectorWindow.uiRef.commandButton_Click = ((item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n        this.paletteSelectorWindow_CommandButton_Click(item)\n    })\n\n    this.appView.paletteSelectorWindow.uiRef.item_Click = ((paletteColorIndex, item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n        this.paletteSelectorWindow_Item_Click(paletteColorIndex, item)\n    })\n\n    this.setCanvasWindowMouseEvent(this.appView.colorMixerWindow.colorCanvas, this.appView.colorMixerWindow.colorCanvas\n      , this.colorMixerWindow_colorCanvas_mousedown\n      , this.colorMixerWindow_colorCanvas_mousedown\n      , null\n      , null\n      , false\n    )\n\n    this.appView.colorMixerWindow.uiRef.color_Change = (newColor: Vec4) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.colorMixerWindow_changeColor(newColor)\n    }\n\n    this.appView.timeLineWindow.uiTimeLineWindowRef.numberInput_Changed = (id, value) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.numberInput_Changed(id, value)\n    }\n\n    this.appView.timeLineWindow.uiTimeLineWindowRef.commandButton_Clicked = (item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.menuButton_Click(item.index)\n    }\n\n    this.appView.modalWindow.uiImageFileReferenceRef.onClose = (filePath, image) => {\n\n      this.modal_ImageFileReference_Closed(filePath, image)\n    }\n\n    this.appView.modalWindow.uiExportImageRef.onClose = (param) => {\n\n      this.modal_ExportImage_Closed(param)\n    }\n\n    this.appView.dialogScreen.uiDocumentFilerRef.fileItem_Selected = (filePath: string) => {\n\n      this.dialog_DocumentFiler_fileItemSelected(filePath)\n    }\n\n    this.appView.dialogScreen.uiDocumentFilerRef.filePath_Fixed = (directoryPath: string, fileName: string) => {\n\n      this.dialog_DocumentFiler_filePathFixed(directoryPath, fileName)\n    }\n\n    // Custmbox dialogs\n    // TODO: replace to React\n    document.addEventListener('custombox:content:open', () => {\n      this.appView.dialogScreen.onDialogWindowShown()\n    })\n\n    document.addEventListener('custombox:content:close', () => {\n      this.onModalWindowClosed()\n    })\n    this.setEvents_ModalCloseButton(this.appView.dom.ID.messageDialogModal_ok)\n    this.setEvents_ModalCloseButton(this.appView.dom.ID.openFileDialogModal_ok)\n    this.setEvents_ModalCloseButton(this.appView.dom.ID.openFileDialogModal_cancel)\n  }\n\n  setCanvasWindowMouseEvent(\n    eventCanvasWindow: CanvasWindow,\n    drawCanvasWindew: PointerInputWindow,\n    pointerDown: () => void,\n    pointerMove: () => void,\n    pointerUp: () => void,\n    wheel: () => void,\n    isModal: boolean\n  ) {\n\n    const eventElement = eventCanvasWindow.canvas\n\n    const getActivePointerText = () => {\n      return drawCanvasWindew.pointerEvent.activePointers.map(p => `${p.identifier.toString()}:${p.pressed}`).join(' ')\n    }\n\n    if (pointerDown != null) {\n\n      eventElement.addEventListener('pointerdown', (e: PointerEvent) => {\n\n        if (this.appMain.isEventDisabled() && !isModal) {\n          return\n        }\n\n        // if (drawCanvasWindew.pointerEvent.activePointers.length > 0) {\n        //   console.log('pointerdown active pointer', drawCanvasWindew.pointerEvent.activePointers[0].identifier)\n        // }\n\n        if (!PointerInputLogic.hasActivePointer(e.pointerId, drawCanvasWindew.pointerEvent)) {\n\n          // console.log('setPointerCapture', e.pointerId)\n          eventElement.setPointerCapture(e.pointerId)\n        }\n\n        if (this.appView.activeCanvasWindow != drawCanvasWindew) {\n\n          this.appView.activeCanvasWindow = drawCanvasWindew\n\n          // console.log('pointerdown active window changed')\n        }\n\n        PointerInputLogic.processSinglePointerEvent(\n          drawCanvasWindew,\n          e,\n          this.documentContext,\n          true,\n          false\n        )\n\n        PointerInputLogic.processMultiPointerEvent(\n          drawCanvasWindew,\n          e,\n          true,\n          false\n        )\n\n        pointerDown.call(this)\n\n        e.preventDefault()\n\n        // console.debug('pointerdown after', e.pointerId, 'actives:', getActivePointerText())\n      })\n    }\n\n    if (pointerMove != null) {\n\n      eventElement.addEventListener('pointermove', (e: PointerEvent) => {\n\n        if (this.appMain.isEventDisabled() && !isModal) {\n          return\n        }\n\n        // console.debug('pointermove', e.pointerId, 'actives:', getActivePointerText())\n\n        // skip if pointermove event occurred after pointer up in iOS Safari\n        const isMoved = PointerInputLogic.isPointerMovedOnDevice(drawCanvasWindew.pointerEvent, e)\n\n        if (isMoved) {\n\n          PointerInputLogic.processSinglePointerEvent(\n            drawCanvasWindew,\n            e,\n            this.documentContext,\n            false,\n            false\n          )\n\n          PointerInputLogic.processMultiPointerEvent(\n            drawCanvasWindew,\n            e,\n            false,\n            false\n          )\n\n          pointerMove.call(this)\n        }\n\n        e.preventDefault()\n\n        // console.debug('pointermove after', e.pointerId, 'actives:', getActivePointerText())\n      })\n    }\n\n    if (pointerUp != null) {\n\n      const callback = (e: PointerEvent) => {\n\n        if (this.appMain.isEventDisabled() && !isModal) {\n          return\n        }\n\n        // console.debug('pointerup before', e.pointerId, 'actives:', getActivePointerText())\n\n        if (PointerInputLogic.hasActivePointer(e.pointerId, drawCanvasWindew.pointerEvent)) { // preventing duplicate pointerup event in safari\n\n          PointerInputLogic.processSinglePointerEvent(\n            drawCanvasWindew,\n            e,\n            this.documentContext,\n            false,\n            true\n          )\n\n          PointerInputLogic.processMultiPointerEvent(\n            drawCanvasWindew,\n            e,\n            false,\n            true\n          )\n\n          pointerUp.call(this)\n        }\n\n        // console.debug('pointerup after', e.pointerId, 'actives:', getActivePointerText())\n\n        e.preventDefault()\n      }\n\n      eventElement.addEventListener('pointerup', (e) => {\n\n        // console.debug('pointerup', e.pointerId)\n\n        callback(e)\n      })\n\n      eventElement.addEventListener('pointerleave', (e) => {\n\n        callback(e)\n\n        PointerInputLogic.processMultiPointerLeaveEvent(\n          drawCanvasWindew,\n          e\n        )\n\n        // console.debug('pointerleave', e.pointerId, 'actives:', getActivePointerText())\n      })\n    }\n\n    eventElement.addEventListener('pointerenter', (e) => {\n\n      if (this.appView.activeCanvasWindow != drawCanvasWindew) {\n        this.appView.activeCanvasWindow = drawCanvasWindew\n        // console.log('pointerenter active window changed', e.pointerId)\n      }\n\n      // console.debug('pointerenter', e.pointerId, 'actives:', getActivePointerText())\n    })\n\n    if (wheel != null) {\n\n      eventCanvasWindow.canvas.addEventListener('wheel', (e: MouseEvent) => {\n\n        if (this.appMain.isEventDisabled() && !isModal) {\n          return\n        }\n\n        PointerInputLogic.getWheelInfo(drawCanvasWindew.pointerEvent, e)\n\n        wheel.call(this)\n\n        e.preventDefault()\n      })\n    }\n\n    eventElement.addEventListener('touchstart', (e: TouchEvent) => {\n\n      // Prevent page navigation by touch event\n      e.preventDefault()\n    })\n\n    eventElement.addEventListener('touchmove', (e: TouchEvent) => {\n\n      // Prevent page navigation by touch event\n      e.preventDefault()\n    })\n\n    eventElement.addEventListener('touchend', (e: TouchEvent) => {\n\n      // Prevent page navigation by touch event\n      e.preventDefault()\n    })\n  }\n\n  setEvents_ModalCloseButton(id: string) {\n\n    this.appView.dom.getElement<HTMLElement>(id).addEventListener('click', (e: Event) => {\n\n      this.appView.dialogScreen.currentModalDialogResult = id\n\n      this.appView.dialogScreen.closeDialogWindow()\n\n      e.preventDefault()\n    })\n  }\n\n  updateHierarchicalStatesRecursive() {\n\n    LayerLogic.updateHierarchicalStatesRecursive(this.documentContext.documentData.rootLayer)\n  }\n\n  document_keydown(e: AppKeyboardEvent) {\n\n    const docContext = this.documentContext\n    const subtoolContext = this.subtoolContext\n    const wnd = this.appView.mainWindow\n    const isModalToolRunning = this.appTool.isModalToolRunning()\n\n    e.preventDefault()\n\n    docContext.shiftKey = e.shiftKey\n    docContext.ctrlKey = e.ctrlKey\n    docContext.altKey = e.altKey\n\n    subtoolContext.updateContext()\n\n    const commandID = this.appUserSetting.shortcutKey.getCommandIDFromKeyInput(e.key, e.shiftKey, e.ctrlKey, e.altKey)\n\n    if (!isModalToolRunning) {\n\n      if (this.appTool.executeMainToolKeyDown(e.key, commandID)) {\n        return\n      }\n    }\n\n    if (isModalToolRunning && e.key == 'Escape') {\n\n      this.appTool.cancelModalTool()\n      return\n    }\n\n    if (this.appMain.executeSubToolKeyDown(e.key, ShortcutCommandID.none)) {\n      return\n    }\n\n    if (isModalToolRunning) {\n      return\n    }\n\n    if (this.appView.viewOperation.isViewOperationRunning()) {\n      e.preventDefault()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.view_pan\n      && !this.appView.viewOperation.isViewOperationRunning()\n      && this.appView.activeCanvasWindow == this.appView.mainWindow\n    ) {\n\n      this.appView.viewOperation.startViewOperation(ViewOperationMode.pan, wnd, null, subtoolContext)\n      return\n    }\n\n    if (commandID == ShortcutCommandID.edit_setPibot && subtoolContext.needsDrawOperatorCursor()) {\n\n      this.appMain.setOperatorCursorLocationToMouse()\n    }\n\n    if (subtoolContext.isEditMode()) {\n\n      if (this.appMain.executeSubToolKeyDown(e.key, commandID)) {\n        return\n      }\n    }\n\n    if (commandID == ShortcutCommandID.tool_toggleMainEdit) {\n\n      // Change mode\n      if (subtoolContext.isDrawMode()) {\n\n        this.appTool.changeCurrentMainToolForEditMode(EditModeID.editMode)\n      }\n      else {\n\n        this.appTool.changeCurrentMainToolForEditMode(EditModeID.drawMode)\n      }\n\n      subtoolContext.setRedrawWindowsForCurrentToolChanging()\n\n      return\n    }\n\n    if (commandID == ShortcutCommandID.edit_undo) {\n\n      this.inputKey_undo_down()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.document_new) {\n\n      this.menuButton_Click(MainCommandButtonID.newFile)\n\n      return\n    }\n\n    if (commandID == ShortcutCommandID.edit_redo) {\n\n      this.inputKey_redo_down()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.edit_copy) {\n\n      this.inputKey_copy_down()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.edit_paste) {\n\n      this.inputKey_paste_down()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.timeline_previousKeyframe || commandID == ShortcutCommandID.timeline_nextKeyframe) {\n\n      let addFrame = 1\n      if (commandID == ShortcutCommandID.timeline_previousKeyframe) {\n        addFrame = -addFrame\n      }\n\n      const frame = this.appView.viewKeyframe.findNextViewKeyframeFrame(this.documentContext, docContext.documentData.animationSettingData.currentTimeFrame, addFrame)\n\n      this.appMain.setCurrentFrame(frame)\n    }\n\n    if (commandID == ShortcutCommandID.edit_cut || commandID == ShortcutCommandID.edit_delete) {\n\n      const withCut = (commandID == ShortcutCommandID.edit_cut)\n\n      this.inputKey_delete_down(withCut)\n      return\n    }\n\n    if (commandID == ShortcutCommandID.view_reset || commandID == ShortcutCommandID.view_toggleHome) {\n\n      const reset = (commandID == ShortcutCommandID.view_reset)\n      this.appView.viewOperation.toggletHome(this.appView.mainWindow, reset, subtoolContext)\n\n      return\n    }\n\n    if (commandID == ShortcutCommandID.view_rotateCW || commandID == ShortcutCommandID.view_rotateCCW) {\n\n      const clockwise = (commandID == ShortcutCommandID.view_rotateCW)\n\n      this.appView.viewOperation.addViewRotation(10.0, clockwise, wnd, subtoolContext)\n      return\n    }\n\n    if (commandID == ShortcutCommandID.view_mirrorX) {\n\n      this.appView.mainWindow.mirrorX = !this.appView.mainWindow.mirrorX\n      subtoolContext.setRedrawMainWindowEditorWindow()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.view_zoomIn || commandID == ShortcutCommandID.view_zoomOut) {\n\n      let addScale = 1.0 + this.appDrawing.drawStyle.viewZoomAdjustingSpeedRate\n\n      if (commandID == ShortcutCommandID.view_zoomOut) {\n\n        addScale = 1 / addScale\n      }\n\n      this.appView.viewOperation.addViewScale(addScale, wnd, subtoolContext)\n\n      return\n    }\n\n    if (subtoolContext.isCtrlKeyPressing() && (e.key == 'ArrowLeft' || e.key == 'ArrowRight' || e.key == 'ArrowUp' || e.key == 'ArrowDown')) {\n\n      let x = 0.0\n      let y = 0.0\n      if (e.key == 'ArrowLeft') {\n        x = -10.0\n      }\n      else if (e.key == 'ArrowRight') {\n        x = 10.0\n      }\n      else if (e.key == 'ArrowUp') {\n        y = -10.0\n      }\n      else if (e.key == 'ArrowDown') {\n        y = 10.0\n      }\n\n      this.appView.mainWindow.calculateViewUnitMatrix(wnd.view2DMatrix)\n      mat4.invert(wnd.invView2DMatrix, wnd.view2DMatrix)\n      vec3.set(this.tempVec3, x, y, 0.0)\n      vec3.transformMat4(this.tempVec3, this.tempVec3, wnd.invView2DMatrix)\n\n      vec3.add(this.appView.mainWindow.viewLocation, this.appView.mainWindow.viewLocation, this.tempVec3)\n\n      const leftLimit = this.appView.mainWindow.width * (-0.5)\n      const rightLimit = this.appView.mainWindow.width * 1.5\n      const topLimit = this.appView.mainWindow.height * (-0.5)\n      const bottomLimit = this.appView.mainWindow.height * 1.5\n\n      if (this.appView.mainWindow.viewLocation[0] < leftLimit) {\n        this.appView.mainWindow.viewLocation[0] = leftLimit\n      }\n      if (this.appView.mainWindow.viewLocation[0] > rightLimit) {\n        this.appView.mainWindow.viewLocation[0] = rightLimit\n      }\n      if (this.appView.mainWindow.viewLocation[1] < topLimit) {\n        this.appView.mainWindow.viewLocation[1] = topLimit\n      }\n      if (this.appView.mainWindow.viewLocation[1] > bottomLimit) {\n        this.appView.mainWindow.viewLocation[1] = bottomLimit\n      }\n\n      subtoolContext.setRedrawMainWindowEditorWindow()\n\n      return\n    }\n\n    if (!subtoolContext.isCtrlKeyPressing() && (e.key == 'ArrowLeft' || e.key == 'ArrowRight')) {\n\n      let addFrame = 1\n      if (e.key == 'ArrowLeft') {\n        addFrame = -addFrame\n      }\n\n      this.appMain.setCurrentFrame(docContext.documentData.animationSettingData.currentTimeFrame + addFrame)\n    }\n\n    if (commandID == ShortcutCommandID.layer_previousLayer || commandID == ShortcutCommandID.layer_nextLayer) {\n\n      const moveDown = (commandID == ShortcutCommandID.layer_nextLayer)\n\n      this.appTool.selectNextOrPreviousLayer(moveDown)\n\n      this.appView.layerHighlight.startShowingCurrentLayer(this.documentContext, this.subtoolContext)\n      this.appView.layerWindow.scrollToLayer(this.documentContext.currentLayer, this.documentContext)\n\n      subtoolContext.setRedrawWindowsForCurrentLayerChanging()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.document_save) {\n\n      this.appMain.saveDocument()\n      return\n    }\n\n    if (commandID == ShortcutCommandID.layer_pickLayer) {\n\n      const pickX = this.appView.mainWindow.pointerEvent.offsetX\n      const pickY = this.appView.mainWindow.pointerEvent.offsetY\n      const pickedLayer = this.appDrawing.pickLayer(this.appView.mainWindow, docContext.documentData, pickX, pickY)\n\n      if (pickedLayer != null) {\n\n        this.appTool.selectLayer(pickedLayer)\n        this.appView.layerHighlight.startShowingCurrentLayer(this.documentContext, this.subtoolContext)\n        this.appView.layerWindow.scrollToLayer(pickedLayer, this.documentContext)\n      }\n      else {\n\n        subtoolContext.setRedrawMainWindowEditorWindow()\n      }\n\n      return\n    }\n\n    if (commandID == ShortcutCommandID.edit_fix) {\n\n      this.appMain.executeSubToolKeyDown(e.key, commandID)\n    }\n\n    if (e.key == '-') {\n\n      docContext.drawCPUOnly = !this.documentContext.drawCPUOnly\n      subtoolContext.setRedrawMainWindow()\n    }\n  }\n\n  document_keyup(e: AppKeyboardEvent) {\n\n    this.documentContext.shiftKey = e.shiftKey\n    this.documentContext.altKey = e.altKey\n    this.documentContext.ctrlKey = e.ctrlKey\n\n    const commandID = this.appUserSetting.shortcutKey.getCommandIDFromKeyInput(e.key, e.shiftKey, e.ctrlKey, e.altKey)\n\n    if (commandID == ShortcutCommandID.view_pan) {\n\n      if (this.appView.viewOperation.isViewOperationRunning()) {\n\n        this.appView.viewOperation.endViewOperation(this.appView.mainWindow, true, this.subtoolContext)\n      }\n    }\n  }\n\n  inputKey_undo_down() {\n\n    this.appMain.executeUndo()\n  }\n\n  inputKey_redo_down() {\n\n    this.appMain.executeRedo()\n  }\n\n  inputKey_copy_down() {\n\n    if (!this.subtoolContext.isEditMode()) {\n      return\n    }\n\n    if (this.documentContext.activeVectorGroup != null) {\n\n      const command = new Command_CopyGeometry()\n\n      if (command.prepareEditData(this.subtoolContext)) {\n\n        command.execute(this.subtoolContext)\n      }\n    }\n  }\n\n  inputKey_paste_down() {\n\n    const command = new Command_PasteGeometry()\n\n    command.prepareEditData(this.subtoolContext)\n      .then((isAvailable) => {\n\n        if (!isAvailable) {\n          return\n        }\n\n        this.appTool.tool_SelectAllPoints.executeClearSelectAll(this.subtoolContext)\n\n        this.documentContext.commandHistory.executeCommand(command, this.subtoolContext)\n\n        this.appMain.executePostUpdate()\n\n        this.subtoolContext.setRedrawCurrentLayer()\n\n        if (this.subtoolContext.isEditMode()) {\n          // TODO: 決め打ちではなくす\n          this.appTool.executeMainToolKeyDown('', ShortcutCommandID.tool_subTool3)\n        }\n      })\n  }\n\n  inputKey_delete_down(withCut: boolean) {\n\n    if (!this.subtoolContext.isEditMode()) {\n      return\n    }\n\n    if (this.subtoolContext.isCurrentLayerStrokeDrawableLayer() || this.subtoolContext.isCurrentLayerGroupLayer()) {\n\n      const command = new Command_VectorLayer_DeleteSelected()\n\n      if (command.prepare(this.subtoolContext)) {\n\n        if (withCut) {\n\n          const copyCommand = new Command_CopyGeometry()\n          if (copyCommand.prepareEditData(this.subtoolContext)) {\n\n            copyCommand.execute(this.subtoolContext)\n          }\n        }\n\n        this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n\n        this.appMain.executePostUpdate()\n\n        this.subtoolContext.setRedrawMainWindow()\n      }\n    }\n  }\n\n  inputKey_draw_down() {\n\n    if (!this.subtoolContext.isDrawMode()) {\n      return\n    }\n\n    this.appTool.changeCurrentSubToolForSubtoolID(SubToolID.drawLine)\n\n    this.appTool.updateFooterMessage()\n  }\n\n  inputKey_eraser_down() {\n\n    if (!this.subtoolContext.isDrawMode()) {\n      return\n    }\n\n    if (this.documentContext.subtoolID != SubToolID.deletePointBrush) {\n\n      this.appTool.changeCurrentSubToolForSubtoolID(SubToolID.deletePointBrush)\n    }\n    else {\n\n      this.appTool.changeCurrentSubToolForSubtoolID(SubToolID.drawLine)\n    }\n\n    this.appTool.updateFooterMessage()\n  }\n\n  inputKey_scratchLine_down() {\n\n    this.document_keydown(new AppKeyboardEvent().set({ key: '3' }))\n  }\n\n  document_drop(e: DragEvent) {\n\n    // Check file exists\n    if (e.dataTransfer.files.length == 0) {\n\n      console.error(new Error('ERROR-0000:no dropped files'))\n      return\n    }\n\n    // Get file path or name\n    const file = e.dataTransfer.files[0]\n\n    let filePath = ''\n    if ('path' in file) {\n      filePath = file['path'] as string\n    }\n    else {\n      filePath = file.name\n    }\n\n    if (Strings.isNullOrEmpty(filePath)) {\n\n      console.error(new Error('ERROR-0000:cannot get file path'))\n      return\n    }\n\n    // Start loading document\n    this.appMain.startReloadDocumentFromFile(\n      file,\n      Platform.path.getPlatformIndependentPath(filePath)\n    )\n  }\n\n  htmlWindow_resize() {\n\n    this.appMain.setDefferedWindowResize()\n  }\n\n  htmlWindow_contextmenu(e): boolean {\n\n    if (e.preventDefault) {\n      e.preventDefault()\n    }\n    else if (e.returnValue) {\n      e.returnValue = false\n    }\n\n    return false\n  }\n\n  mainWindow_mousedown() {\n\n    const wnd = this.appView.mainWindow\n    const toolPointerEvent = this.appView.tooPointerEvent.attach(wnd)\n\n    this.subtoolContext.updateContext()\n\n    // console.log('mainWindow_mousedown', e.offsetX, e.offsetY)\n\n    // Operation UI\n    if (!this.appTool.isModalToolRunning() && !this.appView.viewOperation.isViewOperationRunning()) {\n\n      this.mainWindow_mousedown_OperationUI(toolPointerEvent)\n    }\n\n    if (this.appView.viewOperation.isViewOperationRunning()) {\n\n      this.appView.viewOperation.pointerDownAdditional(wnd)\n      return\n    }\n\n    if (this.operationUI_IsHoverWhenNoModalTool(toolPointerEvent)) {\n      return\n    }\n\n    // Current tool\n    if (this.appTool.isModalToolRunning()) {\n\n      if (this.appTool.isCurrentSubToolAvailable()) {\n\n        this.appMain.executeSubToolMouseDown(toolPointerEvent)\n      }\n    }\n    else {\n\n      if (this.appTool.isCurrentSubToolAvailable()) {\n\n        this.appMain.executeSubToolMouseDown(toolPointerEvent)\n      }\n    }\n\n    // View operations\n    if (toolPointerEvent.isRightButtonPressing && this.subtoolContext.isShiftKeyPressing()) {\n\n      this.appMain.setOperatorCursorLocationToMouse()\n    }\n    else if (toolPointerEvent.isRightButtonPressing || toolPointerEvent.isCenterButtonPressing) {\n\n      this.appView.viewOperation.startViewOperation(ViewOperationMode.pan, wnd, null, this.subtoolContext)\n    }\n    else if (this.appView.viewOperation.isViewOperationRunning()) {\n\n      this.appView.viewOperation.endViewOperation(wnd, false, this.subtoolContext)\n    }\n  }\n\n  mainWindow_mousemove() {\n\n    const wnd = this.appView.mainWindow\n    const toolPointerEvent = this.appView.tooPointerEvent.attach(wnd)\n\n    this.subtoolContext.updateContext()\n\n    // View operations\n    if (this.appView.viewOperation.isViewOperationRunning()) {\n\n      this.appView.viewOperation.processViewOperation(wnd, toolPointerEvent, this.subtoolContext)\n      return\n    }\n\n    // Operation UI\n    if (!this.appTool.isModalToolRunning()) {\n\n      if (this.mainWindow_mousemove_OperationUI(toolPointerEvent)) {\n\n        this.subtoolContext.setRedrawEditorWindow()\n      }\n    }\n\n    if (this.operationUI_IsHoverWhenNoModalTool(toolPointerEvent)) {\n      return\n    }\n\n    // Current tool\n    if (this.appTool.isModalToolRunning()) {\n\n      // console.log(`mainWindow_mousemove (${e.location[0]} ${e.location[1]})`)\n\n      if (this.appTool.isCurrentSubToolAvailable()) {\n\n        this.appMain.executeSubToolMouseMove(toolPointerEvent)\n      }\n    }\n    else if (this.subtoolContext.isDrawMode()) {\n\n      this.appMain.executeSubToolMouseMove(toolPointerEvent)\n    }\n    else if (this.subtoolContext.isEditMode()) {\n\n      this.appMain.executeSubToolMouseMove(toolPointerEvent)\n    }\n  }\n\n  mainWindow_mouseup() {\n\n    const wnd = this.appView.mainWindow\n    const toolPointerEvent = this.appView.tooPointerEvent.attach(wnd)\n\n    this.subtoolContext.updateContext()\n\n    if (this.appView.viewOperation.isViewOperationRunning()) {\n\n      this.appView.viewOperation.endViewOperation(wnd, false, this.subtoolContext)\n      return\n    }\n\n    if (this.operationUI_IsHoverWhenNoModalTool(toolPointerEvent)) {\n      return\n    }\n\n    this.appMain.executeSubToolMouseUp(toolPointerEvent)\n  }\n\n  mainWindow_mousewheel() {\n\n    const wnd = this.appView.mainWindow\n    const toolPointerEvent = wnd.pointerEvent\n\n    // View operations\n    if (toolPointerEvent.wheelDelta != 0.0) {\n\n      let addScale = 1.0 + this.appDrawing.drawStyle.viewZoomAdjustingSpeedRate * 0.5\n\n      if (toolPointerEvent.wheelDelta < 0.0) {\n\n        addScale = 1.0 / addScale\n      }\n\n      this.appView.viewOperation.addViewScale(addScale, wnd, this.subtoolContext)\n    }\n\n    ViewCoordinateLogic.calculateTransfomredMouseParams(this.subtoolContext.mouseCursorLocation, toolPointerEvent, wnd)\n  }\n\n  mainWindow_mousedown_OperationUI(e: ToolPointerEvent): boolean {\n\n    const area = this.appView.operationPanel.hittestToButtons(e)\n\n    if (area != null) {\n\n      this.operationUI_Click(area, this.appView.mainWindow)\n\n      return true\n    }\n\n    if (this.operationUI_IsHover(e)) {\n\n      return true\n    }\n\n    return false\n  }\n\n  operationUI_IsHover(e: ToolPointerEvent): boolean {\n\n    return (this.appView.operationPanel.hittestToPanel(e) != null)\n  }\n\n  operationUI_IsHoverWhenNoModalTool(e: ToolPointerEvent): boolean {\n\n    return !this.appTool.isModalToolRunning() && (this.appView.operationPanel.hittestToPanel(e) != null)\n  }\n\n  mainWindow_mousemove_OperationUI(e: ToolPointerEvent): boolean {\n\n    // Operation UI\n    if (this.operationUI_IsHover(e)) {\n\n      this.appView.editorWindow.canvas.style.cursor = \"default\"\n    }\n    else {\n\n      this.appView.editorWindow.canvas.style.cursor = \"crosshair\"\n    }\n\n    const area = this.appView.operationPanel.hittestToButtons(e)\n\n    if (this.lastHoverLayoutArea != null) {\n\n      this.lastHoverLayoutArea.saveState()\n    }\n\n    if (area != null) {\n\n      area.saveState()\n    }\n\n    if (this.lastHoverLayoutArea != null) {\n\n      this.lastHoverLayoutArea.hover = false\n    }\n\n    if (area != null) {\n\n      area.hover = true\n      this.lastHoverLayoutArea = area\n    }\n\n    const isChanged = (LayoutLogic.isChanged(area) || LayoutLogic.isChanged(this.lastHoverLayoutArea))\n\n    return isChanged\n  }\n\n  menuButton_Click(id: MainCommandButtonID) {\n\n    switch (id) {\n\n      case MainCommandButtonID.openFile:\n        this.appView.dialogScreen.openDocumentFilerDialog(\n          UI_Dialog_DocumentFiler_DialogType.open,\n          '',\n          this.appUserSetting.settingFile\n        )\n        break\n\n      case MainCommandButtonID.newFile:\n        this.appMain.resetDocument()\n        break\n\n      case MainCommandButtonID.saveFile:\n        this.appMain.saveDocument()\n        break\n\n      case MainCommandButtonID.saveAs:\n        this.appView.dialogScreen.openDocumentFilerDialog(\n          UI_Dialog_DocumentFiler_DialogType.saveAS,\n          this.documentContext.documentFilePath,\n          this.appUserSetting.settingFile\n        )\n        break\n\n      case MainCommandButtonID.export:\n        this.appView.modalWindow.openExportImageModal(\n          this.documentContext,\n          this.appMain.getLocalSetting()\n        )\n        break\n\n      case MainCommandButtonID.shortcutKeys:\n        this.appView.dialogScreen.openShortcutKeysDialog(\n          this.appUserSetting.settingFile,\n          this.appUserSetting.shortcutKey\n        )\n        break\n\n      case MainCommandButtonID.copy:\n        this.inputKey_copy_down()\n        break\n\n      case MainCommandButtonID.paste:\n        this.inputKey_paste_down()\n        break\n\n      case MainCommandButtonID.cut:\n        this.inputKey_delete_down(true)\n        break\n\n      case MainCommandButtonID.undo:\n        this.inputKey_undo_down()\n        break\n\n      case MainCommandButtonID.redo:\n        this.inputKey_redo_down()\n        break\n\n      case MainCommandButtonID.touchOperationPanel:\n        this.appView.operationPanel.toggleVisibility()\n        this.appMain.setUIStateVisible(UIStateNames.touchOperationPanel, this.appView.operationPanel.isVisible())\n        this.subtoolContext.setRedrawEditorWindow()\n        break\n\n      case MainCommandButtonID.layerWindow:\n        this.appView.right_SideBarContainerRef.toggleVisibility(SideBarContentID.layerWindow)\n        break\n\n      case MainCommandButtonID.paletteWindow:\n        this.appView.right_SideBarContainerRef.toggleVisibility(SideBarContentID.paletteWindow)\n        break\n\n      case MainCommandButtonID.colorMixerWindow:\n        this.appView.right_SideBarContainerRef.toggleVisibility(SideBarContentID.colorMixerWindow)\n        break\n\n      case MainCommandButtonID.timeLineWindow:\n        this.appView.timeLineWindow.toggleVisibility()\n        this.appMain.setUIStateVisible(UIStateNames.timeLineWindow, this.appView.timeLineWindow.isVisible())\n        this.subtoolContext.setRedrawTimeLineWindow()\n        break\n\n      case MainCommandButtonID.timeLine_inertKeyframe:\n        this.appView.modalWindow.showRadioSelectionModal(\n          'キーフレームの挿入',\n          [\n            { index: NewKeyframeTypeID.insertToCurrentFrameAllLayer, label: 'コピーを挿入（全レイヤー）' },\n            { index: NewKeyframeTypeID.insertToCurrentFrameActiveLayer, label: 'コピーを挿入（アクティブなレイヤー）' },\n            { index: NewKeyframeTypeID.insertEmptyToAllLayer, label: '空のキーを挿入（全レイヤー）' },\n            { index: NewKeyframeTypeID.insertEmptyToActiveLayer, label: '空のキーを挿入（アクティブなレイヤー）' },\n          ],\n          NewKeyframeTypeID.insertToCurrentFrameAllLayer,\n          (option) => {\n            this.appDocument.executeNewKeyframe(option.index)\n          }\n        )\n        break\n\n      case MainCommandButtonID.timeLine_deleteKeyframe:\n        this.appView.modalWindow.showRadioSelectionModal(\n          'キーフレームの削除',\n          [\n            { index: DeleteKeyframeTypeID.deleteCurrentFrameAllLayer, label: 'キーを削除（全レイヤー）' },\n            { index: DeleteKeyframeTypeID.deleteCurrentFrameActiveLayer, label: 'キーを削除（アクティブなレイヤー）' },\n          ],\n          NewKeyframeTypeID.insertToCurrentFrameAllLayer,\n          (option) => {\n            this.appDocument.executeDeleteKeyframe(option.index)\n          }\n        )\n        break\n\n      case MainCommandButtonID.timeLine_moveKeyframe_minus:\n      case MainCommandButtonID.timeLine_moveKeyframe_plus:\n        this.appDocument.moveKeyframe(id == MainCommandButtonID.timeLine_moveKeyframe_plus)\n        break\n\n      case MainCommandButtonID.timeLine_changeMaxFrame_minus:\n      case MainCommandButtonID.timeLine_changeMaxFrame_plus:\n        this.appDocument.changeAnimationMaxFrame(id == MainCommandButtonID.timeLine_changeMaxFrame_plus)\n        break\n\n      case MainCommandButtonID.timeLine_changeLoopStartFrame_minus:\n      case MainCommandButtonID.timeLine_changeLoopStartFrame_plus:\n        this.appDocument.changeLoopStartFrame(id == MainCommandButtonID.timeLine_changeLoopStartFrame_plus)\n        break\n\n      case MainCommandButtonID.timeLine_changeLoopEndFrame_minus:\n      case MainCommandButtonID.timeLine_changeLoopEndFrame_plus:\n        this.appDocument.changeLoopEndFrame(id == MainCommandButtonID.timeLine_changeLoopEndFrame_plus)\n        break\n\n      case MainCommandButtonID.timeLine_changeOnionSkinBackwardLevel_minus:\n      case MainCommandButtonID.timeLine_changeOnionSkinBackwardLevel_plus:\n        this.appDocument.changeOnionSkinBackwardLevel(id == MainCommandButtonID.timeLine_changeOnionSkinBackwardLevel_plus)\n        break\n\n      case MainCommandButtonID.timeLine_changeOnionSkinForwardLevel_minus:\n      case MainCommandButtonID.timeLine_changeOnionSkinForwardLevel_plus:\n        this.appDocument.changeOnionSkinForwardLevel(id == MainCommandButtonID.timeLine_changeOnionSkinForwardLevel_plus)\n        break\n    }\n  }\n\n  numberInput_Changed(id: NumberInputControlID, value: int) {\n\n    switch(id) {\n\n      case NumberInputControlID.onionSkinMode:\n        this.appDocument.changeOnionSkinMode(value)\n        break\n    }\n  }\n\n  operationUI_Click(area: RectangleLayoutArea, wnd: PointerInputWindow) {\n\n    switch(area.index) {\n\n      case OperationPanelButtonID.view_move:\n        this.appView.viewOperation.startViewOperation(ViewOperationMode.pan, wnd, area, this.subtoolContext)\n        break\n\n      case OperationPanelButtonID.view_rotate:\n        this.appView.viewOperation.startViewOperation(ViewOperationMode.rotate, wnd, area, this.subtoolContext)\n        break\n\n      case OperationPanelButtonID.view_zoom:\n        this.appView.viewOperation.startViewOperation(ViewOperationMode.zoom, wnd, area, this.subtoolContext)\n        break\n\n      case OperationPanelButtonID.draw:\n        this.inputKey_draw_down()\n        break\n\n      case OperationPanelButtonID.eraser:\n        this.inputKey_eraser_down()\n        break\n\n      case OperationPanelButtonID.scratchLine:\n        this.inputKey_scratchLine_down()\n        break\n    }\n  }\n\n  onNewLayerDiaglogClosed(newLayerType: int) {\n\n    let layerCommand: Command_Layer_CommandBase = null\n\n    switch(newLayerType) {\n\n      case NewLayerTypeID.vectorLayer:{\n        const command = new Command_Layer_AddVectorLayerToCurrentPosition()\n        command.newLayer_layerType = LayerTypeID.vectorLayer\n        layerCommand = command\n        break\n      }\n\n      case NewLayerTypeID.surroundingFill: {\n        const command = new Command_Layer_AddVectorLayerToCurrentPosition()\n        command.newLayer_layerType = LayerTypeID.surroundingFillLayer\n        layerCommand = command\n        break\n      }\n\n      case NewLayerTypeID.pointBrushFill:{\n        const command = new Command_Layer_AddVectorLayerToCurrentPosition()\n        command.newLayer_layerType = LayerTypeID.pointBrushFillLayer\n        layerCommand = command\n        break\n      }\n\n      case NewLayerTypeID.autoFill:\n        layerCommand = new Command_Layer_AddAutoFillLayerToCurrentPosition()\n        break\n\n      case NewLayerTypeID.vectorLayerReferenceLayer:\n        layerCommand = new Command_Layer_AddVectorLayerReferenceLayerToCurrentPosition()\n        break\n\n      case NewLayerTypeID.groupLayer:\n        layerCommand = new Command_Layer_AddGroupLayerToCurrentPosition()\n        break\n\n      case NewLayerTypeID.posingLayer:\n        layerCommand = new Command_Layer_AddPosingLayerToCurrentPosition()\n        break\n\n      case NewLayerTypeID.imageFileReferenceLayer:\n        layerCommand = new Command_Layer_AddImageFileReferenceLayerToCurrentPosition()\n        break\n    }\n\n\n    if (layerCommand == null) {\n      return\n    }\n\n    this.appMain.executeLayerCommand(layerCommand)\n  }\n\n  layerWindow_SetEvents() {\n\n    this.appView.layerWindow.uiRef.commandButton_Clicked = ((item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.layerWindow_CommandButton_Clicked(item)\n    })\n\n    this.appView.layerWindow.uiRef.item_Clicked = (item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      const selectedLayer = item.layer\n\n      if (this.subtoolContext.isShiftKeyPressing()) {\n\n        this.appTool.selectLayer(selectedLayer, true, false)\n        this.appTool.activateCurrentTool()\n        this.appView.layerHighlight.startShowingLayerItem(item, this.subtoolContext)\n      }\n      else {\n\n        this.appTool.selectLayer(selectedLayer)\n        this.appView.layerHighlight.startShowingCurrentLayer(this.documentContext, this.subtoolContext)\n      }\n    }\n\n    this.appView.layerWindow.uiRef.visibility_Clicked = (item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      this.appTool.setLayerVisiblity(item.layer, !item.layer.isVisible)\n\n      this.updateHierarchicalStatesRecursive()\n\n      this.appTool.activateCurrentTool()\n\n      this.subtoolContext.setRedrawWindowsForLayerPropertyChanging()\n      this.subtoolContext.setRedrawLayerWindow()\n    }\n\n    this.appView.layerWindow.uiRef.expander_Clicked = (item) => {\n\n      if (this.appMain.isEventDisabled()) {\n        return\n      }\n\n      item.layer.isListExpanded = !item.layer.isListExpanded\n\n      this.updateHierarchicalStatesRecursive()\n\n      this.subtoolContext.updateLayerStructure()\n    }\n  }\n\n  layerWindow_CommandButton_Clicked(hitedButton: UI_CommandButtonItem) {\n\n    if (hitedButton == null) {\n      return\n    }\n\n    let layerCommand: Command_Layer_CommandBase = null\n\n    switch(hitedButton.index) {\n\n      case MainCommandButtonID.layer_addLayer:\n        this.appView.modalWindow.showRadioSelectionModal(\n          '新規レイヤー作成',\n          [\n            { index: NewLayerTypeID.vectorLayer, label: '線画' },\n            { index: NewLayerTypeID.pointBrushFill, label: 'ブラシ塗り' },\n            { index: NewLayerTypeID.surroundingFill, label: '囲み塗り' },\n            { index: NewLayerTypeID.autoFill, label: '自動囲み塗り' },\n            { index: NewLayerTypeID.groupLayer, label: 'グループ' },\n            { index: NewLayerTypeID.imageFileReferenceLayer, label: '画像ファイル' },\n            { index: NewLayerTypeID.posingLayer, label: '３Ｄポーズ' },\n          ],\n          NewLayerTypeID.vectorLayer,\n          (option) => {\n            this.onNewLayerDiaglogClosed(option.index)\n          }\n        )\n        break\n\n      case MainCommandButtonID.layer_deleteLayer:\n        layerCommand = new Command_Layer_Delete()\n        break\n\n      case MainCommandButtonID.layer_moveUp:\n        layerCommand = new Command_Layer_MoveUp()\n        break\n\n      case MainCommandButtonID.layer_moveDown:\n        layerCommand = new Command_Layer_MoveDown()\n        break\n    }\n\n    if (layerCommand == null) {\n      return\n    }\n\n    // Execute command\n    this.appMain.executeLayerCommand(layerCommand)\n  }\n\n  ribbonUI_TabClick(tabID: MainToolTabID) {\n\n    this.appTool.changeCurrentMainToolTab(tabID)\n  }\n\n  subtoolWindow_Item_Click(item: SubToolViewItem) {\n\n    this.subtoolButton_Click(item.subToolID)\n  }\n\n  subtoolWindow_Button_Click(item: SubToolViewItem) {\n\n    const tool = item.tool\n\n    if (!tool.isAvailable(this.subtoolContext)) {\n      return\n    }\n\n    const buttonIndex = 0\n\n    if (tool.optionButton_Click(buttonIndex, this.subtoolContext)) {\n\n      item.buttonStateID = tool.getOptionButtonState(buttonIndex, this.subtoolContext)\n\n      this.subtoolContext.setRedrawMainWindowEditorWindow()\n      this.subtoolContext.setRedrawRibbonUI()\n    }\n  }\n\n  subtoolButton_Click(subToolID: SubToolID) {\n\n    this.appTool.changeCurrentSubToolForSubtoolID(subToolID)\n  }\n\n  ribbonUI_button_Click(id: RibbonUIControlID) {\n\n    this.appTool.executeMainToolButtonClick(id)\n  }\n\n  ribbonUI_toggleButton_Click(id: RibbonUIControlID, value: number) {\n\n    switch(id) {\n\n      case RibbonUIControlID.edit_operationUnit:\n        this.appTool.setOperationUnit(value)\n        this.appTool.activateCurrentTool()\n        this.subtoolContext.setRedrawCurrentLayer()\n        this.subtoolContext.setRedrawEditorWindow()\n        break\n\n      case RibbonUIControlID.edit_operationOrigin:\n        this.appTool.setOperationOriginType(value)\n        this.appTool.activateCurrentTool()\n        this.subtoolContext.setRedrawCurrentLayer()\n        this.subtoolContext.setRedrawEditorWindow()\n        break\n\n      case RibbonUIControlID.vectorLayer_drawLineType:\n        // TODO: undoの実装\n        if (this.documentContext.currentVectorLayer) {\n\n          this.documentContext.currentVectorLayer.drawLineType = value\n\n          const color = this.documentContext.getCurrentLayerLineColor()\n          vec4.copy(this.documentContext.currentVectorLayer.layerColor, color)\n\n          this.appMain.updateForLayerProperty()\n\n          this.subtoolContext.setRedrawWindowsForLayerPropertyChanging()\n        }\n        break\n\n      case RibbonUIControlID.vectorLayer_fillAreaType:\n        // TODO: undoの実装\n        if (this.documentContext.currentVectorLayer) {\n\n          this.documentContext.currentVectorLayer.fillAreaType = value\n\n          const color = this.documentContext.getCurrentLayerFillColor()\n          vec4.copy(this.documentContext.currentVectorLayer.fillColor, color)\n\n          this.appMain.updateForLayerProperty()\n\n          this.subtoolContext.setRedrawWindowsForLayerPropertyChanging()\n        }\n        break\n\n      case RibbonUIControlID.vectorLayer_eyesSymmetryInputSide:\n\n        if (this.subtoolContext.currentVectorLayer) {\n\n          this.subtoolContext.currentVectorLayer.eyesSymmetryInputSide = value\n\n          const command = new Command_VectorLayer_SetProperty()\n          command.layer = this.subtoolContext.currentVectorLayer\n          command.new_eyesSymmetryInputSide = value\n          if (command.isAvailable(this.subtoolContext)) {\n\n            this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n          }\n        }\n\n        break\n    }\n  }\n\n  ribbonUI_textInput_Change(id: RibbonUIControlID, value: string) {\n\n    if (typeof(value) != 'string') {\n      return\n    }\n\n    switch(id) {\n\n      case RibbonUIControlID.layer_name:\n        this.documentContext.currentLayer.name = value\n        this.subtoolContext.setRedrawLayerWindow()\n        break\n    }\n  }\n\n  ribbonUI_NumberInput_Changed(id: RibbonUIControlID, value: float) {\n\n    // console.log(id, value)\n    if (!Number.isFinite(value)) {\n      return\n    }\n\n    switch(id) {\n\n      case RibbonUIControlID.brushBaseSize:\n        if (this.documentContext.currentBrushParameter) {\n          this.documentContext.currentBrushParameter.baseSize = value\n        }\n        this.appView.ribbonUIWindow.updateMainToolRibbonUI(this.documentContext)\n        break\n\n      case RibbonUIControlID.brushMinSize:\n        if (this.documentContext.currentBrushParameter) {\n          this.documentContext.currentBrushParameter.minSize = value\n        }\n        this.appView.ribbonUIWindow.updateMainToolRibbonUI(this.documentContext)\n        break\n\n      case RibbonUIControlID.pointerBaseSize:\n        if (this.documentContext.currentPointerParameter) {\n          this.documentContext.currentPointerParameter.baseSize = value\n        }\n        this.appView.ribbonUIWindow.updateMainToolRibbonUI(this.documentContext)\n        break\n\n      case RibbonUIControlID.document_lineWidthBiasRate:\n        this.documentContext.documentData.lineWidthBiasRate = value\n        this.subtoolContext.setRedrawMainWindowEditorWindow()\n        break\n\n      case RibbonUIControlID.vectorLayer_lineWidthBiasRate:\n        if (this.documentContext.currentVectorLayer) {\n          this.documentContext.currentVectorLayer.lineWidthBiasRate = value\n          this.subtoolContext.setRedrawMainWindow()\n        }\n        break\n    }\n  }\n\n  ribbonUI_checkBox_Change(id: RibbonUIControlID, checked: boolean, _value: boolean | number | null) {\n\n    switch (id) {\n\n      case RibbonUIControlID.document_hideOuterArea:\n        // TODO: undoの実装\n        this.subtoolContext.documentData.documentFrame_HideOuterArea = checked\n\n        this.subtoolContext.setRedrawWindowsForLayerPropertyChanging()\n        break\n\n      case RibbonUIControlID.layer_isRenderTarget:\n        // TODO: undoの実装\n        if (this.subtoolContext.currentLayer) {\n\n          this.subtoolContext.currentLayer.isRenderTarget = checked\n\n          this.appMain.updateForLayerProperty()\n\n          this.subtoolContext.setRedrawWindowsForLayerPropertyChanging()\n        }\n        break\n\n      case RibbonUIControlID.layer_isMaskedByBelowLayer:\n        // TODO: undoの実装\n        if (this.subtoolContext.currentLayer) {\n\n          this.subtoolContext.currentLayer.isMaskedByBelowLayer = checked\n\n          this.appMain.updateForLayerProperty()\n\n          this.subtoolContext.setRedrawWindowsForLayerPropertyChanging()\n        }\n        break\n\n      case RibbonUIControlID.vectorLayer_enableEyesSymmetry:\n\n        if (this.subtoolContext.currentVectorLayer) {\n\n          const command = new Command_VectorLayer_SetProperty()\n          command.layer = this.subtoolContext.currentVectorLayer\n          command.new_enableEyesSymmetry = checked\n          if (command.isAvailable(this.subtoolContext)) {\n\n            // console.log('ribbonUI_CheckBox_Change', id, checked, value)\n\n            this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n          }\n        }\n        break\n    }\n  }\n\n  ribbonUI_selectBox_Change(id: RibbonUIControlID, selected_Option: UI_SelectBoxOption) {\n\n    switch (id) {\n\n      case RibbonUIControlID.vectorLayer_posingLayer:\n        if (this.subtoolContext.currentVectorLayer && selected_Option) {\n\n          // console.log('ribbonUI_SelectBox_Change', id, selected_Option, this.toolContext.currentVectorLayer)\n\n          const command = new Command_VectorLayer_SetProperty()\n          command.layer = this.subtoolContext.currentVectorLayer\n          command.new_posingLayer = selected_Option.data\n          if (command.isAvailable(this.subtoolContext)) {\n\n            this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n          }\n        }\n        break\n    }\n  }\n\n  documentFrame_Change(left: float, top: float, width: float, height: float) {\n\n    this.documentContext.documentData.documentFrame[0] = left\n    this.documentContext.documentData.documentFrame[1] = top\n    this.documentContext.documentData.documentFrame[2] = left + width - 1\n    this.documentContext.documentData.documentFrame[3] = top + height - 1\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n\n    this.appTool.activateCurrentTool()\n  }\n\n  documentViewSettings_change(defaultViewScale: float) {\n\n    this.documentContext.documentData.defaultViewScale = defaultViewScale\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n  }\n\n  paletteSelectorWindow_CommandButton_Click(item: UI_CommandButtonItem) {\n\n    this.appView.paletteSelectorWindow.setCurrentTarget(item.index)\n\n    this.subtoolContext.setRedrawPalleteSelectorWindow()\n    this.subtoolContext.setRedrawColorMixerWindow()\n  }\n\n  paletteSelectorWindow_Item_Click(paletteColorIndex: int, color: PaletteColor) {\n\n    const wnd = this.appView.paletteSelectorWindow\n    const ctx = this.documentContext\n\n    let needsUpdateForLayer = false\n    let needsUpdateForPallete = false\n\n    switch (wnd.currentTargetID) {\n\n      case PaletteSelectorWindowButtonID.lineColor:\n        if (ctx.currentStrokeDrawable != null) {\n\n          ctx.currentStrokeDrawable.line_PaletteColorIndex = paletteColorIndex\n          vec4.copy(ctx.currentStrokeDrawable.layerColor, color.color)\n          needsUpdateForLayer = true\n        }\n        break\n\n      case PaletteSelectorWindowButtonID.fillColor:\n        if (ctx.currentFillDrawable) {\n\n          ctx.currentFillDrawable.fill_PaletteColorIndex = paletteColorIndex\n          vec4.copy(ctx.currentFillDrawable.fillColor, color.color)\n          needsUpdateForLayer = true\n        }\n        break\n\n      case PaletteSelectorWindowButtonID.adjustmentMode:\n        wnd.setCurrentPaletteIndex(paletteColorIndex)\n        needsUpdateForPallete = true\n        break\n    }\n\n    if (needsUpdateForLayer) {\n\n      this.appMain.executePostUpdateForCurrentLayer()\n    }\n\n    if (needsUpdateForPallete) {\n\n      this.subtoolContext.setRedrawPaletteWindow()\n    }\n  }\n\n  colorMixerWindow_colorCanvas_mousedown() {\n\n    const wnd = this.appView.colorMixerWindow.colorCanvas\n    const e = wnd.pointerEvent\n\n    if (!e.isLeftButtonPressing()) {\n      return\n    }\n\n    this.appDrawing.canvasRender.setContext(wnd)\n    this.appDrawing.canvasRender.pickColor(this.tempColor4, e.offsetX, e.offsetY)\n\n    this.updateCurrentLayerColor(this.tempColor4, true)\n  }\n\n  colorMixerWindow_changeColor(newColor: Vec4) {\n\n    this.updateCurrentLayerColor(newColor, false)\n  }\n\n  updateCurrentLayerColor(newColor: Vec4, keepAlpha: boolean) {\n\n    this.appView.paletteSelectorWindow.updateCurrentLayerColor(newColor, keepAlpha, this.documentContext)\n\n    this.appMain.executePostUpdateForCurrentLayer()\n  }\n\n  timeLineWindow_mousedown() {\n\n    const e = this.appView.timeLineWindow.canvasWindow.pointerEvent\n\n    const left = this.appView.timeLineWindow.getTimeLineLeft()\n\n    if (e.offsetX < left) {\n\n      this.timeLineWindow_OnPlayPauseButton()\n    }\n    else {\n\n      this.timeLineWindow_ProcessFrameInput()\n    }\n  }\n\n  timeLineWindow_OnPlayPauseButton() {\n\n    const aniSetting = this.documentContext.documentData.animationSettingData\n\n    if (this.documentContext.animationPlaying) {\n\n      this.documentContext.animationPlaying = false\n\n      this.subtoolContext.setRedrawTimeLineWindow()\n    }\n    else {\n\n      this.documentContext.animationPlaying = true\n      this.documentContext.animationPlayingFPS = aniSetting.animationFrameParSecond\n    }\n  }\n\n  timeLineWindow_ProcessFrameInput() {\n\n    const wnd = this.appView.timeLineWindow.canvasWindow\n    const e = wnd.pointerEvent\n    const aniSetting = this.documentContext.documentData.animationSettingData\n\n    const clickedFrame = this.appView.timeLineWindow.getFrameByLocation(e.offsetX, aniSetting)\n\n    if (clickedFrame != -1 && clickedFrame != aniSetting.currentTimeFrame) {\n\n      this.appMain.setCurrentFrame(clickedFrame)\n    }\n  }\n\n  timeLineWindow_mousemove() {\n\n    const e = this.appView.timeLineWindow.canvasWindow.pointerEvent\n\n    if (e.isLeftButtonPressing()) {\n\n      this.timeLineWindow_ProcessFrameInput()\n    }\n  }\n\n  timeLineWindow_mousewheel() {\n\n    const e = this.appView.timeLineWindow.canvasWindow.pointerEvent\n    const aniSetting = this.documentContext.documentData.animationSettingData\n\n    if (this.subtoolContext.isCtrlKeyPressing()) {\n\n      const addScale = 0.2\n\n      if (e.wheelDelta > 0) {\n\n        aniSetting.timeLineWindowScale += addScale\n      }\n      else {\n\n        aniSetting.timeLineWindowScale -= addScale\n      }\n\n      if (aniSetting.timeLineWindowScale < 1.0) {\n\n        aniSetting.timeLineWindowScale = 1.0\n      }\n\n      if (aniSetting.timeLineWindowScale > aniSetting.timeLineWindowScaleMax) {\n\n        aniSetting.timeLineWindowScale = aniSetting.timeLineWindowScaleMax\n      }\n\n      this.subtoolContext.setRedrawTimeLineWindow()\n    }\n  }\n\n  dialog_Closed() {\n  }\n\n  dialog_DocumentFiler_fileItemSelected(filePath: string) {\n\n    this.appMain.startReloadDocument(filePath)\n  }\n\n  dialog_DocumentFiler_filePathFixed(directoryPath: string, fileName: string) {\n\n    this.appMain.saveAsDocument(directoryPath, fileName)\n  }\n\n  modal_ImageFileReference_Closed(filePath: string, image: HTMLImageElement) {\n\n    const command = new Command_SetReferenceImageToLayer()\n    command.targetLayer = this.subtoolContext.currentImageFileReferenceLayer\n    command.image = image\n    command.filePath = filePath\n\n    this.subtoolContext.commandHistory.executeCommand(command, this.subtoolContext)\n  }\n\n  modal_ExportImage_Closed(param: ExportImageFileParam) {\n\n    this.appMain.exportImageFile(param)\n  }\n\n  onModalWindowClosed() {\n\n    // TODO: ダイアログの刷新後この関数は不要になるため削除する\n\n    this.appView.dialogScreen.onDialogWindowClosed()\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawWindowsForCurrentLayerChanging()\n  }\n}\n","import { App_Drawing } from './app-drawing'\nimport { Command_VectorLayer_DeleteEmpties } from './commands'\nimport { RectangleArea } from './common-logics'\nimport { DocumentContext, SubToolContext } from './context'\nimport { LazyUpdateState } from './deffered-process'\nimport {\n  AutoFillLayer, Layer, PointBrushFillLayer, VectorLayer, VectorLayerGeometry, VectorStroke,\n  VectorStrokeGroup, VectorStrokeModifyFlagID\n} from './document-data'\nimport { DrawPathBufferingLogic, DrawPathContext, DrawPathModeID, DrawPathOperationTypeID } from './document-drawing'\nimport { AutoFillLogic, EyesSymmetryLogic, VectorStrokeLogic } from './document-logic'\nimport { Posing3DLogic, Posing3DView } from './posing3d'\nimport { CanvasWindow } from './render'\nimport { ViewKeyframe, ViewKeyframeLayer } from './view'\n\nexport class App_DefferedProcess {\n\n  calculation_LazyUpdateState = new LazyUpdateState()\n  drawing_LazyUpdateState = new LazyUpdateState()\n\n  private appDrawing: App_Drawing = null\n  private drawPathBuffering: DrawPathBufferingLogic = null\n  private posing3DLogic: Posing3DLogic = null\n  private posing3DView: Posing3DView = null\n\n  private isPostUpdateNeeded = false\n\n  private lookDirection = vec3.fromValues(0.0, 0.0, 0.0)\n  private start_Location = vec3.fromValues(0.0, 0.0, 0.0)\n  private mouseCursorRangeRate = 1.0\n\n  private docContext: DocumentContext = null\n  private subToolContext: SubToolContext = null\n\n  link(appDrawing: App_Drawing, drawPathBuffering: DrawPathBufferingLogic, posing3DLogic: Posing3DLogic, posing3DView: Posing3DView) {\n\n    this.appDrawing = appDrawing\n    this.drawPathBuffering = drawPathBuffering\n    this.posing3DLogic = posing3DLogic\n    this.posing3DView = posing3DView\n  }\n\n  linkContexts(docContext: DocumentContext, toolContext: SubToolContext) {\n\n    this.docContext = docContext\n    this.subToolContext = toolContext\n  }\n\n  setPostUpdateNeeded() {\n\n    this.isPostUpdateNeeded = true\n  }\n\n  executePostUpdate(drawPathContext: DrawPathContext, viewKeyframe: ViewKeyframe, isUndo: boolean, subToolContext: SubToolContext): boolean {\n\n    if (!this.isPostUpdateNeeded) {\n      return false\n    }\n\n    this.isPostUpdateNeeded = false\n\n    // Cancel active stroke\n    if (this.docContext.activeVectorLine != null\n      && this.docContext.activeVectorLine.runtime.modifyFlag == VectorStrokeModifyFlagID.delete\n    ) {\n\n      this.subToolContext.unsetAcrtiveVectorStrokeAndGroup()\n      this.subToolContext.setRedrawEditorWindow()\n    }\n\n    // Update all layers\n    for (const viewKeyframeLayer of viewKeyframe.layers) {\n\n      if (VectorLayer.isVectorLayerWithOwnData(viewKeyframeLayer.layer)) {\n\n        this.updateVectorLayer(viewKeyframeLayer, drawPathContext, isUndo, subToolContext)\n      }\n    }\n\n    return true\n  }\n\n  private updateVectorLayer(\n    viewKeyframeLayer: ViewKeyframeLayer,\n    drawPathContext: DrawPathContext,\n    isUndo: boolean,\n    subToolContext: SubToolContext\n  ) {\n\n    const isLayerUpdated = viewKeyframeLayer.layer.runtime.needsPostUpdate\n    viewKeyframeLayer.layer.runtime.needsPostUpdate = false\n\n    const geometry = viewKeyframeLayer.vectorLayerKeyframe.geometry\n\n    // Deletes empty data\n    if (geometry.runtime.needsPostUpdate) {\n\n      if (!isUndo) {\n\n        const deleteEmpties_command = new Command_VectorLayer_DeleteEmpties()\n        if (deleteEmpties_command.prepareForGeometry(geometry, viewKeyframeLayer.layer)) {\n\n          deleteEmpties_command.isContinued = true\n          subToolContext.commandHistory.executeCommand(deleteEmpties_command, subToolContext)\n        }\n      }\n\n      geometry.runtime.needsPostUpdate = false\n    }\n\n    // Update for changed data\n    const isGeometryUpdated = this.updateGeometry(geometry)\n\n    // Set update flags to draw path steps\n    this.drawPathBuffering.setUpdateCacheToDrawPathSteps(\n      viewKeyframeLayer.layer,\n      drawPathContext,\n      isLayerUpdated || isGeometryUpdated\n    )\n  }\n\n  private updateGeometry(geometry: VectorLayerGeometry) {\n\n    // Update geometry, drawing unit, stroke groups.\n    // To update strokes or points, please do it in each sub tool or command, not here.\n\n    let isUpdated = false\n\n    const surroundingArea = RectangleArea.createMinumumValueRectangle()\n\n    for (const unite of geometry.units) {\n\n      for (const group of unite.groups) {\n\n        if (group.runtime.needsPostUpdate) {\n\n          group.runtime.needsPostUpdate = false\n\n          isUpdated = true\n\n          VectorStrokeLogic.calculateSurroundingArea(group.runtime.area, group.lines)\n        }\n\n        surroundingArea.expandByRectangle(group.runtime.area)\n\n        if (VectorLayerGeometry.isSurroundingFill(geometry)) {\n\n          group.runtime.connectionInfos = VectorStrokeLogic.createConnectionInfos(group)\n        }\n      }\n    }\n\n    if (isUpdated) {\n\n      surroundingArea.calculateParams()\n      surroundingArea.copyTo(geometry.runtime.area)\n    }\n\n    return isUpdated\n  }\n\n  startLazyUpdates() {\n\n    this.calculation_LazyUpdateState.startLazyCalculation()\n    this.drawing_LazyUpdateState.startLazyCalculation()\n  }\n\n  executeLazyUpdate(drawPathContext: DrawPathContext, viewKeyframe: ViewKeyframe) {\n\n    const state = this.calculation_LazyUpdateState\n\n    // execute drawing steps\n    drawPathContext.drawPathModeID = DrawPathModeID.lazyUpdate\n    drawPathContext.startIndex = state.processedIndex + 1\n    drawPathContext.endIndex = drawPathContext.steps.length - 1\n    drawPathContext.documentData = this.docContext.documentData\n\n    state.startPartialProcess()\n\n    for (let i = drawPathContext.startIndex; i <= drawPathContext.endIndex; i++) {\n\n      const drawPathStep = drawPathContext.steps[i]\n\n      drawPathContext.lastDrawPathIndex = i\n\n      const viewKeyFrameLayer = drawPathStep.viewKeyframeLayer\n      const layer = viewKeyFrameLayer ? viewKeyFrameLayer.layer : null\n\n      if (drawPathStep.operationType == DrawPathOperationTypeID.drawForeground) {\n\n        if (VectorLayer.isVectorLayer(layer)) {\n\n          const vectorLayer = <VectorLayer>layer\n\n          if (vectorLayer.eyesSymmetryEnabled && vectorLayer.runtime.posingLayer != null) {\n\n            console.debug(`Lazy calculation updateEyesSymetries \"${vectorLayer.name}\"`)\n\n            this.updateEyesSymetry(vectorLayer, viewKeyFrameLayer)\n\n            // Set post update to related layers\n            for (const vkfLayer of viewKeyframe.layers) {\n\n              if (vkfLayer.layer.runtime.parentLayer == layer.runtime.parentLayer) {\n\n                if (PointBrushFillLayer.isPointBrushFillLayer(vkfLayer.layer)) {\n\n                  Layer.setPostUpdateNeeded(vkfLayer.layer)\n                  this.setPostUpdateNeeded()\n                }\n              }\n            }\n          }\n        }\n      }\n      else if (drawPathStep.operationType == DrawPathOperationTypeID.drawBackground) {\n\n        // TODO: 自動塗りレイヤーの更新処理の実装\n        if (AutoFillLayer.isAutoFillLayer(layer)) {\n\n          const autoFillLayer = <AutoFillLayer>layer\n\n          if (autoFillLayer.runtime.needsLazyUpdate) {\n\n            console.debug(`Lazy calculation updateAutoFill \"${autoFillLayer.name}\"`)\n\n            this.updateAutoFill(autoFillLayer, this.subToolContext)\n\n            autoFillLayer.runtime.needsLazyUpdate = false\n          }\n        }\n      }\n\n      if (state.isOverPartialProcessMaxTime()) {\n        break\n      }\n    }\n\n    console.debug(`Lazy calculation from ${drawPathContext.startIndex} to ${drawPathContext.lastDrawPathIndex}`)\n\n    state.processedIndex = drawPathContext.lastDrawPathIndex\n\n    if (state.processedIndex >= drawPathContext.steps.length - 1) {\n\n      console.debug('Lazy calculation finished at', state.processedIndex)\n\n      state.finishLazyUpdate()\n\n      this.subToolContext.setRedrawMainWindowEditorWindow()\n    }\n  }\n\n  updateEyesSymetry(layer: VectorLayer, viewKeyFrameLayer: ViewKeyframeLayer) {\n\n    EyesSymmetryLogic.updateEyesSymetries(\n      layer,\n      viewKeyFrameLayer.vectorLayerKeyframe.geometry,\n      this.posing3DLogic,\n      this.posing3DView\n    )\n  }\n\n  updateAutoFill(layer: AutoFillLayer, subtoolContext: SubToolContext) {\n\n    const newGroup = new VectorStrokeGroup()\n\n    // TODO: 編集後すぐに表示時刻を移動したときに編集したキーフレームでなく移動後のキーフレームで遅延処理が行われてしまう問題に対応する\n    const viewKeyframeLayers = subtoolContext.main.collectVectorViewKeyframeLayers()\n\n    const target_ViewKeyframeLayer = viewKeyframeLayers\n      .find(vkfl => vkfl.layer == layer)\n\n    if (target_ViewKeyframeLayer === undefined) {\n      throw new Error('ERROR 0000:invalid ViewKeyframeLayers')\n    }\n\n    const sibling_ViewKeyframeLayers = viewKeyframeLayers\n      .filter(vkfl => vkfl.layer != layer\n        && VectorLayer.isVectorLayer(vkfl.layer)\n        && vkfl.layer.runtime.parentLayer == layer.runtime.parentLayer)\n\n    AutoFillLayer.forEachFillPoint(target_ViewKeyframeLayer.autoFillLayerKeyframe, (group, autoFillPoint) => {\n\n      vec3.add(this.start_Location, autoFillPoint.location, autoFillPoint.lookDirection)\n\n      const start_Stroke = AutoFillLogic.findStartStroke(\n        this.start_Location,\n        this.mouseCursorRangeRate,\n        sibling_ViewKeyframeLayers\n      )\n\n      if (start_Stroke == null) {\n        return\n      }\n\n      const fill_Stroke = new VectorStroke()\n\n      const isAvailable = AutoFillLogic.generate(\n        fill_Stroke,\n        this.lookDirection,\n        start_Stroke,\n        autoFillPoint.location,\n        autoFillPoint.minDistanceRange,\n        sibling_ViewKeyframeLayers\n      )\n\n      if (!isAvailable) {\n        return\n      }\n\n      vec3.copy(autoFillPoint.lookDirection, this.lookDirection)\n\n      newGroup.lines.push(fill_Stroke)\n    })\n\n    newGroup.runtime.needsPostUpdate = true\n\n    target_ViewKeyframeLayer.autoFillLayerKeyframe.geometry.units[0].groups[0] = newGroup\n\n    this.updateGeometry(target_ViewKeyframeLayer.autoFillLayerKeyframe.geometry)\n  }\n\n  isLazyCalculationFinished() {\n\n    return this.calculation_LazyUpdateState.isFinished\n  }\n\n  drawDrawPathForLazyDraw(\n    mainWindow: CanvasWindow,\n    docContext: DocumentContext,\n    subtoolContext: SubToolContext,\n    drawPathContext: DrawPathContext\n  ) {\n\n    // execute drawing steps\n    drawPathContext.drawPathModeID = DrawPathModeID.lazyUpdate\n    drawPathContext.startIndex = this.drawing_LazyUpdateState.processedIndex + 1\n    drawPathContext.endIndex = drawPathContext.steps.length - 1\n    drawPathContext.documentData = docContext.documentData\n    drawPathContext.isModalToolRunning = subtoolContext.tool.isModalToolRunning()\n    drawPathContext.currentLayerOnly = false\n    drawPathContext.lazyUpdateState = this.drawing_LazyUpdateState\n\n    const clearState = this.drawing_LazyUpdateState.isLazyDrawBigining()\n    const buffer_CanvasWindow = drawPathContext.lazyDraw_compositionBuffer.canvasWindow\n\n    mainWindow.copyTransformTo(buffer_CanvasWindow)\n    this.appDrawing.drawDrawPathContext(buffer_CanvasWindow, drawPathContext, clearState)\n\n    console.debug(`Lazy drawing ${clearState ? 'begin' : 'draw'} from ${drawPathContext.startIndex} to ${drawPathContext.lastDrawPathIndex} -> buffer[${drawPathContext.bufferStack.length}]`)\n\n    if (!drawPathContext.existsDrawnStepsAtLastTime()) {\n      return\n    }\n\n    // Save states for drawing steps\n    this.drawing_LazyUpdateState.processedIndex = drawPathContext.lastDrawPathIndex\n\n    if (drawPathContext.isFinished()) {\n\n      this.drawing_LazyUpdateState.finishLazyUpdate()\n\n      console.debug('Lazy drawing finished at', this.drawing_LazyUpdateState.processedIndex)\n\n      this.appDrawing.clearWindow(mainWindow)\n\n      this.appDrawing.canvasRender.resetTransform()\n\n      this.appDrawing.canvasRender.drawImage(buffer_CanvasWindow.canvas\n        , 0, 0, mainWindow.width, mainWindow.height\n        , 0, 0, mainWindow.width, mainWindow.height)\n\n      if (subtoolContext.isEditMode()) {\n\n        this.appDrawing.main_drawPathContext.isEditModeDraw = true\n        this.appDrawing.main_drawPathContext.redrawActiveLayerOnly = true\n        this.appDrawing.main_drawPathContext.currentLayerOnly = false\n        this.appDrawing.main_drawPathContext.isModalToolRunning = false\n        this.appDrawing.drawDocumentForEditMode(mainWindow, docContext, this.appDrawing.main_drawPathContext)\n      }\n\n      this.appDrawing.drawFrames(mainWindow, docContext)\n    }\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, MainToolTabSubToolCommand, SubToolID } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_AutoFill extends MainToolTab {\n\n  tabID = MainToolTabID.autoFill // @override\n  default_SubToolID = SubToolID.addAutoFillPoint // @override\n\n  subToolCommands: MainToolTabSubToolCommand[] = [\n    { commandID: ShortcutCommandID.tool_subTool1, subToolID: SubToolID.addAutoFillPoint},\n    { commandID: ShortcutCommandID.tool_subTool2, subToolID: SubToolID.deleteAutoFillPoint},\n  ]\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (ctx.isDrawMode() && ctx.isCurrentLayerAutoFillLayer())\n  }\n\n  keydown(_key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (this.processSubToolKeyDown(this.subToolCommands, commandID, ctx)) {\n      return true\n    }\n\n    if (this.processToggleSubTool(\n      ShortcutCommandID.tool_togglePenEraser,\n      SubToolID.deleteAutoFillPoint,\n      SubToolID.addAutoFillPoint,\n      commandID,\n      ctx)\n    ) {\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, SubToolID } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_Document extends MainToolTab {\n\n  tabID = MainToolTabID.document // @override\n  default_SubToolID = SubToolID.editDocumentFrame // @override\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (ctx.isEditMode() && ctx.isCurrentLayerEditbaleLayer())\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, MainToolTabSubToolCommand, SubToolID } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_Drawing extends MainToolTab {\n\n  tabID = MainToolTabID.drawing // @override\n  default_SubToolID = SubToolID.drawLine // @override\n\n  subToolCommands: MainToolTabSubToolCommand[] = [\n    { commandID: ShortcutCommandID.tool_subTool1, subToolID: SubToolID.drawLine},\n    { commandID: ShortcutCommandID.tool_subTool2, subToolID: SubToolID.deletePointBrush},\n    { commandID: ShortcutCommandID.tool_subTool3, subToolID: SubToolID.scratchLine},\n    { commandID: ShortcutCommandID.tool_subTool4, subToolID: SubToolID.extrudeLine},\n    { commandID: ShortcutCommandID.tool_subTool5, subToolID: SubToolID.scratchLineWidth},\n    { commandID: ShortcutCommandID.tool_subTool6, subToolID: SubToolID.overWriteLineWidth},\n  ]\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (ctx.isDrawMode() && ctx.isCurrentLayerStrokeDrawableLayer())\n  }\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (this.processSubToolKeyDown(this.subToolCommands, commandID, ctx)) {\n      return true\n    }\n\n    if (this.processToggleSubTool(\n      ShortcutCommandID.tool_togglePenEraser,\n      SubToolID.deletePointBrush,\n      SubToolID.drawLine,\n      commandID,\n      ctx)\n    ) {\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { MainToolID, MainToolTab, MainToolTabID, MainToolTabTypeID, SubToolID } from '../tool'\n\nexport class MainToolTab_EditDisabled extends MainToolTab {\n\n  tabID = MainToolTabID.edit_disabled // @override\n  type = MainToolTabTypeID.editingTool // @override\n  default_SubToolID = SubToolID.brushSelect // @override\n  disabled: boolean = true // @override\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, MainToolTabSubToolCommand, MainToolTabTypeID, SubToolID } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_Edit extends MainToolTab {\n\n  tabID = MainToolTabID.edit // @override\n  type = MainToolTabTypeID.editingTool // @override\n  default_SubToolID = SubToolID.brushSelect // @override\n\n  subToolCommands: MainToolTabSubToolCommand[] = [\n    { commandID: ShortcutCommandID.tool_subTool1, subToolID: SubToolID.brushSelect},\n    { commandID: ShortcutCommandID.tool_subTool2, subToolID: SubToolID.locateOperatorCursor},\n    { commandID: ShortcutCommandID.tool_subTool3, subToolID: SubToolID.editModeMain},\n    { commandID: ShortcutCommandID.tool_subTool4, subToolID: SubToolID.resampleSegment},\n  ]\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (ctx.isEditMode() && ctx.isCurrentLayerEditbaleLayer())\n  }\n\n  keydown(_key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (this.processSubToolKeyDown(this.subToolCommands, commandID, ctx)) {\n      return true\n    }\n\n    let modalToolID = SubToolID.none\n\n    if (commandID == ShortcutCommandID.edit_grabMove) {\n\n      modalToolID = SubToolID.edit_GrabMove\n    }\n\n    if (commandID == ShortcutCommandID.edit_rotate) {\n\n      modalToolID = SubToolID.edit_Rotate\n    }\n\n    if (commandID == ShortcutCommandID.edit_scale) {\n\n      modalToolID = SubToolID.edit_Scale\n    }\n\n    if (modalToolID != SubToolID.none) {\n\n      ctx.tool.startModalTool(modalToolID)\n      return true\n    }\n\n    if (commandID == ShortcutCommandID.edit_selectAll) {\n\n      ctx.tool.executeToggleSelection()\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, MainToolTabSubToolCommand, SubToolID } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_Group extends MainToolTab {\n\n  tabID = MainToolTabID.group // @override\n  default_SubToolID = SubToolID.deletePointBrush // @override\n\n  subToolCommands: MainToolTabSubToolCommand[] = [\n    { commandID: ShortcutCommandID.tool_subTool1, subToolID: SubToolID.scratchLine},\n    { commandID: ShortcutCommandID.tool_subTool2, subToolID: SubToolID.deletePointBrush},\n    { commandID: ShortcutCommandID.tool_subTool3, subToolID: SubToolID.overWriteLineWidth},\n    { commandID: ShortcutCommandID.tool_subTool4, subToolID: SubToolID.resampleSegment},\n  ]\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (ctx.isCurrentLayerGroupLayer())\n  }\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (this.processSubToolKeyDown(this.subToolCommands, commandID, ctx)) {\n      return true\n    }\n\n    if (this.processToggleSubTool(\n      ShortcutCommandID.tool_togglePenEraser,\n      SubToolID.scratchLine,\n      SubToolID.deletePointBrush,\n      commandID,\n      ctx)\n    ) {\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, MainToolTabSubToolCommand, SubToolID } from '../tool'\nimport { OpenFileDialogTargetID, RibbonUIControlID } from '../ui'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_ImageFileReference extends MainToolTab {\n\n  tabID = MainToolTabID.imageFileReference // @override\n  default_SubToolID = SubToolID.image_GrabMove // @override\n\n  subToolCommands: MainToolTabSubToolCommand[] = [\n    { commandID: ShortcutCommandID.tool_subTool1, subToolID: SubToolID.image_GrabMove},\n    { commandID: ShortcutCommandID.tool_subTool2, subToolID: SubToolID.image_Rotate},\n    { commandID: ShortcutCommandID.tool_subTool3, subToolID: SubToolID.image_Scale},\n    { commandID: ShortcutCommandID.tool_subTool4, subToolID: SubToolID.resampleSegment},\n  ]\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return ctx.isCurrentLayerImageFileReferenceLayer()\n  }\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (this.processSubToolKeyDown(this.subToolCommands, commandID, ctx)) {\n      return true\n    }\n\n    if (commandID == ShortcutCommandID.edit_grabMove) {\n\n      ctx.tool.changeCurrentSubToolForSubtoolID(SubToolID.image_GrabMove)\n      ctx.tool.startModalTool(SubToolID.image_GrabMove)\n\n      return true\n    }\n\n    if (commandID == ShortcutCommandID.edit_rotate) {\n\n      ctx.tool.changeCurrentSubToolForSubtoolID(SubToolID.image_Rotate)\n      ctx.tool.startModalTool(SubToolID.image_Rotate)\n      return true\n    }\n\n    if (commandID == ShortcutCommandID.edit_scale) {\n\n      ctx.tool.changeCurrentSubToolForSubtoolID(SubToolID.image_Scale)\n      ctx.tool.startModalTool(SubToolID.image_Scale)\n      return true\n    }\n\n    return false\n  }\n\n  buttonClick(id: RibbonUIControlID, ctx: SubToolContext): boolean { // @override\n\n    switch(id) {\n\n      case RibbonUIControlID.imageFileRef_openImageFile:\n        ctx.main.openFileDialog(OpenFileDialogTargetID.imageFileReferenceLayerFilePath)\n        return true\n    }\n\n    return false\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, SubToolID } from '../tool'\n\nexport class MainToolTab_Layer extends MainToolTab {\n\n  tabID = MainToolTabID.layer // @override\n  default_SubToolID = SubToolID.noOperation // @override\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return true\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, MainToolTabSubToolCommand, SubToolID } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport class MainToolTab_PointBrushFill extends MainToolTab {\n\n  tabID = MainToolTabID.pointBrushFill // @override\n  default_SubToolID = SubToolID.drawPointBrush // @override\n\n  subToolCommands: MainToolTabSubToolCommand[] = [\n    { commandID: ShortcutCommandID.tool_subTool1, subToolID: SubToolID.drawPointBrush},\n    { commandID: ShortcutCommandID.tool_subTool2, subToolID: SubToolID.deletePointBrush},\n    { commandID: ShortcutCommandID.tool_subTool3, subToolID: SubToolID.scratchLine},\n    { commandID: ShortcutCommandID.tool_subTool4, subToolID: SubToolID.extrudeLine},\n  ]\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (ctx.isDrawMode() && ctx.isCurrentLayerStrokeDrawableLayer())\n  }\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (this.processSubToolKeyDown(this.subToolCommands, commandID, ctx)) {\n      return true\n    }\n\n    if (this.processToggleSubTool(\n      ShortcutCommandID.tool_togglePenEraser,\n      SubToolID.deletePointBrush,\n      SubToolID.drawPointBrush,\n      commandID,\n      ctx)\n    ) {\n      return true\n    }\n\n    return false\n  }\n}\n","﻿import { MainToolTab, MainToolTabID, SubToolID } from '../tool'\n\nexport class MainToolTab_Poing3D extends MainToolTab {\n\n  tabID = MainToolTabID.posing // @override\n  default_SubToolID = SubToolID.p3d_locateHead // @override\n}\n","﻿import { SubToolContext } from '../context'\nimport { MainToolTab, MainToolTabID, SubToolID } from '../tool'\n\nexport class MainToolTab_View extends MainToolTab {\n\n  tabID = MainToolTabID.view // @override\n  default_SubToolID = SubToolID.noOperation // @override\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return true\n  }\n}\n","﻿import { MainTool, MainToolID, MainToolCommonTabSet } from '../tool'\nimport { MainToolTab_AutoFill } from '../tools-main-tab'\n\nexport class MainTool_AutoFillLayer extends MainTool {\n\n  mainToolID = MainToolID.autoFill // @override\n\n  constructor(tabs: MainToolCommonTabSet) {\n    super()\n\n    this.mainToolTabs = [\n      new MainToolTab_AutoFill(),\n      tabs.edit_disabled,\n      tabs.layer,\n      tabs.document,\n      tabs.view\n    ]\n  }\n}\n","﻿import { MainTool, MainToolID, MainToolCommonTabSet } from '../tool'\nimport { MainToolTab_Group } from '../tools-main-tab'\n\nexport class MainTool_GroupLayer extends MainTool {\n\n  mainToolID = MainToolID.group // @override\n\n  constructor(tabs: MainToolCommonTabSet) {\n    super()\n\n    this.mainToolTabs = [\n      new MainToolTab_Group(),\n      tabs.edit,\n      tabs.layer,\n      tabs.document,\n      tabs.view\n    ]\n  }\n}\n","﻿import { MainTool, MainToolID, MainToolCommonTabSet } from '../tool'\nimport { MainToolTab_ImageFileReference } from '../tools-main-tab/image-file-reference'\n\nexport class MainTool_ImageFileReferenceLayer extends MainTool {\n\n  mainToolID = MainToolID.imageFileReference // @override\n\n  constructor(tabs: MainToolCommonTabSet) {\n    super()\n\n    this.mainToolTabs = [\n      new MainToolTab_ImageFileReference(),\n      tabs.edit_disabled,\n      tabs.layer,\n      tabs.document,\n      tabs.view\n    ]\n  }\n}\n","﻿import { MainTool, MainToolID, MainToolCommonTabSet } from '../tool'\nimport { MainToolTab_PointBrushFill } from '../tools-main-tab'\n\nexport class MainTool_PointBrushFillLayer extends MainTool {\n\n  mainToolID = MainToolID.pointBrushFill // @override\n\n  constructor(tabs: MainToolCommonTabSet) {\n    super()\n\n    this.mainToolTabs = [\n      new MainToolTab_PointBrushFill(),\n      tabs.edit,\n      tabs.layer,\n      tabs.document,\n      tabs.view\n    ]\n  }\n}\n","﻿import { MainTool, MainToolID, MainToolCommonTabSet } from '../tool'\nimport { MainToolTab_Poing3D } from '../tools-main-tab'\n\nexport class MainTool_Poing3DLayer extends MainTool {\n\n  mainToolID = MainToolID.posing3D // @override\n\n  constructor(tabs: MainToolCommonTabSet) {\n    super()\n\n    this.mainToolTabs = [\n      new MainToolTab_Poing3D(),\n      tabs.edit_disabled,\n      tabs.layer,\n      tabs.document,\n      tabs.view\n    ]\n  }\n}\n","﻿import { MainTool, MainToolID, MainToolCommonTabSet } from '../tool'\nimport { MainToolTab_Drawing } from '../tools-main-tab'\n\nexport class MainTool_VectorLayer extends MainTool {\n\n  mainToolID = MainToolID.vector // @override\n\n  constructor(tabs: MainToolCommonTabSet) {\n    super()\n\n    this.mainToolTabs = [\n      new MainToolTab_Drawing(),\n      tabs.edit,\n      tabs.layer,\n      tabs.document,\n      tabs.view\n    ]\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { Lists } from '../common-logics'\nimport { SubToolContext, SubToolDrawingContext } from '../context'\nimport { VectorLayer, VectorLayerGeometry } from '../document-data'\nimport {\n  ISelector_VectorLayer, SelectionEditMode, Selector_StrokeSegment_BrushSelect,\n  Selector_VectorPoint_BrushSelect, Selector_VectorStroke_BrushSelect, VectorLayerSelectionInfo,\n  VectorPointSelectionInfo, VectorStrokeSelectionInfo\n} from '../document-logic'\nimport { ModalToolBase, OperationUnitID, ToolPointerEvent } from '../tool'\nimport { ViewKeyframeLayer } from '../view'\n\nexport class Tool_BrushSelectLinePointBase extends ModalToolBase {\n\n  helpText = '左クリックで選択を追加、Altキーを押しながらで選択を解除します。<br />Aキーで全選択／解除します。G、R、Sキーで移動、回転、拡縮します。'\n  isEditTool = true // @override\n  usesHitTestToSelect = true // @override\n\n  brushSelector: ISelector_VectorLayer = null // @virtual\n\n  viewKeyframeLayers: ViewKeyframeLayer[] = null\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return ctx.isCurrentLayerEditbaleLayer()\n  }\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    if (!this.isAvailable(ctx)) {\n      return\n    }\n\n    drawing.editorDrawer.drawPointerCursor(this.getSelectionRadius(ctx))\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (!this.isAvailable(ctx)) {\n      return\n    }\n\n    if (e.isLeftButtonPressing) {\n\n      this.startSelection(e, ctx)\n      this.processSelection(e, ctx)\n\n      ctx.tool.startModalTool(this.subtoolID)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    // console.log(`mouseMove (${e.location[0]} ${e.location[1]})`)\n\n    if (!this.isAvailable(ctx)) {\n      return\n    }\n\n    if (ctx.tool.isModalToolRunning()) {\n\n      this.processSelection(e, ctx)\n      ctx.setRedrawCurrentLayer()\n    }\n    else {\n\n      // show hitting to stroke\n      const isHitChanged = ctx.tool.visualHittestToStrokes(e.location, ctx.toolBaseViewRadius)\n      if (isHitChanged) {\n        ctx.setRedrawCurrentLayer()\n      }\n    }\n\n    // redraw cursor\n    ctx.setRedrawEditorWindow()\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    if (!this.isAvailable(ctx)) {\n      return\n    }\n\n    this.endSelection(ctx)\n\n    ctx.setRedrawCurrentLayer()\n\n    ctx.setRedrawEditorWindow()\n  }\n\n  private startSelection(e: ToolPointerEvent, ctx: SubToolContext) {\n\n    this.viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    this.onStartSelection(e, ctx)\n\n    this.brushSelector.startProcess()\n  }\n\n  protected getSelectionRadius(ctx: SubToolContext) { // @virtual\n\n    return ctx.toolBaseViewRadius\n  }\n\n  protected onStartSelection(_e: ToolPointerEvent, _ctx: SubToolContext) { // @virtual\n  }\n\n  private processSelection(e: ToolPointerEvent, ctx: SubToolContext) {\n\n    if (this.viewKeyframeLayers == null) {\n\n      return null\n    }\n\n    // console.log(`processSelection (${e.location[0]} ${e.location[1]})`)\n\n    ViewKeyframeLayer.forEachVectorGeometry(this.viewKeyframeLayers, (geometry: VectorLayerGeometry, layer: VectorLayer) => {\n\n      this.brushSelector.processGeometry(\n        layer,\n        geometry,\n        e.location,\n        this.getSelectionRadius(ctx)\n      )\n    })\n\n    this.afterProcessSelection(ctx)\n  }\n\n  afterProcessSelection(ctx: SubToolContext) { // @virtual\n  }\n\n  private endSelection(ctx: SubToolContext) {\n\n    this.brushSelector.endProcess()\n\n    this.viewKeyframeLayers = null\n\n    if (!this.existsResults()) {\n      return\n    }\n\n    this.executeCommand(ctx)\n  }\n\n  protected existsResults(): boolean { // @virtual\n\n    return (this.brushSelector.selectionInfo.selectedStrokess.length != 0\n      || this.brushSelector.selectionInfo.selectedPoints.length != 0)\n  }\n\n  protected executeCommand(_ctx: SubToolContext) { // @virtual\n\n  }\n}\n\nexport class Tool_Select_BrushSelect extends Tool_BrushSelectLinePointBase {\n\n  strokeSelector = new Selector_VectorStroke_BrushSelect()\n  segmentSelector = new Selector_StrokeSegment_BrushSelect()\n  pointSelector = new Selector_VectorPoint_BrushSelect()\n\n  brushSelector: ISelector_VectorLayer = this.strokeSelector // @override\n\n  hasClearedBeforeSelection = false\n\n  protected onStartSelection(_e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    switch (ctx.operationUnitID) {\n\n      case OperationUnitID.stroke:\n        this.brushSelector = this.strokeSelector\n        break\n\n      case OperationUnitID.strokeSegment:\n        this.brushSelector = this.segmentSelector\n        break\n\n      case OperationUnitID.strokePoint:\n        this.brushSelector = this.pointSelector\n        break\n    }\n\n    if (ctx.isCtrlKeyPressing()) {\n\n      this.brushSelector.editMode = SelectionEditMode.toggle\n    }\n    else if (ctx.isAltKeyPressing()) {\n\n      this.brushSelector.editMode = SelectionEditMode.setUnselected\n    }\n    else {\n\n      this.brushSelector.editMode = SelectionEditMode.setSelected\n    }\n\n    this.hasClearedBeforeSelection = false\n\n    if (!ctx.isAnyModifierKeyPressing()) {\n\n      this.hasClearedBeforeSelection = ctx.tool.executeClearSelection()\n    }\n  }\n\n  cancelModal(ctx: SubToolContext) { // @override\n\n    for (const selPoint of this.brushSelector.selectionInfo.selectedPoints) {\n\n      selPoint.point.isSelected = selPoint.selectStateBefore\n    }\n\n    this.brushSelector.endProcess()\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    const command = new Command_Select()\n    command.selectionInfo = this.brushSelector.selectionInfo\n\n    if (this.hasClearedBeforeSelection) {\n\n      command.isContinued = true\n    }\n\n    ctx.commandHistory.executeCommand(command, ctx)\n  }\n}\n\nexport class Command_Select extends CommandBase {\n\n  selectionInfo: VectorLayerSelectionInfo = null\n\n  private selectedLines: VectorStrokeSelectionInfo[] = null\n  private selectedPoints: VectorPointSelectionInfo[] = null\n\n  execute(_ctx: SubToolContext) { // @override\n\n    // Selection process has done while inputting\n    // so not required execute this.redo(ctx)\n\n    this.selectedLines = Lists.clone(this.selectionInfo.selectedStrokess)\n    this.selectedPoints = Lists.clone(this.selectionInfo.selectedPoints)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const selPoint of this.selectedPoints) {\n\n      selPoint.point.isSelected = selPoint.selectStateBefore\n    }\n\n    for (const selLine of this.selectedLines) {\n\n      selLine.stroke.isSelected = selLine.selectStateBefore\n    }\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const selPoint of this.selectedPoints) {\n\n      selPoint.point.isSelected = selPoint.selectStateAfter\n    }\n\n    for (const selLine of this.selectedLines) {\n\n      selLine.stroke.isSelected = selLine.selectStateAfter\n    }\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { float, Maths } from '../common-logics'\nimport { SubToolContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport { PointBrushFillLayer, VectorLayer, VectorStrokeModifyFlagID, VectorPoint, VectorStroke, VectorStrokeGroup } from '../document-data'\nimport { ISelector_VectorLayer, Selector_StrokeSegment_BrushSelect, VectorLayerSelectionInfo, VectorStrokeLogic } from '../document-logic'\nimport { Tool_BrushSelectLinePointBase } from './select-brush-select'\n\nclass DivideLine_EditGroup {\n\n  target_group: VectorStrokeGroup = null\n  new_strokes: VectorStroke[] = []\n  replaced_strokes: VectorStroke[] = []\n  old_strokes: VectorStroke[] = null\n}\n\nexport class Selector_DeleteLinePoint_DivideLine extends Selector_StrokeSegment_BrushSelect {\n\n  private segmentMat4 = mat4.create()\n  private invMat4 = mat4.create()\n  private normalVec = vec3.create()\n  private localLocation = vec3.create()\n\n  protected onLineSegmentHited(point1: VectorPoint, point2: VectorPoint, location: Vec3, minDistanceSQ: float, _distanceSQ: float) { // @override\n\n    this.createEditPoint(point1, point2, location, minDistanceSQ)\n  }\n\n  private createEditPoint(point1: VectorPoint, point2: VectorPoint, location: Vec3, minDistanceSQ: float) {\n\n    let edited = false\n\n    const segmentLength = vec3.distance(point1.location, point2.location)\n\n    if (segmentLength <= 0.0) {\n\n      edited = true\n      point1.adjustingLengthFrom = 0.0 // fromを0.0、toを1.0とすることでセグメント全体の削除とする。これによりこのセグメントは描画時にスキップされる。\n      point1.adjustingLengthTo = 1.0\n    }\n    else {\n\n      // 線分を円でけずる計算を行う\n\n      // 線分の逆行列を計算\n      Maths.mat4SegmentMat(this.segmentMat4, this.normalVec, point1.location, point2.location)\n      mat4.invert(this.invMat4, this.segmentMat4)\n\n      // 線分ローカルな消しゴムの位置を計算\n      vec3.set(this.localLocation, location[0], location[1], 0.0)\n      vec3.transformMat4(this.localLocation, this.localLocation, this.invMat4)\n\n      // 消しゴムと線分の交差する位置を計算\n      let dy = 0 - this.localLocation[1]\n\n      if (minDistanceSQ - dy * dy < 0) {\n\n        dy = 0.01\n      }\n\n      const dx = Math.sqrt(minDistanceSQ - dy * dy)\n      const x1 = this.localLocation[0] - dx\n      const x2 = this.localLocation[0] + dx\n\n      // 線分のfrom側にはみ出す場合\n      if (x1 > 0.0 && x1 < segmentLength && x2 >= segmentLength) {\n\n        const fromX = x1 / segmentLength\n        if (fromX < point1.adjustingLengthFrom) {\n\n          point1.adjustingLengthFrom = fromX\n        }\n\n        edited = true\n        point1.adjustingLengthTo = 1.0\n      }\n      // 線分のto側にはみ出す場合\n      else if (x2 > 0.0 && x2 < segmentLength && x1 <= 0.0) {\n\n        edited = true\n        point1.adjustingLengthFrom = 0.0\n\n        const toX = x2 / segmentLength\n        if (toX > point1.adjustingLengthTo) {\n\n          point1.adjustingLengthTo = toX\n        }\n      }\n      else if (x1 < 0.0 && x2 > segmentLength) {\n\n        edited = true\n        point1.adjustingLengthFrom = 0.0 // セグメント全体が削除\n        point1.adjustingLengthTo = 1.0\n      }\n      // 交差する位置が線分の内側にある場合\n      else if (x1 > 0.0 && x2 < segmentLength) {\n\n        const fromX = x1 / segmentLength\n        if (fromX < point1.adjustingLengthFrom) {\n\n          edited = true\n          point1.adjustingLengthFrom = fromX\n        }\n\n        const toX = x2 / segmentLength\n        if (toX > point1.adjustingLengthTo) {\n\n          edited = true\n          point1.adjustingLengthTo = toX\n        }\n      }\n    }\n\n    if (edited) {\n\n      this.selectionInfo.editStroke(this.currentStroke)\n      this.selectionInfo.editGroup(this.currentStrokeGroup, this.currentGeometry, this.currentLayer)\n    }\n  }\n\n  protected afterHitTest() { // @override\n\n    // doesn't clear flagas\n  }\n}\n\nexport class Tool_DeletePoints_DivideLine extends Tool_BrushSelectLinePointBase {\n\n  helpText = 'ブラシ選択で点を削除します。'\n  isEditTool = false // @override\n\n  private selector = new Selector_DeleteLinePoint_DivideLine()\n  brushSelector: ISelector_VectorLayer = this.selector // @override\n\n  afterProcessSelection(ctx: SubToolContext) {\n\n    for (const groupSelection of this.selector.selectionInfo.selectedGroups) {\n\n      if (VectorLayer.isPointBrushFillLayer(groupSelection.layer)) {\n\n        ctx.main.setRedrawDrawPathForLayer(groupSelection.layer)\n      }\n    }\n  }\n\n  protected existsResults(): boolean { // @override\n\n    return (this.selector.selectionInfo.selectedGroups.length > 0)\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    const command = new Command_DeletePoints_DivideLine()\n    if (command.prepareEditTargets(this.selector.selectionInfo)) {\n\n      ctx.commandHistory.executeCommand(command, ctx)\n    }\n\n    this.selector.resetModifyStates()\n\n    ctx.setRedrawCurrentLayer()\n  }\n}\n\nexport class Command_DeletePoints_DivideLine extends CommandBase {\n\n  editGroups: DivideLine_EditGroup[] = null\n\n  toLocation = vec3.create()\n  fromLocation = vec3.create()\n\n  prepareEditTargets(selectionInfo: VectorLayerSelectionInfo): boolean {\n\n    const editGroups: DivideLine_EditGroup[] = []\n\n    // Collect edit data from adjusting state, it must be same with the drawing algorism\n    for (const selGroup of selectionInfo.selectedGroups) {\n\n      const edit_group = new DivideLine_EditGroup()\n      edit_group.target_group = selGroup.group\n      edit_group.old_strokes = selGroup.group.lines\n\n      for (const stroke of selGroup.group.lines) {\n\n        if (stroke.runtime.modifyFlag == VectorStrokeModifyFlagID.none) {\n\n          edit_group.new_strokes.push(stroke)\n          continue\n        }\n\n        edit_group.replaced_strokes.push(stroke)\n\n        let new_stroke: VectorStroke = null\n        let strokeStarted = false\n        let drawingRemaining = false\n\n        for (let pointIndex = 0; pointIndex < stroke.points.length - 1; pointIndex++) {\n\n          const fromPoint = stroke.points[pointIndex]\n          const fromLocation = fromPoint.location\n          const toPoint = stroke.points[pointIndex + 1]\n          const toLocation = toPoint.location\n          const lengthFrom = fromPoint.adjustingLengthFrom\n          const lengthTo = fromPoint.adjustingLengthTo\n\n          fromPoint.adjustingLengthFrom = 1.0\n          fromPoint.adjustingLengthTo = 0.0\n\n          if (lengthFrom == 1.0) {\n\n            if (!strokeStarted) {\n\n              new_stroke = new VectorStroke()\n              new_stroke.points.push(fromPoint)\n            }\n\n            new_stroke.points.push(toPoint)\n            strokeStarted = true\n            drawingRemaining = true\n          }\n          else {\n\n            // draw segment's from-side part\n            if (lengthFrom > 0.0) {\n\n              if (!strokeStarted) {\n\n                new_stroke = new VectorStroke()\n                new_stroke.points.push(fromPoint)\n              }\n\n              vec3.lerp(this.toLocation, fromLocation, toLocation, lengthFrom)\n\n              const newPoint = new VectorPoint()\n\n              vec3.copy(newPoint.location, this.toLocation)\n              vec3.copy(newPoint.adjustingLocation, newPoint.location)\n\n              newPoint.lineWidth = Maths.lerp(lengthFrom, fromPoint.lineWidth, toPoint.lineWidth)\n              newPoint.adjustingLineWidth = newPoint.lineWidth\n\n              new_stroke.points.push(newPoint)\n\n              edit_group.new_strokes.push(new_stroke)\n\n              strokeStarted = false\n              drawingRemaining = false\n            }\n\n            // draw segment's to-side part\n            if (lengthTo > 0.0 && lengthTo < 1.0) {\n\n              if (drawingRemaining) {\n\n                edit_group.new_strokes.push(new_stroke)\n              }\n\n              vec3.lerp(this.fromLocation, fromLocation, toLocation, lengthTo)\n\n              new_stroke = new VectorStroke()\n\n              const newPoint = new VectorPoint()\n\n              vec3.copy(newPoint.location, this.fromLocation)\n              vec3.copy(newPoint.adjustingLocation, newPoint.location)\n\n              newPoint.lineWidth = Maths.lerp(lengthFrom, fromPoint.lineWidth, toPoint.lineWidth)\n              newPoint.adjustingLineWidth = newPoint.lineWidth\n\n              new_stroke.points.push(newPoint)\n\n              new_stroke.points.push(toPoint)\n\n              strokeStarted = true\n              drawingRemaining = true\n            }\n          }\n        }\n\n        if (drawingRemaining) {\n\n          edit_group.new_strokes.push(new_stroke)\n        }\n      }\n\n      for (const stroke of edit_group.new_strokes) {\n\n        VectorStrokeLogic.calculateParameters(stroke, selGroup.layer.lineWidthBiasRate)\n      }\n\n      editGroups.push(edit_group)\n\n      this.defferedProcess.addGeometryForDeletingEmpties(selGroup.geometry)\n      this.defferedProcess.addGroup(selGroup.layer, selGroup.group, PostUpdateSituationTypeID.deleteObjects)\n    }\n\n    if (editGroups.length > 0) {\n\n      this.editGroups = editGroups\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editGroup of this.editGroups) {\n\n      editGroup.target_group.lines = editGroup.old_strokes\n\n      for (const stroke of editGroup.replaced_strokes) {\n\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.none\n      }\n    }\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editGroup of this.editGroups) {\n\n      editGroup.target_group.lines = editGroup.new_strokes\n\n      for (const stroke of editGroup.replaced_strokes) {\n\n        stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.delete\n      }\n    }\n  }\n}\n","﻿import { Command_AddStroke } from '../commands'\nimport { Lists, Logic_Points } from '../common-logics'\nimport { SubToolContext, SubToolDrawingContext } from '../context'\nimport { VectorLayer, VectorLayerGeometry, VectorPoint, VectorStroke, VectorStrokeGroup } from '../document-data'\nimport { HitTest_VectorStroke_PointToStroke_Nearest, VectorStrokeLogic } from '../document-logic'\nimport { ModalToolBase, ToolPointerEvent } from '../tool'\nimport { ViewKeyframeLayer } from '../view'\n\nexport class Tool_DrawLine extends ModalToolBase {\n\n  helpText = '線を追加します。Shiftキーで直前の線から続けて塗りつぶします。' // @override\n\n  strokeSingleHitTester = new HitTest_VectorStroke_PointToStroke_Nearest()\n\n  editStroke: VectorStroke = null\n  resampledLine: VectorStroke = null\n  continuousFill = false\n  continuousFillFromStrokeTail = true\n  lastMouseLocation = vec3.create()\n\n  strokeSmoothLevel = 3\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerStrokeDrawableLayer()\n    )\n  }\n\n  onActivated(ctx: SubToolContext) { // @override\n\n    if (ctx.activeVectorLine == null) {\n\n      this.continuousFill = false\n      this.continuousFillFromStrokeTail = true\n    }\n\n    ctx.setRedrawEditorWindow()\n  }\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    drawing.editorDrawer.drawaBrushCursor(ctx.brushBaseSize, ctx.currentVectorLayer.lineWidthBiasRate)\n\n    if (this.resampledLine != null) {\n\n      drawing.editorDrawer.drawOperatorSolidStroke(this.resampledLine, ctx.currentVectorLayer.lineWidthBiasRate)\n    }\n\n    if (VectorLayer.isSurroundingFillLayer(ctx.currentLayer)) {\n\n      if (this.continuousFill && ctx.activeVectorGroup != null && ctx.activeVectorLine != null) {\n\n        const targetPoint = this.continuousFillFromStrokeTail ? ctx.activeVectorLine.points.at(-1) : ctx.activeVectorLine.points.at(0)\n\n        drawing.render.setStrokeColorV(ctx.drawStyle.sampledPointColor)\n\n        drawing.editorDrawer.drawStrokeConnectionInfoLine(targetPoint.location, this.lastMouseLocation)\n      }\n    }\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.resetState(true)\n\n    this.addPointToEditLine(e, ctx)\n\n    vec3.copy(this.lastMouseLocation, ctx.mouseCursorLocation)\n\n    ctx.tool.startModalTool(this.subtoolID)\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.setRedrawEditorWindow()\n\n    if (VectorLayer.isSurroundingFillLayer(ctx.currentLayer)) {\n\n      if (ctx.activeVectorLine != null) {\n\n        ctx.setRedrawEditorWindow()\n      }\n    }\n\n    if (this.isEditing()) {\n\n      this.addPointToEditLine(e, ctx)\n    }\n    else {\n\n      this.updateLastMouseLocation(ctx)\n    }\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    // line selecting with single click\n    if (VectorLayer.isSurroundingFillLayer(ctx.currentLayer)) {\n\n      if (!e.isPointerMoved) {\n\n        this.selectGroup(e.location, ctx)\n        this.resetState()\n        ctx.setRedrawEditorWindow()\n        return\n      }\n\n      if (ctx.activeVectorLine != null) {\n\n        ctx.setRedrawEditorWindow()\n      }\n\n      this.updateLastMouseLocation(ctx)\n    }\n\n    if (this.resampledLine == null || VectorStrokeLogic.isEmptyStroke(this.resampledLine)) {\n      this.resetState()\n      return\n    }\n\n    this.executeCommand(ctx)\n\n    this.resetState()\n\n    ctx.setRedrawCurrentLayer()\n    ctx.setRedrawEditorWindow()\n  }\n\n  private isEditing(): boolean {\n\n    return (this.editStroke != null)\n  }\n\n  private resetState(isForOperationStart = false) {\n\n    this.editStroke = null\n    this.resampledLine = null\n\n    if (isForOperationStart) {\n\n      this.editStroke = new VectorStroke()\n    }\n  }\n\n  private addPointToEditLine(e: ToolPointerEvent, ctx: SubToolContext) {\n\n    const point = new VectorPoint()\n    vec3.copy(point.location, e.location)\n    point.lineWidth = ctx.drawLineBaseWidth\n\n    this.editStroke.points.push(point)\n\n    VectorStrokeLogic.calculateParameters(this.editStroke)\n\n    if (!VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n\n      this.resampledLine = this.generateResampledLine(this.editStroke, ctx)\n    }\n  }\n\n  private updateLastMouseLocation(ctx: SubToolContext) {\n\n    vec3.copy(this.lastMouseLocation, ctx.mouseCursorLocation)\n  }\n\n  private selectGroup(location: Vec3, ctx: SubToolContext) {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    let hitedGeometry: VectorLayerGeometry = null\n    let hitedGroup: VectorStrokeGroup = null\n    let hitedStroke: VectorStroke = null\n    let isTailHited = true\n\n    ViewKeyframeLayer.forEachVectorGeometry(viewKeyframeLayers, (geometry, layer) => {\n\n      if (hitedStroke != null) {\n        return\n      }\n\n      this.strokeSingleHitTester.startProcess()\n      this.strokeSingleHitTester.processGeometry(layer, geometry, location, ctx.touchViewRadius)\n\n      if (this.strokeSingleHitTester.hitedStoke != null) {\n\n        // Seelcts first stroke or last stroke in the group\n\n        const headStroke = this.strokeSingleHitTester.hitedGroup.lines.at(0)\n        const headPoint = headStroke.points.at(0)\n        const distanceToHead = Logic_Points.pointToPoint_DistanceSQ(headPoint.location, location)\n\n        const tailStroke = this.strokeSingleHitTester.hitedGroup.lines.at(-1)\n        const tailPoint = tailStroke.points.at(-1)\n        const distanceTotail = Logic_Points.pointToPoint_DistanceSQ(tailPoint.location, location)\n\n        isTailHited = (distanceToHead > distanceTotail)\n        hitedGeometry = this.strokeSingleHitTester.hitedGeometry\n        hitedGroup = this.strokeSingleHitTester.hitedGroup\n        hitedStroke = (isTailHited ? tailStroke : headStroke)\n      }\n    })\n\n    if (hitedStroke == null || VectorStrokeLogic.isEmptyStroke(hitedStroke)) {\n\n      ctx.unsetAcrtiveVectorStrokeAndGroup()\n      return\n    }\n\n    ctx.setActiveVectorStroke(hitedStroke, hitedGroup, hitedGeometry)\n\n    this.continuousFill = true\n    this.continuousFillFromStrokeTail = isTailHited\n  }\n\n  private generateResampledLine(editorLine: VectorStroke, ctx: SubToolContext): VectorStroke { // @virtual\n\n    const resamplingUnitLength = ctx.getViewScaledResamplingUnitLengthForBrush()\n\n    const resampledLine = VectorStrokeLogic.createResampledLine(editorLine, resamplingUnitLength)\n\n    VectorStrokeLogic.smooth(resampledLine, this.strokeSmoothLevel)\n\n    return resampledLine\n  }\n\n  private executeCommand(ctx: SubToolContext) {\n\n    const newStroke = this.resampledLine\n\n    // Execute a command\n    if (VectorLayer.isVectorStrokeLayer(ctx.currentLayer)) {\n\n      const command = new Command_AddStroke()\n      command.setTarget(ctx.currentVectorLayer, ctx.currentVectorLayerGeometry, null, ctx.activeVectorGroup, newStroke)\n\n      ctx.commandHistory.executeCommand(command, ctx)\n    }\n    else if (VectorLayer.isSurroundingFillLayer(ctx.currentLayer)) {\n\n      // Collect continuous filling info\n      let connectTo_stroke: VectorStroke | null = null\n\n      if (this.continuousFill && ctx.activeVectorLine != null && ctx.activeVectorGroup != null) {\n\n        const targetPoint = this.continuousFillFromStrokeTail ? ctx.activeVectorLine.points.at(-1) :  ctx.activeVectorLine.points.at(0)\n\n        const headPoint = newStroke.points.at(0)\n        const tailPoint = newStroke.points.at(-1)\n\n        const distanceFromHead = Logic_Points.pointToPoint_DistanceSQ(targetPoint.location, headPoint.location)\n        const distanceFromTail = Logic_Points.pointToPoint_DistanceSQ(targetPoint.location, tailPoint.location)\n\n        if ((this.continuousFillFromStrokeTail && distanceFromTail < distanceFromHead)\n        || (!this.continuousFillFromStrokeTail && distanceFromTail > distanceFromHead)) {\n\n          Lists.reverse(newStroke.points)\n        }\n\n        if (this.continuousFillFromStrokeTail) {\n\n          connectTo_stroke = ctx.activeVectorLine\n        }\n      }\n      else {\n\n        this.continuousFillFromStrokeTail = true\n      }\n\n      const command = new Command_AddStroke()\n      command.setTarget(ctx.currentVectorLayer, ctx.currentVectorLayerGeometry, null, ctx.activeVectorGroup, newStroke)\n      command.addToTop = !this.continuousFillFromStrokeTail\n\n      ctx.commandHistory.executeCommand(command, ctx)\n\n      ctx.setActiveVectorStroke(newStroke, command.group, command.geometry)\n\n      this.continuousFill = true\n    }\n  }\n}\n","﻿import { Command_AddStroke } from '../commands'\nimport { SubToolContext, SubToolDrawingContext } from '../context'\nimport { VectorLayer, VectorPoint, VectorStroke } from '../document-data'\nimport { HitTest_VectorStroke_PointToStroke_Nearest, VectorStrokeLogic } from '../document-logic'\nimport { BrushTypeID, ModalToolBase, ToolPointerEvent } from '../tool'\n\nexport class Tool_DrawPointBrush extends ModalToolBase {\n\n  helpText = '線を追加します。Shiftキーで直前の線から続けて塗りつぶします。' // @override\n\n  strokeSingleHitTester = new HitTest_VectorStroke_PointToStroke_Nearest()\n\n  editStroke: VectorStroke = null\n  resampledLine: VectorStroke = null\n  continuousFill = false\n  continuousFillFromStrokeTail = true\n\n  strokeSmoothLevel = 3\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerStrokeDrawableLayer()\n    )\n  }\n\n  onActivated(ctx: SubToolContext) { // @override\n\n    if (ctx.activeVectorLine == null) {\n\n      this.continuousFill = false\n      this.continuousFillFromStrokeTail = true\n    }\n\n    ctx.setRedrawEditorWindow()\n  }\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    drawing.editorDrawer.drawaBrushCursor(ctx.brushBaseSize, ctx.currentVectorLayer.lineWidthBiasRate)\n\n    if (this.resampledLine != null) {\n\n      drawing.editorDrawer.drawOperatorPointBrushStroke(this.resampledLine, ctx.currentVectorLayer.layerColor, false)\n    }\n    else if (this.editStroke != null) {\n\n      drawing.editorDrawer.drawOperatorPointBrushStroke(this.editStroke, ctx.currentVectorLayer.layerColor, false)\n    }\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.resetState(true)\n\n    this.addPointToEditLine(e, ctx)\n\n    ctx.tool.startModalTool(this.subtoolID)\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.setRedrawEditorWindow()\n\n    if (this.editStroke == null) {\n      return\n    }\n\n    this.addPointToEditLine(e, ctx)\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    if (this.resampledLine == null || VectorStrokeLogic.isEmpty(this.resampledLine)) {\n      this.resetState()\n      return\n    }\n\n    this.executeCommand(ctx)\n\n    this.resetState()\n\n    ctx.setRedrawCurrentLayer()\n    ctx.setRedrawEditorWindow()\n  }\n\n  private resetState(isForOperationStart = false) {\n\n    this.editStroke = null\n    this.resampledLine = null\n\n    if (isForOperationStart) {\n\n      this.editStroke = new VectorStroke()\n    }\n  }\n\n  private addPointToEditLine(e: ToolPointerEvent, ctx: SubToolContext) {\n\n    const point = new VectorPoint()\n    vec3.copy(point.location, e.location)\n    point.lineWidth = ctx.drawLineBaseWidth\n\n    this.editStroke.points.push(point)\n\n    VectorStrokeLogic.calculateParameters(this.editStroke)\n\n    if (!VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n\n      this.resampledLine = this.generateResampledLine(this.editStroke, ctx)\n    }\n  }\n\n  private generateResampledLine(editorLine: VectorStroke, ctx: SubToolContext): VectorStroke { // @virtual\n\n    const resamplingUnitLength = ctx.getViewScaledResamplingUnitLengthForBrush()\n\n    const resampledLine = VectorStrokeLogic.createResampledLine(editorLine, resamplingUnitLength)\n\n    VectorStrokeLogic.smooth(resampledLine, this.strokeSmoothLevel)\n\n    return resampledLine\n  }\n\n  private executeCommand(ctx: SubToolContext) {\n\n    const newStroke = this.resampledLine\n\n    if (VectorLayer.isPointBrushFillLayer(ctx.currentLayer)) {\n\n      const command = new Command_AddStroke()\n      command.setTarget(ctx.currentVectorLayer, ctx.currentVectorLayerGeometry, null, ctx.activeVectorGroup, newStroke)\n\n      ctx.commandHistory.executeCommand(command, ctx)\n    }\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { Lists } from '../common-logics'\nimport { SubToolContext, SubToolDrawingContext } from '../context'\nimport { AutoFillLayer, AutoFillPoint, AutoFillPointGroup, VectorStroke, VectorStrokeGroup } from '../document-data'\nimport { AutoFillLogic, EditAnimationFrameLogic } from '../document-logic'\nimport { SubTool, ToolPointerEvent } from '../tool'\nimport { ViewKeyframeLayer } from '../view'\n\nclass Tool_AutoFillPointBase extends SubTool {\n\n  protected sibling_ViewKeyframeLayers: ViewKeyframeLayer[] = []\n  private fromLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private toLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  private offset = vec3.fromValues(0.0, 0.0, 0.0)\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      AutoFillLayer.isAutoFillLayer(ctx.currentLayer)\n    )\n  }\n\n  onActivated(ctx: SubToolContext) { // @override\n\n    // 同じ階層のレイヤーを取得\n    this.sibling_ViewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayers()\n      .filter(vkfl => vkfl.layer.runtime.parentLayer == ctx.currentLayer.runtime.parentLayer)\n  }\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    this.drawAutoFillPoints(ctx, drawing)\n  }\n\n  drawAutoFillPoints(ctx: SubToolContext, drawing: SubToolDrawingContext) {\n\n    if (ctx.currentAutoFillLayer == null) {\n      return\n    }\n\n    let pointScale = ctx.getViewScaledLength(10.0)\n    pointScale = Math.min(pointScale, 10.0)\n\n    const strokeWidth = ctx.getViewScaledLength(2.0)\n\n    const keyframe = EditAnimationFrameLogic.findLastKeyframeData(ctx.currentAutoFillLayer.keyframes, ctx.currentTimeFrame)\n\n    if (keyframe == null) {\n      throw new Error('ERROR 0000:Could not get keyframe for AutoFillLayer')\n    }\n\n    AutoFillLayer.forEachFillPoint(keyframe, (_group, fillPoint) => {\n\n      vec3.add(this.fromLocation, fillPoint.location, vec3.scale(this.offset, vec3.normalize(this.offset, fillPoint.lookDirection), pointScale * 1.0))\n      vec3.add(this.toLocation, fillPoint.location, vec3.scale(this.offset, fillPoint.lookDirection, 1.0))\n\n      drawing.drawCircle(fillPoint.location, pointScale, strokeWidth * 3.0, ctx.drawStyle.autoFillPointEdgeColor)\n      drawing.drawLine(this.fromLocation, this.toLocation, strokeWidth * 3.0, ctx.drawStyle.autoFillPointEdgeColor)\n\n      drawing.drawCircle(fillPoint.location, pointScale, strokeWidth, ctx.drawStyle.autoFillPointLineColor)\n      drawing.drawLine(this.fromLocation, this.toLocation, strokeWidth, ctx.drawStyle.autoFillPointLineColor)\n    })\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.setRedrawEditorWindow()\n  }\n}\n\nexport class Tool_AddAutoFillPoint extends Tool_AutoFillPointBase {\n\n  helpText = 'クリックした場所に自動塗りつぶしの開始点を追加します。'\n\n  minDistanceRange = 15.0\n\n  lookDirection = vec3.fromValues(0.0, 0.0, 0.0)\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    drawing.editorDrawer.drawPointerCursor(ctx.toolBaseViewRadius)\n\n    drawing.setLineDash(2.0)\n    drawing.editorDrawer.drawPointerCursor(this.minDistanceRange / 2)\n    drawing.cancelLineDash()\n\n    this.drawAutoFillPoints(ctx, drawing)\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.executeCommand(e.location, ctx)\n\n    ctx.setRedrawMainWindow()\n  }\n\n  private executeCommand(start_Location: Vec3, ctx: SubToolContext) {\n\n    const start_Stroke = AutoFillLogic.findStartStroke(\n      start_Location,\n      ctx.toolBaseViewRadius,\n      this.sibling_ViewKeyframeLayers\n    )\n\n    if (start_Stroke == null) {\n      return\n    }\n\n    const fill_Stroke = new VectorStroke()\n\n    const isAvailable = AutoFillLogic.generate(\n      fill_Stroke,\n      this.lookDirection,\n      start_Stroke,\n      start_Location,\n      this.minDistanceRange,\n      this.sibling_ViewKeyframeLayers\n    )\n\n    if (!isAvailable) {\n      return\n    }\n\n    const keyframe = EditAnimationFrameLogic.findLastKeyframeData(ctx.currentAutoFillLayer.keyframes, ctx.currentTimeFrame)\n\n    const autoFillPoint = new AutoFillPoint()\n    autoFillPoint.minDistanceRange = this.minDistanceRange\n    vec3.copy(autoFillPoint.location, start_Location)\n    vec3.copy(autoFillPoint.lookDirection, this.lookDirection)\n\n    const command = new Command_AddAutoFillPoint()\n    command.autoFillPointGroup = keyframe.groups[0]\n    command.vectorStrokeGroup = keyframe.geometry.units[0].groups[0]\n    command.autoFillPoint = autoFillPoint\n    command.newStroke = fill_Stroke\n\n    ctx.commandHistory.executeCommand(command, ctx)\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n}\n\nexport class Command_AddAutoFillPoint extends CommandBase {\n\n  autoFillPoint: AutoFillPoint = null\n  autoFillPointGroup: AutoFillPointGroup = null\n  vectorStrokeGroup: VectorStrokeGroup = null\n  newStroke: VectorStroke = null\n\n  private newAutoFillPoints: AutoFillPoint[] = null\n  private oldAutoFillPoints: AutoFillPoint[] = null\n  private newStrokes: VectorStroke[] = null\n  private oldStrokes: VectorStroke[] = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.oldAutoFillPoints = this.autoFillPointGroup.fillPoints\n    this.oldStrokes = this.vectorStrokeGroup.lines\n\n    this.newAutoFillPoints = Lists.clone(this.oldAutoFillPoints)\n    this.newAutoFillPoints.push(this.autoFillPoint)\n\n    this.newStrokes = Lists.clone(this.vectorStrokeGroup.lines)\n    this.newStrokes.push(this.newStroke)\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    this.autoFillPointGroup.fillPoints = this.oldAutoFillPoints\n    this.vectorStrokeGroup.lines = this.oldStrokes\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    this.autoFillPointGroup.fillPoints = this.newAutoFillPoints\n    this.vectorStrokeGroup.lines = this.newStrokes\n  }\n}\n\nexport class Tool_DeleteAutoFillPoint extends Tool_AutoFillPointBase {\n\n  helpText = 'クリックした場所の自動塗りつぶしの開始点を削除します。'\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    drawing.editorDrawer.drawPointerCursor(ctx.toolBaseViewRadius)\n\n    this.drawAutoFillPoints(ctx, drawing)\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.executeCommand(e.location, ctx)\n\n    ctx.setRedrawMainWindow()\n  }\n\n  private executeCommand(location: Vec3, ctx: SubToolContext) {\n\n    const keyframe = EditAnimationFrameLogic.findLastKeyframeData(ctx.currentAutoFillLayer.keyframes, ctx.currentTimeFrame)\n\n    const minDistance = ctx.toolBaseViewRadius\n\n    let delete_FillPoint: AutoFillPoint = null\n    AutoFillLayer.forEachFillPoint(keyframe, (_group, fillPoint, looping) => {\n\n      if (vec3.distance(fillPoint.location, location) < minDistance) {\n\n        delete_FillPoint = fillPoint\n        looping.break = true\n      }\n    })\n\n    const command = new Command_DeleteAutoFillPoint()\n    command.autoFillPointGroup = keyframe.groups[0]\n    command.delete_AutoFillPoint = delete_FillPoint\n    command.defferedProcess.addLayer(ctx.currentAutoFillLayer)\n\n    ctx.commandHistory.executeCommand(command, ctx)\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n}\n\nexport class Command_DeleteAutoFillPoint extends CommandBase {\n\n  autoFillPointGroup: AutoFillPointGroup = null\n  delete_AutoFillPoint: AutoFillPoint = null\n\n  newAutoFillPoints: AutoFillPoint[] = null\n  oldAutoFillPoints: AutoFillPoint[] = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.oldAutoFillPoints = this.autoFillPointGroup.fillPoints\n\n    this.newAutoFillPoints = this.oldAutoFillPoints.filter(point => point != this.delete_AutoFillPoint)\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    this.autoFillPointGroup.fillPoints = this.oldAutoFillPoints\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    this.autoFillPointGroup.fillPoints = this.newAutoFillPoints\n  }\n}\n","﻿import { SubToolContext, SubToolDrawingContext } from '../context'\nimport { Layer } from '../document-data'\nimport { VectorPointLogic } from '../document-logic'\nimport { float, int, Logic_Points, RectangleArea } from '../common-logics'\nimport { ModalToolBase, ToolPointerEvent } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\n\nexport enum LatticePointEditTypeID {\n\n  none, horizontalOnly, verticalOnly, allDirection\n}\n\nexport class LatticePoint {\n\n  latticePointEditType = LatticePointEditTypeID.none\n  baseLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  location = vec3.fromValues(0.0, 0.0, 0.0)\n  displayBaseLocationOffset = vec3.fromValues(0.0, 0.0, 0.0)\n  displayOffset = vec3.fromValues(0.0, 0.0, 0.0)\n  displayLocation = vec3.fromValues(0.0, 0.0, 0.0)\n}\n\nexport class LatticeEdge {\n\n  partIndex = -1\n  latticePointFrom: LatticePoint = null\n  latticePointTo: LatticePoint = null\n  pointIndexFrom = 0\n  pointIndexTo = 0\n  mouseOver = false\n}\n\nexport enum SelectedLatticePartID {\n\n  none, latticePoint, latticeEdge\n}\n\nexport enum LatticeStateID {\n\n  invalid = 0,\n  initialState = 1,\n  modified = 2,\n}\n\nexport enum TransformType {\n\n  none = 0,\n  grabMove = 1,\n  rotate = 2,\n  scale = 3\n}\n\nexport enum TransformLockType {\n\n  none = 0,\n  x = 1,\n  y = 2,\n}\n\nexport enum TransformModifyType {\n\n  none = 0,\n  zero = 1,\n  slow = 2,\n  one = 3,\n}\n\ninterface HandleKeyDownForTransformModifyingOption {\n\n  g?: boolean\n  r?: boolean\n  s?: boolean\n  x?: boolean\n  y?: boolean\n  zero?: boolean\n  one?: boolean\n  shift?: boolean\n  key: string\n  ctx: SubToolContext\n}\n\nexport class Tool_Transform_Lattice extends ModalToolBase {\n\n  isEditTool = true // @override\n\n  allEdgeSelection = false // @virtual\n\n  latticeState = LatticeStateID.invalid\n  bound_contentArea = new RectangleArea()\n  inner_contentArea = new RectangleArea()\n\n  latticePoints: LatticePoint[] = null\n  latticeEdges: LatticeEdge[] = null\n  latticePointCount = 4\n\n  transformType = TransformType.none\n  transformLockType = TransformLockType.none\n  transformModifyType = TransformModifyType.none\n  transformCalculator: ITool_Transform_Lattice_Calculator = null\n  grabMove_Calculator = new GrabMove_Calculator()\n  rotate_Calculator = new Rotate_Calculator()\n  scale_Calculator = new Scale_Calculator()\n\n  mouseOver_SelectedLatticePart = SelectedLatticePartID.none\n  mouseOver_PartIndex = -1\n  mouseOver_PartIndexTo = -1\n\n  dLocation = vec3.create()\n  offset = vec3.create()\n  offsetScale = vec3.create()\n  offsetMatrix = mat4.create()\n\n  constructor() {\n    super()\n\n    this.createLatticePoints()\n  }\n\n  mouseAnchorLocation = vec3.create()\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.currentLayer != null\n      && Layer.isEditTarget(ctx.currentLayer)\n    )\n  }\n\n  onActivated(ctx: SubToolContext) { // @override\n\n    this.latticeState = LatticeStateID.invalid\n    this.mouseOver_SelectedLatticePart = SelectedLatticePartID.none\n\n    const available = this.prepareLatticePoints(ctx)\n\n    if (available) {\n\n      this.latticeState = LatticeStateID.initialState\n    }\n    else {\n\n      this.latticeState = LatticeStateID.invalid\n    }\n  }\n\n  // Preparing for operation\n\n  prepareModal(e: ToolPointerEvent, ctx: SubToolContext): boolean { // @override\n\n    this.clearEditData()\n\n    this.latticeState = LatticeStateID.invalid\n    this.transformLockType = TransformLockType.none\n    this.transformModifyType = TransformModifyType.none\n\n    if (!this.checkTarget(ctx)) {\n      return false\n    }\n\n    // Create lattie points\n    if (this.latticePoints == null) {\n\n      this.createLatticePoints()\n    }\n\n    // Current cursor location\n    vec3.copy(this.mouseAnchorLocation, e.location)\n\n    // Caluclate surrounding rectangle of all selected points\n    const available = this.prepareLatticePoints(ctx)\n\n    if (!available) {\n      this.latticeState = LatticeStateID.invalid\n      return false\n    }\n\n    ctx.tool.updateOperationOriginByPoints(this.latticePoints)\n\n    this.latticeState = LatticeStateID.initialState\n\n    this.setLatticeLocation(ctx)\n\n    this.selectTransformCalculator(ctx)\n\n    // Create edit info\n    this.prepareEditData(ctx)\n\n    this.prepareModalExt(ctx)\n\n    return this.existsEditData()\n  }\n\n  protected createLatticePoints() {\n\n    this.latticePoints = []\n\n    for (let i = 0; i < this.latticePointCount; i++) {\n\n      this.latticePoints.push(new LatticePoint())\n    }\n\n    this.latticeEdges = []\n\n    for (let i = 0; i < this.latticePoints.length; i++) {\n\n      const edge = new LatticeEdge()\n      edge.partIndex = i\n      edge.pointIndexFrom = i\n      edge.pointIndexTo = (i + 1) % this.latticePoints.length\n      edge.latticePointFrom = this.latticePoints[edge.pointIndexFrom]\n      edge.latticePointTo = this.latticePoints[edge.pointIndexTo]\n\n      this.latticeEdges.push(edge)\n    }\n  }\n\n  protected setLatticePointsByRectangle(bound_area: RectangleArea, inner_area: RectangleArea) {\n\n    vec3.set(this.latticePoints[0].baseLocation, inner_area.left, inner_area.top, 0.0)\n    vec3.set(this.latticePoints[1].baseLocation, inner_area.right, inner_area.top, 0.0)\n    vec3.set(this.latticePoints[2].baseLocation, inner_area.right, inner_area.bottom, 0.0)\n    vec3.set(this.latticePoints[3].baseLocation, inner_area.left, inner_area.bottom, 0.0)\n\n    const leftBound_offset = bound_area.left - inner_area.left\n    const topBound_offset = bound_area.top - inner_area.top\n    const rightBound_offset = bound_area.right - inner_area.right\n    const bottomBound_offset = bound_area.bottom - inner_area.bottom\n    vec3.set(this.latticePoints[0].displayBaseLocationOffset, leftBound_offset, topBound_offset, 0.0)\n    vec3.set(this.latticePoints[1].displayBaseLocationOffset, rightBound_offset, topBound_offset, 0.0)\n    vec3.set(this.latticePoints[2].displayBaseLocationOffset, rightBound_offset, bottomBound_offset, 0.0)\n    vec3.set(this.latticePoints[3].displayBaseLocationOffset, leftBound_offset, bottomBound_offset, 0.0)\n\n    this.resetLatticePointLocationToBaseLocation()\n  }\n\n  protected setLatticePointOffsetsByRectangle() {\n\n    vec3.set(this.latticePoints[0].displayOffset, -1.0, -1.0, 0.0)\n    vec3.set(this.latticePoints[1].displayOffset, 1.0, -1.0, 0.0)\n    vec3.set(this.latticePoints[2].displayOffset, 1.0, 1.0, 0.0)\n    vec3.set(this.latticePoints[3].displayOffset, -1.0, 1.0, 0.0)\n  }\n\n  protected resetLatticePointLocationToBaseLocation() {\n\n    for (const latticePoint of this.latticePoints) {\n\n      vec3.copy(latticePoint.location, latticePoint.baseLocation)\n    }\n  }\n\n  protected applytLatticePointBaseLocation() {\n\n    for (const latticePoint of this.latticePoints) {\n\n      vec3.copy(latticePoint.baseLocation, latticePoint.location)\n    }\n  }\n\n  // Preparing for operation (Override methods)\n\n  protected checkTarget(_ctx: SubToolContext): boolean { // @virtual\n\n    return (this.transformType != TransformType.none)\n  }\n\n  protected prepareLatticePoints(_ctx: SubToolContext): boolean { // @virtual\n\n    this.setLatticePointsByRectangle(this.bound_contentArea, this.inner_contentArea)\n\n    return this.existsEditData()\n  }\n\n  protected setLatticeLocation(ctx: SubToolContext) { // @virtual\n\n    this.setLatticePointOffsetsByRectangle()\n\n    this.resetLatticePointLocationToBaseLocation()\n  }\n\n  protected clearEditData() { // @virtual\n  }\n\n  protected selectTransformCalculator(_ctx: SubToolContext) { // @virtual\n  }\n\n  protected prepareEditData(_ctx: SubToolContext) { // @virtual\n  }\n\n  protected prepareModalExt(_ctx: SubToolContext) { // @override\n  }\n\n  protected existsEditData(): boolean { // @virtual\n\n    return false\n  }\n\n  // Lattice transforma operation functions\n\n  protected setLatticeAffineTransform(transformType: TransformType, ctx: SubToolContext) {\n\n    for (const latticePoint of this.latticePoints) {\n\n      latticePoint.latticePointEditType = LatticePointEditTypeID.allDirection\n    }\n\n    if (transformType == TransformType.grabMove) {\n\n      this.transformType = TransformType.grabMove\n      this.transformCalculator = this.grabMove_Calculator\n    }\n    else if (transformType == TransformType.rotate) {\n\n      this.transformType = TransformType.rotate\n      this.transformCalculator = this.rotate_Calculator\n    }\n    else if (transformType == TransformType.scale) {\n\n      this.transformType = TransformType.scale\n      this.transformCalculator = this.scale_Calculator\n    }\n\n    this.transformCalculator.prepare(ctx)\n  }\n\n  protected startLatticeAffineTransform(transformType: TransformType, isContinueEdit: boolean, ctx: SubToolContext) {\n\n    this.setLatticeAffineTransform(transformType, ctx)\n\n    vec3.copy(this.mouseAnchorLocation, ctx.mouseCursorLocation)\n\n    if (isContinueEdit) {\n\n      this.applytLatticePointBaseLocation()\n    }\n    else {\n\n      ctx.tool.startModalTool(this.subtoolID)\n    }\n  }\n\n  protected startLatticeTransform(ctx: SubToolContext) {\n\n    for (const latticePoint of this.latticePoints) {\n\n      latticePoint.latticePointEditType = LatticePointEditTypeID.none\n    }\n\n    if (this.mouseOver_SelectedLatticePart == SelectedLatticePartID.latticePoint) {\n\n      let sidePointIndexH = -1\n      let sidePointIndexV = -1\n      if (this.mouseOver_PartIndex == 0) {\n\n        sidePointIndexH = 3\n        sidePointIndexV = 1\n      }\n      else if (this.mouseOver_PartIndex == 1) {\n\n        sidePointIndexH = 2\n        sidePointIndexV = 0\n      }\n      else if (this.mouseOver_PartIndex == 2) {\n\n        sidePointIndexH = 1\n        sidePointIndexV = 3\n      }\n      else if (this.mouseOver_PartIndex == 3) {\n\n        sidePointIndexH = 0\n        sidePointIndexV = 2\n      }\n\n      this.latticePoints[this.mouseOver_PartIndex].latticePointEditType = LatticePointEditTypeID.allDirection\n      this.latticePoints[sidePointIndexH].latticePointEditType = LatticePointEditTypeID.horizontalOnly\n      this.latticePoints[sidePointIndexV].latticePointEditType = LatticePointEditTypeID.verticalOnly\n\n      this.transformType = TransformType.grabMove\n      this.transformCalculator = this.grabMove_Calculator\n      this.latticeState = LatticeStateID.initialState\n\n      this.transformCalculator.prepare(ctx)\n\n      ctx.tool.startModalTool(this.subtoolID)\n    }\n\n    else if (this.mouseOver_SelectedLatticePart == SelectedLatticePartID.latticeEdge) {\n\n      let latticePointEditType: LatticePointEditTypeID\n      if (this.mouseOver_PartIndex == 0 || this.mouseOver_PartIndex == 2) {\n\n        latticePointEditType = LatticePointEditTypeID.verticalOnly\n      }\n      else {\n\n        latticePointEditType = LatticePointEditTypeID.horizontalOnly\n      }\n\n      this.latticePoints[this.mouseOver_PartIndex].latticePointEditType = latticePointEditType\n      this.latticePoints[this.mouseOver_PartIndexTo].latticePointEditType = latticePointEditType\n\n      this.transformType = TransformType.grabMove\n      this.transformCalculator = this.grabMove_Calculator\n      this.latticeState = LatticeStateID.initialState\n\n      this.transformCalculator.prepare(ctx)\n\n      ctx.tool.startModalTool(this.subtoolID)\n    }\n  }\n\n  protected endTransform(ctx: SubToolContext) {\n\n    this.processTransform(ctx)\n\n    this.executeCommand(ctx)\n\n    this.transformType = TransformType.none\n    this.transformCalculator = null\n\n    ctx.tool.endModalTool()\n  }\n\n  protected cancelTransform(ctx: SubToolContext) {\n\n    this.transformType = TransformType.none\n    this.transformCalculator = null\n\n    ctx.tool.cancelModalTool()\n  }\n\n  // Operation inputs\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (!ctx.tool.isModalToolRunning() && e.isLeftButtonPressing) {\n\n      this.processMouseOver(e, ctx)\n\n      this.startLatticeTransform(ctx)\n    }\n    else {\n\n      if (e.isRightButtonPressing) {\n\n        this.cancelTransform(ctx)\n      }\n    }\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.tool.isModalToolRunning()) {\n\n      // Move lattice points\n\n      this.processLatticePointMouseMove(ctx)\n\n      // Transform edit data\n\n      this.processTransform(ctx)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n    else {\n\n      this.processMouseOver(e, ctx)\n\n      ctx.setRedrawEditorWindow() // redraw cursor\n    }\n  }\n\n  protected processMouseOver(e: ToolPointerEvent, ctx: SubToolContext) {\n\n    this.mouseOver_SelectedLatticePart = SelectedLatticePartID.none\n    this.mouseOver_PartIndex = -1\n    this.mouseOver_PartIndexTo = -1\n\n    for (const edge of this.latticeEdges) {\n\n      edge.mouseOver = false\n    }\n\n    const hitedPointIndex = this.getMouseOverLatticePointIndex(e, ctx)\n\n    if (hitedPointIndex != -1) {\n\n      this.mouseOver_SelectedLatticePart = SelectedLatticePartID.latticePoint\n      this.mouseOver_PartIndex = hitedPointIndex\n    }\n    else {\n\n      const hitedEdge = this.getMouseOverLatticeEdgeIndex(e, ctx)\n\n      if (hitedEdge != null) {\n\n        this.mouseOver_SelectedLatticePart = SelectedLatticePartID.latticeEdge\n        this.mouseOver_PartIndex = hitedEdge.pointIndexFrom\n        this.mouseOver_PartIndexTo = hitedEdge.pointIndexTo\n\n        if (this.allEdgeSelection) {\n\n          for (const edge of this.latticeEdges) {\n\n            edge.mouseOver = true\n          }\n        }\n        else {\n\n          hitedEdge.mouseOver = true\n        }\n      }\n    }\n  }\n\n  protected getMouseOverLatticePointIndex(e: ToolPointerEvent, ctx: SubToolContext): int {\n\n    let resultIndex = -1\n\n    const scaledHitRadius = ctx.getViewScaledLength(ctx.drawStyle.latticePointHitRadius)\n\n    for (let index = 0; index < this.latticePoints.length; index++) {\n\n      const latticePoint = this.latticePoints[index]\n\n      const distance = vec3.distance(latticePoint.displayLocation, e.location)\n\n      if (distance <= scaledHitRadius) {\n\n        resultIndex = index\n        break\n      }\n    }\n\n    return resultIndex\n  }\n\n  protected getMouseOverLatticeEdgeIndex(e: ToolPointerEvent, ctx: SubToolContext): LatticeEdge {\n\n    let hitedEdge: LatticeEdge = null\n\n    const scaledHitRadius = ctx.getViewScaledLength(ctx.drawStyle.latticePointHitRadius)\n\n    for (const edge of this.latticeEdges) {\n\n      const distance = Logic_Points.pointToLineSegment_SorroundingDistance(\n        edge.latticePointFrom.displayLocation,\n        edge.latticePointTo.displayLocation,\n        e.location)\n\n      if (distance <= scaledHitRadius) {\n\n        hitedEdge = edge\n        break\n      }\n    }\n\n    return hitedEdge\n  }\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (!ctx.tool.isModalToolRunning()) {\n\n      if (ctx.isShiftKeyPressing()) {\n\n        if (commandID == ShortcutCommandID.edit_grabMove) {\n\n          this.startLatticeAffineTransform(TransformType.grabMove, false, ctx)\n          return true\n        }\n\n        if (commandID == ShortcutCommandID.edit_rotate) {\n\n          this.startLatticeAffineTransform(TransformType.rotate, false, ctx)\n          return true\n        }\n\n        if (commandID == ShortcutCommandID.edit_scale) {\n\n          this.startLatticeAffineTransform(TransformType.scale, false, ctx)\n          return true\n        }\n      }\n    }\n    else {\n\n      if (commandID == ShortcutCommandID.edit_fix) {\n\n        this.endTransform(ctx)\n        return true\n      }\n\n      if (commandID == ShortcutCommandID.edit_cancel) {\n\n        this.cancelTransform(ctx)\n        return true\n      }\n\n      if (this.handleKeyDownForTransformModifying({\n        g: true, r: true, s: true, x: true, y: true, zero: true, one: true, shift: true,\n        key, ctx\n      })) {\n\n        return true;\n      }\n    }\n\n    return false\n  }\n\n  handleKeyDownForTransformModifying({\n    g = false, r = false, s = false, x = false, y = false, zero = false, one = false, shift = false,\n    key, ctx\n  }: HandleKeyDownForTransformModifyingOption): boolean {\n\n    if (g && key == 'g') {\n\n      this.startLatticeAffineTransform(TransformType.grabMove, true, ctx)\n      return true\n    }\n    else if (r && key == 'r') {\n\n      this.startLatticeAffineTransform(TransformType.rotate, true, ctx)\n      return true\n    }\n    else if (s && key == 's') {\n\n      this.startLatticeAffineTransform(TransformType.scale, true, ctx)\n      return true\n    }\n    else if (x && key == 'x') {\n\n      if (this.transformLockType != TransformLockType.x) {\n\n        this.transformLockType = TransformLockType.x\n      }\n      else {\n\n        this.transformLockType = TransformLockType.none\n      }\n\n      this.processLatticePointMouseMove(ctx)\n      this.processTransform(ctx)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n    else if (y && key == 'y') {\n\n      if (this.transformLockType != TransformLockType.y) {\n\n        this.transformLockType = TransformLockType.y\n      }\n      else {\n\n        this.transformLockType = TransformLockType.none\n      }\n\n      this.processLatticePointMouseMove(ctx)\n      this.processTransform(ctx)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n    else if (zero && key == '0') {\n\n      if (this.transformModifyType != TransformModifyType.zero) {\n\n        this.transformModifyType = TransformModifyType.zero\n      }\n      else {\n\n        this.transformModifyType = TransformModifyType.none\n      }\n\n      this.processLatticePointMouseMove(ctx)\n      this.processTransform(ctx)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n    else if (one && key == '1') {\n\n      if (this.transformModifyType != TransformModifyType.one) {\n\n        this.transformModifyType = TransformModifyType.one\n      }\n      else {\n\n        this.transformModifyType = TransformModifyType.none\n      }\n\n      this.processLatticePointMouseMove(ctx)\n      this.processTransform(ctx)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n    else if (shift && key == 'Shift') {\n\n      if (this.transformModifyType != TransformModifyType.slow) {\n\n        this.transformModifyType = TransformModifyType.slow\n      }\n      else {\n\n        this.transformModifyType = TransformModifyType.none\n      }\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n\n    return false\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.tool.isModalToolRunning()) {\n\n      if (e.isLeftButtonReleased) {\n\n        if (this.latticeState == LatticeStateID.modified) {\n\n          this.endTransform(ctx)\n        }\n      }\n    }\n  }\n\n  protected processLatticePointMouseMove(ctx: SubToolContext) {\n\n    this.transformCalculator.transformLockType = this.transformLockType\n    this.transformCalculator.transformModifyType = this.transformModifyType\n    this.transformCalculator.processLatticePointMouseMove(this.latticePoints, ctx)\n\n    this.latticeState = LatticeStateID.modified\n  }\n\n  // Operation process implementation (Override methods)\n\n  protected processTransform(_ctx: SubToolContext) { // @virtual\n\n  }\n\n  protected executeCommand(_ctx: SubToolContext) { // @virtual\n  }\n\n  // Drawing\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    if (this.latticeState == LatticeStateID.invalid) {\n      return\n    }\n\n    if (this.latticeState == LatticeStateID.initialState) {\n\n      this.setLatticeLocation(ctx)\n    }\n\n    this.calculateLatticeRectangleDisplayLocation(ctx)\n\n    this.drawLatticeRectangle(ctx, drawing)\n    this.drawLatticePoints(ctx, drawing)\n  }\n\n  private operatorCurosrLineDash = [2.0, 2.0]\n  private operatorCurosrLineDashScaled = [0.0, 0.0]\n  private operatorCurosrLineDashNone = []\n\n  protected drawLatticeRectangle(ctx: SubToolContext, drawing: SubToolDrawingContext) {\n\n    if (this.latticePoints == null) {\n      return\n    }\n\n    drawing.render.setStrokeColorV(drawing.style.modalToolSelectedAreaLineColor)\n    drawing.render.setStrokeWidth(ctx.getViewScaledLength(1.0))\n\n    // Set dash\n    const viewScale = ctx.getViewScaledLength(1.0)\n    this.operatorCurosrLineDashScaled[0] = this.operatorCurosrLineDash[0] * viewScale\n    this.operatorCurosrLineDashScaled[1] = this.operatorCurosrLineDash[1] * viewScale\n\n    // Draw lattice line\n\n    drawing.render.setStrokeColorV(drawing.style.modalToolSelectedAreaLineColor)\n\n    for (const edge of this.latticeEdges) {\n\n      if (edge.mouseOver) {\n\n        drawing.render.setStrokeWidth(ctx.getViewScaledLength(3.0))\n        drawing.render.setLineDash(this.operatorCurosrLineDashNone)\n      }\n      else {\n\n        drawing.render.setStrokeWidth(ctx.getViewScaledLength(1.0))\n        drawing.render.setLineDash(this.operatorCurosrLineDashScaled)\n      }\n\n      drawing.render.beginPath()\n\n      drawing.render.moveToV(edge.latticePointFrom.displayLocation)\n      drawing.render.lineToV(edge.latticePointTo.displayLocation)\n\n      drawing.render.stroke()\n    }\n\n    drawing.render.setLineDash(this.operatorCurosrLineDashNone)\n  }\n\n  protected drawLatticePoints(ctx: SubToolContext, drawing: SubToolDrawingContext) {\n\n    // Draw lattice\n\n    for (const latticePoint of this.latticePoints) {\n\n      this.drawLatticePoint(latticePoint, 1.0, ctx, drawing)\n    }\n\n    if (this.mouseOver_SelectedLatticePart == SelectedLatticePartID.latticePoint) {\n\n      const latticePoint = this.latticePoints[this.mouseOver_PartIndex]\n\n      this.drawLatticePoint(latticePoint, 3.0, ctx, drawing)\n    }\n  }\n\n  drawLatticePoint(latticePoint: LatticePoint, lineWidth: float, ctx: SubToolContext, drawing: SubToolDrawingContext) {\n\n    drawing.render.beginPath()\n\n    drawing.render.setStrokeColorV(drawing.style.modalToolSelectedAreaLineColor)\n    drawing.render.setStrokeWidth(ctx.getViewScaledLength(lineWidth))\n\n    drawing.render.circle(\n      latticePoint.displayLocation[0], latticePoint.displayLocation[1]\n      , ctx.getViewScaledLength(drawing.style.latticePointRadius)\n    )\n\n    drawing.render.stroke()\n  }\n\n  // Calculation for basic rectangle method\n\n  protected calculateLatticeRectangleDisplayLocation(ctx: SubToolContext) {\n\n    const paddingScale = ctx.getViewScaledLength(ctx.drawStyle.latticePointPadding)\n\n    const angle = this.calculateLatticeRectangleAngle(this.dLocation)\n\n    mat4.identity(this.offsetMatrix)\n    mat4.rotateZ(this.offsetMatrix, this.offsetMatrix, angle)\n\n    for (const latticePoint of this.latticePoints) {\n\n      vec3.set(this.offsetScale,\n        latticePoint.displayBaseLocationOffset[0] + latticePoint.displayOffset[0] * paddingScale,\n        latticePoint.displayBaseLocationOffset[1] + latticePoint.displayOffset[1] * paddingScale,\n        0.0\n      )\n      // vec3.set(this.offsetScale,\n      //   latticePoint.displayBaseLocationOffset[0],\n      //   latticePoint.displayBaseLocationOffset[1],\n      //   0.0\n      // )\n\n      vec3.transformMat4(this.offset, this.offsetScale, this.offsetMatrix)\n      vec3.add(latticePoint.displayLocation, latticePoint.location, this.offset)\n    }\n  }\n\n  protected calculateLatticeRectangleAngle(outDirection: Vec3) {\n\n    vec3.subtract(outDirection, this.latticePoints[1].location, this.latticePoints[0].location)\n    const angle = Math.atan2(outDirection[1], outDirection[0])\n\n    return angle\n  }\n\n  protected calculateLatticeRectangleWidth(outDirection: Vec3) {\n\n    vec3.subtract(outDirection, this.latticePoints[0].location, this.latticePoints[1].location)\n    const length = vec3.length(outDirection)\n\n    return length\n  }\n\n  protected calculateLatticeRectangleHeight(outDirection: Vec3) {\n\n    vec3.subtract(outDirection, this.latticePoints[0].location, this.latticePoints[3].location)\n    const length = vec3.length(outDirection)\n\n    return length\n  }\n\n  protected existsLatticeRectangleArea(): boolean {\n\n    return this.bound_contentArea.isValidArea()\n  }\n}\n\nexport interface ITool_Transform_Lattice_Calculator {\n\n  transformLockType: TransformLockType\n  transformModifyType: TransformModifyType\n\n  prepare(ctx: SubToolContext)\n  processLatticePointMouseMove(latticePoints: LatticePoint[], ctx: SubToolContext)\n}\n\nexport class GrabMove_Calculator implements ITool_Transform_Lattice_Calculator {\n\n  transformLockType =  TransformLockType.none\n  transformModifyType = TransformModifyType.none\n\n  integerValueOnly = false\n\n  private lastLocation = vec3.create()\n  private moveAmount = vec3.create()\n  private dLocation = vec3.create()\n\n  prepare(ctx: SubToolContext) { // @implements ITool_Transform_Lattice_Calculator\n\n    vec3.copy(this.lastLocation, ctx.mouseCursorLocation)\n    vec3.set(this.moveAmount, 0.0, 0.0, 0.0)\n  }\n\n  processLatticePointMouseMove(latticePoints: LatticePoint[], ctx: SubToolContext) { // @implements ITool_Transform_Lattice_Calculator\n\n    vec3.subtract(this.dLocation, ctx.mouseCursorLocation, this.lastLocation)\n\n    if (this.transformModifyType == TransformModifyType.slow) {\n\n      vec3.scale(this.dLocation, this.dLocation, 0.25)\n    }\n\n    vec3.add(this.moveAmount, this.moveAmount, this.dLocation)\n    vec3.copy(this.lastLocation, ctx.mouseCursorLocation)\n\n    for (const latticePoint of latticePoints) {\n\n      let moveAmountX = 0.0\n      let moveAmountY = 0.0\n\n      if (latticePoint.latticePointEditType == LatticePointEditTypeID.horizontalOnly) {\n\n        moveAmountX =  this.moveAmount[0]\n      }\n      else if (latticePoint.latticePointEditType == LatticePointEditTypeID.verticalOnly) {\n\n        moveAmountY = this.moveAmount[1]\n      }\n      else if (latticePoint.latticePointEditType == LatticePointEditTypeID.allDirection) {\n\n        if (this.transformLockType != TransformLockType.y) {\n\n          moveAmountX =  this.moveAmount[0]\n        }\n\n        if (this.transformLockType != TransformLockType.x) {\n\n          moveAmountY = this.moveAmount[1]\n        }\n      }\n\n      latticePoint.location[0] = latticePoint.baseLocation[0] + moveAmountX\n      latticePoint.location[1] = latticePoint.baseLocation[1] + moveAmountY\n\n      if (this.integerValueOnly) {\n\n        latticePoint.location[0] = Math.floor(latticePoint.location[0])\n        latticePoint.location[1] = Math.floor(latticePoint.location[1])\n      }\n    }\n  }\n}\n\nexport class Rotate_Calculator implements ITool_Transform_Lattice_Calculator {\n\n  transformLockType: TransformLockType.none\n  transformModifyType = TransformModifyType.none\n\n  private lastAngle = 0.0\n  private rotationAmount = 0.0\n\n  private dLocation = vec3.create()\n  private direction = vec3.create()\n  private centerLocation = vec3.create()\n  private rotationMatrix = mat4.create()\n\n  prepare(ctx: SubToolContext) { // @implements ITool_Transform_Lattice_Calculator\n\n    this.lastAngle = this.calulateInputAngle(ctx)\n    this.rotationAmount = 0.0\n  }\n\n  private calulateInputAngle(ctx: SubToolContext): float {\n\n    vec3.subtract(this.direction, ctx.mouseCursorLocation, ctx.getOperationOriginLocation())\n    const angle = Math.atan2(this.direction[1], this.direction[0])\n\n    return angle\n  }\n\n  processLatticePointMouseMove(latticePoints: LatticePoint[], ctx: SubToolContext) { // @implements ITool_Transform_Lattice_Calculator\n\n    const inputedAngle = this.calulateInputAngle(ctx)\n    let movedAngle = inputedAngle - this.lastAngle\n    if (movedAngle >= Math.PI) {\n      movedAngle -= Math.PI * 2\n    }\n    if (movedAngle <= -Math.PI) {\n      movedAngle += Math.PI * 2\n    }\n\n    if (this.transformModifyType == TransformModifyType.slow) {\n\n      movedAngle *= 0.25\n    }\n\n    this.rotationAmount += movedAngle\n    this.lastAngle = inputedAngle\n\n    vec3.copy(this.centerLocation, ctx.getOperationOriginLocation())\n    vec3.scale(this.dLocation, this.centerLocation, -1.0)\n\n    mat4.identity(this.rotationMatrix)\n    mat4.translate(this.rotationMatrix, this.rotationMatrix, this.centerLocation)\n    mat4.rotateZ(this.rotationMatrix, this.rotationMatrix, this.rotationAmount)\n    mat4.translate(this.rotationMatrix, this.rotationMatrix, this.dLocation)\n\n    for (const latticePoint of latticePoints) {\n\n      vec3.transformMat4(latticePoint.location, latticePoint.baseLocation, this.rotationMatrix)\n    }\n  }\n}\n\nexport class Scale_Calculator implements ITool_Transform_Lattice_Calculator {\n\n  transformLockType: TransformLockType.none\n  transformModifyType = TransformModifyType.none\n\n  integerValueOnly = false\n\n  private initialDistance = 0.0\n  private lastDistance = 0.0\n  private scalingAmount = 0.0\n\n  private dLocation = vec3.create()\n  private direction = vec3.create()\n  private centerLocation = vec3.create()\n  private rotationMatrix = mat4.create()\n  private scaling = vec3.create()\n\n  prepare(ctx: SubToolContext) { // @implements ITool_Transform_Lattice_Calculator\n\n    this.initialDistance = this.calulateDistance(ctx)\n\n    if (this.initialDistance == 0.0) {\n\n      this.initialDistance = 1.0\n    }\n\n    this.lastDistance = this.initialDistance\n    this.scalingAmount = 1.0\n  }\n\n  calulateDistance(ctx: SubToolContext): float {\n\n    vec3.subtract(this.direction, ctx.mouseCursorLocation, ctx.getOperationOriginLocation())\n\n    const distance = vec3.length(this.direction)\n\n    return distance\n  }\n\n  processLatticePointMouseMove(latticePoints: LatticePoint[], ctx: SubToolContext) { // @implements ITool_Transform_Lattice_Calculator\n\n    if (latticePoints.length == 0) {\n      return\n    }\n\n    const distance = this.calulateDistance(ctx)\n    let movedDistance = distance - this.lastDistance\n\n    if (this.transformModifyType == TransformModifyType.slow) {\n\n      movedDistance *= 0.25\n    }\n\n    this.scalingAmount += movedDistance / this.initialDistance\n    this.lastDistance = distance\n\n    vec3.set(this.scaling, 1.0, 1.0, 1.0)\n\n    const scale = this.scalingAmount\n\n    const firstLatticePoint = latticePoints[0]\n    if (firstLatticePoint.latticePointEditType == LatticePointEditTypeID.horizontalOnly) {\n\n      this.scaling[0] = scale\n    }\n    else if (firstLatticePoint.latticePointEditType == LatticePointEditTypeID.verticalOnly) {\n\n      this.scaling[1] = scale\n    }\n    else if (firstLatticePoint.latticePointEditType == LatticePointEditTypeID.allDirection) {\n\n      if (this.transformLockType == TransformLockType.none) {\n\n        vec3.set(this.scaling, scale, scale, 1.0)\n      }\n      else if (this.transformLockType == TransformLockType.x) {\n\n        if (this.transformModifyType == TransformModifyType.zero) {\n          vec3.set(this.scaling, 0.0, 1.0, 1.0)\n        }\n        else {\n          vec3.set(this.scaling, scale, 1.0, 1.0)\n        }\n      }\n      else if (this.transformLockType == TransformLockType.y) {\n\n        if (this.transformModifyType == TransformModifyType.zero) {\n          vec3.set(this.scaling, 1.0, 0.0, 1.0)\n        }\n        else {\n          vec3.set(this.scaling, 1.0, scale, 1.0)\n        }\n      }\n    }\n\n    vec3.copy(this.centerLocation, ctx.getOperationOriginLocation())\n    vec3.scale(this.dLocation, this.centerLocation, -1.0)\n\n    mat4.identity(this.rotationMatrix)\n    mat4.translate(this.rotationMatrix, this.rotationMatrix, this.centerLocation)\n    mat4.scale(this.rotationMatrix, this.rotationMatrix, this.scaling)\n    mat4.translate(this.rotationMatrix, this.rotationMatrix, this.dLocation)\n\n    for (const latticePoint of latticePoints) {\n\n      vec3.transformMat4(latticePoint.location, latticePoint.baseLocation, this.rotationMatrix)\n    }\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { SubToolContext } from '../context'\nimport { DocumentData } from '../document-data'\nimport { ShortcutCommandID } from '../user-setting'\nimport { Tool_Transform_Lattice, TransformType } from './transform-lattice'\n\nexport class Tool_EditDocumentFrame extends Tool_Transform_Lattice {\n\n  helpText = 'エクスポート範囲を設定します。座標は整数値になります。'\n\n  isAvailable(_ctx: SubToolContext): boolean { // @override\n\n    return true\n  }\n\n  // Preparing for operation (Override methods)\n\n  protected checkTarget(_ctx: SubToolContext): boolean { // @override\n\n    return true\n  }\n\n  protected prepareLatticePoints(ctx: SubToolContext): boolean { // @override\n\n    // calculate lattice points\n\n    this.bound_contentArea.left = ctx.documentData.documentFrame[0]\n    this.bound_contentArea.top = ctx.documentData.documentFrame[1]\n    this.bound_contentArea.right = ctx.documentData.documentFrame[2]\n    this.bound_contentArea.bottom = ctx.documentData.documentFrame[3]\n\n    this.setLatticePointsByRectangle(this.bound_contentArea, this.bound_contentArea)\n\n    // set integer mode to calculator\n    this.grabMove_Calculator.integerValueOnly = true\n\n    return this.existsLatticeRectangleArea()\n  }\n\n  protected existsEditData(): boolean { // @override\n\n    return this.existsLatticeRectangleArea()\n  }\n\n  // Operation inputs\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (!ctx.tool.isModalToolRunning()) {\n\n      if (commandID == ShortcutCommandID.edit_grabMove) {\n\n        this.startLatticeAffineTransform(TransformType.grabMove, false, ctx)\n        return true\n      }\n\n      if (commandID == ShortcutCommandID.edit_scale) {\n\n        this.startLatticeAffineTransform(TransformType.scale, false, ctx)\n        return true\n      }\n    }\n    else {\n\n      if (this.handleKeyDownForTransformModifying({ g: true, s: true, shift: true, key, ctx })) {\n\n        return true;\n      }\n    }\n\n    return false\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    const command = new Command_EditDocumentFrame()\n    command.targetDocument = ctx.documentData\n    command.newDocumentFrame[0] = Math.floor(this.latticePoints[0].location[0])\n    command.newDocumentFrame[1] = Math.floor(this.latticePoints[0].location[1])\n    command.newDocumentFrame[2] = Math.floor(this.latticePoints[2].location[0])\n    command.newDocumentFrame[3] = Math.floor(this.latticePoints[2].location[1])\n\n    ctx.commandHistory.executeCommand(command, ctx)\n  }\n}\n\nclass Command_EditDocumentFrame extends CommandBase {\n\n  targetDocument: DocumentData = null\n\n  newDocumentFrame = vec4.create()\n\n  oldDocumentFrame = vec4.create()\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.errorCheck()\n\n    vec4.copy(this.oldDocumentFrame, this.targetDocument.documentFrame)\n\n    this.redo(ctx)\n  }\n\n  undo(ctx: SubToolContext) { // @override\n\n    vec4.copy(this.targetDocument.documentFrame, this.oldDocumentFrame)\n\n    ctx.setRedrawRibbonUI()\n  }\n\n  redo(ctx: SubToolContext) { // @override\n\n    vec4.copy(this.targetDocument.documentFrame, this.newDocumentFrame)\n\n    ctx.setRedrawRibbonUI()\n  }\n\n  errorCheck() {\n\n    if (this.targetDocument == null) {\n\n      throw new Error('ERROR 0801:Command_EditDocumentFrame: targetDocument is null!')\n    }\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { SubToolContext } from '../context'\nimport { ImageFileReferenceLayer } from '../document-data'\nimport { RenderImage } from '../render'\nimport { LatticePointEditTypeID, Tool_Transform_Lattice, TransformModifyType, TransformType } from './transform-lattice'\n\nclass Tool_Transform_ReferenceImage extends Tool_Transform_Lattice {\n\n  allEdgeSelection = true // @overrde\n\n  imageSize = vec3.create()\n  pointLocation = vec3.create()\n  transformMatrix = mat4.create()\n\n  dLocation = vec3.create()\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return ctx.isCurrentLayerImageFileReferenceLayer()\n  }\n\n  protected checkTarget(ctx: SubToolContext): boolean { // @override\n\n    return ctx.isCurrentLayerImageFileReferenceLayer()\n  }\n\n  protected prepareLatticePoints(ctx: SubToolContext): boolean { // @override\n\n    if (!ImageFileReferenceLayer.isLoaded(ctx.currentImageFileReferenceLayer)) {\n      return false\n    }\n\n    this.calculateImageLatticePoints(\n      ctx.currentImageFileReferenceLayer.runtime.imageResource.image,\n      ctx.currentImageFileReferenceLayer.location,\n      ctx.currentImageFileReferenceLayer.rotation,\n      ctx.currentImageFileReferenceLayer.scale\n    )\n\n    return this.existsLatticeRectangleArea()\n  }\n\n  protected calculateImageLatticePoints(image: RenderImage, location: Vec3, rotation: Vec3, scaling: Vec3) {\n\n    // calculate matrix\n\n    mat4.identity(this.transformMatrix)\n\n    mat4.translate(this.transformMatrix, this.transformMatrix, location)\n\n    const angle = rotation[0]\n    mat4.rotateZ(this.transformMatrix, this.transformMatrix, angle)\n\n    vec3.set(this.imageSize, image.width, image.height, 0.0)\n    mat4.scale(this.transformMatrix, this.transformMatrix, this.imageSize)\n    mat4.scale(this.transformMatrix, this.transformMatrix, scaling)\n\n    // calculate lattice points\n\n    vec3.set(this.pointLocation, 0.0, 0.0, 0.0)\n    vec3.transformMat4(this.latticePoints[0].baseLocation, this.pointLocation, this.transformMatrix)\n\n    vec3.set(this.pointLocation, 1.0, 0.0, 0.0)\n    vec3.transformMat4(this.latticePoints[1].baseLocation, this.pointLocation, this.transformMatrix)\n\n    vec3.set(this.pointLocation, 1.0, 1.0, 0.0)\n    vec3.transformMat4(this.latticePoints[2].baseLocation, this.pointLocation, this.transformMatrix)\n\n    vec3.set(this.pointLocation, 0.0, 1.0, 0.0)\n    vec3.transformMat4(this.latticePoints[3].baseLocation, this.pointLocation, this.transformMatrix)\n  }\n\n  protected prepareEditData(_ctx: SubToolContext) { // @override\n\n    for (const latticePoint of this.latticePoints) {\n\n      latticePoint.latticePointEditType = LatticePointEditTypeID.allDirection\n    }\n  }\n\n  protected existsEditData(): boolean { // @override\n\n    return this.existsLatticeRectangleArea()\n  }\n\n  protected processTransform(ctx: SubToolContext) { // @override\n\n    const ifrLayer = ctx.currentImageFileReferenceLayer\n    const image = ifrLayer.runtime.imageResource.image\n\n    if (this.transformModifyType == TransformModifyType.one) {\n\n      if (this.transformType == TransformType.grabMove) {\n\n        ifrLayer.runtime.adjustingLocation[0] = -ifrLayer.runtime.imageResource.image.width / 2\n        ifrLayer.runtime.adjustingLocation[1] = -ifrLayer.runtime.imageResource.image.height / 2\n      }\n      else if (this.transformType == TransformType.rotate) {\n\n        ifrLayer.runtime.adjustingRotation[0] = 0.0\n      }\n      else if (this.transformType == TransformType.scale) {\n\n        vec3.set(ifrLayer.runtime.adjustingScale, 1.0, 1.0, 1.0)\n      }\n\n\n      this.calculateImageLatticePoints(\n        ctx.currentImageFileReferenceLayer.runtime.imageResource.image,\n        ctx.currentImageFileReferenceLayer.runtime.adjustingLocation,\n        ctx.currentImageFileReferenceLayer.runtime.adjustingRotation,\n        ctx.currentImageFileReferenceLayer.runtime.adjustingScale\n      )\n\n      this.resetLatticePointLocationToBaseLocation()\n\n      this.transformModifyType = TransformModifyType.none\n\n      return\n    }\n\n    // location\n    vec3.copy(ifrLayer.runtime.adjustingLocation, this.latticePoints[0].location)\n\n    // scale\n    const scaleX = this.calculateLatticeRectangleWidth(this.dLocation) / image.width\n    const scaleY = this.calculateLatticeRectangleHeight(this.dLocation) / image.height\n\n    vec3.set(ifrLayer.runtime.adjustingScale, scaleX, scaleY, 0.0)\n\n    // angle\n    const angle = this.calculateLatticeRectangleAngle(this.dLocation)\n\n    ifrLayer.runtime.adjustingRotation[0] = angle\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    const ifrLayer = ctx.currentImageFileReferenceLayer\n\n    // Execute the command\n    const command = new Command_Transform_ReferenceImage()\n    command.targetLayer = ifrLayer\n\n    vec3.copy(command.newLocation, command.targetLayer.runtime.adjustingLocation)\n    vec3.copy(command.newRotation, command.targetLayer.runtime.adjustingRotation)\n    vec3.copy(command.newScale, command.targetLayer.runtime.adjustingScale)\n\n    ctx.commandHistory.executeCommand(command, ctx)\n  }\n\n  cancelModal(ctx: SubToolContext) { // @override\n\n    const ifrLayer = ctx.currentImageFileReferenceLayer\n\n    vec3.copy(ifrLayer.runtime.adjustingLocation, ifrLayer.location)\n    vec3.copy(ifrLayer.runtime.adjustingRotation, ifrLayer.rotation)\n    vec3.copy(ifrLayer.runtime.adjustingScale, ifrLayer.scale)\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n}\n\nclass Command_Transform_ReferenceImage extends CommandBase {\n\n  targetLayer: ImageFileReferenceLayer = null\n\n  newLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  newRotation = vec3.fromValues(0.0, 0.0, 0.0)\n  newScale = vec3.fromValues(1.0, 1.0, 1.0)\n\n  oldLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  oldRotation = vec3.fromValues(0.0, 0.0, 0.0)\n  oldScale = vec3.fromValues(1.0, 1.0, 1.0)\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.errorCheck()\n\n    vec3.copy(this.oldLocation, this.targetLayer.location)\n    vec3.copy(this.oldRotation, this.targetLayer.rotation)\n    vec3.copy(this.oldScale, this.targetLayer.scale)\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    vec3.copy(this.targetLayer.location, this.oldLocation)\n    vec3.copy(this.targetLayer.rotation, this.oldRotation)\n    vec3.copy(this.targetLayer.scale, this.oldScale)\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    vec3.copy(this.targetLayer.location, this.newLocation)\n    vec3.copy(this.targetLayer.rotation, this.newRotation)\n    vec3.copy(this.targetLayer.scale, this.newScale)\n  }\n\n  errorCheck() {\n\n    if (this.targetLayer == null) {\n\n      throw new Error('ERROR 0901:Command_LoadReferenceImageToLayer: layer is null!')\n    }\n  }\n}\n\nexport class Tool_Transform_ReferenceImage_GrabMove extends Tool_Transform_ReferenceImage {\n\n  protected selectTransformCalculator(ctx: SubToolContext) { // @override\n\n    this.setLatticeAffineTransform(TransformType.grabMove, ctx)\n  }\n}\n\nexport class Tool_Transform_ReferenceImage_Rotate extends Tool_Transform_ReferenceImage {\n\n  protected selectTransformCalculator(ctx: SubToolContext) { // @override\n\n    this.setLatticeAffineTransform(TransformType.rotate, ctx)\n  }\n}\n\nexport class Tool_Transform_ReferenceImage_Scale extends Tool_Transform_ReferenceImage {\n\n  protected selectTransformCalculator(ctx: SubToolContext) { // @override\n\n    this.setLatticeAffineTransform(TransformType.scale, ctx)\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { SubToolContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport { VectorLayer, VectorPoint, VectorStroke, VectorStrokeGroup } from '../document-data'\nimport { VectorStrokeLogic } from '../document-logic'\nimport { OperationUnitID } from '../tool'\nimport { ViewKeyframeLayer } from '../view'\nimport { Tool_Transform_Lattice, TransformType } from './transform-lattice'\n\nclass EditPoint {\n\n  targetPoint: VectorPoint = null\n\n  relativeLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  newLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  oldLocation = vec3.fromValues(0.0, 0.0, 0.0)\n}\n\ninterface TargetStroke {\n\n  stroke: VectorStroke\n  layer: VectorLayer\n}\n\ninterface TargetGroup {\n\n  group: VectorStrokeGroup\n  layer: VectorLayer\n}\n\nexport class Tool_Transform_Lattice_StrokePoint extends Tool_Transform_Lattice {\n\n  lerpLocation1 = vec3.create()\n  lerpLocation2 = vec3.create()\n  lerpLocation3 = vec3.create()\n\n  viewKeyframeLayers: ViewKeyframeLayer[] = null\n  targetGroups: TargetGroup[] = null\n  targetStrokes: TargetStroke[] = null\n  editPoints: EditPoint[] = null\n\n  protected clearEditData() { // @override\n\n    this.targetGroups = null\n    this.targetStrokes = null\n    this.editPoints = null\n  }\n\n  protected checkTarget(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerEditbaleLayer()\n    )\n  }\n\n  protected prepareLatticePoints(ctx: SubToolContext): boolean { // @override\n\n    this.bound_contentArea.setMinimumValue()\n    this.inner_contentArea.setMinimumValue()\n\n    const parStroke = (ctx.operationUnitID == OperationUnitID.stroke)\n\n    this.viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    ViewKeyframeLayer.forEachStrokeGroup(this.viewKeyframeLayers, (group, layer) => {\n\n      for (const stroke of group.lines) {\n\n        if (parStroke) {\n\n          if (stroke.isSelected) {\n\n            this.bound_contentArea.expandByRectangle(stroke.runtime.area)\n            this.inner_contentArea.expandByRectangle(stroke.runtime.innerArea)\n          }\n        }\n        else {\n\n          for (const point of stroke.points) {\n\n            if (!point.isSelected) {\n              continue\n            }\n\n            VectorStrokeLogic.expandAreasForPoint(\n              this.bound_contentArea,\n              this.inner_contentArea,\n              point,\n              layer.lineWidthBiasRate\n            )\n          }\n        }\n      }\n    })\n\n    this.setLatticePointsByRectangle(this.bound_contentArea, this.inner_contentArea)\n\n    return this.existsLatticeRectangleArea()\n  }\n\n  protected prepareEditData(ctx: SubToolContext) { // @override\n\n    const targetGroups: TargetGroup[] = []\n    const targetStrokes: TargetStroke[] = []\n    const editPoints: EditPoint[] = []\n\n    const parSteoke = (ctx.operationUnitID == OperationUnitID.stroke)\n\n    ViewKeyframeLayer.forEachStrokeGroup(this.viewKeyframeLayers, (group, layer) => {\n\n      let existsInGroup = false\n\n      for (const stroke of group.lines) {\n\n        let existsInLine = false\n\n        for (const point of stroke.points) {\n\n          if (!(point.isSelected || (parSteoke && stroke.isSelected))) {\n            continue\n          }\n\n          const editPoint = new EditPoint()\n          editPoint.targetPoint = point\n\n          vec3.copy(editPoint.oldLocation, point.location)\n          vec3.copy(editPoint.newLocation, point.location)\n\n          const xPosition = this.inner_contentArea.getHorizontalPositionRate(point.location[0])\n          const yPosition = this.inner_contentArea.getVerticalPositionRate(point.location[1])\n          vec3.set(editPoint.relativeLocation, xPosition, yPosition, 0.0)\n\n          editPoints.push(editPoint)\n\n          existsInLine = true\n        }\n\n        if (existsInLine) {\n\n          targetStrokes.push({ stroke: stroke, layer: layer })\n\n          existsInGroup = true\n        }\n      }\n\n      if (existsInGroup) {\n\n        targetGroups.push({ group, layer })\n      }\n    })\n\n    this.targetGroups = targetGroups\n    this.targetStrokes = targetStrokes\n    this.editPoints = editPoints\n  }\n\n  protected existsEditData(): boolean { // @override\n\n    return (this.editPoints.length > 0)\n  }\n\n  cancelModal(ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n\n      vec3.copy(editPoint.targetPoint.adjustingLocation, editPoint.targetPoint.location)\n    }\n\n    this.editPoints = null\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n\n  protected processTransform(_ctx: SubToolContext) { // @override\n\n    if (this.editPoints == null) {\n      return\n    }\n\n    const editPoints = this.editPoints\n\n    const latticePoints = this.latticePoints\n\n    //            lerpLocation1\n    // (0)-------+-------(1)\n    //  |        |        |\n    //  |        |        |\n    //  |        * result |\n    //  |        |        |\n    //  |        |        |\n    // (3)-------+-------(2)\n    //            lerpLocation2\n\n    const latticePointLocationH1A = latticePoints[0].location\n    const latticePointLocationH1B = latticePoints[1].location\n    const latticePointLocationH2A = latticePoints[3].location\n    const latticePointLocationH2B = latticePoints[2].location\n\n    for (const editPoint of editPoints) {\n\n      vec3.lerp(this.lerpLocation1, latticePointLocationH1A, latticePointLocationH1B, editPoint.relativeLocation[0])\n      vec3.lerp(this.lerpLocation2, latticePointLocationH2A, latticePointLocationH2B, editPoint.relativeLocation[0])\n\n      vec3.lerp(editPoint.targetPoint.adjustingLocation, this.lerpLocation1, this.lerpLocation2, editPoint.relativeLocation[1])\n    }\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    if (this.editPoints.length == 0) {\n      return\n    }\n\n    for (const editPoint of this.editPoints) {\n\n      vec3.copy(editPoint.newLocation, editPoint.targetPoint.adjustingLocation)\n    }\n\n    // Execute the command\n    const command = new Command_TransformLattice_LinePoint()\n    command.editPoints = this.editPoints\n    command.targetStrokes = this.targetStrokes\n\n    for (const targetGroup of this.targetGroups) {\n\n      command.defferedProcess.addGroup(targetGroup.layer, targetGroup.group, PostUpdateSituationTypeID.changesObjectShapes)\n    }\n\n    ctx.commandHistory.executeCommand(command, ctx)\n\n    this.editPoints = null\n  }\n}\n\nexport class Command_TransformLattice_LinePoint extends CommandBase {\n\n  targetStrokes: TargetStroke[] = null\n  editPoints: EditPoint[] = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.errorCheck()\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n\n      vec3.copy(editPoint.targetPoint.location, editPoint.oldLocation)\n      vec3.copy(editPoint.targetPoint.adjustingLocation, editPoint.oldLocation)\n    }\n\n    this.updateRelatedObjects()\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n\n      vec3.copy(editPoint.targetPoint.location, editPoint.newLocation)\n      vec3.copy(editPoint.targetPoint.adjustingLocation, editPoint.newLocation)\n    }\n\n    this.updateRelatedObjects()\n  }\n\n  errorCheck() {\n\n    if (this.targetStrokes == null) {\n      throw new Error('ERROR 1003:Command_TransformLattice: line is null!')\n    }\n\n    if (this.editPoints.length == 0) {\n      throw new Error('ERROR 1004:Command_TransformLattice: no target point!')\n    }\n  }\n\n  private updateRelatedObjects() {\n\n    for (const targetStroke of this.targetStrokes) {\n\n      VectorStrokeLogic.calculateParameters(targetStroke.stroke, targetStroke.layer.lineWidthBiasRate)\n    }\n  }\n}\n\nexport class Tool_Transform_Lattice_GrabMove extends Tool_Transform_Lattice_StrokePoint {\n\n  protected selectTransformCalculator(ctx: SubToolContext) { // @override\n\n    this.setLatticeAffineTransform(TransformType.grabMove, ctx)\n  }\n}\n\nexport class Tool_Transform_Lattice_Rotate extends Tool_Transform_Lattice_StrokePoint {\n\n  protected selectTransformCalculator(ctx: SubToolContext) { // @override\n\n    this.setLatticeAffineTransform(TransformType.rotate, ctx)\n  }\n}\n\nexport class Tool_Transform_Lattice_Scale extends Tool_Transform_Lattice_StrokePoint {\n\n  protected selectTransformCalculator(ctx: SubToolContext) { // @override\n\n    this.setLatticeAffineTransform(TransformType.scale, ctx)\n  }\n}\n","﻿import { Tool_Transform_Lattice_StrokePoint } from './transform-line-point'\n\nexport class Tool_EditModeMain extends Tool_Transform_Lattice_StrokePoint {\n\n  helpText = '左クリックで矩形の辺や角を操作して、選択中の線または点を変形できます。<br />Aキーで全選択／解除します。G、R、Sキーで移動、回転、拡縮します。'\n\n  //toolWindowItemClick(e: ToolPointerEvent, ctx: ToolEnvironment) { // @override\n\n  //    ctx.setCurrentOperationUnitID(OperationUnitID.line);\n  //}\n\n  //prepareModal(e: ToolPointerEvent, ctx: ToolEnvironment): boolean { // @override\n\n  //    this.clearEditData(e, ctx);\n\n  //    if (!this.checkTarget(e, ctx)) {\n\n  //        return false;\n  //    }\n\n  //    // Current cursor location\n  //    vec3.copy(this.mouseAnchorLocation, e.location);\n\n  //    // Create edit info\n  //    this.prepareEditData(e, ctx);\n\n  //    return this.existsEditData();\n  //}\n}\n","﻿import { CommandBase } from '../command'\nimport { SubToolContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport { VectorPointModifyFlagID, VectorPoint } from '../document-data'\nimport { ISelector_VectorLayer, Selector_VectorPoint_BrushSelect, VectorLayerSelectionInfo } from '../document-logic'\nimport { ToolPointerEvent } from '../tool'\nimport { Tool_BrushSelectLinePointBase } from './select-brush-select'\n\nexport class Selector_HideLinePoint_BrushSelect extends Selector_VectorPoint_BrushSelect {\n\n  lineWidth = 0.0\n\n  protected onPointHited(point: VectorPoint) { // @override\n\n    if (point.modifyFlag == VectorPointModifyFlagID.none) {\n\n      point.adjustingLineWidth = this.lineWidth\n\n      this.selectionInfo.editGroup(this.currentStrokeGroup, this.currentGeometry, this.currentLayer)\n      this.selectionInfo.editStroke(this.currentStroke)\n      this.selectionInfo.editPoint(point)\n    }\n  }\n}\n\nexport class Tool_HideLinePoint_BrushSelect extends Tool_BrushSelectLinePointBase {\n\n  helpText = '線の太さに最大の太さに設定します。<br />Shiftキーで最小の太さに設定します。Ctrlキーで線をの太さを０にします。'\n  isEditTool = false // @override\n\n  private selector = new Selector_HideLinePoint_BrushSelect()\n  brushSelector: ISelector_VectorLayer = this.selector // @override\n\n  protected onStartSelection(_e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.isShiftKeyPressing()) {\n\n      this.selector.lineWidth = ctx.drawLineMinWidth\n    }\n    else if (ctx.isCtrlKeyPressing()) {\n\n      this.selector.lineWidth = 0.0\n    }\n    else {\n\n      this.selector.lineWidth = ctx.drawLineBaseWidth\n    }\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    const command = new Command_EditLinePointLineWidth()\n    if (command.prepareEditTargets(this.selector.selectionInfo)) {\n\n      ctx.commandHistory.executeCommand(command, ctx)\n    }\n\n    ctx.setRedrawMainWindow()\n  }\n\n  cancelModal(ctx: SubToolContext) { // @override\n\n    for (const selPoint of this.brushSelector.selectionInfo.selectedPoints) {\n\n      selPoint.point.adjustingLineWidth = selPoint.point.lineWidth\n    }\n\n    this.brushSelector.endProcess()\n\n    ctx.setRedrawMainWindowEditorWindow()\n  }\n}\n\nclass Tool_EditLineWidth_EditPoint {\n\n  targetPoint: VectorPoint = null\n\n  newLineWidth = 0.0\n  oldLineWidth = 0.0\n}\n\nexport class Command_EditLinePointLineWidth extends CommandBase {\n\n  editPoints: Tool_EditLineWidth_EditPoint[] = []\n\n  prepareEditTargets(selectionInfo: VectorLayerSelectionInfo): boolean {\n\n    let editPointCount = 0\n\n    for (const selPoint of selectionInfo.selectedPoints) {\n      const point = selPoint.point\n\n      const editPoint = new Tool_EditLineWidth_EditPoint()\n      editPoint.targetPoint = point\n      editPoint.oldLineWidth = point.lineWidth\n      editPoint.newLineWidth = point.adjustingLineWidth\n\n      this.editPoints.push(editPoint)\n\n      editPointCount++\n    }\n\n    if (editPointCount > 0) {\n\n      for (const selGroup of selectionInfo.selectedGroups) {\n\n        this.defferedProcess.addGroup(selGroup.layer, selGroup.group, PostUpdateSituationTypeID.changesObjectShapes)\n      }\n    }\n\n    return (editPointCount > 0)\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n      const targetPoint = editPoint.targetPoint\n\n      targetPoint.lineWidth = editPoint.oldLineWidth\n      targetPoint.adjustingLineWidth = targetPoint.lineWidth\n    }\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n      const targetPoint = editPoint.targetPoint\n\n      targetPoint.lineWidth = editPoint.newLineWidth\n      targetPoint.adjustingLineWidth = targetPoint.lineWidth\n    }\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { SubTool, ToolPointerEvent } from '../tool'\n\nexport class Tool_LocateOperatorCursor extends SubTool {\n\n  usesOperatorCursor = true // @override\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return true\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (e.isLeftButtonPressing && !ctx.isAnyModifierKeyPressing()) {\n\n      ctx.main.setOperatorCursorLocationToMouse()\n    }\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    this.mouseDown(e, ctx)\n  }\n}\n","﻿import { SubTool } from '../tool'\nimport { SubToolContext } from '../context'\n\nexport class Tool_NoOperation extends SubTool {\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return false\n  }\n}\n","﻿import { SubToolContext, SubToolDrawingContext } from '../context'\nimport { DirectionInputData, InputSideID, PosingData, VectorPoint, VectorStroke } from '../document-data'\nimport { VectorStrokeLogic } from '../document-logic'\nimport { float, int, Maths } from '../common-logics'\nimport { ModalToolBase, ToolPointerEvent } from '../tool'\n\nexport class Tool_Posing3d_ToolBase extends ModalToolBase {\n\n  inputOptionButtonCount = 1\n\n  editPoint: VectorPoint = null\n  editLine: VectorStroke = null\n\n  getOptionButtonState(_buttonIndex: int, _ctx: SubToolContext): InputSideID { // @virtual\n\n    return InputSideID.none\n  }\n\n  protected getInputData(_ctx: SubToolContext): DirectionInputData { // @virtual\n\n    throw new Error('ERROR 1001:Tool_Posing3d_ToolBase: not implemented!')\n  }\n\n  protected copyInputLocationToPoint(e: ToolPointerEvent) {\n\n    if (this.editPoint == null) {\n\n      this.editPoint = new VectorPoint()\n    }\n\n    vec3.copy(this.editPoint.location, e.location)\n  }\n\n  protected copyInputLocationToLine(e: ToolPointerEvent) {\n\n    if (this.editLine == null) {\n\n      this.editLine = new VectorStroke()\n    }\n\n    const point = new VectorPoint()\n    vec3.copy(point.location, e.location)\n    vec3.copy(point.adjustingLocation, e.location)\n\n    this.editLine.points.push(point)\n  }\n}\n\nexport class Tool_Posing3d_PointInputToolBase extends Tool_Posing3d_ToolBase {\n\n  private tempTargetLocation = vec3.create()\n\n  inputOptionButtonCount = 1\n\n  optionButton_Click(buttonIndex: int, ctx: SubToolContext): boolean { // @override\n\n    if (ctx.currentPosingData != null) {\n\n      const inputData = this.getInputData(ctx)\n\n      if (buttonIndex == 0) {\n\n        if (inputData.inputSideID == InputSideID.front) {\n          inputData.inputSideID = InputSideID.back\n        }\n        else {\n          inputData.inputSideID = InputSideID.front\n        }\n\n        return true\n      }\n    }\n\n    return false\n  }\n\n  getOptionButtonState(_buttonIndex: int, ctx: SubToolContext): InputSideID { // @override\n\n    if (ctx.currentPosingData != null) {\n\n      const inputData = this.getInputData(ctx)\n\n      return inputData.inputSideID\n    }\n    else {\n\n      return InputSideID.none\n    }\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.execute(e, ctx)\n\n    ctx.tool.startModalTool(this.subtoolID)\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    ctx.setRedrawEditorWindow()\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.execute(e, ctx)\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n  }\n\n  protected execute(e: ToolPointerEvent, ctx: SubToolContext) {\n\n    const inputData = this.getInputData(ctx)\n    ctx.posing3DLogic.calculateInputLocation3D(\n      this.tempTargetLocation\n      , e.location\n      , inputData.inputSideID\n      , inputData\n      , ctx.currentPosingData\n      , ctx.posing3DView\n    )\n\n    this.executeCommand(\n      this.tempTargetLocation,\n      e.location,\n      e,\n      ctx\n    )\n  }\n\n  protected executeCommand(_inputLocation: Vec3, _inputLocation2D: Vec3, _e: ToolPointerEvent, _ctx: SubToolContext) { // @virtual\n\n    throw new Error('ERROR 1002:Tool_Posing3d_ToolBase: not implemented!')\n  }\n}\n\nexport class Tool_Posing3d_LineInputToolBase extends Tool_Posing3d_ToolBase {\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.editLine = new VectorStroke()\n\n    this.copyInputLocationToLine(e)\n\n    ctx.tool.startModalTool(this.subtoolID)\n}\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (this.editLine == null) {\n      return\n    }\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    ctx.setRedrawEditorWindow()\n\n    this.copyInputLocationToLine(e)\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (e.isLeftButtonReleased) {\n\n      if (this.editLine == null) {\n        return\n      }\n\n      VectorStrokeLogic.calculateParameters(this.editLine)\n\n      if (this.editLine.points.length <= 1 || this.editLine.runtime.totalLength < 1) {\n        return\n      }\n\n      this.calculateHeadLoacation(ctx)\n\n      return\n    }\n  }\n\n  protected calculateHeadLoacation(_ctx: SubToolContext) { // @virtual\n  }\n}\n\nenum JointPartInputMode {\n\n  none, directionInput, rollInput\n}\n\nexport class Tool_Posing3d_JointPartInputToolBase extends Tool_Posing3d_PointInputToolBase {\n\n  protected enableDirectionInput = true\n  protected enableRollInput = true\n\n  protected jointPartInputMode = JointPartInputMode.none\n  protected mouseOnInputMode = JointPartInputMode.none\n  protected inputLocation = vec3.create()\n  protected relativeMouseLocation = vec3.create()\n  protected rollInputRelativeLocation = vec3.create()\n  protected rollInputCenterLocation = vec3.create()\n  protected rollInputLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  protected inputAdditionalAngle = 0.0\n  protected inputStartAngle = 0.0\n  protected inputEndAngle = 0.0\n  protected inputStartLocation = vec3.create()\n  protected beforeEditMatrix = mat4.create()\n  protected beforeEditAngle = 0.0\n\n  protected tmpMatrix = mat4.create()\n  protected tmpVec3 = vec3.create()\n  protected vecZ = vec3.create()\n  protected direction = vec3.create()\n  protected location3D = vec3.create()\n  protected location3DTo = vec3.create()\n  protected location2D = vec3.create()\n  protected location2DTo = vec3.create()\n  protected location2DHead = vec3.create()\n  protected partCenterLocation = vec3.create()\n  protected rollInputCenterLocation2D = vec3.create()\n  protected locationFront = vec3.create()\n  protected locationBack = vec3.create()\n\n  protected getInputModeForMouseLocation(resultRelativeMouseLocation: Vec3, ctx: SubToolContext): JointPartInputMode {\n\n    const inputData = this.getInputData(ctx)\n\n    const circleRadius = this.getBoneInputCircleRadius(ctx) * ctx.drawStyle.posing3DBoneInputCircleHitRadius\n\n    if (!inputData.inputDone) {\n\n      return JointPartInputMode.directionInput\n    }\n    else {\n\n      if (inputData.inputDone && inputData.directionInputDone) {\n\n        ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2D, inputData.inputLocation, ctx.currentPosingData)\n        const distance = vec3.distance(ctx.mouseCursorLocation, this.location2D)\n\n        if (resultRelativeMouseLocation != null) {\n\n          vec3.subtract(resultRelativeMouseLocation, this.location2D, ctx.mouseCursorLocation)\n        }\n\n        if (distance <= circleRadius) {\n\n          return JointPartInputMode.directionInput\n        }\n        else {\n\n          return JointPartInputMode.rollInput\n        }\n      }\n    }\n\n    return JointPartInputMode.none\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    ctx.setRedrawEditorWindow()\n\n    const jointPartInputMode = this.getInputModeForMouseLocation(this.relativeMouseLocation, ctx)\n\n    if (jointPartInputMode == JointPartInputMode.rollInput) {\n\n      const inputData = this.getInputData(ctx)\n      ctx.posing3DLogic.calculateInputLocation3D(\n        inputData.rollInputLocation\n        , e.location\n        , InputSideID.front\n        , inputData\n        , ctx.currentPosingData\n        , ctx.posing3DView\n      )\n\n      this.calculateInputParams(inputData.rollInputLocation, inputData.matrix)\n      this.inputStartAngle = this.calculateAngle(inputData.rollInputLocation, inputData.matrix)\n      this.beforeEditAngle = inputData.rollInputAngle\n      mat4.copy(this.beforeEditMatrix, inputData.matrix)\n      vec3.copy(this.inputStartLocation, inputData.rollInputLocation)\n    }\n\n    if (jointPartInputMode != JointPartInputMode.none) {\n\n      this.jointPartInputMode = jointPartInputMode\n\n      this.execute(e, ctx)\n\n      ctx.tool.startModalTool(this.subtoolID)\n    }\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    const jointPartInputMode = this.getInputModeForMouseLocation(null, ctx)\n\n    if (jointPartInputMode != this.mouseOnInputMode) {\n      this.mouseOnInputMode = jointPartInputMode\n      ctx.setRedrawEditorWindow()\n    }\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    if (this.jointPartInputMode == JointPartInputMode.directionInput) {\n\n      this.execute(e, ctx)\n    }\n    else if (this.jointPartInputMode == JointPartInputMode.rollInput) {\n\n      const inputData = this.getInputData(ctx)\n      ctx.posing3DLogic.calculateInputLocation3D(\n        inputData.rollInputLocation\n        , e.location\n        , InputSideID.front\n        , inputData\n        , ctx.currentPosingData\n        , ctx.posing3DView\n      )\n\n      this.execute(e, ctx)\n    }\n  }\n\n  mouseUp(_e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    this.jointPartInputMode = JointPartInputMode.none\n\n    ctx.setRedrawWebGLWindow()\n    ctx.setRedrawEditorWindow()\n  }\n\n  protected getBoneInputCircleRadius(ctx: SubToolContext): float {\n\n    return ctx.getViewScaledLength(ctx.drawStyle.posing3DBoneInputCircleRadius)\n  }\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    const inputData = this.getInputData(ctx)\n\n    if (!inputData.inputDone) {\n      return\n    }\n\n    const circleRadius = this.getBoneInputCircleRadius(ctx)\n\n    Maths.copyTranslation(this.partCenterLocation, inputData.matrix)\n\n    if (this.enableDirectionInput && inputData.directionInputDone) {\n\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2D, inputData.inputLocation, ctx.currentPosingData)\n      const strokeWidth = (this.mouseOnInputMode == JointPartInputMode.directionInput) ? 4.0 : 2.0\n      drawing.drawCircle(this.location2D, circleRadius, ctx.getViewScaledLength(strokeWidth), drawing.style.posing3DBoneHeadColor)\n    }\n\n    if (this.jointPartInputMode == JointPartInputMode.directionInput) {\n\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2D, this.partCenterLocation, ctx.currentPosingData)\n\n      vec3.subtract(this.direction, inputData.inputLocation, this.partCenterLocation)\n      vec3.scale(this.direction, vec3.normalize(this.direction, this.direction), inputData.hitTestSphereRadius)\n      vec3.add(this.location3DTo, this.partCenterLocation, this.direction)\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2DHead, this.location3DTo, ctx.currentPosingData)\n\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2DTo, inputData.inputLocation, ctx.currentPosingData)\n\n      drawing.drawLine(this.location2D, this.location2DHead, ctx.getViewScaledLength(4.0), drawing.style.posing3DBoneGrayColor)\n      drawing.drawLine(this.location2DHead, this.location2DTo, ctx.getViewScaledLength(2.0), drawing.style.posing3DBoneGrayColor)\n\n      drawing.drawCircle(this.location2D, ctx.getViewScaledLength(2.0), ctx.getViewScaledLength(4.0), drawing.style.posing3DBoneGrayColor)\n      drawing.drawCircle(this.location2DHead, ctx.getViewScaledLength(2.0), ctx.getViewScaledLength(4.0), drawing.style.posing3DBoneGrayColor)\n    }\n\n    if (this.jointPartInputMode == JointPartInputMode.rollInput) {\n\n      // const depth = ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2D, this.rollInputCenterLocation, ctx.currentPosingData)\n\n      vec3.transformMat4(this.location3D, vec3.set(this.tmpVec3, 1.0, 0.0, 0.0), this.beforeEditMatrix)\n\n      mat4.invert(this.tmpMatrix, this.beforeEditMatrix)\n      vec3.transformMat4(this.location3D, inputData.rollInputLocation, this.tmpMatrix)\n\n      const unitAngle = 5\n      for (let count = 0; count <= 360; count += unitAngle) {\n\n        this.calculateRingRotated2DLocation(this.location2D,\n          this.location3D, this.beforeEditMatrix, Math.PI * 2 * count / 360, ctx.currentPosingData, ctx, this.tmpVec3)\n\n        this.calculateRingRotated2DLocation(this.location2DTo,\n          this.location3D, this.beforeEditMatrix, Math.PI * 2 * (count + unitAngle) / 360, ctx.currentPosingData, ctx, this.tmpVec3)\n\n        ctx.posing3DLogic.calculateInputLocation3DForDoubleSide(\n          this.locationFront,\n          this.locationBack,\n          this.location2D,\n          this.partCenterLocation,\n          inputData.hitTestSphereRadius,\n          ctx.currentPosingData,\n          ctx.posing3DView\n        )\n\n        if (vec3.distance(this.locationFront, this.tmpVec3) < vec3.distance(this.locationBack, this.tmpVec3)) {\n\n          drawing.drawLine(this.location2D, this.location2DTo, ctx.getViewScaledLength(1.0), drawing.style.posing3DHelperGrayColor1)\n        }\n        else {\n\n          drawing.drawLine(this.location2D, this.location2DTo, ctx.getViewScaledLength(1.0), drawing.style.posing3DHelperGrayColor2)\n        }\n      }\n\n      {\n        const piePoints: number[][] = []\n        ctx.posing3DView.calculate2DLocationFrom3DLocation(this.rollInputCenterLocation2D, this.rollInputCenterLocation, ctx.currentPosingData)\n        piePoints.push([this.rollInputCenterLocation2D[0], this.rollInputCenterLocation2D[1], 0.0])\n\n        this.calculateRingRotated2DLocation(this.location2D, this.location3D, this.beforeEditMatrix, 0.0, ctx.currentPosingData, ctx, this.tmpVec3)\n        drawing.beginPath(this.location2D)\n        for (let count = 0; count <= 100; count += 10) {\n\n          this.calculateRingRotated2DLocation(this.location2D,\n            this.location3D, this.beforeEditMatrix, -this.inputAdditionalAngle * count / 100, ctx.currentPosingData, ctx, this.tmpVec3)\n\n          drawing.lineTo(this.location2D)\n\n          piePoints.push([this.location2D[0], this.location2D[1], 0.0])\n        }\n        drawing.stroke(ctx.getViewScaledLength(3.0), drawing.style.posing3DHelperGrayColor2)\n\n        piePoints.push([this.rollInputCenterLocation2D[0], this.rollInputCenterLocation2D[1], 0.0])\n        this.fillArea(piePoints, drawing.style.posing3DHelperGrayColor2, drawing)\n\n        drawing.drawLine(this.location2D, this.rollInputCenterLocation2D, ctx.getViewScaledLength(1.0), drawing.style.posing3DHelperGrayColor1)\n      }\n\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2D, this.rollInputCenterLocation, ctx.currentPosingData)\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(this.location2DTo, inputData.rollInputLocation, ctx.currentPosingData)\n      drawing.drawLine(this.location2D, this.location2DTo, ctx.getViewScaledLength(3.0), drawing.style.posing3DBoneGrayColor)\n      drawing.drawCircle(this.location2DTo, ctx.getViewScaledLength(5.0), ctx.getViewScaledLength(4.0), drawing.style.posing3DBoneGrayColor)\n\n      // drawEnv.style.posing3DBoneForwardColor\n    }\n  }\n\n  private fillArea(frontPoints: number[][], color: Vec4, drawing: SubToolDrawingContext) {\n\n    if (frontPoints.length <= 2) {\n      return\n    }\n\n    drawing.beginPath()\n    drawing.moveTo(frontPoints[0])\n\n    for (let index = 1; index < frontPoints.length; index++) {\n\n      drawing.lineTo(frontPoints[index])\n    }\n\n    drawing.fill(color)\n  }\n\n  private calculateInputParams(location: Vec3, parentMatrix: Mat4) {\n\n    mat4.invert(this.tmpMatrix, parentMatrix)\n    vec3.transformMat4(this.rollInputRelativeLocation, location, this.tmpMatrix)\n\n    vec3.set(this.vecZ, 0.0, 0.0, this.rollInputRelativeLocation[2])\n    vec3.transformMat4(this.rollInputCenterLocation, this.vecZ, parentMatrix)\n  }\n\n  private calculateAngle(location: Vec3, parentMatrix: Mat4): float {\n\n    mat4.invert(this.tmpMatrix, parentMatrix)\n    vec3.transformMat4(this.tmpVec3, location, this.tmpMatrix)\n\n    return Math.atan2(this.tmpVec3[1], this.tmpVec3[0])\n  }\n\n  private calculateRingRotated3DLocation(result: Vec3, location: Vec3, parentMatrix: Mat4, angle: float) {\n\n    mat4.rotateZ(this.tmpMatrix, parentMatrix, angle)\n    vec3.transformMat4(result, location, this.tmpMatrix)\n  }\n\n  private calculateRingRotated2DLocation(result: Vec3, location: Vec3, parentMatrix: Mat4, angle: float, posingData: PosingData, ctx: SubToolContext, tempVec3: Vec3): float {\n\n    this.calculateRingRotated3DLocation(tempVec3, location, parentMatrix, angle)\n    const depth = ctx.posing3DView.calculate2DLocationFrom3DLocation(result, this.tmpVec3, posingData)\n\n    return depth\n  }\n\n  protected execute(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    vec3.add(this.location2D, e.location, this.relativeMouseLocation)\n\n    const inputData = this.getInputData(ctx)\n    ctx.posing3DLogic.calculateInputLocation3D(\n      this.inputLocation\n      , this.location2D\n      , InputSideID.front\n      , inputData\n      , ctx.currentPosingData\n      , ctx.posing3DView\n    )\n\n    this.executeCommand(this.inputLocation, this.location2D, e, ctx)\n  }\n\n  protected executeCommand(inputLocation: Vec3, inputLocation2D: Vec3, _e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    const inputData = this.getInputData(ctx)\n\n    // Set inputs\n    if (this.jointPartInputMode == JointPartInputMode.directionInput) {\n\n      vec3.copy(inputData.inputLocation, inputLocation)\n      vec3.copy(inputData.inputLocation2D, inputLocation2D)\n      inputData.inputDone = true\n      inputData.directionInputDone = true\n    }\n    else if (this.jointPartInputMode == JointPartInputMode.rollInput) {\n\n      this.calculateInputParams(inputData.rollInputLocation, this.beforeEditMatrix)\n\n      this.inputEndAngle = this.calculateAngle(inputData.rollInputLocation, this.beforeEditMatrix)\n      this.inputAdditionalAngle = Maths.getRoundedAngle(this.inputEndAngle - this.inputStartAngle)\n\n      inputData.rollInputAngle = this.beforeEditAngle + this.inputAdditionalAngle\n\n      inputData.rollInputDone = true\n    }\n\n    // Calculate\n    ctx.posing3DLogic.calculateAll(ctx.currentPosingData, ctx.currentPosingModel, ctx.posing3DView)\n\n    this.updateAdditionalPart(inputData.inputLocation, ctx)\n\n    ctx.setRedrawWebGLWindow()\n    ctx.setRedrawEditorWindow()\n    ctx.setRedrawRibbonUI()\n  }\n\n  protected updateAdditionalPart(_inputLocation: Vec3, _ctx: SubToolContext) { // @virtual\n\n  }\n}\n\n// Each tools\n\nexport class Tool_Posing3d_LocateHead extends Tool_Posing3d_LineInputToolBase {\n\n  helpText = 'マウスでクリックすると頭の位置が決まり、さらにドラッグするとスケールが変更できます。<br />次の操作に移るには画面右のパネルの「頭の向き」をクリックします。'\n\n  inputOptionButtonCount = 0\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n    )\n  }\n\n  tempVec3 = vec3.fromValues(0.0, 0.0, 0.0)\n  centerLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  centerLocation3D = vec3.fromValues(0.0, 0.0, 0.0)\n  subLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  inputRadius = 0.0\n  inputRadiusAdjustRate = 1.0\n  minInputRadius = 5.0\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (!e.isLeftButtonPressing) {\n      return\n    }\n\n    this.calculateHeadLoacation(ctx)\n\n    ctx.tool.startModalTool(this.subtoolID)\n  }\n\n  prepareModal(e: ToolPointerEvent, ctx: SubToolContext): boolean { // @override\n\n    if (ctx.currentPosingData == null) {\n      return false\n    }\n\n    vec3.copy(this.centerLocation, e.location)\n    this.inputRadius = this.minInputRadius\n\n    return true\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (!e.isLeftButtonPressing || !ctx.tool.isModalToolRunning()) {\n      return\n    }\n\n    vec3.subtract(this.subLocation, e.location, this.centerLocation)\n    this.inputRadius = vec3.length(this.subLocation)\n    if (this.inputRadius < this.minInputRadius) {\n\n      this.inputRadius = this.minInputRadius\n    }\n\n    this.calculateHeadLoacation(ctx)\n  }\n\n  mouseUp(_e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    if (ctx.currentPosingData == null) {\n      return\n    }\n\n    if (!ctx.tool.isModalToolRunning()) {\n      return\n    }\n\n    ctx.tool.endModalTool()\n  }\n\n  protected calculateHeadLoacation(ctx: SubToolContext) {\n\n    /*\n    // Center of head sphere\n    //let locationCountSum = 0.0\n    vec3.set(this.centerLocationSum, 0.0, 0.0, 0.0)\n    //let lastLength = 0.0\n    let totalCount = 0.0\n    for (let point of this.editLine.points) {\n\n        //let segmentLength = point.totalLength - lastLength\n        //vec3.scale(this.tempVec3, point.location, segmentLength / this.editLine.totalLength)\n        //vec3.add(this.centerLocationSum, this.centerLocationSum, this.tempVec3)\n        //lastLength = point.totalLength\n\n        vec3.add(this.centerLocationSum, this.centerLocationSum, point.location)\n        totalCount += 1\n    }\n\n    if (totalCount > 0) {\n\n        vec3.scale(this.centerLocationSum, this.centerLocationSum, 1 / totalCount)\n    }\n    */\n\n    //console.log('頭の配置')\n    //console.log(this.centerLocationSum)\n\n    /*\n    // Radius\n    let radiusSum = 0.0\n    //let lastLength2 = 0.0\n    let totalCount2 = 0.0\n    for (let point of this.editLine.points) {\n\n        //let segmentLength = point.totalLength - lastLength2\n        //vec3.subtract(this.subLocation, point.location, this.centerLocationSum)\n        //radiusSum += vec3.length(this.subLocation) * (segmentLength / this.editLine.totalLength)\n        //lastLength2 = point.totalLength\n\n        vec3.subtract(this.subLocation, point.location, this.centerLocationSum)\n        radiusSum += vec3.length(this.subLocation)\n        totalCount2 += 1\n    }\n\n    if (totalCount2 > 0) {\n\n        radiusSum *= 1 / totalCount2\n    }\n\n    //console.log(radiusSum)\n    */\n\n    const posingData = ctx.currentPosingData\n\n    const radiusSum = this.inputRadius * this.inputRadiusAdjustRate\n\n    // Expects model is located 2.0m away from camera at first, then calculate zoom rate as real3DViewHalfWidth\n    //     headSphereSize[m] / real3DViewHalfWidth[m] = radiusSum[px] / real2DViewWidth[px]\n    //     real3DViewHalfWidth[m] / headSphereSize[m] = real2DViewWidth[px] / radiusSum[px]\n    //     real3DViewHalfWidth[m]                     = (real2DViewWidth[px] / radiusSum[px]) * headSphereSize[m]\n    const real2DViewWidth = ctx.mainWindow.height / 2\n    posingData.real3DViewHalfWidth = (real2DViewWidth / radiusSum) * ctx.currentPosingModel.headSphereSize\n    posingData.real3DViewMeterPerPixel = posingData.real3DViewHalfWidth / real2DViewWidth\n\n    // debug\n    //posingData.viewZoomRate = ctx.currentPosingModel.headSphereSize / 50.0\n    //this.centerLocationSum[0] = ctx.mainWindow.width / 2 + radiusSum\n    //this.centerLocationSum[0] = ctx.mainWindow.width / 2\n    //this.centerLocationSum[1] = ctx.mainWindow.height / 2\n    //for (let point of this.editLine.points) {\n    //    point.location[0] = this.centerLocationSum[0]\n    //    point.adjustedLocation[0] = this.centerLocationSum[0]\n    //}\n    // debug\n\n    //console.log(this.centerLocation)\n\n    {\n      const inputData = posingData.headLocationInputData\n\n      ctx.posing3DView.calculate3DLocationFrom2DLocation(\n        this.centerLocation3D\n        , this.centerLocation\n        , posingData.real3DModelDistance\n        , posingData)\n\n      vec3.copy(inputData.center, this.centerLocation3D)\n      inputData.radius = radiusSum\n      inputData.editLine = this.editLine\n      inputData.inputDone = true\n    }\n\n    ctx.posing3DLogic.calculateHeadLocation(posingData, ctx.currentPosingModel)\n\n    {\n      const inputData = posingData.headRotationInputData\n\n      vec3.set(this.tempVec3, 0.0, 0.0, inputData.hitTestSphereRadius)\n      vec3.transformMat4(inputData.inputLocation, this.tempVec3, inputData.parentMatrix)\n      ctx.posing3DView.calculate2DLocationFrom3DLocation(\n        inputData.inputLocation2D, inputData.inputLocation, posingData\n      )\n\n      inputData.directionInputDone = true\n\n      inputData.rollInputAngle = 0.0\n      inputData.rollInputDone = false\n    }\n\n    ctx.setRedrawWebGLWindow()\n    ctx.setRedrawRibbonUI()\n  }\n}\n\nexport class Tool_Posing3d_RotateHead extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '画面に表示された球のどこかをクリックすると頭の向きが決まります。<br />画面右のパネルで「手前」となっているボタンをクリックすると奥側を指定できるようになります。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.headLocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData { // @override\n\n    return ctx.currentPosingData.headRotationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateBody extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '半透明の球のどこかをクリックすると頭の向きを正面として胴が配置されます。<br />少し外側をクリックすると画面に対して真横を指定できます。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.headLocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData { // @override\n\n    return ctx.currentPosingData.bodyLocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateHips extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '腰を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.bodyLocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData { // @override\n\n    return ctx.currentPosingData.hipsLocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateLeftShoulder extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = 'ヒジの位置を指定して肩を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && (ctx.currentPosingData.bodyLocationInputData.inputDone || ctx.currentPosingData.bodyRotationInputData.inputDone)\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData { // @override\n\n    return ctx.currentPosingData.leftShoulderLocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateRightShoulder extends Tool_Posing3d_LocateLeftShoulder {\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData { // @override\n\n    return ctx.currentPosingData.rightShoulderLocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateLeftArm1 extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = 'ヒジの位置を指定して上腕を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && (ctx.currentPosingData.bodyLocationInputData.inputDone || ctx.currentPosingData.bodyRotationInputData.inputDone)\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData { // @override\n\n    return ctx.currentPosingData.leftArm1LocationInputData\n  }\n\n  protected updateAdditionalPart(_inputLocation: Vec3, ctx: SubToolContext) { // @override\n\n    ctx.currentPosingData.leftShoulderLocationInputData.inputDone = true\n  }\n}\n\nexport class Tool_Posing3d_LocateRightArm1 extends Tool_Posing3d_LocateLeftArm1 {\n\n  helpText = 'ヒジの位置を指定して上腕を配置します。'\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.rightArm1LocationInputData\n  }\n\n  protected updateAdditionalPart(_inputLocation: Vec3, ctx: SubToolContext) { // @override\n\n    ctx.currentPosingData.rightShoulderLocationInputData.inputDone = true\n  }\n}\n\nexport class Tool_Posing3d_LocateLeftLeg1 extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = 'ヒザの位置を指定して上脚を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.hipsLocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.leftLeg1LocationInputData\n  }\n\n  protected executeCommandExt(ctx: SubToolContext) { // @override\n\n    ctx.currentPosingData.leftShoulderLocationInputData.inputDone = true\n  }\n}\n\nexport class Tool_Posing3d_LocateRightLeg1 extends Tool_Posing3d_LocateLeftLeg1 {\n\n  helpText = 'ヒザの位置を指定して上脚を配置します。'\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.rightLeg1LocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateLeftArm2 extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '手首の位置を指定して下腕を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.leftArm1LocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.leftArm2LocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateRightArm2 extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '手首の位置を指定して下腕を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.rightArm1LocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.rightArm2LocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateLeftLeg2 extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '足首の位置を指定して下脚を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.leftLeg1LocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.leftLeg2LocationInputData\n  }\n}\n\nexport class Tool_Posing3d_LocateRightLeg2 extends Tool_Posing3d_JointPartInputToolBase {\n\n  helpText = '足首の位置を指定して下脚を配置します。'\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return (\n      ctx.isCurrentLayerPosingLayer()\n      && ctx.currentPosingData != null\n      && ctx.currentPosingData.rightLeg1LocationInputData.inputDone\n    )\n  }\n\n  protected getInputData(ctx: SubToolContext): DirectionInputData {\n\n    return ctx.currentPosingData.rightLeg2LocationInputData\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { float } from '../common-logics'\nimport { SubToolContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport { VectorLayer, VectorPoint, VectorStroke, VectorStrokeGroup } from '../document-data'\nimport { VectorPointLogic, VectorStrokeLogic } from '../document-logic'\nimport { OperationUnitID, SubTool } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\nimport { ViewKeyframeLayer } from '../view'\n\nclass EditLine {\n\n  targetLine: VectorStroke = null\n  layer: VectorLayer = null\n\n  oldPoints: VectorPoint[] = null\n  newPoints: VectorPoint[] = null\n}\n\ninterface TargetGroup {\n\n  group: VectorStrokeGroup\n  layer: VectorLayer\n}\n\nexport class Tool_Resample_Segment extends SubTool {\n\n  helpText = 'エンターキーで選択中の頂点の間を画面の拡大率に合わせて再分割します。'\n\n  targetGroups: TargetGroup[] = null\n  editLines: EditLine[] = null\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return ctx.isCurrentLayerEditbaleLayer()\n  }\n\n  toolWindowItemClick(ctx: SubToolContext) { // @override\n\n    ctx.tool.setOperationUnit(OperationUnitID.strokePoint)\n    ctx.setRedrawMainWindow()\n  }\n\n  keydown(key: string, commandID: ShortcutCommandID, ctx: SubToolContext): boolean { // @override\n\n    if (commandID == ShortcutCommandID.edit_fix) {\n\n      if (ctx.currentVectorLayer != null) {\n\n        this.executeCommand(ctx)\n        return true\n      }\n    }\n\n    return false\n  }\n\n  private executeCommand(ctx: SubToolContext) {\n\n    if (this.collectEditTargets(ctx)) {\n\n      const command = new Command_Resample_Segment()\n      command.editLines = this.editLines\n\n      for (const targetGroup of this.targetGroups) {\n\n        command.defferedProcess.addGroup(targetGroup.layer, targetGroup.group, PostUpdateSituationTypeID.changesObjectShapes)\n      }\n\n      ctx.commandHistory.executeCommand(command, ctx)\n\n      ctx.setRedrawMainWindowEditorWindow()\n    }\n  }\n\n  private collectEditTargets(ctx: SubToolContext): boolean {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    const targetGroups: TargetGroup[] = []\n    const editLines: EditLine[] = []\n\n    const resamplingUnitLength = ctx.getViewScaledResamplingUnitLengthForBrush()\n\n    ViewKeyframeLayer.forEachStrokeGroup(viewKeyframeLayers, (group, layer) => {\n\n      let existsInGroup = false\n\n      for (const line of group.lines) {\n\n        if (line.isSelected && this.existsSelectedSegment(line)) {\n\n          const editLine = new EditLine()\n          editLine.targetLine = line\n          editLine.layer = layer\n          editLine.oldPoints = line.points\n          editLine.newPoints = this.createResampledPoints(editLine.targetLine, resamplingUnitLength)\n\n          editLines.push(editLine)\n\n          existsInGroup = true\n        }\n      }\n\n      if (existsInGroup) {\n\n        targetGroups.push({ group, layer })\n      }\n    })\n\n    this.targetGroups = targetGroups\n    this.editLines = editLines\n\n    return (editLines.length > 0)\n  }\n\n  private existsSelectedSegment(line: VectorStroke): boolean {\n\n    let selectedPointCount = 0\n\n    for (const point of line.points) {\n\n      if (point.isSelected) {\n\n        selectedPointCount++\n\n        if (selectedPointCount >= 2) {\n\n          break\n        }\n      }\n      else {\n\n        selectedPointCount = 0\n      }\n    }\n\n    return (selectedPointCount >= 2)\n  }\n\n  private createResampledPoints(line: VectorStroke, resamplingUnitLength: float): VectorPoint[] {\n\n    let currentIndex = 0\n    let segmentStartIndex = -1\n    let segmentEndIndex = -1\n\n    const newPoints: VectorPoint[] = []\n\n    while (currentIndex < line.points.length) {\n\n      const currentPoint = line.points[currentIndex]\n\n      // selected segment\n      if (currentPoint.isSelected) {\n\n        segmentStartIndex = currentIndex\n\n        // search end of selected segment\n        for (let i = segmentStartIndex; i < line.points.length; i++) {\n\n          const point = line.points[i]\n\n          if (!point.isSelected) {\n\n            break\n          }\n\n          segmentEndIndex = i\n        }\n\n        // if exists selected segment, execute resampling\n        if (segmentEndIndex > segmentStartIndex) {\n\n          VectorPointLogic.resamplePoints(\n            newPoints\n            , line.points\n            , segmentStartIndex\n            , segmentEndIndex\n            , resamplingUnitLength\n          )\n        }\n        // if no segment, execute insert current point\n        else {\n\n          const point = line.points[currentIndex]\n\n          newPoints.push(point)\n        }\n\n        currentIndex = segmentEndIndex + 1\n      }\n      // non-selected segment\n      else {\n\n        segmentStartIndex = currentIndex\n\n        // search end of non-selected segment\n        for (let i = segmentStartIndex; i < line.points.length; i++) {\n\n          const point = line.points[i]\n\n          if (point.isSelected) {\n\n            break\n          }\n\n          segmentEndIndex = i\n        }\n\n        // execute insert original points\n        for (let i = segmentStartIndex; i <= segmentEndIndex; i++) {\n\n          const point = line.points[i]\n\n          newPoints.push(point)\n        }\n\n        currentIndex = segmentEndIndex + 1\n      }\n    }\n\n    return newPoints\n  }\n}\n\nexport class Command_Resample_Segment extends CommandBase {\n\n  editLines: EditLine[] = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editLine of this.editLines) {\n\n      editLine.targetLine.points = editLine.oldPoints\n    }\n\n    this.updateRelatedObjects()\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editLine of this.editLines) {\n\n      editLine.targetLine.points = editLine.newPoints\n    }\n\n    this.updateRelatedObjects()\n  }\n\n  private updateRelatedObjects() {\n\n    for (const editLine of this.editLines) {\n\n      VectorStrokeLogic.calculateParameters(editLine.targetLine, editLine.layer.lineWidthBiasRate)\n    }\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { float, int, Lists, Logic_Points, Maths } from '../common-logics'\nimport { SubToolContext, SubToolDrawingContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport {\n  Layer, VectorPointModifyFlagID, VectorLayer, VectorLayerGeometry, VectorPoint, VectorStroke,\n  VectorStrokeGroup\n} from '../document-data'\nimport { VectorLayerLogic, VectorPointLogic, VectorStrokeLogic } from '../document-logic'\nimport { HitTest_VectorStroke_PointToStroke_Nearest } from '../document-logic'\nimport { ModalToolBase, ToolPointerEvent } from '../tool'\nimport { ViewKeyframeLayer } from '../view'\n\nexport class Tool_ScratchLine_CandidatePair {\n\n  targetPoint: VectorPoint = null\n  candidatePoint: VectorPoint = null\n\n  normPosition = 0.0\n  totalLength = 0.0\n  influence = 0.0\n}\n\nclass Tool_ScratchLine_EditPoint {\n\n  pair: Tool_ScratchLine_CandidatePair = null\n\n  newLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  oldLocation = vec3.fromValues(0.0, 0.0, 0.0)\n}\n\nexport class Tool_ScratchLine extends ModalToolBase {\n\n  helpText = '右クリックまたはGで線を選択し、左クリックで線を修正します。'\n\n  enableScratchEdit = true\n  enableExtrude = false\n\n  editStroke: VectorStroke = null\n  resampledStroke: VectorStroke = null\n  candidateStroke: VectorStroke = null\n  forwardExtrude = false\n  extrudeLine: VectorStroke = null\n  cutouted = false\n  isEditing = false\n\n  inputLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  inputLastLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  nearestPointLocation = vec3.fromValues(0.0, 0.0, 0.0)\n  samplePoint = vec3.fromValues(0.0, 0.0, 0.0)\n\n  strokeSingleHitTester = new HitTest_VectorStroke_PointToStroke_Nearest()\n\n  strokeSmoothLevel = 3\n\n  selectLine_NonMovedLocationDistanceRate = 0.5\n\n  maxResamplingDivisionCount = 51\n  curveCheckPointCount = 3\n  cutoutAngle = 30 / 180.0 * Math.PI\n\n  editFalloffRadiusMinRate = 0.15\n  editFalloffRadiusMaxRate = 2.0\n  editFalloffRadiusContainsLineWidth = false\n  editInfluence = 0.5\n\n  editExtrudeMinRadiusRate = 0.5\n  editExtrudeMaxRadiusRate = 1.0\n\n  tool_ScratchLine_EditLine_Visible = true\n  tool_ScratchLine_TargetLine_Visible = true\n  tool_ScratchLine_SampledLine_Visible = true\n  tool_ScratchLine_CandidatePoints_Visible = false\n  tool_ScratchLine_ExtrudePoints_Visible = false\n\n  isAvailable(ctx: SubToolContext): boolean { // @override\n\n    return ctx.isCurrentLayerEditbaleLayer()\n  }\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    drawing.editorDrawer.drawPointerCursor(ctx.toolBaseViewRadius)\n\n    if (this.tool_ScratchLine_EditLine_Visible) {\n\n      if (this.editStroke != null && this.resampledStroke == null) {\n\n        drawing.editorDrawer.drawOperatorSolidStroke(this.editStroke)\n      }\n    }\n\n    if (this.tool_ScratchLine_TargetLine_Visible) {\n\n      const drawPointsAll = false\n\n      if (ctx.activeVectorLine != null) {\n\n        if (drawPointsAll) {\n\n          if (ctx.currentVectorLayer != null) {\n\n            drawing.editorDrawer.drawEditorStrokePoints(\n              ctx.activeVectorLine\n              , ctx.currentVectorLayer.layerColor\n              , false\n            )\n          }\n        }\n        else {\n\n          if (ctx.activeVectorLine.points.length >= 2) {\n\n            const firstPoint = ctx.activeVectorLine.points[0]\n            const lastPoint = ctx.activeVectorLine.points[ctx.activeVectorLine.points.length - 1]\n\n            drawing.drawCircle(\n              firstPoint.location,\n              VectorPointLogic.getPointRadius(firstPoint) + ctx.getViewScaledLength(3.0),\n              ctx.getViewScaledLength(1.0),\n              ctx.drawStyle.sampledPointColor\n            )\n\n            drawing.drawCircle(\n              lastPoint.location,\n              VectorPointLogic.getPointRadius(lastPoint) + ctx.getViewScaledLength(3.0),\n              ctx.getViewScaledLength(1.0),\n              ctx.drawStyle.sampledPointColor\n            )\n          }\n        }\n      }\n    }\n\n    if (this.tool_ScratchLine_SampledLine_Visible) {\n\n      if (this.resampledStroke != null) {\n\n        drawing.editorDrawer.drawEditorStrokePoints(this.resampledStroke, drawing.style.sampledPointColor, false)\n      }\n    }\n\n    if (this.tool_ScratchLine_CandidatePoints_Visible) {\n\n      if (this.candidateStroke != null) {\n\n        drawing.editorDrawer.drawEditorStrokePoints(this.candidateStroke, drawing.style.linePointColor, false)\n      }\n    }\n\n    if (this.tool_ScratchLine_ExtrudePoints_Visible) {\n\n      if (this.extrudeLine != null) {\n\n        drawing.editorDrawer.drawEditorStrokePoints(this.extrudeLine, drawing.style.extrutePointColor, false)\n      }\n    }\n  }\n\n  mouseDown(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    this.setInputLocation(e, true)\n\n    if (e.isLeftButtonPressing) {\n\n      this.resetState(true)\n\n      ctx.tool.startModalTool(this.subtoolID)\n    }\n  }\n\n  mouseMove(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    this.setInputLocation(e, false)\n\n    ctx.setRedrawEditorWindow()\n\n    if (!this.isEditing) {\n\n      // clear the editor line display when user moved the pointer\n      this.resetState()\n      ctx.setRedrawEditorWindow()\n      return\n    }\n\n    if (e.isLeftButtonPressing && !this.cutouted) {\n\n      this.addPointToEditLine(ctx)\n    }\n  }\n\n  mouseUp(e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    this.setInputLocation(e, false)\n\n    ctx.setRedrawEditorWindow()\n\n    // line selecting with single click\n    if (!e.isPointerMoved) {\n\n      this.selectStroke(this.inputLocation, ctx)\n      this.resetState()\n      return\n    }\n\n    if (!this.isEditing\n      || ctx.activeVectorLine == null\n      || this.editStroke == null\n    ) {\n\n      this.resetState()\n      return\n    }\n\n    VectorStrokeLogic.calculateParameters(this.editStroke)\n\n    if (VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n\n      this.resetState()\n      return\n    }\n\n    this.executeCommand(ctx)\n\n    this.isEditing = false\n  }\n\n  protected resetState(isForOperationStart = false) {\n\n    this.editStroke = null\n    this.resampledStroke = null\n    this.candidateStroke = null\n\n    this.isEditing = isForOperationStart\n    this.cutouted = false\n\n    if (isForOperationStart) {\n\n      this.editStroke = new VectorStroke()\n    }\n  }\n\n  private setInputLocation(e: ToolPointerEvent, pointerDown: boolean) {\n\n    if (pointerDown) {\n\n      vec3.copy(this.inputLastLocation, e.location)\n    }\n\n    vec3.copy(this.inputLocation, e.location)\n  }\n\n  private addPointToEditLine(ctx: SubToolContext) {\n\n    const point = new VectorPoint()\n    vec3.copy(point.location, this.inputLocation)\n    vec3.copy(point.adjustingLocation, this.inputLocation)\n    point.lineWidth = ctx.drawLineBaseWidth\n\n    this.editStroke.points.push(point)\n\n    VectorStrokeLogic.calculateParameters(this.editStroke)\n\n    if (!VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n\n      this.resampledStroke = this.generateResampledEditorStroke(this.editStroke, ctx)\n    }\n  }\n\n  private selectStroke(location: Vec3, ctx: SubToolContext) {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    let hitedGeometry: VectorLayerGeometry = null\n    let hitedGroup: VectorStrokeGroup = null\n    let hitedStroke: VectorStroke = null\n\n    ViewKeyframeLayer.forEachVectorGeometry(viewKeyframeLayers, (geometry: VectorLayerGeometry, layer: VectorLayer) => {\n\n      if (hitedStroke == null) {\n\n        this.strokeSingleHitTester.startProcess()\n        this.strokeSingleHitTester.processGeometry(layer, geometry, location, ctx.toolBaseViewRadius)\n\n        hitedGeometry = this.strokeSingleHitTester.hitedGeometry\n        hitedGroup = this.strokeSingleHitTester.hitedGroup\n        hitedStroke = this.strokeSingleHitTester.hitedStoke\n      }\n    })\n\n    if (hitedStroke != null) {\n\n      ctx.setActiveVectorStroke(hitedStroke, hitedGroup, hitedGeometry)\n\n      ctx.setRedrawCurrentLayer()\n      ctx.setRedrawEditorWindow()\n    }\n    else {\n\n      ctx.unsetAcrtiveVectorStrokeAndGroup()\n    }\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @virtual\n\n    if (VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n      return\n    }\n\n    let isExtrudeDone = false\n    let isScratchingDone = false\n\n    const targetLine = ctx.activeVectorLine\n    const targetGroup = ctx.activeVectorGroup\n    const targetLayer = ctx.currentLayer\n    const oldPoints = targetLine.points\n    const resamplingUnitLengthForBrush = ctx.getViewScaledResamplingUnitLengthForBrush()\n\n    if (this.enableExtrude) {\n\n      this.resampledStroke = VectorStrokeLogic.createResampledLine(this.editStroke, resamplingUnitLengthForBrush)\n\n      isExtrudeDone = this.executeExtrudeLine(targetLine, targetGroup, targetLayer, this.resampledStroke, ctx)\n    }\n\n    if (this.enableScratchEdit) {\n\n      this.resampledStroke = this.generateResampledEditorStroke(this.editStroke, ctx)\n\n      isScratchingDone = this.executeScratchingLine(\n        targetLine,\n        targetGroup,\n        targetLayer,\n        this.resampledStroke,\n        isExtrudeDone,\n        ctx\n      )\n    }\n\n    if (isExtrudeDone || isScratchingDone) {\n\n      this.deleteDuplications(\n        targetLine,\n        targetGroup,\n        targetLayer,\n        resamplingUnitLengthForBrush,\n        ctx\n      )\n    }\n\n    VectorLayerLogic.clearPointModifyFlags(oldPoints)\n\n    ctx.setRedrawCurrentLayer()\n  }\n\n  // Adjusting edit line\n\n  private cutoutLine(result: VectorStroke): boolean {\n\n    VectorStrokeLogic.smooth(result)\n\n    const startIndex = this.searchCutoutIndex(result, false)\n    const endIndex = this.searchCutoutIndex(result, true)\n\n    const lastPointCount = result.points.length\n\n    result.points = Lists.getRange(result.points, startIndex, (endIndex - startIndex) + 1)\n\n    VectorStrokeLogic.applyAdjustments(result)\n\n    return (lastPointCount != result.points.length)\n  }\n\n  private searchCutoutIndex(editorLine: VectorStroke, isForward: boolean): int {\n\n    const scanDirection = isForward ? 1 : -1\n\n    let cutoutIndex = isForward ? (editorLine.points.length - 1) : 0\n\n    const centerIndex = Math.floor(editorLine.points.length / 2)\n\n    const limitCurvature = this.cutoutAngle\n\n    let k = centerIndex\n    while (k >= 0 && k < editorLine.points.length) {\n\n      let scanCount = this.curveCheckPointCount\n      let totalCurvature = 0.0\n      let i = k + scanDirection\n      while (i >= 0 && i < editorLine.points.length) {\n\n        const point = editorLine.points[i]\n\n        totalCurvature += point.curvature\n\n        scanCount--\n        if (scanCount == 0) {\n          break\n        }\n\n        i += scanDirection\n      }\n\n      if (totalCurvature >= limitCurvature) {\n\n        cutoutIndex = i\n        break\n      }\n\n      k += scanDirection\n    }\n\n    return cutoutIndex\n  }\n\n  protected generateResampledEditorStroke(editorStroke: VectorStroke, ctx: SubToolContext): VectorStroke { // @virtual\n\n    let resamplingUnitLength = ctx.getViewScaledResamplingUnitLengthForEdit()\n\n    let divisionCount = VectorStrokeLogic.clalculateSamplingDivisionCount(editorStroke.runtime.totalLength, resamplingUnitLength)\n    if (divisionCount > this.maxResamplingDivisionCount) {\n\n      resamplingUnitLength = editorStroke.runtime.totalLength / this.maxResamplingDivisionCount\n    }\n\n    const resampledLine = VectorStrokeLogic.createResampledLine(editorStroke, resamplingUnitLength)\n\n    VectorStrokeLogic.smooth(resampledLine, this.strokeSmoothLevel)\n\n    this.cutouted = this.cutoutLine(resampledLine)\n\n    return resampledLine\n  }\n\n  // Extruding edit\n\n  private executeExtrudeLine(\n    targetLine: VectorStroke,\n    targetGroup: VectorStrokeGroup,\n    targetLayer: Layer,\n    resampledLine: VectorStroke,\n    ctx: SubToolContext\n  ): boolean {\n\n    // Create extrude points\n\n    const baseRadius = ctx.toolBaseViewRadius\n    const editExtrudeMinRadius = baseRadius * this.editExtrudeMinRadiusRate\n    const editExtrudeMaxRadius = baseRadius * this.editExtrudeMaxRadiusRate\n\n    let forwardExtrude = true\n\n    let extrudeLine = this.generateExtrudePoints(false\n      , targetLine, resampledLine, editExtrudeMinRadius, editExtrudeMaxRadius) // forward extrude\n\n    if (extrudeLine == null) {\n\n      extrudeLine = this.generateExtrudePoints(true\n        , targetLine, resampledLine, editExtrudeMinRadius, editExtrudeMaxRadius) // backword extrude\n\n      if (extrudeLine != null) {\n\n        forwardExtrude = false\n      }\n    }\n\n    // Execute command\n\n    this.forwardExtrude = forwardExtrude\n    this.extrudeLine = extrudeLine\n\n    if (extrudeLine != null && extrudeLine.points.length > 0) {\n\n      const command = new Command_ExtrudeLine()\n      command.targetLine = targetLine\n      command.forwardExtrude = forwardExtrude\n      command.extrudeLine = extrudeLine\n\n      command.defferedProcess.addGroup(targetLayer, targetGroup, PostUpdateSituationTypeID.changesObjectShapes)\n\n      ctx.commandHistory.executeCommand(command, ctx)\n\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  private generateExtrudePoints(fromTargetLineTop: boolean, targetLine: VectorStroke, sampleLine: VectorStroke, editExtrudeMinRadius: float, editExtrudeMaxRadius: float): VectorStroke {\n\n    let startPoint: VectorPoint\n    if (fromTargetLineTop) {\n\n      startPoint = targetLine.points[0]\n    }\n    else {\n\n      startPoint = targetLine.points[targetLine.points.length - 1]\n    }\n\n    const sampleLine_NearestPointIndex = this.findNearestPointIndex_PointToPoint(sampleLine, startPoint, 0.0, editExtrudeMaxRadius)\n    if (sampleLine_NearestPointIndex == -1) {\n\n      return null\n    }\n\n    const nearPointCount_SampleLineForward = this.getNearPointCount(targetLine, sampleLine, sampleLine_NearestPointIndex, true, editExtrudeMaxRadius)\n    const nearPointCount_SampleLineBackward = this.getNearPointCount(targetLine, sampleLine, sampleLine_NearestPointIndex, false, editExtrudeMaxRadius)\n\n    //console.log(sampleLine_NearestPointIndex + ' ' + nearPointCount_SampleLineForward + ' ' + nearPointCount_SampleLineBackward)\n\n    const isForwardExtrudeInSampleLine = (nearPointCount_SampleLineForward < 0 && nearPointCount_SampleLineBackward >= 0)\n    const isBackwardExtrudeInSampleLine = (nearPointCount_SampleLineForward >= 0 && nearPointCount_SampleLineBackward < 0)\n\n    const extrudable = (isForwardExtrudeInSampleLine || isBackwardExtrudeInSampleLine)\n\n    if (!extrudable) {\n\n      return null\n    }\n\n    const extrudePoints = this.getExtrudePoints(targetLine, sampleLine, sampleLine_NearestPointIndex, isForwardExtrudeInSampleLine, editExtrudeMinRadius, editExtrudeMaxRadius)\n\n    if (extrudePoints == null) {\n\n      // when all points is far away from edit line\n      return null\n    }\n\n    const extrudeLine = new VectorStroke()\n    extrudeLine.points = extrudePoints\n\n    return extrudeLine\n  }\n\n  private getExtrudePoints(targetLine: VectorStroke, sampleLine: VectorStroke, searchStartIndex: int, forwardSearch: boolean, limitMinDistance: float, limitMaxDistance: float): VectorPoint[] {\n\n    const scanDirection = (forwardSearch ? 1 : -1)\n\n    let startIndex = -1\n\n    let currentIndex = searchStartIndex\n    let nextIndex = currentIndex + scanDirection\n    while (nextIndex >= 0 && nextIndex < sampleLine.points.length) {\n\n      const point1 = sampleLine.points[currentIndex]\n      const point2 = sampleLine.points[nextIndex]\n\n      const nearestPointIndex = this.findNearestPointIndex_LineSegmentToPoint(targetLine, point1, point2, limitMinDistance, limitMaxDistance, false, true)\n\n      if (nearestPointIndex == -1) {\n\n        startIndex = nextIndex\n        break\n      }\n\n      currentIndex += scanDirection\n      nextIndex += scanDirection\n    }\n\n    if (startIndex == -1) {\n\n      return null\n    }\n\n    const result: VectorPoint[] = []\n    if (forwardSearch) {\n\n      for (let i = startIndex; i < sampleLine.points.length; i++) {\n\n        result.push(sampleLine.points[i])\n      }\n    }\n    else {\n\n      for (let i = startIndex; i >= 0; i--) {\n\n        result.push(sampleLine.points[i])\n      }\n    }\n\n    return result\n  }\n\n  // Scratching edit\n\n  private executeScratchingLine(\n    targetLine: VectorStroke,\n    targetGroup: VectorStrokeGroup,\n    targetLayer: Layer,\n    resampledLine: VectorStroke,\n    isExtrudeDone: boolean,\n    ctx: SubToolContext\n  ): boolean {\n\n    // Get scratching candidate points\n\n    const baseRadius = ctx.toolBaseViewRadius\n    const editFalloffRadiusMin = baseRadius * this.editFalloffRadiusMinRate\n    const editFalloffRadiusMax = baseRadius * this.editFalloffRadiusMaxRate\n\n    const candidatePointPairs = this.ganerateScratchingCandidatePoints(\n      targetLine\n      , resampledLine\n      , editFalloffRadiusMin\n      , editFalloffRadiusMax\n      , this.editFalloffRadiusContainsLineWidth\n    )\n\n    // For display\n    this.candidateStroke = new VectorStroke()\n    for (const pair of candidatePointPairs) {\n\n      this.candidateStroke.points.push(pair.candidatePoint)\n    }\n\n    // Execute command\n\n    if (candidatePointPairs != null && candidatePointPairs.length > 0) {\n\n      const command = new Command_ScratchLine()\n      command.isContinued = isExtrudeDone\n      command.targetLine = targetLine\n      command.layer = <VectorLayer>targetLayer\n\n      for (const pair of candidatePointPairs) {\n\n        const editPoint = new Tool_ScratchLine_EditPoint()\n        editPoint.pair = pair\n        command.editPoints.push(editPoint)\n      }\n\n      command.defferedProcess.addGroup(targetLayer, targetGroup, PostUpdateSituationTypeID.changesObjectShapes)\n\n      ctx.commandHistory.executeCommand(command, ctx)\n\n      return true\n    }\n    else {\n\n      return false\n    }\n  }\n\n  protected ganerateScratchingCandidatePoints(target_Line: VectorStroke, editorLine: VectorStroke, _editFalloffRadiusMin: float, editFalloffRadiusMax: float, containsPointLineWidth: boolean): Tool_ScratchLine_CandidatePair[] {\n\n    const result: Tool_ScratchLine_CandidatePair[] = []\n\n    for (const point of target_Line.points) {\n\n      let minDistance = 99999.0\n      let nearestSegmentIndex = -1\n\n      for (let i = 0; i < editorLine.points.length - 1; i++) {\n\n        const editPoint1 = editorLine.points[i]\n        const editPoint2 = editorLine.points[i + 1]\n\n        const distance = Logic_Points.pointToLineSegment_SorroundingDistance(\n          editPoint1.location,\n          editPoint2.location,\n          point.location\n        )\n\n        if (distance < minDistance) {\n\n          minDistance = distance\n          nearestSegmentIndex = i\n        }\n      }\n\n      if (nearestSegmentIndex != -1) {\n\n        const nearestLinePoint1 = editorLine.points[nearestSegmentIndex]\n        const nearestLinePoint2 = editorLine.points[nearestSegmentIndex + 1]\n\n        // Calculate candidate point\n        const nearestPoint_Available = Logic_Points.pointToLine_NearestLocation(\n          this.nearestPointLocation,\n          nearestLinePoint1.location,\n          nearestLinePoint2.location,\n          point.location\n        )\n\n        if (!nearestPoint_Available) {\n\n          continue\n        }\n\n        let directDistance = vec3.distance(point.location, this.nearestPointLocation)\n\n        if (containsPointLineWidth) {\n\n          directDistance -= point.lineWidth * 0.5\n          if (directDistance < 0.0) {\n            directDistance = 0.0\n          }\n        }\n\n        if (directDistance > editFalloffRadiusMax) {\n\n          continue\n        }\n\n        // Calculate edit influence\n        const sorroundingDistance = Logic_Points.pointToLineSegment_SorroundingDistance(\n          nearestLinePoint1.location,\n          nearestLinePoint2.location,\n          this.nearestPointLocation\n        )\n\n        if (sorroundingDistance > editFalloffRadiusMax) {\n\n          continue\n        }\n\n        const normPositionInEditorLineSegment = Logic_Points.pointToLineSegment_NormalizedPosition(\n          nearestLinePoint1.location\n          , nearestLinePoint2.location\n          , point.location)\n\n        const totalLengthInEditorLine = (\n          nearestLinePoint1.totalLength\n          + (nearestLinePoint2.totalLength - nearestLinePoint1.totalLength) * normPositionInEditorLineSegment\n        )\n\n        const influence = this.calculateScratchingCandidatePointInfluence(\n          editorLine.runtime.totalLength\n          , sorroundingDistance\n          , totalLengthInEditorLine\n          , editFalloffRadiusMax\n        )\n\n        if (influence > 0.0) {\n\n          // Create edit data\n          const candidatePoint = new VectorPoint()\n          vec3.copy(candidatePoint.location, this.nearestPointLocation)\n          vec3.copy(candidatePoint.adjustingLocation, candidatePoint.location)\n          candidatePoint.lineWidth = Maths.lerp(normPositionInEditorLineSegment, nearestLinePoint1.lineWidth, nearestLinePoint2.lineWidth)\n\n          const pair = new Tool_ScratchLine_CandidatePair()\n          pair.targetPoint = point\n          pair.candidatePoint = candidatePoint\n          pair.normPosition = normPositionInEditorLineSegment\n          pair.totalLength = totalLengthInEditorLine\n          pair.influence = influence\n\n          result.push(pair)\n\n          // Set the flag for after editing\n          point.modifyFlag = VectorPointModifyFlagID.edit\n        }\n      }\n    }\n\n    return result\n  }\n\n  private calculateScratchingCandidatePointInfluence(editorLine_TotalLength: float, sorroundingDistance: float, totalLengthInEditorLine: float, editFalloffRadiusMax: float): float { // @virtual\n\n    let falloffDistance = 1.0\n\n    if (editorLine_TotalLength > editFalloffRadiusMax * 2.0) {\n\n      if (totalLengthInEditorLine < editFalloffRadiusMax) {\n\n        //falloffDistance = 0.0\n        falloffDistance = totalLengthInEditorLine / editFalloffRadiusMax\n      }\n\n      if (totalLengthInEditorLine > editorLine_TotalLength - editFalloffRadiusMax) {\n\n        //falloffDistance = 0.0\n        falloffDistance = (editorLine_TotalLength - totalLengthInEditorLine) / editFalloffRadiusMax\n      }\n    }\n    else {\n\n      falloffDistance = 1.0 - sorroundingDistance / editFalloffRadiusMax\n    }\n    let influence = Maths.clamp(falloffDistance, 0.0, 1.0)\n\n    if (influence == 0.0) {\n      return 0.0\n    }\n\n    influence *= this.editInfluence * Maths.sigmoid10(1.0 - sorroundingDistance / editFalloffRadiusMax)\n\n    return influence\n  }\n\n  // Delete duplication edit\n\n  private deleteDuplications(\n    targetLine: VectorStroke,\n    targetGroup: VectorStrokeGroup,\n    targetLayer: Layer,\n    resamplingUnitLength: float,\n    ctx: SubToolContext\n  ) {\n\n    // Search edited index range of points\n\n    let firstPointIndex = -1\n    let lastPointIndex = -1\n\n    for (let i = 0; i < targetLine.points.length; i++) {\n\n      const point = targetLine.points[i]\n\n      if (point.modifyFlag == VectorPointModifyFlagID.edit) {\n\n        if (firstPointIndex == -1) {\n\n          firstPointIndex = i\n        }\n\n        lastPointIndex = i\n      }\n    }\n\n    if (firstPointIndex > 0) {\n\n      firstPointIndex--\n    }\n\n    if (lastPointIndex < targetLine.points.length - 1) {\n\n      lastPointIndex++\n    }\n\n    if (lastPointIndex - firstPointIndex < 2) {\n      return\n    }\n\n    // Create new point list\n\n    const newPoints = Lists.getRange(targetLine.points, 0, firstPointIndex)\n\n    VectorPointLogic.resamplePoints(\n      newPoints\n      , targetLine.points\n      , firstPointIndex\n      , lastPointIndex\n      , resamplingUnitLength\n    )\n\n    for (let index = lastPointIndex + 1; index < targetLine.points.length; index++) {\n\n      newPoints.push(targetLine.points[index])\n    }\n\n    // Execute command\n\n    const command = new Command_DeleteDuplicationInLine()\n    command.isContinued = true\n    command.targetLine = targetLine\n    command.layer = <VectorLayer>targetLayer\n    command.oldPoints = targetLine.points\n    command.newPoints = newPoints\n\n    command.defferedProcess.addGroup(targetLayer, targetGroup, PostUpdateSituationTypeID.changesObjectShapes)\n\n    ctx.commandHistory.executeCommand(command, ctx)\n  }\n\n  // Common functions\n\n  private findNearestPointIndex_LineSegmentToPoint(line: VectorStroke, point1: VectorPoint, point2: VectorPoint, limitMinDistance: float, limitMaxDistance: float, includeInnerSide: boolean, includeOuterSide: boolean): int {\n\n    let minDistance = 99999.0\n    let nearestPointIndex = -1\n\n    for (let i = 0; i < line.points.length - 1; i++) {\n      const linePoint = line.points[i]\n\n      const distance = vec3.distance(point1.location, linePoint.location)\n\n      if (distance < minDistance) {\n\n        const normPosition = Logic_Points.pointToLineSegment_NormalizedPosition(point1.location, point2.location, linePoint.location)\n\n        if ((includeInnerSide && normPosition >= 0.0 && normPosition <= 1.0)\n          || (includeOuterSide && (normPosition < 0.0 || normPosition > 1.0))) {\n\n          if (distance > limitMinDistance\n            && distance < limitMaxDistance) {\n\n            minDistance = distance\n            nearestPointIndex = i\n          }\n        }\n      }\n    }\n\n    return nearestPointIndex\n  }\n\n  private findNearestPointIndex_PointToPoint(line: VectorStroke, point: VectorPoint, limitMinDistance: float, limitMaxDistance: float): int {\n\n    let minDistance = 99999.0\n    let nearestPointIndex = -1\n\n    for (let i = 0; i < line.points.length - 1; i++) {\n      const linePoint = line.points[i]\n\n      const distance = vec3.distance(point.location, linePoint.location)\n\n      if (distance < minDistance\n        && distance > limitMinDistance\n        && distance < limitMaxDistance) {\n\n        minDistance = distance\n        nearestPointIndex = i\n      }\n    }\n\n    return nearestPointIndex\n  }\n\n  private getNearPointCount(targetLine: VectorStroke, sampleLine: VectorStroke, searchStartIndex: int, forwardSearch: boolean, limitMaxDistance: float): int {\n\n    let nearPointCcount = 0\n\n    const scanDirection = (forwardSearch ? 1 : -1)\n\n    let currentIndex = searchStartIndex\n    let nextIndex = currentIndex + scanDirection\n    while (nextIndex >= 0 && nextIndex < sampleLine.points.length) {\n\n      const point1 = sampleLine.points[currentIndex]\n      const point2 = sampleLine.points[nextIndex]\n\n      // find the nearest point in target-line by the sample-line's segment\n      const nearestPointIndex = this.findNearestPointIndex_LineSegmentToPoint(targetLine, point1, point2, 0.0, limitMaxDistance, true, false)\n\n      if (nearestPointIndex != -1) {\n\n        nearPointCcount++\n      }\n      else {\n\n        nearPointCcount--\n      }\n\n      currentIndex += scanDirection\n      nextIndex += scanDirection\n    }\n\n    return nearPointCcount\n  }\n}\n\nexport class Command_ExtrudeLine extends CommandBase {\n\n  targetLine: VectorStroke = null\n\n  forwardExtrude = false\n  extrudeLine: VectorStroke = null\n\n  oldPointList: VectorPoint[] = null\n  newPointList: VectorPoint[] = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.prepareEditPoints()\n\n    this.redo(ctx)\n  }\n\n  private prepareEditPoints() {\n\n    this.oldPointList = this.targetLine.points\n\n    if (this.forwardExtrude) {\n\n      this.newPointList = Lists.clone(this.targetLine.points)\n      Lists.addRange(this.newPointList, this.extrudeLine.points)\n    }\n    else {\n\n      this.newPointList = []\n\n      for (let i = this.extrudeLine.points.length - 1; i >= 0; i--) {\n\n        this.newPointList.push(this.extrudeLine.points[i])\n      }\n\n      Lists.addRange(this.newPointList, this.targetLine.points)\n    }\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    this.targetLine.points = this.oldPointList\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    this.targetLine.points = this.newPointList\n  }\n}\n\nexport class Command_ScratchLine extends CommandBase {\n\n  targetLine: VectorStroke = null\n  editPoints: Tool_ScratchLine_EditPoint[] = []\n  layer: VectorLayer = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.prepareEditPoints()\n\n    this.redo(ctx)\n  }\n\n  private prepareEditPoints() {\n\n    for (const editPoint of this.editPoints) {\n\n      const candidatePoint = editPoint.pair.candidatePoint\n      const targetPoint = editPoint.pair.targetPoint\n\n      vec3.copy(editPoint.oldLocation, targetPoint.adjustingLocation)\n\n      if (editPoint.pair.influence > 0.0) {\n\n        vec3.lerp(editPoint.newLocation, targetPoint.location, candidatePoint.location, editPoint.pair.influence)\n      }\n      else {\n\n        vec3.copy(editPoint.newLocation, targetPoint.location)\n      }\n    }\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n\n      const targetPoint = editPoint.pair.targetPoint\n\n      vec3.copy(targetPoint.location, editPoint.oldLocation)\n      vec3.copy(targetPoint.adjustingLocation, targetPoint.location)\n    }\n\n    VectorStrokeLogic.calculateParameters(this.targetLine, this.layer.lineWidthBiasRate)\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n\n      const targetPoint = editPoint.pair.targetPoint\n\n      vec3.copy(targetPoint.location, editPoint.newLocation)\n      vec3.copy(targetPoint.adjustingLocation, targetPoint.location)\n    }\n\n    VectorStrokeLogic.calculateParameters(this.targetLine, this.layer.lineWidthBiasRate)\n  }\n}\n\nexport class Command_DeleteDuplicationInLine extends CommandBase {\n\n  targetLine: VectorStroke = null\n  layer: VectorLayer = null\n\n  oldPoints: VectorPoint[] = null\n  newPoints: VectorPoint[] = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    this.targetLine.points = this.oldPoints\n\n    VectorStrokeLogic.calculateParameters(this.targetLine, this.layer.lineWidthBiasRate)\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    this.targetLine.points = this.newPoints\n\n    VectorStrokeLogic.calculateParameters(this.targetLine, this.layer.lineWidthBiasRate)\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { float, int, Lists, Logic_Points } from '../common-logics'\nimport { SubToolContext, SubToolDrawingContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport { VectorLayer, VectorLayerGeometry, VectorStrokeModifyFlagID, VectorPoint, VectorStroke, VectorStrokeDrawingUnit, VectorStrokeGroup } from '../document-data'\nimport { VectorPointLogic, VectorStrokeHitTestLogic, VectorStrokeLogic } from '../document-logic'\nimport { ToolPointerEvent } from '../tool'\nimport { ShortcutCommandID } from '../user-setting'\nimport { Tool_ScratchLine } from './scratch-line'\n\ninterface LineOverlappingInfo {\n\n  isAvailable: boolean\n  overlap_FirstIndex: int\n  overlap_LastIndex: int\n}\n\ninterface StrokeSearchResult {\n\n  isAvailable: boolean\n  stroke: VectorStroke | null\n  strokeIndex: int\n  segmentIndex: int\n  unit: VectorStrokeDrawingUnit | null\n  group: VectorStrokeGroup | null\n}\n\nclass SubjoinProcessingState {\n\n  newLine: VectorStroke | null = null\n  subjoinedStroke: StrokeSearchResult | null = null\n  subjoinedForward = false\n  deleteLines: VectorStroke[] = []\n}\n\nexport class Tool_ScratchLineDraw extends Tool_ScratchLine {\n\n  helpText = '既存の線の端点近くに線を描いて線を結合します。'\n\n  editLineVec = vec3.fromValues(0.0, 0.0, 0.0)\n  targetLineVec = vec3.fromValues(0.0, 0.0, 0.0)\n\n  onDrawEditor(ctx: SubToolContext, drawing: SubToolDrawingContext) { // @override\n\n    drawing.editorDrawer.drawaBrushCursor(ctx.brushBaseSize, ctx.currentVectorLayer.lineWidthBiasRate)\n\n    drawing.editorDrawer.drawPointerCursor(ctx.toolBaseViewRadius)\n\n    if (this.resampledStroke != null) {\n\n      drawing.editorDrawer.drawOperatorSolidStroke(this.resampledStroke, ctx.currentVectorLayer.lineWidthBiasRate)\n    }\n  }\n\n  mouseUp(_e: ToolPointerEvent, ctx: SubToolContext) { // @override\n\n    ctx.tool.endModalTool()\n\n    ctx.setRedrawEditorWindow()\n\n    if (!this.isEditing\n      || this.editStroke == null) {\n\n      this.resetState(false)\n      return\n    }\n\n    VectorStrokeLogic.calculateParameters(this.editStroke)\n\n    if (VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n\n      this.resetState(false)\n      return\n    }\n\n    this.editStroke = this.generateResampledEditorStroke(this.editStroke, ctx)\n\n    this.executeCommand(ctx)\n\n    this.resetState(false)\n  }\n\n  keydown(_key: string, _commandID: ShortcutCommandID, _ctx: SubToolContext): boolean { // @override\n\n    return false\n  }\n\n  protected generateResampledEditorStroke(editorLine: VectorStroke, ctx: SubToolContext): VectorStroke { // @virtual\n\n    const resamplingUnitLength = ctx.getViewScaledResamplingUnitLengthForEdit()\n\n    const resampledLine = VectorStrokeLogic.createResampledLine(editorLine, resamplingUnitLength)\n\n    VectorStrokeLogic.smooth(resampledLine, this.strokeSmoothLevel)\n\n    return resampledLine\n\n  }\n\n  private getNearestStroke(targetPoint: VectorPoint, geometry: VectorLayerGeometry, minDistanceRange: float): StrokeSearchResult {\n\n    let nearestStroke: VectorStroke = null\n    let nearestStroke_index = VectorStrokeHitTestLogic.InvalidIndex\n    let nearestStroke_segmentIndex = VectorStrokeHitTestLogic.InvalidIndex\n    let nearestStroke_drawingUnit: VectorStrokeDrawingUnit = null\n    let nearestStroke_group: VectorStrokeGroup = null\n\n    let minDistance = VectorStrokeHitTestLogic.MaxDistance\n\n    for (const unit of geometry.units) {\n\n      for (const group of unit.groups) {\n\n        for (const [strokeIndex, stroke] of group.lines.entries()) {\n\n          if (stroke.runtime.modifyFlag != VectorStrokeModifyFlagID.none) {\n            continue\n          }\n\n          if (VectorStrokeHitTestLogic.hitTestLocationToStrokeByRectangle(targetPoint.location, stroke, minDistanceRange)) {\n\n            const nearestSegmentIndex = VectorStrokeHitTestLogic.getNearestSegmentIndex(\n              stroke,\n              targetPoint.location\n            )\n\n            if (nearestSegmentIndex != VectorStrokeHitTestLogic.InvalidIndex) {\n\n              const distance = Logic_Points.pointToLineSegment_SorroundingDistance(\n                stroke.points[nearestSegmentIndex].location,\n                stroke.points[nearestSegmentIndex + 1].location,\n                targetPoint.location\n              )\n\n              if (distance < minDistanceRange) {\n\n                if (distance < minDistance) {\n\n                  minDistance = distance\n\n                  nearestStroke = stroke\n                  nearestStroke_index = strokeIndex\n                  nearestStroke_segmentIndex = nearestSegmentIndex\n                  nearestStroke_drawingUnit = unit\n                  nearestStroke_group = group\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      isAvailable: (nearestStroke != null),\n      stroke: nearestStroke,\n      strokeIndex: nearestStroke_index,\n      segmentIndex: nearestStroke_segmentIndex,\n      unit: nearestStroke_drawingUnit,\n      group: nearestStroke_group\n    }\n  }\n\n  private getSearchDirectionForTargetLine(\n    nearestStroke: VectorStroke,\n    nearestStroke_segmentIndex: int,\n    inputStroke_firstPoint: VectorPoint,\n    inputStroke_secondPoint: VectorPoint\n  ): { isAvailable: boolean, searchForward: boolean } {\n\n    // Ditermine search-index direction\n    const point1 = nearestStroke.points[nearestStroke_segmentIndex]\n    const point2 = nearestStroke.points[nearestStroke_segmentIndex + 1]\n\n    const firstPoint_Position = Logic_Points.pointToLineSegment_NormalizedPosition(\n      point1.location,\n      point2.location,\n      inputStroke_firstPoint.location\n    )\n\n    const secondPoint_Position = Logic_Points.pointToLineSegment_NormalizedPosition(\n      point1.location,\n      point2.location,\n      inputStroke_secondPoint.location\n    )\n\n    return {\n      isAvailable: (secondPoint_Position != firstPoint_Position),\n      searchForward: (secondPoint_Position >= firstPoint_Position)\n    }\n  }\n\n  private getLineOverlappingInfo(\n    sourcePoints: VectorPoint[],\n    source_StartIndex: int,\n    targetPoints: VectorPoint[],\n    target_StartIndex: int,\n    minDistanceRange: float,\n    searchForward: boolean\n  ): LineOverlappingInfo {\n\n    // source側の重なっている領域のインデクスを検索する。\n    // 前提として、二つの線はおおむね並行していて、同じ向きを向いているとする。\n    // 重なる領域は、結果的に次のようになる。\n    // 　・元の線…①重なっている領域の一つ外の点、②重なっている領域の点\n    // 　・対象の線…①重なっている領域の点、②重なっている領域の一つ外側の点\n    // この計算の結果に対応する点は、重なっている領域の内側にある用に検索される（ぴったり境界の位置である場合もある）\n\n    let source_Index = source_StartIndex\n\n    let target_Index = target_StartIndex\n\n    let isAvailable = true\n    let overlap_FirstIndex = -1\n    let overlap_LastIndex = -1\n\n    while (source_Index < sourcePoints.length\n      && target_Index + 1 < targetPoints.length) {\n\n      const sourcePoint = sourcePoints[source_Index]\n      const targetPoint1 = targetPoints[target_Index]\n      const targetPoint2 = targetPoints[target_Index + 1]\n\n      // tests whether the edit-point is nearby the target-line\n      const distance = Logic_Points.pointToLine_Distance(\n        targetPoint1.location,\n        targetPoint2.location,\n        sourcePoint.location\n      )\n\n      if (distance > minDistanceRange) {\n\n        isAvailable = false\n        break\n      }\n\n      // if the edit-point is nearby, increment any one of search-index\n      const localPosition = Logic_Points.pointToLineSegment_NormalizedPosition(\n        targetPoint1.location,\n        targetPoint2.location,\n        sourcePoint.location\n      )\n\n      if (localPosition <= 1.0) {\n\n        if (localPosition >= 0.0) {\n\n          if (overlap_FirstIndex == -1) {\n\n            overlap_FirstIndex = source_Index\n          }\n\n          overlap_LastIndex = source_Index\n        }\n\n        if (source_Index >= sourcePoints.length - 1) {\n\n          break\n        }\n        else {\n\n          source_Index++\n        }\n      }\n      else {\n\n        if (target_Index >= targetPoints.length - 2) {\n\n          break\n        }\n        else {\n\n          target_Index++\n        }\n      }\n    }\n\n    const firstIndex = this.getReorderedPointIndex(sourcePoints.length, overlap_FirstIndex, searchForward)\n    const lastIndex = this.getReorderedPointIndex(sourcePoints.length, overlap_LastIndex, searchForward)\n\n    return {\n      isAvailable: isAvailable,\n      overlap_FirstIndex: searchForward ? firstIndex : lastIndex,\n      overlap_LastIndex: searchForward ? lastIndex : firstIndex\n    }\n  }\n\n  private createSubjoinedLine(topPoints: VectorPoint[], followingPoints: VectorPoint[], followingPoints_OverlappingInfo: LineOverlappingInfo, resamplingUnitLength: float, subjoinToAfter: boolean): VectorStroke {\n\n    let newPoints: VectorPoint[] = []\n\n    let subjoinedIndex: int\n    if (subjoinToAfter) {\n\n      Lists.addRange(newPoints, topPoints)\n\n      subjoinedIndex = newPoints.length - 1\n\n      const followingPoints_startIndex = (\n        followingPoints_OverlappingInfo.overlap_LastIndex != -1\n        ? followingPoints_OverlappingInfo.overlap_LastIndex + 1\n        : 0\n      )\n      Lists.addRange(newPoints, Lists.getRangeToLast(followingPoints, followingPoints_startIndex))\n    }\n    else {\n\n      const followingPoints_length = (\n        followingPoints_OverlappingInfo.overlap_FirstIndex != -1\n        ? followingPoints_OverlappingInfo.overlap_FirstIndex\n        : followingPoints.length\n      )\n      Lists.addRange(newPoints, Lists.getRange(followingPoints, 0, followingPoints_length))\n\n      subjoinedIndex = newPoints.length - 1\n\n      Lists.addRange(newPoints, topPoints)\n    }\n\n    if (subjoinedIndex < 0) {\n\n      subjoinedIndex = 0\n    }\n\n    // resampling for neighbor points of subjoined part\n    if (subjoinedIndex - 2 >= 0 && subjoinedIndex + 4 <= newPoints.length - 1) {\n\n      const resampledPoins: VectorPoint[] = []\n\n      Lists.addRange(resampledPoins, Lists.getRange(newPoints, 0, (subjoinedIndex - 2) + 1))\n\n      VectorPointLogic.resamplePoints(\n        resampledPoins\n        , newPoints\n        , subjoinedIndex - 1\n        , subjoinedIndex + 3\n        , resamplingUnitLength)\n\n        Lists.addRange(resampledPoins, Lists.getRangeToLast(newPoints, subjoinedIndex + 4))\n\n      newPoints = resampledPoins\n    }\n\n    const new_stroke = new VectorStroke()\n    for (const point of newPoints) {\n\n      new_stroke.points.push(VectorPoint.clone(point))\n    }\n\n    return new_stroke\n  }\n\n  private executeProcessForStroke(state: SubjoinProcessingState, input_stroke: VectorStroke, subjoinFromTailOfInput: boolean, ctx: SubToolContext, limitTargetForSurroundingFillLayer = false): boolean {\n\n    // 注意：囲み塗りレイヤー対応のため、線の向きや順番を変えないこと\n\n    // create\n    const input_points = this.getReorderedPoints(input_stroke.points, subjoinFromTailOfInput)\n\n    // get nearest line\n    const input_firstPoint = input_points[0]\n    const minDistanceRange = ctx.toolBaseViewRadius\n    const nearest_stroke = this.getNearestStroke(input_firstPoint, ctx.currentVectorLayerGeometry, minDistanceRange)\n\n    if (!nearest_stroke.isAvailable) {\n      return false\n    }\n\n    // get searching direction\n    const input_secondPoint = input_points[1]\n    const searchDirection =  this.getSearchDirectionForTargetLine(\n      nearest_stroke.stroke, nearest_stroke.segmentIndex, input_firstPoint, input_secondPoint)\n\n    if (!searchDirection.isAvailable) {\n      return false\n    }\n\n    // special limitation for surrounding fill\n    if (state.subjoinedStroke != null) {\n\n      if (limitTargetForSurroundingFillLayer) {\n\n        if (nearest_stroke.group != state.subjoinedStroke.group) {\n          return false\n        }\n\n        const isAvailable = (\n          (nearest_stroke.strokeIndex == state.subjoinedStroke.strokeIndex + 1 && !searchDirection.searchForward)\n          || (nearest_stroke.strokeIndex == state.subjoinedStroke.strokeIndex - 1 && searchDirection.searchForward)\n        )\n\n        if (!isAvailable) {\n          return false\n        }\n      }\n      else {\n\n        if (nearest_stroke.group != state.subjoinedStroke.group) {\n          return false\n        }\n      }\n    }\n\n    // get points and index that has same direction with input stroke\n    const target_reorderedPoints = this.getReorderedPoints(nearest_stroke.stroke.points, searchDirection.searchForward)\n\n    const target_segmentIndex = this.getReorderedSegmentIndex(nearest_stroke.stroke.points.length, nearest_stroke.segmentIndex, searchDirection.searchForward)\n\n    // get overlapping part\n    const input_overlappingInfo = this.getLineOverlappingInfo(\n      input_points, 0, target_reorderedPoints, target_segmentIndex, minDistanceRange, searchDirection.searchForward)\n\n    const target_overlappingInfo = this.getLineOverlappingInfo(\n      target_reorderedPoints, target_segmentIndex, input_points, 0, minDistanceRange, searchDirection.searchForward)\n\n    if (!input_overlappingInfo.isAvailable || !target_overlappingInfo.isAvailable) {\n      return false\n    }\n\n    // join the two lines\n    const reordered_inputPoints = this.getReorderedPoints(input_points, searchDirection.searchForward)\n\n    const resamplingUnitLengthBrush = ctx.getViewScaledResamplingUnitLengthForBrush()\n\n    const new_stroke = this.createSubjoinedLine(\n      nearest_stroke.stroke.points,\n      reordered_inputPoints,\n      input_overlappingInfo,\n      resamplingUnitLengthBrush,\n      searchDirection.searchForward\n    )\n\n    VectorStrokeLogic.calculateParameters(new_stroke)\n\n    // delete the joined line\n    nearest_stroke.stroke.runtime.modifyFlag = VectorStrokeModifyFlagID.delete\n    state.deleteLines.push(nearest_stroke.stroke)\n\n    state.newLine = new_stroke\n    state.subjoinedStroke = nearest_stroke\n    state.subjoinedForward = searchDirection.searchForward\n\n    return true\n  }\n\n  protected getReorderedPoints(points: VectorPoint[], searchForward: boolean): VectorPoint[] {\n\n    return (\n      searchForward\n      ? points\n      : Lists.cloneReversed(points)\n    )\n  }\n\n  protected getReorderedSegmentIndex(strokePointCount: int, segmentIndex: int, searchForward: boolean): int {\n\n    return (\n      searchForward\n      ? segmentIndex\n      : (strokePointCount - 1) - segmentIndex - 1\n    )\n  }\n\n  protected getReorderedPointIndex(strokePointCount: int, pointIndex: int, searchForward: boolean): int {\n\n    if (pointIndex < 0) {\n      return pointIndex\n    }\n\n    return (\n      searchForward\n      ? pointIndex\n      : (strokePointCount - 1) - pointIndex\n    )\n  }\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    if (VectorStrokeLogic.isEmptyStroke(this.editStroke)) {\n      return\n    }\n\n    let state = new SubjoinProcessingState()\n\n    // process forward direction for edit line\n    const forward_isAvailable  = this.executeProcessForStroke(state, this.editStroke, true, ctx)\n\n    // process backward direction for edit line if not processed\n    let backward_isAvailable = false\n    if (!forward_isAvailable) {\n\n      state = new SubjoinProcessingState()\n      backward_isAvailable = this.executeProcessForStroke(state, this.editStroke, false, ctx)\n    }\n\n    // process to connect to another line\n    if (forward_isAvailable || backward_isAvailable) {\n\n      const first_subjoinedStroke = state.subjoinedStroke\n\n      const limitTargetForSurroundingFillLayer =  VectorLayer.isSurroundingFillLayer(ctx.currentLayer)\n      this.executeProcessForStroke(state, state.newLine, !state.subjoinedForward, ctx, limitTargetForSurroundingFillLayer)\n\n      // 注意：囲み塗りレイヤーへの対応のため、ストロークのインデクスが変わらないようにすること\n\n      VectorStrokeLogic.calculateParameters(state.newLine, ctx.currentVectorLayer.lineWidthBiasRate)\n\n      const command = new Command_InsertStroke()\n      command.setTarget(\n        ctx.currentVectorLayer,\n        ctx.currentVectorLayerGeometry,\n        first_subjoinedStroke.group,\n        state.newLine,\n        first_subjoinedStroke.strokeIndex\n      )\n\n      ctx.commandHistory.executeCommand(command, ctx)\n    }\n    else {\n\n      //this.executeAddDrawLine(this.editLine, ctx)\n    }\n\n    ctx.setRedrawCurrentLayer()\n    ctx.setRedrawEditorWindow()\n  }\n}\n\nexport class Command_InsertStroke extends CommandBase {\n\n  layer: VectorLayer = null\n  geometry: VectorLayerGeometry = null\n  group: VectorStrokeGroup = null\n  stroke: VectorStroke = null\n  insertIndex = -1\n\n  setTarget(layer: VectorLayer, geometry: VectorLayerGeometry, group: VectorStrokeGroup, stroke: VectorStroke, insertIndex: int) {\n\n    this.layer = layer\n    this.geometry = geometry\n    this.group = group\n    this.stroke = stroke\n    this.insertIndex = insertIndex\n  }\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n\n    this.defferedProcess.addGroup(this.layer, this.group, PostUpdateSituationTypeID.changesObjectShapes)\n    this.defferedProcess.addGeometryForDeletingEmpties(this.geometry)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    Lists.removeAt(this.group.lines, this.insertIndex)\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    Lists.insertAt(this.group.lines, this.insertIndex, this.stroke)\n  }\n}\n","﻿import { CommandBase } from '../command'\nimport { Maths } from '../common-logics'\nimport { SubToolContext } from '../context'\nimport { PostUpdateSituationTypeID } from '../deffered-process'\nimport { VectorLayer, VectorStroke } from '../document-data'\nimport { VectorLayerLogic, VectorStrokeLogic } from '../document-logic'\nimport { Tool_ScratchLine, Tool_ScratchLine_CandidatePair } from './scratch-line'\n\nclass Tool_ScratchLineWidth_EditPoint {\n\n  pair: Tool_ScratchLine_CandidatePair = null\n\n  newLineWidth = 0.0\n  oldLineWidth = 0.0\n  newLocation = vec3.create()\n  oldLocation = vec3.create()\n}\n\nexport class Tool_OverWriteLineWidth extends Tool_ScratchLine {\n\n  helpText = '線を最大の太さに近づけます。Shiftキーで線を細くします。<br />Ctrlキーで最大の太さ固定になります。'\n\n  editFalloffRadiusContainsLineWidth = true\n\n  protected executeCommand(ctx: SubToolContext) { // @override\n\n    // Resampling editor line\n    if (VectorStrokeLogic.isEmptyStroke(this.resampledStroke)) {\n      return\n    }\n\n    const baseRadius = ctx.toolBaseViewRadius\n    const targetLine = ctx.activeVectorLine\n    const oldPoints = targetLine.points\n\n    // Get candidate points\n    const editFalloffRadiusMin = baseRadius * this.editFalloffRadiusMinRate\n    const editFalloffRadiusMax = baseRadius * this.editFalloffRadiusMaxRate\n    const candidatePointPairs = this.ganerateScratchingCandidatePoints(\n      targetLine\n      , this.resampledStroke\n      , editFalloffRadiusMin\n      , editFalloffRadiusMax\n      , this.editFalloffRadiusContainsLineWidth\n    )\n\n    if (candidatePointPairs != null && candidatePointPairs.length > 0) {\n\n      const command = new Command_ScratchLineWidth()\n      command.targetLine = targetLine\n      command.layer = ctx.currentVectorLayer\n\n      for (const pair of candidatePointPairs) {\n\n        const editPoint = new Tool_ScratchLineWidth_EditPoint()\n        editPoint.pair = pair\n\n        editPoint.oldLineWidth = editPoint.pair.targetPoint.lineWidth\n        vec3.copy(editPoint.oldLocation, editPoint.pair.targetPoint.location)\n\n        this.processPoint(editPoint, ctx)\n\n        command.editPoints.push(editPoint)\n      }\n\n      command.defferedProcess.addGroup(ctx.currentLayer, ctx.activeVectorGroup, PostUpdateSituationTypeID.changesObjectShapes)\n\n      ctx.commandHistory.executeCommand(command, ctx)\n    }\n\n    VectorLayerLogic.clearPointModifyFlags(oldPoints)\n  }\n\n  protected processPoint(editPoint: Tool_ScratchLineWidth_EditPoint, ctx: SubToolContext) { // @virtual\n\n    let setTo_LineWidth = ctx.drawLineBaseWidth\n    if (ctx.isShiftKeyPressing()) {\n\n      setTo_LineWidth = ctx.drawLineMinWidth\n    }\n\n    let fixedOverWriting = false\n    if (ctx.isCtrlKeyPressing()) {\n\n      fixedOverWriting = true\n    }\n\n    vec3.copy(editPoint.newLocation, editPoint.pair.targetPoint.location)\n\n    if (editPoint.pair.influence > 0.0) {\n\n      if (fixedOverWriting) {\n\n        editPoint.newLineWidth = setTo_LineWidth\n      }\n      else {\n\n        editPoint.newLineWidth = Maths.lerp(\n          editPoint.pair.influence * 0.5\n          , editPoint.pair.targetPoint.lineWidth\n          , setTo_LineWidth)\n      }\n    }\n    else {\n\n      editPoint.newLineWidth = editPoint.pair.targetPoint.lineWidth\n    }\n  }\n}\n\nexport class Tool_ScratchLineWidth extends Tool_OverWriteLineWidth {\n\n  helpText = '線の太さを足します。Shiftキーで減らします。'\n\n  editFalloffRadiusMinRate = 0.15\n  editFalloffRadiusMaxRate = 1.0\n  editInfluence = 1.0\n\n  subtructVector = vec3.create()\n  moveVector = vec3.create()\n\n  protected processPoint(editPoint: Tool_ScratchLineWidth_EditPoint, ctx: SubToolContext) { // @override\n\n    const targetPoint = editPoint.pair.targetPoint\n    const candidatePoint = editPoint.pair.candidatePoint\n\n    const targetPointRadius = targetPoint.lineWidth * 0.5\n    const candidatePointRadius = candidatePoint.lineWidth * 0.5\n\n    const distance = vec3.distance(targetPoint.location, candidatePoint.location)\n\n    if (!ctx.isShiftKeyPressing()) {\n\n      if (distance + candidatePointRadius > targetPointRadius\n        && distance - candidatePointRadius > -targetPointRadius) {\n\n        const totalDiameter = targetPointRadius + distance + candidatePointRadius\n        const totalRadius = totalDiameter * 0.5\n\n        const newRadius = Maths.lerp(\n          editPoint.pair.influence\n          , targetPointRadius\n          , totalRadius)\n\n        editPoint.newLineWidth = newRadius * 2.0\n\n        vec3.subtract(this.subtructVector, candidatePoint.location, targetPoint.location)\n        vec3.normalize(this.subtructVector, this.subtructVector)\n        vec3.scale(this.moveVector, this.subtructVector, -targetPointRadius + newRadius)\n        vec3.add(editPoint.newLocation, targetPoint.location, this.moveVector)\n      }\n      else if (candidatePointRadius > targetPointRadius) {\n\n        editPoint.newLineWidth = candidatePointRadius * 2.0\n        vec3.copy(editPoint.newLocation, candidatePoint.location)\n      }\n      else {\n\n        editPoint.newLineWidth = targetPoint.lineWidth\n        vec3.copy(editPoint.newLocation, targetPoint.location)\n      }\n    }\n    else {\n\n      if (distance - candidatePointRadius < targetPointRadius\n        && distance - candidatePointRadius > -targetPointRadius) {\n\n        const totalDiameter = targetPointRadius + distance - candidatePointRadius\n        const totalRadius = totalDiameter * 0.5\n\n        const newRadius = Maths.lerp(\n          editPoint.pair.influence\n          , targetPointRadius\n          , totalRadius)\n\n        editPoint.newLineWidth = newRadius * 2.0\n\n        vec3.subtract(this.subtructVector, candidatePoint.location, targetPoint.location)\n        vec3.normalize(this.subtructVector, this.subtructVector)\n        vec3.scale(this.moveVector, this.subtructVector, -targetPointRadius + newRadius)\n        vec3.add(editPoint.newLocation, targetPoint.location, this.moveVector)\n\n\n      }\n      else if (distance < candidatePointRadius) {\n\n        editPoint.newLineWidth = 0.0\n        vec3.copy(editPoint.newLocation, targetPoint.location)\n      }\n      else {\n\n        editPoint.newLineWidth = targetPoint.lineWidth\n        vec3.copy(editPoint.newLocation, targetPoint.location)\n      }\n    }\n  }\n}\n\nexport class Command_ScratchLineWidth extends CommandBase {\n\n  targetLine: VectorStroke = null\n  editPoints: Tool_ScratchLineWidth_EditPoint[] = []\n  layer: VectorLayer = null\n\n  execute(ctx: SubToolContext) { // @override\n\n    this.redo(ctx)\n  }\n\n  undo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n      const targetPoint = editPoint.pair.targetPoint\n\n      targetPoint.lineWidth = editPoint.oldLineWidth\n      targetPoint.adjustingLineWidth = editPoint.oldLineWidth\n\n      vec3.copy(targetPoint.location, editPoint.oldLocation)\n      vec3.copy(targetPoint.adjustingLocation, editPoint.oldLocation)\n    }\n\n    VectorStrokeLogic.calculateParameters(this.targetLine, this.layer.lineWidthBiasRate)\n  }\n\n  redo(_ctx: SubToolContext) { // @override\n\n    for (const editPoint of this.editPoints) {\n      const targetPoint = editPoint.pair.targetPoint\n\n      targetPoint.lineWidth = editPoint.newLineWidth\n      targetPoint.adjustingLineWidth = editPoint.newLineWidth\n\n      vec3.copy(targetPoint.location, editPoint.newLocation)\n      vec3.copy(targetPoint.adjustingLocation, editPoint.newLocation)\n    }\n\n    VectorStrokeLogic.calculateParameters(this.targetLine, this.layer.lineWidthBiasRate)\n  }\n}\n","﻿import { SubToolContext } from '../context'\nimport { VectorStrokeGroup } from '../document-data'\nimport { SelectionEditMode, VectorLayerSelectionInfo } from '../document-logic'\nimport { SubTool } from '../tool'\nimport { ViewKeyframeLayer } from '../view'\nimport { Command_Select } from './select-brush-select'\n\nexport class Tool_Select_All_LinePoint extends SubTool {\n\n  executeToggleSelection(ctx: SubToolContext): boolean {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    const existsSelectedPoints = this.isSelectedAnyPoint(viewKeyframeLayers)\n\n    return this.executeModifySelection(viewKeyframeLayers, existsSelectedPoints, ctx)\n  }\n\n  executeSelectAll(ctx: SubToolContext): boolean  {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    return this.executeModifySelection(viewKeyframeLayers, false, ctx)\n  }\n\n  executeClearSelectAll(ctx: SubToolContext): boolean  {\n\n    const viewKeyframeLayers = ctx.main.collectVectorViewKeyframeLayersForEdit()\n\n    return this.executeModifySelection(viewKeyframeLayers, true, ctx)\n  }\n\n  private executeModifySelection(editableKeyframeLayers: ViewKeyframeLayer[], clearSelection: boolean, ctx: SubToolContext): boolean {\n\n    let selectionInfo: VectorLayerSelectionInfo\n\n    if (clearSelection) {\n\n      selectionInfo = this.createSelectionInfo_ClearAllSelection(editableKeyframeLayers)\n    }\n    else {\n\n      selectionInfo = this.createSelectionInfo_SelectAll(editableKeyframeLayers)\n    }\n\n    if (selectionInfo.selectedPoints.length == 0) {\n      return false\n    }\n\n    selectionInfo.updateLineSelectionState()\n\n    this.executeCommand(selectionInfo, ctx)\n\n    selectionInfo.resetModifyStates()\n\n    ctx.setRedrawMainWindowEditorWindow()\n\n    return true\n  }\n\n  private isSelectedAnyPoint(viewKeyframeLayers: ViewKeyframeLayer[]): boolean {\n\n    let isSelected = false\n\n    ViewKeyframeLayer.forEachStrokeGroup(viewKeyframeLayers, (group: VectorStrokeGroup) => {\n\n      for (const line of group.lines) {\n\n        if (line.isSelected) {\n\n          isSelected = true\n          break\n        }\n\n        for (const point of line.points) {\n\n          if (point.isSelected) {\n\n            isSelected = true\n            break\n          }\n        }\n      }\n    })\n\n    return isSelected\n  }\n\n  private createSelectionInfo_SelectAll(viewKeyframeLayers: ViewKeyframeLayer[]): VectorLayerSelectionInfo {\n\n    const selectionInfo = new VectorLayerSelectionInfo()\n\n    ViewKeyframeLayer.forEachStrokeGroup(viewKeyframeLayers, (group: VectorStrokeGroup) => {\n\n      for (const line of group.lines) {\n\n        for (const point of line.points) {\n\n          if (!point.isSelected) {\n\n            selectionInfo.selectPoint(line, point, SelectionEditMode.setSelected)\n          }\n        }\n      }\n    })\n\n    return selectionInfo\n  }\n\n  private createSelectionInfo_ClearAllSelection(viewKeyframeLayers: ViewKeyframeLayer[]): VectorLayerSelectionInfo {\n\n    const selectionInfo = new VectorLayerSelectionInfo()\n\n    ViewKeyframeLayer.forEachStrokeGroup(viewKeyframeLayers, (group: VectorStrokeGroup) => {\n\n      for (const line of group.lines) {\n\n        for (const point of line.points) {\n\n          if (point.isSelected) {\n\n            selectionInfo.selectPoint(line, point, SelectionEditMode.setUnselected)\n          }\n        }\n      }\n    })\n\n    return selectionInfo\n  }\n\n  private executeCommand(selectionInfo: VectorLayerSelectionInfo, ctx: SubToolContext) {\n\n    const command = new Command_Select()\n    command.selectionInfo = selectionInfo\n\n    ctx.commandHistory.executeCommand(command, ctx)\n  }\n}\n","import { App_Drawing } from './app-drawing'\nimport { App_View } from './app-view'\nimport { Command_Layer_CommandBase } from './commands'\nimport { DocumentContext, SubToolContext, SubToolContext_AppTool_Interface } from './context'\nimport {\n  AutoFillLayer, DocumentData, ImageFileReferenceLayer, Layer, LayerTypeID, PosingLayer,\n  VectorLayer\n} from './document-data'\nimport { DrawPathContext } from './document-drawing'\nimport { HitTest_VectorStroke_IsCloseToMouse, LayerLogic } from './document-logic'\nimport { float, int, RectangleArea } from './common-logics'\nimport {\n  BrushParameter, BrushParameterID, BrushTypeID, EditModeID, MainTool, MainToolCommonTabSet, MainToolID, MainToolTab, MainToolTabID,\n  MainToolTabTypeID, ModalToolBase, OperationOriginTypeID, OperationUnitID, PointerParameter, PointerParameterID, PointerTypeID, SubTool, SubToolID, SubToolParameter,\n  SubToolParameterID, ToolPointerEvent, Tool_None\n} from './tool'\nimport {\n  MainTool_AutoFillLayer, MainTool_GroupLayer, MainTool_ImageFileReferenceLayer, MainTool_Poing3DLayer,\n  MainTool_PointBrushFillLayer,\n  MainTool_VectorLayer\n} from './tools-main'\nimport { MainToolTab_Document, MainToolTab_Edit, MainToolTab_EditDisabled, MainToolTab_Layer } from './tools-main-tab'\nimport { MainToolTab_View } from './tools-main-tab/view'\nimport {\n  Tool_AddAutoFillPoint, Tool_DeleteAutoFillPoint, Tool_DeletePoints_DivideLine, Tool_DrawLine, Tool_DrawPointBrush, Tool_EditDocumentFrame,\n  Tool_EditModeMain, Tool_HideLinePoint_BrushSelect as Tool_EditLinePointWidth_BrushSelect, Tool_LocateOperatorCursor, Tool_NoOperation, Tool_OverWriteLineWidth,\n  Tool_Posing3d_LocateBody, Tool_Posing3d_LocateHead, Tool_Posing3d_LocateHips, Tool_Posing3d_LocateLeftArm1,\n  Tool_Posing3d_LocateLeftArm2, Tool_Posing3d_LocateLeftLeg1, Tool_Posing3d_LocateLeftLeg2, Tool_Posing3d_LocateLeftShoulder,\n  Tool_Posing3d_LocateRightArm1, Tool_Posing3d_LocateRightArm2, Tool_Posing3d_LocateRightLeg1, Tool_Posing3d_LocateRightLeg2,\n  Tool_Posing3d_LocateRightShoulder, Tool_Posing3d_RotateHead, Tool_Posing3d_ToolBase, Tool_Resample_Segment, Tool_ScratchLine, Tool_ScratchLineDraw,\n  Tool_ScratchLineWidth, Tool_Select_All_LinePoint, Tool_Select_BrushSelect,\n  Tool_Transform_Lattice_GrabMove, Tool_Transform_Lattice_Rotate,\n  Tool_Transform_Lattice_Scale, Tool_Transform_ReferenceImage_GrabMove, Tool_Transform_ReferenceImage_Rotate,\n  Tool_Transform_ReferenceImage_Scale\n} from './tools-sub'\nimport { RibbonUIControlID } from './ui'\nimport { ShortcutCommandID } from './user-setting'\nimport { ViewKeyframe, ViewKeyframeLayer, ViewLayerListItem } from './view'\n\nexport class App_Tool implements SubToolContext_AppTool_Interface {\n\n  // SubTools\n\n  tool_None = new Tool_None()\n\n  subTools: SubTool[] = []\n  modalSubTools: ModalToolBase[] = []\n  posing3dSubTools: SubTool[] = []\n\n  tool_NoOperation = new Tool_NoOperation()\n\n  tool_DrawLine = new Tool_DrawLine()\n  tool_ScratchLine = new Tool_ScratchLine()\n  tool_ExtrudeLine = new Tool_ScratchLineDraw()\n  tool_OverWriteLineWidth = new Tool_OverWriteLineWidth()\n  tool_ScratchLineWidth = new Tool_ScratchLineWidth()\n  tool_DeletePoints_DivideLine = new Tool_DeletePoints_DivideLine()\n  tool_EditLinePointWidth_BrushSelect = new Tool_EditLinePointWidth_BrushSelect()\n  tool_DrawPointBrush = new Tool_DrawPointBrush()\n  tool_PointBrush_ExtrudeLine = new Tool_ScratchLineDraw()\n\n  tool_AddAutoFillPoint = new Tool_AddAutoFillPoint()\n  tool_DeleteAutoFillPoint = new Tool_DeleteAutoFillPoint()\n\n  tool_EditModeMain = new Tool_EditModeMain()\n  tool_LocateOperatorCursor = new Tool_LocateOperatorCursor()\n  tool_BrushSelect = new Tool_Select_BrushSelect()\n  tool_ResampleSegment = new Tool_Resample_Segment()\n\n  tool_Transform_Lattice_GrabMove = new Tool_Transform_Lattice_GrabMove()\n  tool_Transform_Lattice_Rotate = new Tool_Transform_Lattice_Rotate()\n  tool_Transform_Lattice_Scale = new Tool_Transform_Lattice_Scale()\n\n  tool_EditDocumentFrame = new Tool_EditDocumentFrame()\n\n  tool_Transform_ReferenceImage_GrabMove = new Tool_Transform_ReferenceImage_GrabMove()\n  tool_Transform_ReferenceImage_Rotate = new Tool_Transform_ReferenceImage_Rotate()\n  tool_Transform_ReferenceImage_Scale = new Tool_Transform_ReferenceImage_Scale()\n\n  tool_SelectAllPoints = new Tool_Select_All_LinePoint()\n  hittest_Line_IsCloseTo = new HitTest_VectorStroke_IsCloseToMouse()\n\n  tool_Posing3d_LocateHead = new Tool_Posing3d_LocateHead()\n  tool_Posing3d_RotateHead = new Tool_Posing3d_RotateHead()\n  tool_Posing3d_LocateBody = new Tool_Posing3d_LocateBody()\n  tool_Posing3d_LocateHips = new Tool_Posing3d_LocateHips()\n  tool_Posing3d_LocateLeftShoulder = new Tool_Posing3d_LocateLeftShoulder()\n  tool_Posing3d_LocateRightShoulder = new Tool_Posing3d_LocateRightShoulder()\n  tool_Posing3d_LocateLeftArm1 = new Tool_Posing3d_LocateLeftArm1()\n  tool_Posing3d_LocateLeftArm2 = new Tool_Posing3d_LocateLeftArm2()\n  tool_Posing3d_LocateRightArm1 = new Tool_Posing3d_LocateRightArm1()\n  tool_Posing3d_LocateRightArm2 = new Tool_Posing3d_LocateRightArm2()\n  tool_Posing3d_LocateLeftLeg1 = new Tool_Posing3d_LocateLeftLeg1()\n  tool_Posing3d_LocateLeftLeg2 = new Tool_Posing3d_LocateLeftLeg2()\n  tool_Posing3d_LocateRightLeg1 = new Tool_Posing3d_LocateRightLeg1()\n  tool_Posing3d_LocateRightLeg2 = new Tool_Posing3d_LocateRightLeg2()\n\n  // Tool parameters\n\n  pointerParameters: PointerParameter[] = [\n    { parameterID: PointerParameterID.none, baseSize: 0.0, minSize: 0.0 },\n    { parameterID: PointerParameterID.extrudeLine, baseSize: 20.0, minSize: 1.0 },\n    { parameterID: PointerParameterID.eracer, baseSize: 20.0, minSize: 1.0 },\n    { parameterID: PointerParameterID.scratchLine, baseSize: 25.0, minSize: 1.0 },\n    { parameterID: PointerParameterID.setLineWidth, baseSize: 20.0, minSize: 1.0 },\n    { parameterID: PointerParameterID.brushSelect, baseSize: 20.0, minSize: 1.0 },\n  ]\n\n  brushParameters: BrushParameter[] = [\n    { parameterID: BrushParameterID.none, brushType: BrushTypeID.none, baseSize: 0.0, minSize: 0.0, stepRate: 1.0 },\n    { parameterID: BrushParameterID.solidStroke, brushType: BrushTypeID.solidBrushStroke, baseSize: 1.0, minSize: 1.0, stepRate: 1.0 },\n    { parameterID: BrushParameterID.pointBrush, brushType: BrushTypeID.radialBrush, baseSize: 25.0, minSize: 1.0, stepRate: 0.25 },\n  ]\n\n  subToolParameters: SubToolParameter[] = [\n    { parameterID: SubToolParameterID.none, pointerType: PointerTypeID.none, pointerParameterID: PointerParameterID.none, brushParameterID: BrushParameterID.none },\n    { parameterID: SubToolParameterID.drawLine, pointerType: PointerTypeID.brush, pointerParameterID: PointerParameterID.none, brushParameterID: BrushParameterID.solidStroke },\n    { parameterID: SubToolParameterID.extrudeLine, pointerType: PointerTypeID.brushWithCircularRange, pointerParameterID: PointerParameterID.extrudeLine, brushParameterID: BrushParameterID.solidStroke },\n    { parameterID: SubToolParameterID.eracer, pointerType: PointerTypeID.circularRange, pointerParameterID: PointerParameterID.eracer, brushParameterID: BrushParameterID.none },\n    { parameterID: SubToolParameterID.scratchLine, pointerType: PointerTypeID.circularRange, pointerParameterID: PointerParameterID.extrudeLine, brushParameterID: BrushParameterID.none },\n    { parameterID: SubToolParameterID.setLineWidth, pointerType: PointerTypeID.circularRange, pointerParameterID: PointerParameterID.extrudeLine, brushParameterID: BrushParameterID.none },\n    { parameterID: SubToolParameterID.scratchLineWidth, pointerType: PointerTypeID.circularRange, pointerParameterID: PointerParameterID.extrudeLine, brushParameterID: BrushParameterID.none },\n    { parameterID: SubToolParameterID.brushSelect, pointerType: PointerTypeID.circularRange, pointerParameterID: PointerParameterID.extrudeLine, brushParameterID: BrushParameterID.none },\n    { parameterID: SubToolParameterID.drawPointBrush, pointerType: PointerTypeID.brush, pointerParameterID: PointerParameterID.none, brushParameterID: BrushParameterID.pointBrush },\n    { parameterID: SubToolParameterID.pointBrush_extrudeLine, pointerType: PointerTypeID.brushWithCircularRange, pointerParameterID: PointerParameterID.extrudeLine, brushParameterID: BrushParameterID.pointBrush },\n  ]\n\n  // Tool state\n  private mainTools: MainTool[] = []\n  private current_MainTool: MainTool = null\n  private current_MainToolTab: MainToolTab = null\n  private current_SubTool: SubTool = null\n  private current_ModalTool: ModalToolBase = null\n  private modalBeforeTool: SubTool = null\n\n  private appView: App_View = null\n  private appDrawing: App_Drawing = null\n\n  private docContext: DocumentContext = null\n  private subToolContext: SubToolContext = null\n\n  private baseColor = vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n\n  link(appView: App_View, appDrawing: App_Drawing) {\n\n    this.appView = appView\n    this.appDrawing = appDrawing\n  }\n\n  linkContexts(docContext: DocumentContext, toolContext: SubToolContext) {\n\n    this.docContext = docContext\n    this.subToolContext = toolContext\n  }\n\n  // Initializing\n\n  initializeTools() {\n\n    // Resoures\n    this.appDrawing.posing3DView.storeResources(this.appView.modelFile, this.appView.imageResurces)\n\n    // Constructs main tools and sub tools structure\n    const commonTabs = new MainToolCommonTabSet()\n    commonTabs.edit = new MainToolTab_Edit()\n    commonTabs.edit_disabled = new MainToolTab_EditDisabled()\n    commonTabs.document = new MainToolTab_Document()\n    commonTabs.layer = new MainToolTab_Layer()\n    commonTabs.view = new MainToolTab_View()\n\n    this.addMainTool(new MainTool_GroupLayer(commonTabs))\n    this.addMainTool(new MainTool_VectorLayer(commonTabs))\n    this.addMainTool(new MainTool_ImageFileReferenceLayer(commonTabs))\n    this.addMainTool(new MainTool_AutoFillLayer(commonTabs))\n    this.addMainTool(new MainTool_Poing3DLayer(commonTabs))\n    this.addMainTool(new MainTool_PointBrushFillLayer(commonTabs))\n\n    this.addSubTool(this.tool_NoOperation, SubToolID.noOperation, SubToolParameterID.none)\n\n    this.addModalSubTool(this.tool_DrawLine, SubToolID.drawLine, SubToolParameterID.drawLine)\n    this.addModalSubTool(this.tool_ScratchLine, SubToolID.scratchLine, SubToolParameterID.scratchLine)\n    this.addModalSubTool(this.tool_ExtrudeLine, SubToolID.extrudeLine, SubToolParameterID.extrudeLine)\n    this.addModalSubTool(this.tool_OverWriteLineWidth, SubToolID.overWriteLineWidth, SubToolParameterID.setLineWidth)\n    this.addModalSubTool(this.tool_ScratchLineWidth, SubToolID.scratchLineWidth, SubToolParameterID.scratchLineWidth)\n    this.addModalSubTool(this.tool_DeletePoints_DivideLine, SubToolID.deletePointBrush, SubToolParameterID.eracer)\n    this.addModalSubTool(this.tool_EditLinePointWidth_BrushSelect, SubToolID.editLinePointWidth_BrushSelect, SubToolParameterID.brushSelect)\n    this.addModalSubTool(this.tool_DrawPointBrush, SubToolID.drawPointBrush, SubToolParameterID.drawPointBrush)\n    this.addModalSubTool(this.tool_PointBrush_ExtrudeLine, SubToolID.pointBrush_extrudeLine, SubToolParameterID.pointBrush_extrudeLine)\n\n    this.addSubTool(this.tool_AddAutoFillPoint, SubToolID.addAutoFillPoint, SubToolParameterID.brushSelect)\n    this.addSubTool(this.tool_DeleteAutoFillPoint, SubToolID.deleteAutoFillPoint, SubToolParameterID.brushSelect)\n\n    this.addModalSubTool(this.tool_EditModeMain, SubToolID.editModeMain, SubToolParameterID.brushSelect)\n    this.addSubTool(this.tool_LocateOperatorCursor, SubToolID.locateOperatorCursor)\n    this.addModalSubTool(this.tool_BrushSelect, SubToolID.brushSelect, SubToolParameterID.brushSelect)\n    this.addSubTool(this.tool_ResampleSegment, SubToolID.resampleSegment, SubToolParameterID.brushSelect)\n\n    this.addModalSubTool(this.tool_Transform_Lattice_GrabMove, SubToolID.edit_GrabMove)\n    this.addModalSubTool(this.tool_Transform_Lattice_Rotate, SubToolID.edit_Rotate)\n    this.addModalSubTool(this.tool_Transform_Lattice_Scale, SubToolID.edit_Scale)\n\n    this.addModalSubTool(this.tool_EditDocumentFrame, SubToolID.editDocumentFrame)\n\n    this.addModalSubTool(this.tool_Transform_ReferenceImage_GrabMove, SubToolID.image_GrabMove)\n    this.addModalSubTool(this.tool_Transform_ReferenceImage_Rotate, SubToolID.image_Rotate)\n    this.addModalSubTool(this.tool_Transform_ReferenceImage_Scale, SubToolID.image_Scale)\n\n    this.addModalSubTool(this.tool_Posing3d_LocateHead, SubToolID.p3d_locateHead)\n\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateHead, SubToolID.p3d_locateHead, 0)\n    this.addPosing3DSubTool(this.tool_Posing3d_RotateHead, SubToolID.p3d_rotateHead, 1)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateBody, SubToolID.p3d_locateBody, 2)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateHips, SubToolID.p3d_locateHips, 3)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateLeftShoulder , SubToolID.p3d_locateLeftShoulder, 4)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateLeftArm1     , SubToolID.p3d_locateLeftArm1, 4)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateLeftArm2     , SubToolID.p3d_locateLeftArm2, 5)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateRightShoulder, SubToolID.p3d_locateRightShoulder, 6)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateRightArm1    , SubToolID.p3d_locateRightArm1, 6)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateRightArm2    , SubToolID.p3d_locateRightArm2, 7)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateLeftLeg1     , SubToolID.p3d_locateLeftLeg1, 8)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateLeftLeg2     , SubToolID.p3d_locateLeftLeg2, 9)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateRightLeg1    , SubToolID.p3d_locateRightLeg1, 10)\n    this.addPosing3DSubTool(this.tool_Posing3d_LocateRightLeg2    , SubToolID.p3d_locateRightLeg2, 11)\n\n    this.updateSubToolParameterReferences()\n\n    this.current_MainTool = this.getMainTool(MainToolID.vector)\n    this.current_MainToolTab = this.current_MainTool.mainToolTabs[0]\n    this.current_MainToolTab.current_SubTool = this.getSubTool(this.current_MainToolTab.default_SubToolID)\n    this.current_SubTool = this.current_MainToolTab.current_SubTool\n  }\n\n  private addMainTool(tool: MainTool) {\n\n    tool.drawMode_MainToolTab = tool.mainToolTabs[0]\n    this.mainTools.push(tool)\n  }\n\n  private addSubTool(tool: SubTool, subtoolID: SubToolID, parameterID?: SubToolParameterID) {\n\n    tool.subtoolID = subtoolID\n    tool.subToolParameterID = parameterID ?? SubToolParameterID.none\n\n    this.subTools.push(tool)\n  }\n\n  private addModalSubTool(tool: ModalToolBase, subtoolID: SubToolID, parameterID?: SubToolParameterID) {\n\n    this.addSubTool(tool, subtoolID, parameterID)\n\n    this.modalSubTools.push(tool)\n  }\n\n  private addPosing3DSubTool(tool: Tool_Posing3d_ToolBase, subtoolID: SubToolID, toolBarImageIndex: int) {\n\n    this.addModalSubTool(tool, subtoolID)\n\n    tool.toolBarImage = this.appView.subToolImages[0]\n    tool.toolBarImageIndex = toolBarImageIndex\n\n    this.posing3dSubTools.push(tool)\n  }\n\n  updateBrushParameterReferences() {\n\n    if (this.docContext != null) {\n\n      this.docContext.currentBrushParameter = this.brushParameters[0]\n    }\n  }\n\n  updateSubToolParameterReferences() {\n\n    for (const subToolParameter of this.subToolParameters) {\n\n      const pointerParameter = this.pointerParameters.find(param => param.parameterID == subToolParameter.pointerParameterID)\n      subToolParameter.pointer = pointerParameter ?? null\n\n      const brushParameter = this.brushParameters.find(param => param.parameterID == subToolParameter.brushParameterID)\n      subToolParameter.brush = brushParameter ?? null\n    }\n\n    for (const subTool of this.subTools) {\n\n      if (subTool.subToolParameterID != SubToolParameterID.none) {\n\n        const subToolParameter = this.subToolParameters.find(param => param.parameterID == subTool.subToolParameterID)\n\n        if (subToolParameter) {\n\n          subTool.subToolParameter = subToolParameter\n        }\n      }\n    }\n  }\n\n  // MainTool\n\n  changeCurrentMainToolForEditMode(editModeID: EditModeID) {\n\n    const mainTool = this.getCurrentMainTool()\n\n    let mainToolTab: MainToolTab;\n\n    if (editModeID == EditModeID.drawMode) {\n\n      mainToolTab = mainTool.drawMode_MainToolTab\n    }\n    else {\n\n      mainToolTab = this.getCurrentMainToolEditTab()\n    }\n\n    if (mainToolTab == null || mainToolTab.disabled) {\n      // グループレイヤーの場合、drawModeのタブが無いためnullになります\n      return\n    }\n\n    this.changeCurrentMainToolTab(mainToolTab.tabID)\n\n    this.setCurrentSubToolForCurrentTab()\n  }\n\n  executeMainToolKeyDown(key: string, commandID: ShortcutCommandID): boolean {\n\n    return this.current_MainToolTab.keydown(key, commandID, this.subToolContext)\n  }\n\n  executeMainToolButtonClick(id: RibbonUIControlID): boolean {\n\n    return this.current_MainToolTab.buttonClick(id, this.subToolContext)\n  }\n\n  private getCurrentMainTool(): MainTool {\n\n    return this.current_MainTool\n  }\n\n  private getMainTool(mainToolID: MainToolID): MainTool {\n\n    return this.mainTools.find(tool => tool.mainToolID == mainToolID)\n  }\n\n  private getMainToolForLayer(layer: Layer): MainTool {\n\n    let mainToolID = MainToolID.none\n\n    switch(layer.type) {\n\n      case LayerTypeID.groupLayer:\n        mainToolID = MainToolID.group\n        break\n\n      case LayerTypeID.autoFillLayer:\n        mainToolID = MainToolID.autoFill\n        break\n\n      case LayerTypeID.vectorLayer:\n      case LayerTypeID.surroundingFillLayer:\n        mainToolID = MainToolID.vector\n        break\n\n      case LayerTypeID.pointBrushFillLayer:\n        mainToolID = MainToolID.pointBrushFill\n        break\n\n      case LayerTypeID.imageFileReferenceLayer:\n        mainToolID = MainToolID.imageFileReference\n        break\n\n      case LayerTypeID.posingLayer:\n        mainToolID = MainToolID.posing3D\n        break\n    }\n\n    const mainTool = this.mainTools.find(mainTool => mainTool.mainToolID == mainToolID)\n\n    if (mainTool) {\n\n      return mainTool\n    }\n    else {\n\n      throw(new Error(`ERROR 0003:There is no main tool for the layer. (${LayerTypeID[layer.type]})`))\n    }\n  }\n\n  private setCurrentMainTool(mainToolID: MainToolID) {\n\n    let isChanged = (this.docContext.mainToolID != mainToolID)\n\n    const mainTool = this.getMainTool(mainToolID)\n\n    this.current_MainTool = mainTool\n\n    this.docContext.mainToolID = mainToolID\n    this.docContext.mainToolTabs = mainTool.mainToolTabs\n\n    if (mainTool.mainToolID == MainToolID.posing3D) {\n\n      this.appView.subToolWindow.collectViewItems(this.posing3dSubTools, this.subToolContext)\n    }\n\n    if (isChanged) {\n\n      this.setCurrentMainToolTabForCurrentMainTool()\n\n      this.setCurrentSubToolForCurrentTab()\n\n      this.activateCurrentTool()\n\n      this.subToolContext.setRedrawWindowsForCurrentToolChanging()\n      this.updateFooterMessage()\n    }\n  }\n\n  // MainToolTab\n\n  changeCurrentMainToolTab(tabID: MainToolTabID) {\n\n    this.setCurrentMainToolTab(tabID)\n\n    this.setCurrentSubToolForCurrentTab()\n  }\n\n  private setCurrentMainToolTabForCurrentMainTool() {\n\n    const mainToolTab = this.findMainToolTab(this.docContext.mainToolTabID)\n\n    if (mainToolTab) {\n\n      this.setCurrentMainToolTab(mainToolTab.tabID)\n    }\n    else {\n\n      const mainTool = this.getCurrentMainTool()\n      this.setCurrentMainToolTab(mainTool.mainToolTabs[0].tabID)\n    }\n  }\n\n  private setCurrentMainToolTab(tabID: MainToolTabID) {\n\n    const mainToolTab = this.findMainToolTab(tabID)\n\n    if (mainToolTab.type == MainToolTabTypeID.editingTool) {\n\n      this.docContext.editMode = EditModeID.editMode\n    }\n    else {\n\n      this.docContext.editMode = EditModeID.drawMode\n    }\n\n    this.current_MainToolTab = mainToolTab\n\n    if (mainToolTab.current_SubTool == null) {\n\n      const subtool = this.getSubTool(mainToolTab.default_SubToolID)\n\n      mainToolTab.current_SubTool = subtool\n    }\n\n    this.docContext.mainToolTabID = tabID\n\n    if (this.subToolContext.isDrawMode()) {\n\n      const mainTool = this.getCurrentMainTool()\n      mainTool.drawMode_MainToolTab = this.current_MainToolTab\n    }\n  }\n\n  private findMainToolTab(tabID: MainToolTabID): MainToolTab {\n\n    const tab = this.current_MainTool.mainToolTabs\n      .find(tab => tab.tabID == tabID)\n\n    return tab\n  }\n\n  // SubTool\n\n  getCurrentSubTool(): SubTool {\n\n    return this.current_SubTool\n  }\n\n  isSubToolAvailable(subToolID: SubToolID): boolean {\n\n    const ctx = this.subToolContext\n    const subTool = this.getSubTool(subToolID)\n\n    return subTool.isAvailable(ctx)\n  }\n\n  isCurrentSubToolAvailable(): boolean {\n\n    return this.current_SubTool.isAvailable(this.subToolContext)\n  }\n\n  changeCurrentSubToolForSubtoolID(subToolID: SubToolID) { // @implements SubToolContext_AppTool_Interface\n\n    this.setCurrentSubTool(subToolID)\n\n    this.activateCurrentTool()\n\n    this.getCurrentSubTool().toolWindowItemClick(this.subToolContext)\n  }\n\n  private setCurrentSubTool(subtoolID: SubToolID) {\n\n    const subtool = this.getSubTool(subtoolID)\n\n    this.cancelModalTool()\n\n    this.current_SubTool = subtool\n\n    this.current_MainToolTab.current_SubTool = subtool\n\n    this.docContext.subtoolID = subtool.subtoolID\n    this.docContext.currentSubToolParameter = (this.current_SubTool.subToolParameter ?? null)\n    this.docContext.currentBrushParameter = (this.current_SubTool.subToolParameter?.brush ?? null)\n    this.docContext.currentPointerParameter = (this.current_SubTool.subToolParameter?.pointer ?? null)\n\n    this.subToolContext.updateContext()\n    this.activateCurrentTool()\n\n    this.subToolContext.setRedrawWindowsForCurrentToolChanging()\n    this.updateFooterMessage()\n  }\n\n  private setCurrentSubToolForCurrentTab() {\n\n    this.setCurrentSubTool(this.current_MainToolTab.current_SubTool.subtoolID)\n  }\n\n  private getSubTool(subtoolID: SubToolID): SubTool {\n\n    const subTool = this.subTools.find(tool => tool.subtoolID == subtoolID)\n\n    if (!subTool) {\n      throw new Error('ERROR 0004:Sub tool does not exists.')\n    }\n\n    return subTool;\n  }\n\n  private getModalSubTool(subtoolID: SubToolID): ModalToolBase {\n\n    const subTool = this.modalSubTools.find(tool => tool.subtoolID == subtoolID)\n\n    if (!subTool) {\n      throw new Error('ERROR 0004:Modal sub tool does not exists.')\n    }\n\n    return subTool;\n  }\n\n  private getCurrentMainToolEditTab(): MainToolTab {\n\n    const tab = this.current_MainTool.mainToolTabs\n      .find(tab => tab.type == MainToolTabTypeID.editingTool)\n\n    return tab\n  }\n\n  updateFooterMessage() {\n\n    this.appView.footerWindow.setFooterText(this.current_SubTool.helpText)\n\n    this.docContext.redrawFooterWindow = true\n  }\n\n  updateContextCurrentRefferences() {\n\n    const viewKeyframe = this.docContext.currentViewKeyframe\n    const currentLayer = this.docContext.currentLayer\n\n    this.docContext.currentStrokeDrawable = null\n    this.docContext.currentFillDrawable = null\n\n    this.docContext.currentVectorLayer = null\n    this.docContext.currentVectorLayerKeyframe = null\n    this.docContext.currentVectorLayerGeometry = null\n\n    if (VectorLayer.isVectorLayer(currentLayer) && viewKeyframe != null) {\n\n      const viewKeyframeLayer = ViewKeyframe.findViewKeyframeLayer(viewKeyframe, currentLayer)\n      const geometry = viewKeyframeLayer.vectorLayerKeyframe.geometry\n\n      this.docContext.currentVectorLayer = <VectorLayer>currentLayer\n      this.docContext.currentVectorLayerKeyframe = viewKeyframeLayer.vectorLayerKeyframe\n      this.docContext.currentVectorLayerGeometry = geometry\n\n      this.docContext.currentStrokeDrawable = this.docContext.currentVectorLayer\n      this.docContext.currentFillDrawable = this.docContext.currentVectorLayer\n    }\n\n    this.docContext.currentPosingLayer = null\n    this.docContext.currentPosingData = null\n    this.docContext.currentPosingModel = null\n    if (PosingLayer.isPosingLayer(currentLayer)) {\n\n      const posingLayer = <PosingLayer>currentLayer\n\n      this.docContext.currentPosingLayer = posingLayer\n      this.docContext.currentPosingData = posingLayer.posingData\n      this.docContext.currentPosingModel = posingLayer.posingModel\n    }\n\n    this.docContext.currentAutoFillLayer = null\n    if (AutoFillLayer.isAutoFillLayer(currentLayer) && viewKeyframe != null) {\n\n      this.docContext.currentAutoFillLayer = <AutoFillLayer>currentLayer\n      this.docContext.currentFillDrawable = this.docContext.currentAutoFillLayer\n    }\n\n    this.docContext.currentImageFileReferenceLayer = null\n    if (ImageFileReferenceLayer.isImageFileReferenceLayer(currentLayer)) {\n\n      const imageFileReferenceLayer = <ImageFileReferenceLayer>currentLayer\n\n      this.docContext.currentImageFileReferenceLayer = imageFileReferenceLayer\n    }\n\n    this.updateCurrentPaintParameters()\n    this.updateActiveRefferences()\n  }\n\n  updateActiveRefferences() {\n\n    const viewKeyframe = this.docContext.currentViewKeyframe\n    const currentLayer = this.docContext.currentLayer\n\n    if (VectorLayer.isVectorLayer(currentLayer) && viewKeyframe != null) {\n\n      const viewKeyframeLayer = ViewKeyframe.findViewKeyframeLayer(viewKeyframe, currentLayer)\n      const geometry = viewKeyframeLayer.vectorLayerKeyframe.geometry\n      const lastGroup = geometry.units.at(-1)?.groups.at(-1) ?? null\n\n      if (VectorLayer.isSingleGroupVectorLayer(currentLayer)) {\n\n        this.docContext.activeVectorGeometry = geometry\n        this.docContext.activeVectorGroup = lastGroup\n      }\n    }\n  }\n\n  updateCurrentPaintParameters() {\n\n    if (this.docContext.currentVectorLayer != null) {\n\n      this.appDrawing.drawingVectorLayer.getStrokeColor(\n        this.baseColor,\n        this.docContext.currentVectorLayer,\n        this.docContext.documentData,\n        false,\n        false\n      )\n\n      vec4.copy(this.docContext.currentPaintParameter.baseColor, this.baseColor)\n    }\n    else {\n\n      vec4.set(this.docContext.currentPaintParameter.baseColor, 0.0, 0.0, 0.0, 1.0)\n    }\n  }\n\n  executeSubToolKeyDown(key: string, commandID: ShortcutCommandID): boolean {\n\n    return this.current_SubTool.keydown(key, commandID, this.subToolContext)\n  }\n\n  executeSubToolMouseDown(e: ToolPointerEvent) {\n\n    this.current_SubTool.mouseDown(e, this.subToolContext)\n  }\n\n  executeSubToolMouseMove(e: ToolPointerEvent) {\n\n    this.current_SubTool.mouseMove(e, this.subToolContext)\n  }\n\n  executeSubToolMouseUp(e: ToolPointerEvent) {\n\n    this.current_SubTool.mouseUp(e, this.subToolContext)\n  }\n\n  executeUndo() {\n\n    this.docContext.commandHistory.undo(this.subToolContext)\n  }\n\n  executeRedo() {\n\n    this.docContext.commandHistory.redo(this.subToolContext)\n  }\n\n   // Layer operation\n\n  selectLayer(layer: Layer, toggleSelection = false, deselectLayer = true) {\n\n    if (layer == null) {\n      throw new Error('ERROR 0005 cannot select null layer')\n    }\n\n    const isSelected = (toggleSelection ? !layer.isSelected : true)\n\n    if (deselectLayer) {\n\n      this.deselectAllLayer()\n    }\n\n    this.setCurrentLayer(layer)\n\n    this.setLayerSelection(layer, isSelected)\n\n    LayerLogic.updateHierarchicalSelectRecursive(layer)\n\n    const mainTool = this.getMainToolForLayer(layer)\n    this.setCurrentMainTool(mainTool.mainToolID)\n  }\n\n  activateCurrentTool() {\n\n    if (this.current_SubTool == null) {\n      return\n    }\n\n    this.docContext.needsDrawOperatorCursor = (this.current_SubTool.isEditTool || this.current_SubTool.usesOperatorCursor)\n\n    this.current_SubTool.onActivated(this.subToolContext)\n  }\n\n  setLayerCommandParameters(layerCommand: Command_Layer_CommandBase, currentLayerWindowItem: ViewLayerListItem, documentData: DocumentData) {\n\n    // Collects layer items for command\n    const currentLayer: Layer = currentLayerWindowItem.layer\n    const currentLayerParent: Layer = currentLayerWindowItem.parentLayer\n\n    let previousLayer: Layer = null\n    let previousLayerParent: Layer = null\n    if (currentLayerWindowItem.previousItem != null) {\n\n      previousLayer = currentLayerWindowItem.previousItem.layer\n      previousLayerParent = currentLayerWindowItem.previousItem.parentLayer\n    }\n\n    let nextLayer: Layer = null\n    let nextLayerParent: Layer = null\n    // To prevent insert the layer to own child layer, check if next layer is sibling\n    if (currentLayerWindowItem.nextSiblingItem != null) {\n\n      nextLayer = currentLayerWindowItem.nextSiblingItem.layer\n      nextLayerParent = currentLayerWindowItem.nextSiblingItem.parentLayer\n    }\n\n    layerCommand.setPrameters(\n      documentData\n      , currentLayer\n      , currentLayerParent\n      , previousLayer\n      , previousLayerParent\n      , nextLayer\n      , nextLayerParent\n    )\n  }\n\n  selectNextOrPreviousLayer(selectNext: boolean) {\n\n    const item = this.appView.viewLayerList.findItemForLayer(this.docContext, this.docContext.currentLayer)\n\n    if (selectNext) {\n\n      if (item.nextItem != null) {\n\n        this.selectLayer(item.nextItem.layer)\n      }\n    }\n    else {\n\n      if (item.previousItem != null) {\n\n        this.selectLayer(item.previousItem.layer)\n      }\n    }\n  }\n\n  setLayerSelection(layer: Layer, isSelected: boolean) {\n\n    layer.isSelected = isSelected\n  }\n\n  setLayerVisiblity(layer: Layer, isVisible: boolean) {\n\n    layer.isVisible = isVisible\n  }\n\n  private setCurrentLayer(layer: Layer) {\n\n    if (this.docContext.currentLayer == null\n      || layer == null\n      || this.docContext.currentLayer != layer) {\n\n      this.subToolContext.setRedrawWindowsForCurrentLayerChanging()\n    }\n\n    this.docContext.currentLayer = layer\n\n    this.subToolContext.unsetAcrtiveVectorStrokeAndGroup()\n\n    this.updateContextCurrentRefferences()\n\n    this.appView.paletteSelectorWindow.setCurrentTargetForLayer(this.docContext)\n  }\n\n  private deselectAllLayer() {\n\n    this.deselectAllLayerRecursive(this.docContext.documentData.rootLayer)\n  }\n\n  private deselectAllLayerRecursive(layer: Layer) {\n\n    layer.isSelected = false\n\n    for (const childLayer of layer.childLayers) {\n\n      this.deselectAllLayerRecursive(childLayer)\n    }\n  }\n\n  // Common settings for all tools\n\n  setOperationUnit(operationUnitID: OperationUnitID) {\n\n    this.docContext.operationUnitID = operationUnitID\n  }\n\n  setOperationOriginType(operationOriginTypeID: OperationOriginTypeID) {\n\n    this.docContext.operationOriginTypeID = operationOriginTypeID\n  }\n\n  updateOperationOriginByRectangleArea(rectangleArea: RectangleArea) { // @implements SubToolContext_AppTool_Interface\n\n    if (this.docContext.operationOriginTypeID == OperationOriginTypeID.medianCenter) {\n\n      this.docContext.operationOriginLocation[0] = rectangleArea.getMedianHrizontalPosition()\n      this.docContext.operationOriginLocation[1] = rectangleArea.getMedianVerticalPosition()\n    }\n  }\n\n  updateOperationOriginByPoints(points: { location: Vec3 }[]) { // @implements SubToolContext_AppTool_Interface\n\n    if (this.docContext.operationOriginTypeID == OperationOriginTypeID.medianCenter\n      && points.length > 0\n    ) {\n\n      let medianX = 0.0\n      let medianY = 0.0\n      for (const point of points) {\n\n        medianX += point.location[0]\n        medianY += point.location[1]\n      }\n\n      medianX /= points.length\n      medianY /= points.length\n\n      // this.docContext.operatorCursor.location[0] = medianX\n      // this.docContext.operatorCursor.location[1] = medianY\n      this.docContext.operationOriginLocation[0] = medianX\n      this.docContext.operationOriginLocation[1] = medianY\n    }\n  }\n\n  // Modal tool\n\n  startModalTool(subtoolID: SubToolID) { // @implements SubToolContext_AppTool_Interface\n\n    const modalTool = this.getModalSubTool(subtoolID)\n    const toolPointerEvent = this.appView.tooPointerEvent.attach(this.appView.mainWindow)\n\n    const available = modalTool.prepareModal(toolPointerEvent, this.subToolContext)\n\n    if (!available) {\n\n      console.debug('Can\\'t start modal tool.')\n      return\n    }\n\n    modalTool.startModal(this.subToolContext)\n\n    this.modalBeforeTool = this.current_SubTool\n    this.current_ModalTool = modalTool\n    this.current_SubTool = modalTool\n  }\n\n  endModalTool() {\n\n    if (!this.isModalToolRunning()) {\n      return\n    }\n\n    this.subToolContext.updateContext()\n    this.current_ModalTool.endModal(this.subToolContext)\n\n    this.setModalToolBefore()\n\n    this.activateCurrentTool()\n\n    this.subToolContext.setRedrawMainWindowEditorWindow()\n  }\n\n  cancelModalTool() {\n\n    if (!this.isModalToolRunning()) {\n\n      return\n    }\n\n    this.subToolContext.updateContext()\n    this.current_ModalTool.cancelModal(this.subToolContext)\n\n    this.setModalToolBefore()\n\n    this.activateCurrentTool()\n  }\n\n  setModalToolBefore() {\n\n    this.current_SubTool = this.modalBeforeTool\n    this.current_ModalTool = null\n    this.modalBeforeTool = null\n  }\n\n  isModalToolRunning(): boolean {\n\n    return (this.current_ModalTool != null)\n  }\n\n  // Editing\n\n  executeToggleSelection(): boolean { // @implements SubToolContext_AppTool_Interface\n\n    const chenged = this.tool_SelectAllPoints.executeToggleSelection(this.subToolContext)\n    this.activateCurrentTool()\n    return chenged\n  }\n\n  executeClearSelection(): boolean { // @implements SubToolContext_AppTool_Interface\n\n    const chenged = this.tool_SelectAllPoints.executeClearSelectAll(this.subToolContext)\n    this.activateCurrentTool()\n    return chenged\n  }\n\n  visualHittestToStrokes(location: Vec3, minDistance: float): boolean { // @implements SubToolContext_AppTool_Interface\n\n    if (this.subToolContext.currentVectorLayer == null\n    || this.subToolContext.currentVectorLayerGeometry == null) {\n\n      return false\n    }\n\n    this.hittest_Line_IsCloseTo.startProcess()\n\n    this.hittest_Line_IsCloseTo.processGeometry(\n      this.subToolContext.currentVectorLayer,\n      this.subToolContext.currentVectorLayerGeometry,\n      location,\n      minDistance\n    )\n\n    this.hittest_Line_IsCloseTo.endProcess()\n\n    return this.hittest_Line_IsCloseTo.isChanged\n  }\n}\n","import { ShortcutKeyLogic, UserSettingFileLogic, UserUIStateLogic } from './user-setting'\n\nexport class App_UserSetting {\n\n  settingFile = new UserSettingFileLogic()\n  userUIState = new UserUIStateLogic()\n  shortcutKey = new ShortcutKeyLogic()\n\n  link() {\n\n    this.settingFile.link(this.userUIState, this.shortcutKey)\n    this.userUIState.link(this.settingFile)\n  }\n\n  loadSettings() {\n\n    this.shortcutKey.initializeDefaultSettings()\n\n    this.settingFile.loadSettings()\n  }\n\n  saveSettings() {\n\n    this.settingFile.saveSettings()\n  }\n}\n","import { DocumentContext } from \"./context\"\nimport { ToolDrawingStyle } from \"./document-drawing\"\nimport { DOMLogic } from \"./dom/dom\"\nimport { CanvasFrame, CanvasRuler, CanvasRulerOrientation, OperationPanel } from './editor'\nimport { ImageResource, ModelFile, ModelResource } from './posing3d'\nimport { CanvasRender, CanvasWindow } from './render'\nimport { ToolPointerEventProvider } from \"./tool\"\nimport { ColorMixerWindow, DialogScreenLogic, DialogWindow_Main_Interface, FooterWindow, HeaderWindow, LayerWindow, ModalWindowLogic, PaletteSelectorWindow, PopoverLogic, RibbonUIWindow, SideBarContentID, SubToolWindow, TimeLineWindow } from \"./ui\"\nimport { UI_SelectBoxOption } from \"./ui-popover\"\nimport { UI_SideBarContainerRef } from \"./ui-sidebar\"\nimport { UIStateNames } from \"./user-setting\"\nimport { UserUIStateLogic } from \"./user-setting/user-ui-state\"\nimport {\n  LayerHighlightingLogic, PointerInputLogic, PointerInputWindow, ViewKeyframeLogic,\n  ViewLayerListLogic, ViewOperation\n} from \"./view\"\n\nexport class App_View {\n\n  // Sub logics\n\n  viewOperation = new ViewOperation()\n  layerHighlight = new LayerHighlightingLogic()\n  viewKeyframe = new ViewKeyframeLogic()\n  viewLayerList = new ViewLayerListLogic()\n  pointerInput = new PointerInputLogic()\n  dom = new DOMLogic()\n  dialogScreen = new DialogScreenLogic()\n  modalWindow = new ModalWindowLogic()\n  popover = new PopoverLogic()\n  tooPointerEvent = new ToolPointerEventProvider()\n\n  // UI\n\n  isForMobile = false\n  mainWindow = new PointerInputWindow()\n  editorWindow = new PointerInputWindow()\n  headerWindow = new HeaderWindow()\n  ribbonUIWindow = new RibbonUIWindow()\n  footerWindow = new FooterWindow()\n  operationPanel = new OperationPanel()\n  canvasRulerH = new CanvasRuler()\n  canvasRulerV = new CanvasRuler()\n  canvasFrame = new CanvasFrame()\n  layerWindow = new LayerWindow()\n  timeLineWindow = new TimeLineWindow()\n  paletteSelectorWindow = new PaletteSelectorWindow()\n  colorMixerWindow = new ColorMixerWindow()\n  subToolWindow = new SubToolWindow()\n  posingLayerOptions: UI_SelectBoxOption[] = []\n  activeCanvasWindow: CanvasWindow = null\n\n  left_SideBarContainerRef: UI_SideBarContainerRef = { }\n  right_SideBarContainerRef: UI_SideBarContainerRef = { }\n\n  sideBarContentStateSettings: { contentID: SideBarContentID, uiStateName: string }[] = [\n    { contentID: SideBarContentID.layerWindow, uiStateName: UIStateNames.layerWindow },\n    { contentID: SideBarContentID.paletteWindow, uiStateName: UIStateNames.paletteSelectorWindow },\n    { contentID: SideBarContentID.colorMixerWindow, uiStateName: UIStateNames.colorMixerWindow }\n  ]\n\n  // Drawing variables\n\n  foreLayerRenderBuffer = new CanvasWindow()\n  backLayerRenderBuffer = new CanvasWindow()\n  drawGPUWindow = new CanvasWindow()\n  webglWindow = new CanvasWindow()\n\n  // Resources\n\n  imageResurces: ImageResource[] = []\n  systemImage: ImageResource = null\n  subToolImages: ImageResource[] = []\n  modelFile = new ModelFile().file('models.json')\n  modelResources: ModelResource[] = []\n\n  link(canvasRender: CanvasRender, drawStyle: ToolDrawingStyle, main: DialogWindow_Main_Interface) {\n\n    this.layerHighlight.link(this.viewLayerList)\n    this.colorMixerWindow.link(canvasRender)\n    this.headerWindow.link(this.dom)\n    this.footerWindow.link(this.dom)\n    this.timeLineWindow.link(canvasRender, drawStyle, this.dom, this.popover.selectBoxPopoverRef)\n    this.ribbonUIWindow.link(this.popover.mainMenuUIRef, this.popover.brushPropertyBoxRef, this.popover.selectBoxPopoverRef)\n    this.operationPanel.link(drawStyle)\n    this.canvasRulerH.link(drawStyle)\n    this.canvasRulerV.link(drawStyle)\n    this.canvasFrame.link(drawStyle)\n    this.dialogScreen.link(main, this.dom, this.popover.selectBoxPopoverRef)\n  }\n\n  // Initializing without resources\n\n  initializeViewDevices() {\n\n    this.imageResurces = []\n    this.imageResurces.push(new ImageResource().set({ filePath: './res/texture01.png', isGLTexture: true }))\n    this.imageResurces.push(new ImageResource().set({ filePath: './res/system_image01.png', cssImageClassName: 'image-splite-system' }))\n    this.imageResurces.push(new ImageResource().set({ filePath: './res/toolbar_image03.png', cssImageClassName: 'image-splite-posing3d' }))\n\n    this.systemImage = this.imageResurces[1]\n\n    this.subToolImages = []\n    this.subToolImages.push(this.imageResurces[2])\n\n    this.modelFile.file('models.json')\n\n    this.foreLayerRenderBuffer.createCanvas()\n    this.backLayerRenderBuffer.createCanvas()\n    this.drawGPUWindow.createCanvas()\n\n    // this.resizeWindows()\n\n    this.mainWindow.initializeContext()\n    this.editorWindow.initializeContext()\n    this.foreLayerRenderBuffer.initializeContext()\n    this.backLayerRenderBuffer.initializeContext()\n\n    this.colorMixerWindow.colorCanvas.initializeContext()\n    this.timeLineWindow.canvasWindow.initializeContext()\n\n    this.paletteSelectorWindow.initialize()\n\n    this.startLoadingImageResources()\n\n    this.activeCanvasWindow = this.mainWindow\n  }\n\n  startLoadingImageResources() {\n\n    this.operationPanel.startLoadingImageResources()\n  }\n\n  // Initializing after loading resources\n\n  initializeViewState() {\n\n    this.mainWindow.centerLocationRate[0] = 0.5\n    this.mainWindow.centerLocationRate[1] = 0.5\n  }\n\n  // View management\n\n  resizeWindows() {\n\n    this.dom.resizing.resizeCanvasToParent(this.mainWindow)\n\n    this.dom.resizing.resizeCanvasToCanvasWindow(this.editorWindow, this.mainWindow, 1)\n    this.dom.resizing.resizeCanvasToCanvasWindow(this.foreLayerRenderBuffer, this.mainWindow, 1)\n    this.dom.resizing.resizeCanvasToCanvasWindow(this.backLayerRenderBuffer, this.mainWindow, 1)\n    this.dom.resizing.resizeCanvasToCanvasWindow(this.webglWindow, this.mainWindow, 1)\n    this.dom.resizing.resizeCanvasToCanvasWindow(this.drawGPUWindow, this.mainWindow, 2.0)\n\n    this.dom.resizing.resizeCanvasToParent(this.timeLineWindow.canvasWindow)\n\n    this.dom.resizing.fitFixedPositionToBoundingClientRect(this.dom.ID.leftSidePanel, this.dom.ID.leftSidePanelDock, true, true)\n    this.dom.resizing.fitFixedPositionToBoundingClientRect(this.dom.ID.rightSidePanel, this.dom.ID.rightSidePanelDock, true, true)\n\n    this.operationPanel.updateLayout(this.editorWindow)\n\n    this.canvasRulerH.updateLayout(this.mainWindow, CanvasRulerOrientation.horizontalTop)\n    this.canvasRulerV.updateLayout(this.mainWindow, CanvasRulerOrientation.verticalLeft)\n  }\n\n  setMobileMode() {\n\n    const targets = [\n      this.dom.ID.screenMain,\n    ]\n\n    for (const target of targets) {\n\n      if (this.isForMobile) {\n\n        this.dom.getElement<HTMLDivElement>(target).classList.add('mobile-screen')\n      }\n      else {\n\n        this.dom.getElement<HTMLDivElement>(target).classList.remove('mobile-screen')\n      }\n    }\n  }\n\n  restoreUIStatesFromUserSetting(userUIState: UserUIStateLogic) {\n\n    for (const setting of this.sideBarContentStateSettings) {\n\n      const uiState = userUIState.getUIState(setting.uiStateName)\n\n      if (uiState) {\n\n        this.right_SideBarContainerRef.setContentOpened(setting.contentID, uiState.visible)\n      }\n    }\n\n    this.right_SideBarContainerRef.update()\n\n    {\n      const uiState = userUIState.getUIState(UIStateNames.timeLineWindow)\n\n      if (uiState) {\n\n        this.timeLineWindow.setVisibility(uiState.visible)\n      }\n    }\n\n    {\n      const uiState = userUIState.getUIState(UIStateNames.touchOperationPanel)\n\n      if (uiState) {\n\n        this.operationPanel.setVisibility(uiState.visible)\n      }\n    }\n  }\n\n  // Ribbon UI\n\n  updateTabs(docContext: DocumentContext) {\n\n    this.ribbonUIWindow.switchTabAndRibbon(docContext)\n  }\n\n  updateRibbonUI(docContext: DocumentContext, forceRedraw = false) {\n\n    // console.log(\"updateRibbonUI\", forceRedraw, this.docContext.subToolIndex)\n\n    this.ribbonUIWindow.updateMainToolRibbonUI(docContext)\n\n    this.updateRibbonUI_Layer(docContext)\n\n    if (this.subToolWindow.uiSubToolWindowRef.update) {\n\n      if (forceRedraw) {\n\n        this.subToolWindow.uiSubToolWindowRef.update(this.subToolWindow.subToolViewItems.slice(), docContext.subtoolID)\n      }\n      else {\n\n        this.subToolWindow.uiSubToolWindowRef.update(this.subToolWindow.subToolViewItems, docContext.subtoolID)\n      }\n    }\n  }\n\n  updateRibbonUI_Layer(docContext: DocumentContext) {\n\n    this.ribbonUIWindow.updateLayerRibbonUI(docContext, this.posingLayerOptions)\n  }\n}\n","﻿import { CommandHistory } from \"../command\"\nimport {\n  AutoFillLayer, DocumentData, DrawLineTypeID, FillAreaTypeID, FillDrawable, ImageFileReferenceLayer, Layer,\n  PosingData, PosingLayer, PosingModel, StrokeDrawable, VectorLayerGeometry, VectorLayer, VectorStroke, VectorStrokeGroup, VectorLayerKeyframe\n} from '../document-data'\nimport { ToolDrawingStyle } from \"../document-drawing\"\nimport { DrawPathContext } from '../document-drawing/draw-path'\nimport { OperatorCursor } from '../editor'\nimport { Posing3DLogic, Posing3DView } from '../posing3d'\nimport { CanvasWindow } from '../render'\nimport {\n  BrushParameter, EditModeID, MainToolID, MainToolTab, MainToolTabID, OperationOriginTypeID, OperationUnitID, PaintParameter, PointerParameter,\n  SubToolID, SubToolParameter, ToolClipboard\n} from '../tool'\nimport { ViewKeyframe, ViewLayerListItem } from '../view'\n\nexport class DocumentContext {\n\n  drawStyle: ToolDrawingStyle = null\n  commandHistory = new CommandHistory()\n\n  documentData: DocumentData = null\n  documentFilePath = ''\n  clipboard = new ToolClipboard()\n\n  mainWindow: CanvasWindow = null\n  posing3DView: Posing3DView = null\n  posing3DLogic: Posing3DLogic = null\n\n  lazy_DrawPathContext: DrawPathContext = null\n  drawCPUOnly = true\n\n  editMode = EditModeID.drawMode\n  mainToolID = MainToolID.none\n  mainToolTabID = MainToolTabID.none\n  mainToolTabs: MainToolTab[] = []\n  subtoolID = SubToolID.none\n  needsDrawOperatorCursor = false\n\n  currentSubToolParameter: SubToolParameter = null\n  currentBrushParameter: BrushParameter = null\n  currentPointerParameter: PointerParameter = null\n  currentPaintParameter: PaintParameter = { baseColor: vec4.fromValues(0.0, 0.0, 0.0, 1.0) }\n\n  operationUnitID = OperationUnitID.stroke\n  operatorCursor = new OperatorCursor()\n  operationOriginTypeID = OperationOriginTypeID.medianCenter\n  operationOriginLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  dragStartThresholdDistance = 5.0\n  resamplingUnitLengthForSolidBrush = 10.0\n  resamplingUnitLengthForSolidBrushMin = 0.001\n  resamplingUnitMinLengthForPointBrush = 0.1\n  resamplingUnitMinLengthForEdit = 7.0\n  defaultTouchSize = 40.0\n\n  mouseCursorLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  currentLayer: Layer = null\n  currentVectorLayer: VectorLayer = null\n  currentVectorLayerKeyframe: VectorLayerKeyframe = null\n  currentVectorLayerGeometry: VectorLayerGeometry = null\n  currentPosingLayer: PosingLayer = null\n  currentPosingModel: PosingModel = null\n  currentPosingData: PosingData = null\n  currentAutoFillLayer: AutoFillLayer = null\n  currentImageFileReferenceLayer: ImageFileReferenceLayer = null\n\n  currentStrokeDrawable: StrokeDrawable = null\n  currentFillDrawable: FillDrawable = null\n\n  activeVectorGeometry: VectorLayerGeometry = null\n  activeVectorGroup: VectorStrokeGroup = null\n  activeVectorLine: VectorStroke = null\n\n  layerListItems: ViewLayerListItem[] = []\n  keyframes: ViewKeyframe[] = null\n  currentViewKeyframe: ViewKeyframe = null\n  previousKeyframe: ViewKeyframe = null\n  nextKeyframe: ViewKeyframe = null\n\n  redrawMainWindow = false\n  redrawCurrentLayer = false\n  redrawEditorWindow = false\n  redrawLayerWindow = false\n  redrawRibbonUI = false\n  redrawTimeLineWindow = false\n  redrawWebGLWindow = false\n  redrawHeaderWindow = false\n  redrawFooterWindow = false\n  redrawPaletteSelectorWindow = false\n  redrawColorMixerWindow = false\n  redrawColorMixerSample = false\n\n  shiftKey = false\n  altKey = false\n  ctrlKey = false\n\n  animationPlaying = false\n  animationPlayingFPS = 24\n\n  unsetCurrentLayer() {\n\n    this.currentLayer = null\n    this.currentVectorLayer = null\n    this.currentVectorLayerKeyframe = null\n    this.currentVectorLayerGeometry = null\n    this.currentPosingLayer = null\n    this.currentPosingModel = null\n    this.currentPosingData = null\n    this.currentAutoFillLayer = null\n    this.currentImageFileReferenceLayer = null\n    this.currentStrokeDrawable = null\n    this.currentFillDrawable = null\n    this.activeVectorGeometry = null\n    this.activeVectorGroup = null\n    this.activeVectorLine = null\n  }\n\n  getCurrentLayerLineColor(): Vec4 {\n\n    let color: Vec4 = null\n\n    if (this.currentStrokeDrawable != null) {\n\n      if (this.currentStrokeDrawable.drawLineType == DrawLineTypeID.paletteColor) {\n\n        color = this.documentData.paletteColors[this.currentStrokeDrawable.line_PaletteColorIndex].color\n      }\n      else {\n\n        color = this.currentStrokeDrawable.layerColor\n      }\n    }\n\n    return color\n  }\n\n  getCurrentLayerFillColor(): Vec4 {\n\n    let color: Vec4 = null\n\n    if (this.currentFillDrawable != null) {\n\n      if (this.currentFillDrawable.fillAreaType == FillAreaTypeID.paletteColor) {\n\n        color = this.documentData.paletteColors[this.currentFillDrawable.fill_PaletteColorIndex].color\n      }\n      else {\n\n        color = this.currentFillDrawable.fillColor\n      }\n    }\n\n    return color\n  }\n\n  getOperationOriginLocation(): Vec3 {\n\n    if (this.operationOriginTypeID == OperationOriginTypeID.medianCenter) {\n\n      return this.operationOriginLocation\n    }\n    else {\n\n      return this.operatorCursor.location\n    }\n  }\n}\n","﻿import {\n  AutoFillLayer, DocumentData, GroupLayer, ImageFileReferenceLayer, Layer, PosingLayer,\n  PosingModel, VectorStrokeGroupModifyFlagID, VectorLayer, VectorStrokeModifyFlagID, VectorStroke, VectorStrokeGroup, LayerTypeID, VectorLayerGeometry, VectorLayerGeometryTypeID\n} from '../document-data'\nimport { HierarchicalLayerInfo, LayerLogic } from '../document-logic'\nimport { float, RectangleArea } from '../common-logics'\nimport { BrushParameterID, BrushTypeID, EditModeID, OperationUnitID, PointerParameterID, PointerTypeID, SubToolID } from '../tool'\nimport { OpenFileDialogTargetID } from \"../ui\"\nimport { ShortcutCommandID } from '../user-setting'\nimport { ViewKeyframeLayer } from '../view'\nimport { DocumentContext } from './document-context'\n\nexport interface SubToolContext_AppMain_Interface {\n\n  updateLayerStructure(): void\n  collectVectorViewKeyframeLayers(): ViewKeyframeLayer[]\n  collectVectorViewKeyframeLayersForEdit(): ViewKeyframeLayer[]\n  startLoadingDocumentResourcesProcess(document: DocumentData)\n  setLazyUpdateNeeded(): void\n  setPostUpdateNeeded(): void\n  openFileDialog(targetID: OpenFileDialogTargetID): void\n  getPosingModelByName(name: string): PosingModel\n  setOperatorCursorLocationToMouse(): void\n  setRedrawDrawPathForLayer(layer: Layer): void\n}\n\nexport interface SubToolContext_AppDocument_Interface {\n\n  getLayerBaseName(layerType: LayerTypeID): string\n  getNewLayerName(layerType: LayerTypeID, isForDefaultDocument?: boolean): string\n}\n\nexport interface SubToolContext_AppTool_Interface {\n\n  setOperationUnit(operationUnitID: OperationUnitID): void\n  updateOperationOriginByRectangleArea(rectangleArea: RectangleArea): void\n  updateOperationOriginByPoints(points: { location: Vec3 }[]): void\n  changeCurrentSubToolForSubtoolID(subtoolID: SubToolID): void\n  selectLayer(layer: Layer, toggleSelection?: boolean, delsect?: boolean): void\n  startModalTool(subtoolID: SubToolID): void\n  endModalTool(): void\n  cancelModalTool(): void\n  isModalToolRunning(): boolean\n  executeToggleSelection(): boolean\n  executeClearSelection(): boolean\n  visualHittestToStrokes(location: Vec3, minDistance: float): boolean\n}\n\nexport interface SubToolContext_ShortcutKey_Interface {\n\n  getCommandIDFromKeyInput(key: string, shiftKey: boolean, ctrlKey: boolean, altKey: boolean): ShortcutCommandID\n}\n\nexport class SubToolContext {\n\n  private _docContext: DocumentContext = null\n  private _appMain: SubToolContext_AppMain_Interface = null\n  private _appDocument: SubToolContext_AppDocument_Interface = null\n  private _appTool: SubToolContext_AppTool_Interface = null\n  private _mouseCursorLocation = vec3.fromValues(0.0, 0.0, 0.0)\n\n  get main() { return this._appMain }\n  get tool() { return this._appTool }\n  get document() { return this._appDocument }\n\n  get documentData() { return this._docContext.documentData }\n  get documentFilePath() { return this._docContext.documentFilePath }\n  get mainWindow() { return this._docContext.mainWindow }\n  get drawStyle() { return this._docContext.drawStyle }\n  get commandHistory() { return this._docContext.commandHistory }\n  get operatorCursor() { return this._docContext.operatorCursor }\n  get clipboard() { return this._docContext.clipboard }\n  get posing3DView() { return this._docContext.posing3DView }\n  get posing3DLogic() { return this._docContext.posing3DLogic }\n\n  get operationUnitID() { return this._docContext.operationUnitID }\n  get currentSubtoolID() { return this._docContext.subtoolID }\n  get drawLineBaseWidth() { return this._docContext.currentBrushParameter.baseSize }\n  get drawLineMinWidth() { return this._docContext.currentBrushParameter.minSize }\n\n  get toolBaseViewRadius() {\n\n    if (this._docContext.currentPointerParameter.parameterID != PointerParameterID.none) {\n\n      return this.getViewScaledLength(this._docContext.currentPointerParameter.baseSize)\n    }\n    else {\n\n      return 0.0\n    }\n  }\n\n  get brushBaseSize() {\n\n    if (this._docContext.currentBrushParameter.parameterID != BrushParameterID.none) {\n\n      return this._docContext.currentBrushParameter.baseSize\n    }\n    else {\n\n      return 0.0\n    }\n  }\n\n  get touchViewRadius() {\n    return this.getViewScaledLength(this._docContext.defaultTouchSize)\n  }\n\n  get currentLayer() { return this._docContext.currentLayer }\n  get currentVectorLayer() { return this._docContext.currentVectorLayer }\n  get currentAutoFillLayer() { return this._docContext.currentAutoFillLayer }\n  get currentPosingLayer() { return this._docContext.currentPosingLayer }\n  get currentPosingModel() { return this._docContext.currentPosingModel }\n  get currentPosingData() { return this._docContext.currentPosingData }\n  get currentImageFileReferenceLayer() { return this._docContext.currentImageFileReferenceLayer }\n\n  get currentVectorLayerKeyframe() { return this._docContext.currentVectorLayerKeyframe }\n  get currentVectorLayerGeometry() { return this._docContext.currentVectorLayerGeometry }\n\n  get currentTimeFrame() { return this._docContext.documentData.animationSettingData.currentTimeFrame }\n\n  get activeVectorGroup(): VectorStrokeGroup | null {\n\n    if (this._docContext.activeVectorGroup != null\n      && this._docContext.activeVectorGroup.runtime.modifyFlag != VectorStrokeGroupModifyFlagID.delete) {\n\n        return this._docContext.activeVectorGroup\n    }\n    else {\n\n      return null\n    }\n  }\n\n  get activeVectorLine(): VectorStroke | null {\n\n    if (this._docContext.activeVectorLine != null\n      && this._docContext.activeVectorLine.runtime.modifyFlag != VectorStrokeModifyFlagID.delete) {\n\n      return this._docContext.activeVectorLine\n    }\n    else {\n\n      return null\n    }\n  }\n\n  get mouseCursorLocation() { return this._mouseCursorLocation }\n\n  constructor(\n    docContext: DocumentContext,\n    appMain: SubToolContext_AppMain_Interface,\n    appDocument: SubToolContext_AppDocument_Interface,\n    appTool: SubToolContext_AppTool_Interface\n  ) {\n\n    this._docContext = docContext\n    this._appMain = appMain\n    this._appDocument = appDocument\n    this._appTool = appTool\n  }\n\n  updateContext() {\n\n    vec3.copy(this.mouseCursorLocation, this._docContext.mouseCursorLocation)\n  }\n\n  setRedrawHeaderWindow() {\n\n    this._docContext.redrawHeaderWindow = true\n  }\n\n  setRedrawMainWindow() {\n\n    this._docContext.redrawMainWindow = true\n    this._docContext.redrawCurrentLayer = false\n  }\n\n  setRedrawCurrentLayer() {\n\n    if (!this._docContext.redrawMainWindow) {\n\n      this._docContext.redrawCurrentLayer = true\n    }\n\n    this._docContext.redrawMainWindow = true\n  }\n\n  setRedrawEditorWindow() {\n\n    this._docContext.redrawEditorWindow = true\n  }\n\n  setRedrawMainWindowEditorWindow() {\n\n    this.setRedrawMainWindow()\n    this.setRedrawEditorWindow()\n    this.setRedrawWebGLWindow()\n  }\n\n  setRedrawLayerWindow() {\n\n    this._docContext.redrawLayerWindow = true\n    this._docContext.redrawPaletteSelectorWindow = true\n    this._docContext.redrawColorMixerWindow = true\n  }\n\n  setRedrawPaletteWindow() {\n\n    this._docContext.redrawPaletteSelectorWindow = true\n    this._docContext.redrawColorMixerWindow = true\n  }\n\n  updateLayerStructure() {\n\n    this._appMain.updateLayerStructure()\n    this.setRedrawLayerWindow()\n    this.setRedrawTimeLineWindow()\n    this.setRedrawMainWindowEditorWindow()\n  }\n\n  setRedrawRibbonUI() {\n\n    this._docContext.redrawRibbonUI = true\n  }\n\n  setRedrawTimeLineWindow() {\n\n    this._docContext.redrawTimeLineWindow = true\n  }\n\n  setRedrawPalleteSelectorWindow() {\n\n    this._docContext.redrawPaletteSelectorWindow = true\n  }\n\n  setRedrawColorMixerWindow() {\n\n    this._docContext.redrawColorMixerWindow = true\n  }\n\n  setRedrawWebGLWindow() {\n\n    this._docContext.redrawWebGLWindow = true\n  }\n\n  setRedrawAllWindows() {\n\n    this.setRedrawMainWindowEditorWindow()\n    this.setRedrawRibbonUI()\n    this.setRedrawLayerWindow()\n    this.setRedrawTimeLineWindow()\n    this.setRedrawPalleteSelectorWindow()\n    this.setRedrawWebGLWindow()\n  }\n\n  setRedrawWindowsForCurrentToolChanging() {\n\n    this.setRedrawHeaderWindow()\n    this.setRedrawMainWindowEditorWindow()\n    this.setRedrawRibbonUI()\n}\n\n  setRedrawWindowsForCurrentLayerChanging() {\n\n    this.setRedrawRibbonUI()\n    this.setRedrawLayerWindow()\n    this.setRedrawTimeLineWindow()\n  }\n\n  setRedrawWindowsForLayerPropertyChanging() {\n\n    this.setRedrawMainWindowEditorWindow()\n    this.setRedrawRibbonUI()\n  }\n\n  setRedrawWindowsForLayerColorChanging() {\n\n    this.setRedrawMainWindowEditorWindow()\n    this.setRedrawRibbonUI()\n    this.setRedrawPalleteSelectorWindow()\n    this.setRedrawColorMixerWindow()\n    this.setRedrawLayerWindow()\n  }\n\n  isAnyModifierKeyPressing(): boolean {\n\n    return (this._docContext.shiftKey || this._docContext.altKey || this._docContext.ctrlKey)\n  }\n\n  isShiftKeyPressing(): boolean {\n\n    return (this._docContext.shiftKey)\n  }\n\n  isCtrlKeyPressing(): boolean {\n\n    return (this._docContext.ctrlKey)\n  }\n\n  isAltKeyPressing(): boolean {\n\n    return (this._docContext.altKey)\n  }\n\n  isDrawMode() {\n\n    return (this._docContext.editMode == EditModeID.drawMode)\n  }\n\n  isEditMode() {\n\n    return (this._docContext.editMode == EditModeID.editMode)\n  }\n\n  isCurrentLayerStrokeDrawableLayer(): boolean {\n\n    return (\n      VectorLayer.isVectorLayer(this.currentLayer)\n      && Layer.isVisible(this.currentLayer)\n    )\n  }\n\n  isCurrentLayerEditbaleLayer(): boolean {\n\n    return Layer.isEditTarget(this.currentLayer) && (\n      VectorLayer.isVectorLayer(this.currentLayer)\n      || GroupLayer.isGroupLayer(this.currentLayer)\n    )\n  }\n\n  isCurrentLayerAutoFillLayer(): boolean {\n\n    return AutoFillLayer.isAutoFillLayer(this.currentLayer) && Layer.isVisible(this.currentLayer)\n  }\n\n  isCurrentLayerPosingLayer(): boolean {\n\n    return PosingLayer.isPosingLayer(this.currentLayer) && Layer.isVisible(this.currentLayer)\n  }\n\n  isCurrentLayerImageFileReferenceLayer(): boolean {\n\n    return ImageFileReferenceLayer.isImageFileReferenceLayer(this.currentLayer) && Layer.isVisible(this.currentLayer)\n  }\n\n  isCurrentLayerGroupLayer(): boolean {\n\n    return GroupLayer.isGroupLayer(this.currentLayer) && Layer.isVisible(this.currentLayer)\n  }\n\n  needsDrawOperatorCursor(): boolean {\n\n    return this._docContext.needsDrawOperatorCursor\n  }\n\n  unsetCurrentLayer() {\n\n    this._docContext.unsetCurrentLayer()\n  }\n\n  setActiveVectorStroke(line: VectorStroke, group: VectorStrokeGroup, geometry: VectorLayerGeometry) {\n\n    if (!group) {\n      throw new Error('ERROR 0020:Needs group value. If to reset active line, use unsetAcrtiveVectorLine.')\n    }\n\n    this._docContext.activeVectorLine = line\n    this._docContext.activeVectorGroup = group\n    this._docContext.activeVectorGeometry = geometry\n  }\n\n  unsetAcrtiveVectorStrokeAndGroup() {\n\n    this._docContext.activeVectorGeometry = null\n    this._docContext.activeVectorGroup = null\n    this._docContext.activeVectorLine = null\n  }\n\n  getOperationOriginLocation(): Vec3 {\n\n    return this._docContext.getOperationOriginLocation()\n  }\n\n  getViewScaledLength(length: float) {\n\n    return this._docContext.mainWindow.getViewScaledLength(length)\n  }\n\n  getViewScaledResamplingUnitLengthForBrush() {\n\n    let target_brushType: BrushTypeID = BrushTypeID.none\n\n    if (this._docContext.activeVectorGeometry != null) {\n\n      if (VectorLayerGeometry.isStrokeDraw(this._docContext.activeVectorGeometry)) {\n\n        target_brushType = BrushTypeID.solidBrushStroke\n      }\n      else {\n\n        target_brushType = BrushTypeID.radialBrush\n      }\n    }\n    else {\n\n      target_brushType = this._docContext.currentBrushParameter.brushType\n    }\n\n    let resamplingUnitLength = 0.0\n\n    switch (target_brushType) {\n\n      case BrushTypeID.solidBrushStroke:\n\n          resamplingUnitLength = this.getViewScaledLength(this._docContext.resamplingUnitLengthForSolidBrush)\n\n          if (resamplingUnitLength < this._docContext.resamplingUnitLengthForSolidBrushMin) {\n            resamplingUnitLength = this._docContext.resamplingUnitLengthForSolidBrushMin\n          }\n        break\n\n      case BrushTypeID.radialBrush:\n      case BrushTypeID.bitmapBrush:\n      case BrushTypeID.none:\n        {\n          resamplingUnitLength += this.drawLineBaseWidth * this._docContext.currentBrushParameter.stepRate\n\n          if (resamplingUnitLength < this._docContext.resamplingUnitMinLengthForPointBrush) {\n            resamplingUnitLength = this._docContext.resamplingUnitMinLengthForPointBrush\n          }\n        }\n        break\n    }\n\n    return resamplingUnitLength\n  }\n\n  getViewScaledResamplingUnitLengthForEdit() {\n\n    const recomendedSize = this._docContext.resamplingUnitMinLengthForEdit\n\n    let resamplingUnitLength = this.getViewScaledLength(recomendedSize)\n\n    if (resamplingUnitLength < recomendedSize) {\n      resamplingUnitLength = recomendedSize\n    }\n\n    return resamplingUnitLength\n  }\n\n  collectHierarchicalLayerInfos(): HierarchicalLayerInfo[] {\n\n    const layerInfos: HierarchicalLayerInfo[] = []\n    LayerLogic.collectHierarchicalLayerInfoRecursive(layerInfos, this.documentData.rootLayer)\n\n    return layerInfos\n  }\n}\n","﻿import { float, int } from '../common-logics'\nimport { VectorPoint, VectorStroke } from '../document-data'\nimport { ToolDrawingStyle } from \"../document-drawing\"\nimport { CanvasRender, CanvasWindow } from '../render'\n\nexport interface SubToolDrawingContext_EditorDrawer_Interface {\n\n  drawPointerCursor(radius: float)\n  drawaBrushCursor(radius: float, lineWidthBiasRate: float)\n  drawCursorCircle(location: Vec3, radius: float, color: Vec4)\n  drawOperatorSolidStroke(line: VectorStroke, strokeWidthBiasRate?: float)\n  drawEditorStroke(line: VectorStroke, color: Vec4, strokeWidthBolding: float, useAdjustingLocation: boolean)\n  drawEditorStrokePoints(line: VectorStroke, color: Vec4, useAdjustingLocation: boolean)\n  drawEditorStrokePoint(point: VectorPoint, color: Vec4, useAdjustingLocation: boolean)\n  drawOperatorPointBrushStroke(stroke: VectorStroke, color: Vec4, useAdjustingLocation: boolean)\n  drawStrokeConnectionInfoLine(from: Vec3, to: Vec3)\n}\n\nexport class SubToolDrawingContext {\n\n  canvasWindow: CanvasWindow = null\n  editorDrawer: SubToolDrawingContext_EditorDrawer_Interface = null\n  render: CanvasRender = null\n  style: ToolDrawingStyle = null\n  operatorCurosrLineDashScaled = [0.0, 0.0]\n\n  constructor(editorDrawer: SubToolDrawingContext_EditorDrawer_Interface, render: CanvasRender, style: ToolDrawingStyle) {\n\n    this.editorDrawer = editorDrawer\n    this.render = render\n    this.style = style\n  }\n\n  setCanvasWindow(canvasWindow: CanvasWindow) {\n\n    this.canvasWindow = canvasWindow\n  }\n\n  beginPath(locationFrom?: Vec3) {\n\n    this.render.beginPath()\n\n    if (locationFrom) {\n\n      this.render.moveTo(locationFrom[0], locationFrom[1])\n    }\n  }\n\n  stroke(strokeWidth: float, color: Vec4) {\n\n    this.render.setStrokeColorV(color)\n    this.render.setStrokeWidth(strokeWidth)\n    this.render.stroke()\n  }\n\n  fill(color: Vec4) {\n\n    this.render.setFillColorV(color)\n    this.render.fill()\n  }\n\n  moveTo(location: Vec3) {\n\n    this.render.moveTo(location[0], location[1])\n  }\n\n  lineTo(location: Vec3) {\n\n    this.render.lineTo(location[0], location[1])\n  }\n\n  drawLine(locationFrom: Vec3, locationTo: Vec3, strokeWidth: float, color: Vec4) {\n\n    this.render.setStrokeColorV(color)\n    this.render.setStrokeWidth(strokeWidth)\n    this.render.beginPath()\n    this.render.moveTo(locationFrom[0], locationFrom[1])\n    this.render.lineTo(locationTo[0], locationTo[1])\n    this.render.stroke()\n  }\n\n  drawCircle(center: Vec3, raduis: float, strokeWidth: float, color: Vec4) {\n\n    this.render.setStrokeColorV(color)\n    this.render.setStrokeWidth(strokeWidth)\n    this.render.beginPath()\n    this.render.circle(center[0], center[1], raduis)\n    this.render.stroke()\n  }\n\n  setLineDash(scale: float) {\n\n    const viewScale = this.render.getViewScaledSize(scale)\n\n    this.operatorCurosrLineDashScaled[0] = this.style.operatorCurosrLineDash[0] * viewScale\n    this.operatorCurosrLineDashScaled[1] = this.style.operatorCurosrLineDash[1] * viewScale\n    this.render.setLineDash(this.operatorCurosrLineDashScaled)\n  }\n\n  cancelLineDash() {\n\n    this.render.clearLineDash()\n  }\n}\n","import { Platform } from '../platform'\nimport { App_Document } from './app-document'\nimport { App_Drawing } from './app-drawing'\nimport { AppEvent_Main_Interface, App_Event } from './app-event'\nimport { App_DefferedProcess } from './app-deffered-process'\nimport { App_Tool } from './app-tool'\nimport { App_UserSetting } from './app-user-setting'\nimport { App_View } from './app-view'\nimport { Command_Layer_CommandBase } from './commands'\nimport { int, Strings } from './common-logics'\nimport { DocumentContext, SubToolContext, SubToolContext_AppMain_Interface, SubToolDrawingContext } from './context'\nimport { DocumentData, ImageFileReferenceLayer, Layer, PosingModel } from './document-data'\nimport { DocumentDeserializingLogic, DocumentFileNameLogic, DocumentSerializingLogic, LayerLogic } from './document-logic'\nimport { SystemResourceLoading } from './loading'\nimport { CanvasWindow } from './render'\nimport { DialogWindow_Main_Interface, OpenFileDialogTargetID, SideBarContentID } from './ui'\nimport { ExportImageFileParam } from './ui-modal-window'\nimport { LocalSetting, ShortcutCommandID } from './user-setting'\nimport { ViewKeyframeLayer } from './view'\nimport { ToolPointerEvent } from './tool'\n\nexport enum MainProcessStateID {\n  none,\n  startup,\n  pause,\n  systemResourceLoading,\n  documentJSONLoading,\n  documentResourceLoading,\n  running\n}\n\nexport class App_Main implements AppEvent_Main_Interface, SubToolContext_AppMain_Interface, DialogWindow_Main_Interface {\n\n  appView = new App_View()\n  appDrawing = new App_Drawing()\n  appTool = new App_Tool()\n  appUserSetting = new App_UserSetting()\n  appDocument = new App_Document()\n  appEvent = new App_Event()\n  appDefferedProcess = new App_DefferedProcess()\n\n  docContext: DocumentContext = null\n  subtoolContext: SubToolContext = null\n  subtoolDrawingContext: SubToolDrawingContext = null\n\n  systemResourceLoading = new SystemResourceLoading()\n\n  mainProcessState = MainProcessStateID.startup\n  isDeferredWindowResizeWaiting = false\n  deferredWindowResizeWaitingDuration = 250\n  deferredWindowResizeWaitingEndTime = 0\n  lastTime = 0\n  elapsedTime = 0\n\n  isFirstStartup = true\n\n  constructor() {\n\n    this.appView.link(this.appDrawing.canvasRender, this.appDrawing.drawStyle, this)\n    this.appDrawing.link(this.appView)\n    this.appTool.link(this.appView, this.appDrawing)\n    this.appUserSetting.link()\n    this.appDocument.link(this.appView, this.appDrawing, this.appTool, this.appUserSetting.settingFile)\n    this.appEvent.link(this.appView, this.appDrawing, this.appDocument, this.appTool, this.appUserSetting, this)\n    this.appDefferedProcess.link(this.appDrawing, this.appDrawing.drawPathBuffering, this.appDocument.posing3D, this.appDrawing.posing3DView)\n    this.systemResourceLoading.link(this.appDrawing.posing3DViewRender, this.appDocument.posing3DModel)\n  }\n\n  // Initializing devices not depending media resoures\n\n  onInitializeSystemDevices() {\n\n    this.appUserSetting.loadSettings()\n\n    this.appView.initializeViewDevices()\n\n    this.appDrawing.initializeDrawingDevices(this.appView.webglWindow, this.appView.drawGPUWindow)\n\n    this.startLoadingSystemResources()\n  }\n\n  // Loading system resources\n\n  private startLoadingSystemResources() {\n\n    this.systemResourceLoading.startLoadingSystemResources(this.appView.modelFile, this.appView.imageResurces)\n\n    this.mainProcessState = MainProcessStateID.systemResourceLoading\n  }\n\n  processLoadingSystemResources() {\n\n    // Loading state polling\n\n    if (this.systemResourceLoading.isLoading()) {\n      return\n    }\n\n    // Loading finished\n\n    this.appView.timeLineWindow.systemImage = this.appView.systemImage\n\n    if (this.appUserSetting.settingFile.localSetting.lastUsedFilePaths.length == 0) {\n\n      this.startWidhDefaultDocumentData()\n    }\n    else {\n\n      const lastURL = this.appUserSetting.settingFile.localSetting.lastUsedFilePaths[0]\n\n      const documentData = new DocumentData()\n      this.appDocument.documentLoading.startLoadingDocumentFromURL(documentData, lastURL)\n\n      this.mainProcessState = MainProcessStateID.documentJSONLoading\n    }\n  }\n\n  // Loading document resources\n\n  startReloadDocument(filepath: string) { // @implements AppEvent_Main_Interface\n\n    const documentData = new DocumentData()\n\n    this.appDocument.documentLoading.startLoadingDocumentFromURL(documentData, filepath)\n\n    this.mainProcessState = MainProcessStateID.documentJSONLoading\n  }\n\n  startReloadDocumentFromFile(file: File, url: string) { // @implements AppEvent_Main_Interface\n\n    if (Strings.isNullOrEmpty(url)) {\n\n      throw new Error('ERROR 0001:both of url and file are null or empty')\n    }\n\n    const isAvailable = this.appDocument.documentLoading.startLoadingDocumentFromFile(file, url)\n\n    if (isAvailable) {\n\n      this.mainProcessState = MainProcessStateID.documentJSONLoading\n    }\n    else {\n\n      console.debug('error: not supported file type.')\n    }\n  }\n\n  processLoadingDocumentFile() {\n\n    if (this.appDocument.documentLoading.hasErrorOnLoadingDocument()) {\n\n      console.error('ERROR 0003:An error occured while loading document data.')\n\n      this.startWidhDefaultDocumentData()\n      return\n    }\n\n    if (!this.appDocument.documentLoading.isDocumentLoaded()) {\n      return\n    }\n\n    this.appDocument.fixLoadedDocumentData(\n      this.appDocument.documentLoading.loading_DocumentData,\n      this.appView.modelFile\n    )\n\n    this.appDocument.documentLoading.startLoadingDocumentResources(\n      this.appDocument.documentLoading.loading_DocumentData,\n      this.appDocument.documentLoading.loading_DocumentFilePath\n    )\n\n    this.appDocument.documentLoading.finishDocumentDataLoading()\n\n    this.mainProcessState = MainProcessStateID.documentResourceLoading\n  }\n\n  startLoadingDocumentResourcesProcess(document: DocumentData) { // @implements MainEditor\n\n    this.appDocument.documentLoading.startLoadingDocumentResources(document, this.docContext.documentFilePath)\n\n    this.mainProcessState = MainProcessStateID.documentResourceLoading\n  }\n\n  processLoadingDocumentResources() {\n\n    // Check loading states\n\n    if (this.appDocument.documentLoading.isDocumentResourceLoading()) {\n      return\n    }\n\n    // TODO: ファイルの存在チェックとエラー対応\n    if (this.appDocument.documentLoading.hasErrorOnLoadingDocumentResource()) {\n\n      console.error('ERROR 0004:An error occured while loading document resource.')\n\n      this.startWidhDefaultDocumentData()\n      return\n    }\n\n    // Loading finished\n\n    if (this.appDocument.documentLoading.isDocumentLoading()\n      && this.docContext != null\n      && this.docContext.documentData != null\n    ) {\n\n      DocumentSerializingLogic.releaseDocumentResources(this.docContext.documentData, this.appDrawing.drawGPURender)\n\n      this.docContext.documentData = null\n    }\n\n    DocumentDeserializingLogic.finishResourceLoading(this.appDocument.documentLoading.resourceLoading_DocumentData)\n\n    this.start(\n      this.appDocument.documentLoading.resourceLoading_DocumentData,\n      this.appDocument.documentLoading.loading_DocumentFilePath,\n      false\n    )\n\n    if (!this.isFirstStartup) {\n\n      this.appUserSetting.saveSettings()\n    }\n  }\n\n  // Starting ups after loading resources\n\n  private start(documentData: DocumentData, document_filePath: string, isNew: boolean) {\n\n    this.initializeDocumentContext(documentData, document_filePath)\n\n    this.appTool.initializeTools()\n\n    this.appView.initializeViewState()\n\n    this.updateLayerStructureInternal(true, true, false, false)\n\n    const layers = LayerLogic.collectLayers(documentData.rootLayer)\n    const selected_layers = layers.filter(layer => Layer.isSelected(layer))\n    if (selected_layers.length > 0) {\n      this.docContext.currentLayer = selected_layers[0]\n      this.appTool.selectLayer(this.docContext.currentLayer, false, false)\n    }\n    else {\n      this.appTool.selectLayer(documentData.rootLayer.childLayers[0])\n    }\n\n    this.updateLayerStructureInternal(false, false, true, true)\n\n    this.appView.mainWindow.viewScale = documentData.defaultViewScale\n    this.appView.mainWindow.viewRotation = 0.0\n    this.appView.mainWindow.mirrorX = false\n    this.appView.mainWindow.mirrorY = false\n\n    this.appView.viewOperation.copyLastViewLocation(false, this.appView.mainWindow)\n\n    this.subtoolContext.updateContext()\n\n    if (!isNew) {\n\n      this.appUserSetting.settingFile.registerLastUsedFile(document_filePath)\n    }\n\n    // 初回描画\n\n    this.updateHeaderDocumentFileName(document_filePath)\n\n    this.prepareDrawPathBuffers()\n\n    this.setLazyUpdateNeeded()\n\n    this.appView.updateTabs(this.docContext)\n    this.appView.updateRibbonUI(this.docContext, true)\n\n    this.resizeWindowsAndBuffers() // TODO: これをしないとキャンバスの高さが足りなくなる。最初のリサイズのときは高さがなぜか少し小さい。2回リサイズする必要は本来ないはずなのでなんとかしたい。\n\n    this.appTool.updateFooterMessage()\n\n    this.appView.restoreUIStatesFromUserSetting(this.appUserSetting.userUIState)\n\n    if (!this.appEvent.isEventSetDone) { // このチェックはドキュメントを新規作成したとき再登録しないため必要です\n\n      this.appEvent.setEvents()\n    }\n\n    this.initialUpdatesForLayers(this.collectVectorViewKeyframeLayersForEdit())\n\n    this.subtoolContext.setRedrawAllWindows()\n\n    if (this.appView.right_SideBarContainerRef.isContentOpened(SideBarContentID.colorMixerWindow)) {\n\n      this.docContext.redrawColorMixerSample = true\n    }\n\n    this.mainProcessState = MainProcessStateID.running\n    this.isFirstStartup = false\n  }\n\n  private startWidhDefaultDocumentData() {\n\n    const documentData = this.appDocument.createDefaultDocumentData()\n\n    const filePath = DocumentFileNameLogic.getDefaultDocumentFilePath(this.appUserSetting.settingFile.localSetting)\n\n    this.start(documentData, filePath, true)\n  }\n\n  private initializeDocumentContext(documentData: DocumentData, document_filePath: string) {\n\n    this.docContext = new DocumentContext()\n    this.docContext.documentData = documentData\n    this.docContext.drawStyle = this.appDrawing.drawStyle\n    this.docContext.mainWindow = this.appView.mainWindow\n    this.docContext.posing3DView = this.appDrawing.posing3DView\n    this.docContext.posing3DLogic = this.appDocument.posing3D\n    this.docContext.lazy_DrawPathContext = this.appDrawing.lazy_drawPathContext\n    this.docContext.documentFilePath = document_filePath\n\n    this.subtoolContext = new SubToolContext(this.docContext, this, this.appDocument, this.appTool)\n\n    this.subtoolDrawingContext = new SubToolDrawingContext(this.appDrawing.editorDrawer, this.appDrawing.canvasRender, this.appDrawing.drawStyle)\n\n    this.appTool.linkContexts(this.docContext, this.subtoolContext)\n    this.appEvent.linkContexts(this.docContext, this.subtoolContext)\n    this.appDocument.linkContexts(this.docContext, this.subtoolContext)\n    this.appDefferedProcess.linkContexts(this.docContext, this.subtoolContext)\n\n    this.appTool.updateBrushParameterReferences()\n\n    this.appView.viewOperation.setViewToDefaultState(this.appView.mainWindow, 1.0)\n  }\n\n  private initialUpdatesForLayers(viewKeyframeLayers: ViewKeyframeLayer[]) {\n\n    for (const viewKeyframeLayer of viewKeyframeLayers) {\n\n      viewKeyframeLayer.layer.runtime.needsPostUpdate = true\n    }\n\n    this.appDefferedProcess.setPostUpdateNeeded()\n\n    this.appDefferedProcess.executePostUpdate(\n      this.appDrawing.main_drawPathContext,\n      this.docContext.currentViewKeyframe,\n      false,\n      this.subtoolContext\n    )\n\n    this.appDrawing.drawPathBuffering.updateRenderCaches(\n      this.appDrawing.main_drawPathContext,\n      this.docContext.currentViewKeyframe\n    )\n\n    for (const viewKeyframeLayer of viewKeyframeLayers) {\n\n      this.setRedrawDrawPathForLayer(viewKeyframeLayer.layer)\n    }\n  }\n\n  // Continuous processes\n\n  run() {\n\n    if (this.isDeferredWindowResizeWaiting\n      && Platform.getCurrentTime() > this.deferredWindowResizeWaitingEndTime) {\n\n      this.isDeferredWindowResizeWaiting = false\n\n      this.resizeWindowsAndBuffers()\n\n      this.subtoolContext.setRedrawAllWindows()\n    }\n\n    // Process animation time\n\n    const currentTime = Platform.getCurrentTime()\n    if (this.lastTime == 0) {\n\n      this.elapsedTime = 100\n    }\n    else {\n\n      this.elapsedTime = currentTime - this.lastTime\n    }\n    this.lastTime = currentTime\n\n    this.appView.layerHighlight.processHighlightingAnimation(this.elapsedTime, this.subtoolContext)\n\n    // Process animation\n\n    if (this.docContext.animationPlaying) {\n\n      const aniSetting = this.docContext.documentData.animationSettingData\n\n      aniSetting.currentTimeFrame += 1\n\n      if (aniSetting.currentTimeFrame >= aniSetting.loopEndFrame) {\n\n        aniSetting.currentTimeFrame = aniSetting.loopStartFrame\n      }\n\n      this.setCurrentFrameInternal(aniSetting.currentTimeFrame)\n\n      this.subtoolContext.setRedrawMainWindow()\n      this.subtoolContext.setRedrawTimeLineWindow()\n    }\n  }\n\n  // Main drawing process\n\n  activeLayerBufferDrawn = false\n\n  draw() {\n\n    const currentLayerOnly = this.appView.layerHighlight.isAnimating()\n\n    this.appView.mainWindow.caluclateViewMatrix(this.appView.mainWindow.view2DMatrix)\n    mat4.invert(this.appView.mainWindow.invView2DMatrix, this.appView.mainWindow.view2DMatrix)\n\n    this.subtoolContext.updateContext()\n\n    if (this.docContext.redrawMainWindow) {\n\n      this.appDrawing.drawMainWindow(\n        this.appView.mainWindow,\n        this.docContext,\n        this.subtoolContext.isDrawMode(),\n        this.subtoolContext.isEditMode(),\n        this.subtoolContext.tool.isModalToolRunning(),\n        this.docContext.drawCPUOnly,\n        this.docContext.redrawCurrentLayer,\n        currentLayerOnly\n      )\n\n      this.docContext.redrawMainWindow = false\n    }\n\n    if (this.docContext.redrawEditorWindow) {\n\n      this.appDrawing.clearWindow(this.appView.editorWindow)\n\n      this.drawEditorWindow(this.appView.editorWindow, this.appView.mainWindow)\n\n      this.docContext.redrawEditorWindow = false\n    }\n\n    if (this.docContext.redrawLayerWindow) {\n\n      this.appView.layerWindow.update(this.docContext, this.docContext.currentLayer)\n\n      this.appView.layerWindow.uiRef.update(this.docContext.layerListItems)\n\n      this.appView.updateRibbonUI_Layer(this.docContext)\n\n      this.docContext.redrawLayerWindow = false\n    }\n\n    if (this.docContext.redrawRibbonUI) {\n\n      this.appTool.updateCurrentPaintParameters()\n      this.appView.subToolWindow.updateViewItemState(this.subtoolContext)\n      this.appView.updateTabs(this.docContext)\n      this.appView.updateRibbonUI(this.docContext, true)\n\n      this.docContext.redrawRibbonUI = false\n    }\n\n    if (this.docContext.redrawPaletteSelectorWindow) {\n\n      this.drawPaletteSelectorWindow()\n\n      this.appView.paletteSelectorWindow.uiRef.update(this.docContext.documentData.paletteColors)\n\n      this.docContext.redrawPaletteSelectorWindow = false\n    }\n\n    if (this.docContext.redrawColorMixerWindow) {\n\n      this.drawColorMixerWindow()\n\n      this.docContext.redrawColorMixerWindow = false\n    }\n\n    if (this.docContext.redrawColorMixerSample) {\n\n      this.drawColorMixerSample()\n\n      this.docContext.redrawColorMixerSample = false\n    }\n\n    if (this.docContext.redrawTimeLineWindow) {\n\n      this.drawTimeLineWindow()\n\n      this.docContext.redrawTimeLineWindow = false\n    }\n\n    if (this.docContext.redrawWebGLWindow) {\n\n      this.appDrawing.drawingPosing3D.drawPosing3DView(\n        this.appView.webglWindow,\n        this.docContext.layerListItems,\n        this.appView.mainWindow,\n        this.docContext,\n        currentLayerOnly\n      )\n\n      this.docContext.redrawWebGLWindow = false\n    }\n\n    if (this.docContext.redrawHeaderWindow) {\n\n      this.docContext.redrawHeaderWindow = false\n    }\n\n    if (this.docContext.redrawFooterWindow) {\n\n      this.appView.footerWindow.updateFooterText()\n\n      this.docContext.redrawFooterWindow = false\n    }\n\n    this.executeLazyUpdates()\n\n    this.docContext.redrawCurrentLayer = false\n  }\n\n  private drawEditorWindow(editorWindow: CanvasWindow, mainWindow: CanvasWindow) {\n\n    mainWindow.updateViewMatrix()\n    mainWindow.copyTransformTo(editorWindow)\n\n    this.appDrawing.canvasRender.setContext(editorWindow)\n\n    if (this.subtoolContext.needsDrawOperatorCursor()) {\n\n      this.appDrawing.operatorCursor.drawOperatorCursor(this.docContext.operatorCursor)\n    }\n\n    this.appDrawing.drawingEyesSymmetry.drawEyesSymmetries(this.docContext.layerListItems, this.subtoolContext)\n\n    const current_SubTool = this.appTool.getCurrentSubTool()\n    if (current_SubTool != null) {\n\n      this.subtoolContext.updateContext()\n\n      this.subtoolDrawingContext.setCanvasWindow(editorWindow)\n\n      current_SubTool.onDrawEditor(this.subtoolContext, this.subtoolDrawingContext)\n    }\n\n    this.appView.operationPanel.draw(this.appDrawing.canvasRender)\n  }\n\n  private drawTimeLineWindow() {\n\n    this.appView.dom.resizing.resizeCanvasToParent(this.appView.timeLineWindow.canvasWindow)\n\n    this.appDrawing.clearWindow(this.appView.timeLineWindow.canvasWindow)\n\n    this.appView.timeLineWindow.drawCommandButton(this.docContext)\n    this.appView.timeLineWindow.drawTimeLine(this.docContext)\n  }\n\n  private drawPaletteSelectorWindow() {\n\n    this.appView.paletteSelectorWindow.updateCommandButtons()\n\n    this.appView.paletteSelectorWindow.updatePaletteItems(this.docContext)\n  }\n\n  private drawColorMixerWindow() {\n\n    const color = this.appView.paletteSelectorWindow.getCurrentLayerTargetColorRef(this.docContext)\n\n    this.appView.colorMixerWindow.updateInputControls(color)\n  }\n\n  private drawColorMixerSample() {\n\n    if (this.appView.colorMixerWindow.isDrawingDone) {\n      return\n    }\n\n    this.appView.dom.resizing.resizeCanvasToBoundingClientRect(this.appView.colorMixerWindow.colorCanvas)\n\n    this.appView.colorMixerWindow.drawPaletteColorMixer()\n\n    this.appView.colorMixerWindow.isDrawingDone = true\n  }\n\n  // Lazy process\n\n  private executeLazyUpdates() {\n\n    const drawPathContext = this.appDrawing.lazy_drawPathContext\n    const state = this.appDefferedProcess.drawing_LazyUpdateState\n\n    if (state.isFinished) {\n      return\n    }\n\n    if (state.needsStartingLazyUpdate) {\n\n      this.appDefferedProcess.startLazyUpdates()\n      state.startLazyCalculation()\n      return\n    }\n\n    if (state.isLazyUpdateWaiting()) {\n      return\n    }\n\n    if (state.isFirstTime) {\n\n      state.isFirstTime = false\n\n      // TODO: 遅延処理の処理中であることのインジケータを実装する？\n    }\n\n    if (!this.appDefferedProcess.isLazyCalculationFinished()) {\n\n      this.appDefferedProcess.executeLazyUpdate(\n        drawPathContext,\n        this.docContext.currentViewKeyframe\n      )\n\n      this.executePostUpdate()\n    }\n    else if (!state.isLazyDrawingFinished) {\n\n      // TODO: GPU描画に対応する\n      if (!this.docContext.drawCPUOnly) {\n\n        this.appDefferedProcess.drawDrawPathForLazyDraw(\n          this.appView.mainWindow,\n          this.docContext,\n          this.subtoolContext,\n          drawPathContext\n        )\n      }\n      else {\n\n        this.subtoolContext.setRedrawMainWindowEditorWindow()\n      }\n\n      state.finishLazyDrawing()\n    }\n  }\n\n  // Wide area structural management\n\n  private prepareDrawPathBuffers() {\n\n    this.appDrawing.drawPathBuffering.prepareDrawPathBuffers(\n      this.appDrawing.main_drawPathContext,\n      this.appView.mainWindow\n    )\n\n    this.appDrawing.drawPathBuffering.prepareForLazyDrawComposition(\n      this.appDrawing.lazy_drawPathContext,\n      this.appView.mainWindow.width,\n      this.appView.mainWindow.height,\n      false\n    )\n\n    this.appDrawing.drawPathBuffering.updateAllRenderCaches(\n      this.appDrawing.main_drawPathContext,\n      this.docContext.currentViewKeyframe\n    )\n  }\n\n  private resizeWindowsAndBuffers() {\n\n    this.appView.resizeWindows()\n\n    this.prepareDrawPathBuffers()\n  }\n\n  private updateLayerStructureInternal(updateLayerWindowItems: boolean, updateViewKeyframes: boolean, updateHierarchicalStates: boolean, updateDrawPath: boolean, updateContextCurrentRefferences = true) {\n\n    if (updateHierarchicalStates) {\n\n      LayerLogic.updateHierarchicalStatesRecursive(this.docContext.documentData.rootLayer)\n    }\n\n    if (updateViewKeyframes) {\n\n      this.appView.viewKeyframe.collectViewKeyframesToContext(this.docContext)\n    }\n\n    if (updateLayerWindowItems) {\n\n      this.appView.viewLayerList.collectItemsToContext(this.docContext)\n\n      this.appView.posingLayerOptions = this.appView.viewLayerList.collectPosingLayerOptions(this.docContext)\n    }\n\n    if (updateDrawPath) {\n\n      this.appDrawing.collectDrawPathsForDocument(this.docContext)\n\n      this.prepareDrawPathBuffers()\n    }\n\n    if (updateContextCurrentRefferences) {\n\n      this.appTool.updateContextCurrentRefferences()\n    }\n  }\n\n  private setCurrentFrameInternal(frame: int, skipCollectDrawPaths = false) { // @implements AppEvent_Main_Interface\n\n    const aniSetting = this.docContext.documentData.animationSettingData\n\n    aniSetting.currentTimeFrame = frame\n\n    if (aniSetting.currentTimeFrame < 0) {\n\n      aniSetting.currentTimeFrame = 0\n    }\n\n    if (aniSetting.currentTimeFrame > aniSetting.maxFrame) {\n\n      aniSetting.currentTimeFrame = aniSetting.maxFrame\n    }\n\n    const viewKeyframeChanged = this.appView.viewKeyframe.updateContextForViewKeyframeReferences(this.docContext, aniSetting.currentTimeFrame)\n\n    if (viewKeyframeChanged) {\n\n      if (!skipCollectDrawPaths) {\n\n        this.updateLayerStructureInternal(false, false, false, true, false)\n      }\n\n      this.appTool.updateContextCurrentRefferences()\n    }\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n    this.subtoolContext.setRedrawTimeLineWindow()\n  }\n\n  private updateHeaderDocumentFileName(filePath: string) {\n\n    const fileName = Platform.path.getFileName(filePath)\n\n    // TODO: ウィンドウタイトルに反映する\n  }\n\n  // AppEvent_Main_Interface implementations\n\n  executeSubToolKeyDown(key: string, commandID: ShortcutCommandID): boolean { // @implements AppEvent_Main_Interface\n\n    return this.appTool.executeSubToolKeyDown(key, commandID)\n  }\n\n  executeSubToolMouseDown(e: ToolPointerEvent) { // @implements AppEvent_Main_Interface\n\n    this.appTool.executeSubToolMouseDown(e)\n\n    this.executePostUpdate()\n  }\n\n  executeSubToolMouseMove(e: ToolPointerEvent) { // @implements AppEvent_Main_Interface\n\n    this.appTool.executeSubToolMouseMove(e)\n\n    this.executePostUpdate()\n  }\n\n  executeSubToolMouseUp(e: ToolPointerEvent) {\n\n    this.appTool.executeSubToolMouseUp(e)\n\n    this.executePostUpdate()\n  }\n\n  executeUndo() { // @implements AppEvent_Main_Interface\n\n    this.appTool.executeUndo()\n\n    this.executePostUpdate(true)\n\n    this.appTool.activateCurrentTool()\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n  }\n\n  executeRedo() { // @implements AppEvent_Main_Interface\n\n    this.appTool.executeRedo()\n\n    this.executePostUpdate()\n\n    this.appTool.activateCurrentTool()\n\n    this.subtoolContext.setRedrawMainWindowEditorWindow()\n  }\n\n  executePostUpdateForCurrentLayer() { // @implements AppEvent_Main_Interface\n\n    this.docContext.currentLayer.runtime.needsPostUpdate = true\n\n    this.appDefferedProcess.setPostUpdateNeeded()\n    this.executePostUpdate()\n\n    this.setRedrawDrawPathForLayer(this.docContext.currentLayer)\n\n    this.subtoolContext.setRedrawWindowsForLayerColorChanging()\n  }\n\n  executePostUpdate(isUndo = false) { // @implements AppEvent_Main_Interface\n\n    const isUpdated = this.appDefferedProcess.executePostUpdate(\n      this.appDrawing.main_drawPathContext,\n      this.docContext.currentViewKeyframe,\n      isUndo,\n      this.subtoolContext\n    )\n\n    if (!isUpdated) {\n      return\n    }\n\n    this.appDrawing.drawPathBuffering.updateRenderCaches(\n      this.appDrawing.main_drawPathContext,\n      this.docContext.currentViewKeyframe\n    )\n\n    this.appTool.updateActiveRefferences() // 線画レイヤーでグループが削除されたりアンドゥ/リドゥ後に再選択するためここで更新が必要\n  }\n\n  setRedrawDrawPathForLayer(layer: Layer) { // @implements SubToolContext_AppTool_Interface\n\n    for (const drawPathStep of this.appDrawing.main_drawPathContext.steps) {\n\n      if (drawPathStep.layer == layer) {\n\n        drawPathStep.needsRedraw = true\n      }\n    }\n  }\n\n  setCurrentFrame(frame: int) { // @implements AppEvent_Main_Interface\n\n    this.setCurrentFrameInternal(frame, false)\n  }\n\n  onWindowBlur() { // @implements AppEvent_Main_Interface\n\n    // console.debug('Window blur')\n\n    if (this.mainProcessState == MainProcessStateID.running) {\n\n      this.mainProcessState = MainProcessStateID.pause\n      // console.debug('  mainProcessState -> pause')\n    }\n  }\n\n  onWindowFocus() { // @implements AppEvent_Main_Interface\n\n    // console.debug('Window focus')\n\n    if (this.mainProcessState == MainProcessStateID.pause) {\n\n      this.mainProcessState = MainProcessStateID.running\n      // console.debug('  mainProcessState -> running')\n    }\n  }\n\n  isWhileLoading(): boolean { // @implements AppEvent_Main_Interface\n\n    return (\n      this.mainProcessState == MainProcessStateID.systemResourceLoading\n      || this.mainProcessState == MainProcessStateID.documentResourceLoading\n    )\n  }\n\n  setDefferedWindowResize() { // @implements AppEvent_Main_Interface\n\n    this.isDeferredWindowResizeWaiting = true\n    this.deferredWindowResizeWaitingEndTime = Platform.getCurrentTime() + this.deferredWindowResizeWaitingDuration\n  }\n\n  isEventDisabled(): boolean { // @implements AppEvent_Main_Interface\n\n    return (\n      this.isWhileLoading()\n      || this.isDeferredWindowResizeWaiting\n      || this.appView.modalWindow.isActive()\n      || this.appView.dialogScreen.isActive()\n      || this.appView.dialogScreen.isDialogWindowOpened()\n      || this.appView.popover.isActive()\n    )\n  }\n\n  resetDocument() { // @implements AppEvent_Main_Interface\n\n    DocumentSerializingLogic.releaseDocumentResources(this.docContext.documentData, this.appDrawing.drawGPURender)\n\n    this.startWidhDefaultDocumentData()\n  }\n\n  saveDocument() { // @implements AppEvent_Main_Interface\n\n    this.saveDocumentToFile(this.docContext.documentFilePath)\n  }\n\n  saveAsDocument(directoryPath: string, fileName: string) { // @implements AppEvent_Main_Interface\n\n    const filePath = Platform.path.join(directoryPath, fileName)\n\n    this.saveDocumentToFile(filePath)\n  }\n\n  private saveDocumentToFile(filePath: string) {\n\n    const documentData = this.docContext.documentData\n\n    if (Strings.isNullOrEmpty(filePath)) {\n\n      this.appView.dialogScreen.messageBox('ファイル名が指定されていません。')\n      return\n    }\n\n    this.appDocument.saveDocumentData(filePath, documentData, false)\n\n    this.appUserSetting.saveSettings()\n\n    this.appView.dialogScreen.messageBox('保存しました。')\n  }\n\n  getLocalSetting(): LocalSetting { // @implements AppEvent_Main_Interface\n\n    return this.appUserSetting.settingFile.localSetting\n  }\n\n  setUIStateVisible(uiStateName: string, visible: boolean) { // @implements AppEvent_Main_Interface\n\n    const uiState = this.appUserSetting.userUIState.getUIState(uiStateName)\n\n    if (uiState) {\n\n      uiState.visible = visible\n      // this.userSetting.saveSettings()\n    }\n  }\n\n  setOperatorCursorLocationToMouse() { // @implements AppEvent_Main_Interface\n\n    vec3.copy(this.docContext.operatorCursor.location, this.appView.mainWindow.pointerEvent.location)\n    this.subtoolContext.setRedrawEditorWindow()\n  }\n\n  // SubToolContext_Main_Interface implementations\n\n  setLazyUpdateNeeded() { // @implements SubToolContext_Main_Interface\n\n    this.appDefferedProcess.startLazyUpdates()\n  }\n\n  setPostUpdateNeeded() { // @implements SubToolContext_Main_Interface\n\n    this.appDefferedProcess.setPostUpdateNeeded()\n  }\n\n  openFileDialog(targetID: OpenFileDialogTargetID) { // @implements SubToolContext_Main_Interface\n\n    if (targetID == OpenFileDialogTargetID.imageFileReferenceLayerFilePath) {\n\n      if (!ImageFileReferenceLayer.isImageFileReferenceLayer(this.docContext.currentLayer)) {\n        throw new Error('ERROR 0002:OpenFileDialog Invalid execution for current layer.')\n      }\n\n      this.appView.modalWindow.openImageFileReferenceModal()\n    }\n  }\n\n  collectVectorViewKeyframeLayers(): ViewKeyframeLayer[] { // @implements SubToolContext_Main_Interface\n\n    return this.docContext.currentViewKeyframe.layers.slice()\n  }\n\n  collectVectorViewKeyframeLayersForEdit(): ViewKeyframeLayer[] { // @implements SubToolContext_Main_Interface\n\n    return this.appView.viewKeyframe.collectVectorViewKeyframeLayersForEdit(this.docContext.currentViewKeyframe, true)\n  }\n\n  updateLayerStructure() { // @implements SubToolContext_Main_Interface\n\n    this.updateLayerStructureInternal(true, true, true, true)\n  }\n\n  getPosingModelByName(name: string): PosingModel { // @implements SubToolContext_Main_Interface\n\n    return this.appView.modelFile.posingModelDictionary.get(name)\n  }\n\n  // DialogWindow_Main_Interface implementations\n\n  getDocumentData(): DocumentData { // @implements DialogWindow_Main_Interface\n\n    return this.docContext.documentData\n  }\n\n  updateForLayerProperty() { // @implements DialogWindow_Main_Interface\n\n    this.updateLayerStructureInternal(true, true, true, true)\n  }\n\n  exportImageFile(param: ExportImageFileParam) { // @implements DialogWindow_Main_Interface\n\n    this.docContext.documentData.exportImageSetting.fileName = param.fileName\n    this.docContext.documentData.exportImageSetting.exportDirectory = param.exportDirectory\n    this.docContext.documentData.exportImageSetting.imageFileType = param.imageFileType\n    this.docContext.documentData.exportImageSetting.backGroundType = param.backGroundType\n    this.docContext.documentData.exportImageSetting.scale = param.scale\n    this.docContext.documentData.exportImageSetting.autoNumberingEnabled = param.autoNumberingEnabled\n    this.docContext.documentData.exportImageSetting.exportingCount = param.exportingCount\n\n    this.appDocument.exportImageFile(param.fileName, param.exportDirectory, param.scale, param.imageFileType, param.backGroundType, param.exportingCount)\n  }\n\n  executeLayerCommand(layerCommand: Command_Layer_CommandBase) { // @implements DialogWindow_Main_Interface\n\n    this.appDocument.executeLayerCommand(layerCommand)\n  }\n}\n","import * as React from 'react'\nimport { ColorLogic, float, int, Strings } from '../common-logics'\nimport { SubToolID } from '../tool'\nimport { RibbonUIControlID } from '../ui'\nimport { UI_RibbonUIRef } from './ribbon-ui'\n\nexport function UI_RibbonUI_Separator() {\n\n  return (\n    <div className=\"separator\">\n    </div>\n  )\n}\n\nexport interface UI_RibbonUI_ButtonParam {\n\n  ribbonUIRef: UI_RibbonUIRef\n  icon: string\n  label: string[]\n  id: RibbonUIControlID\n}\n\nexport function UI_RibbonUI_Button({ ribbonUIRef, icon, label, id }: UI_RibbonUI_ButtonParam ) {\n\n  return (\n    <div className=\"button\"\n      onPointerDown={() => ribbonUIRef.button_Clicked(id)}\n    >\n      <div className=\"button-inner\">\n        <div className=\"icon\">\n          <img src={icon} />\n        </div>\n        <div className=\"label\">{\n          label.map((labelText, index) => (\n            <React.Fragment key={index}>\n              <span>{labelText}</span>{index != label.length - 1 && <br/>}\n            </React.Fragment>\n          ))\n        }</div>\n      </div>\n    </div>\n  )\n}\n\nexport interface UI_RibbonUI_SubToolButtonParam {\n\n  icon: string\n  label: string[]\n  subtoolID: SubToolID\n  currentSubtoolID: SubToolID\n  onClick?(subtoolID: SubToolID): void\n}\n\nexport function UI_RibbonUI_SubToolButton({ icon, label, subtoolID, currentSubtoolID, onClick }: UI_RibbonUI_SubToolButtonParam ) {\n\n  return (\n    <div className={`tool-button selectable-item ${subtoolID == currentSubtoolID ? 'selected' : ''}`}\n      onPointerDown={() => onClick(subtoolID)}\n    >\n      <div className=\"tool-button-inner selectable-item-inner\">\n        <div className=\"icon\">\n          <img src={icon} />\n        </div>\n        <div className=\"label\">{\n          label.map((labelText, index) => (\n            <React.Fragment key={index}>\n              <span>{labelText}</span>{index != label.length - 1 && <br/>}\n            </React.Fragment>\n          ))\n        }</div>\n      </div>\n    </div>\n  )\n}\n\nexport interface UI_RibbonUI_InputLabelParam {\n\n  label: string\n}\n\nexport function UI_RibbonUI_InputLabel({  label = '' }: UI_RibbonUI_InputLabelParam) {\n\n  return (\n    <div className=\"input-label\">{label}</div>\n  )\n}\n\nexport interface UI_RibbonUI_TextInputParam {\n\n  maxLength?: int\n  value: string\n  onChange?(value: string): void\n}\n\nexport function UI_RibbonUI_TextInput({ maxLength = 100, value, onChange }: UI_RibbonUI_TextInputParam) {\n\n  let valueText = ''\n  if (typeof(value) == 'string') {\n\n    valueText = value\n  }\n\n  function handleChange(event) {\n\n    let inputValue = event.target.value\n\n    if (inputValue.length > maxLength) {\n\n      inputValue = Strings.substring(inputValue, 0, maxLength)\n    }\n\n    if (onChange) {\n\n      onChange(inputValue)\n    }\n  }\n\n  return (\n    <input className=\"text-input\" value={valueText} onChange={handleChange} />\n  )\n}\n\nexport interface UI_RibbonUI_ToggleButtonGroup {\n\n  children?: any\n  id: int\n  currentValue: number\n  large?: boolean\n  onClick?(id: int, value: number): void\n}\n\nexport function UI_RibbonUI_ToggleButtonGroup({children, id, currentValue, large, onClick}: UI_RibbonUI_ToggleButtonGroup) {\n\n  return (\n    <div className={`toggle-button-group${large ? ' large' : ''}`}>\n      { React.Children.map(children, (child, i) => {\n          return React.cloneElement(child as React.ReactElement, { id, currentValue, onClick })\n        }\n      )}\n    </div>\n  )\n}\n\nexport interface UI_RibbonUI_ToggleButtonParam {\n\n  label: string\n  id?: int\n  value: number\n  currentValue?: number\n  onClick?(id: int, value: number): void\n}\n\nexport function UI_RibbonUI_ToggleButton({ label, id, value, currentValue, onClick }: UI_RibbonUI_ToggleButtonParam) {\n\n  function handleClick() {\n\n    if (onClick) {\n\n      onClick(id, value)\n    }\n  }\n\n  return (\n    <div className={`toggle-button selectable-item ${currentValue==value ? 'selected' : ''}`} onPointerDown={handleClick}>\n      <div className=\"toggle-button-inner selectable-item-inner-sq\">{label}</div>\n    </div>\n  )\n}\n\nexport interface UI_RibbonUI_RGBAColorParam {\n\n  value: Vec4\n  onClick?(): void\n}\n\nexport function UI_RibbonUI_RGBAColor({ value, onClick }: UI_RibbonUI_RGBAColorParam) {\n\n  function handleClick() {\n\n    if (onClick) {\n\n      onClick()\n    }\n  }\n\n  return (\n    <div className={\"rgba-color\"} onPointerDown={handleClick}>\n      <div className=\"alpha alpha-checker-background-pallete\">\n        <div className=\"alpha-color\" style={{backgroundColor:`rgba(${ColorLogic.rgbaToRgbaString(value)})`}}></div>\n      </div>\n      <div className=\"rgb\" style={{backgroundColor:`#${ColorLogic.rgbToHex2String(value)}`}}></div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { SVGFiles } from '../resource-files'\nimport { MainToolTabID, SubToolID } from '../tool'\nimport { UI_RibbonUI_SubToolButton } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_AutoFillLayer_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_AutoFillLayer({ ribbonUIRef, isVisible }: UI_RibbonUI_AutoFillLayer_Param) {\n\n  const [currentSubtoolID, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.autoFill],\n    update: (docContext) => {\n\n      set_currentSubtoolID(docContext.subtoolID)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function subToolButton_Clicked(subtoolID: SubToolID) {\n\n    if (ribbonUIRef.subtoolButton_Clicked) {\n\n      set_currentSubtoolID(subtoolID)\n      ribbonUIRef.subtoolButton_Clicked(subtoolID)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-auto-fill${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.draw} label={[\"追加\", \"1\"]}\n        subtoolID={SubToolID.addAutoFillPoint} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.eracer} label={[\"削除\", \"2/E\"]}\n        subtoolID={SubToolID.deleteAutoFillPoint} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { DocumentData } from '../document-data'\nimport { float } from '../common-logics'\nimport { MainToolTabID } from '../tool'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { UI_NumberInput } from '../ui-common-controls'\nimport { UI_RibbonUI_InputLabel, UI_RibbonUI_Separator } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Document_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Document({ ribbonUIRef, isVisible }: UI_RibbonUI_Document_Param) {\n\n  const layout = DocumentData.getDocumentLayout(ribbonUIRef.docContext.documentData, 1.0)\n  const [documentFrame_left, set_documentFrame_left] = React.useState(layout.left)\n  const [documentFrame_top, set_documentFrame_top] = React.useState(layout.top)\n  const [documentFrame_width, set_documentFrame_width] = React.useState(layout.width)\n  const [documentFrame_height, set_documentFrame_height] = React.useState(layout.height)\n\n  const [lineWidthBiasRate, set_lineWidthBiasRate] = React.useState(ribbonUIRef.docContext.documentData.lineWidthBiasRate)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.document],\n    update: (docContext) => {\n\n      const layout = DocumentData.getDocumentLayout(docContext.documentData, 1.0)\n      set_documentFrame_left(layout.left)\n      set_documentFrame_top(layout.top)\n      set_documentFrame_width(layout.width)\n      set_documentFrame_height(layout.height)\n\n      set_lineWidthBiasRate(docContext.documentData.lineWidthBiasRate)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function documentFrame_Changed(left: float, top: float, width: float, height: float) {\n\n    const values = [left, top, width, height]\n    if (values.find(value => !Number.isSafeInteger(value))) {\n      return\n    }\n\n    if (ribbonUIRef.documentFrame_Changed) {\n\n      ribbonUIRef.documentFrame_Changed(left, top, width, height)\n    }\n  }\n\n  function numberInput_Changed(id: RibbonUIControlID, value: float, setFunction: (value: float) => void) {\n\n    setFunction(value)\n\n    if (ribbonUIRef.numberInput_Changed) {\n\n      ribbonUIRef.numberInput_Changed(id, value)\n    }\n  }\n\n  const positionStepValue = 1\n  const minPositionValue = -100000\n  const maxPositionValue = 100000\n\n  return (\n    <div className={`ribbon-ui-document${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_Separator />\n      <div className=\"group-container\">\n        <div className=\"label\">キャンバス範囲</div>\n        <div className=\"group-contents\">\n          <div className=\"vertical-layout document-size-params\">\n            <div className=\"param-row\">\n              <UI_RibbonUI_InputLabel label={'横位置'} />\n              <UI_NumberInput value={documentFrame_left} digit={0} step={positionStepValue} min={minPositionValue} max={maxPositionValue}\n                onChange={(value) => {\n                  set_documentFrame_left(value)\n                  documentFrame_Changed(value, documentFrame_top, documentFrame_width, documentFrame_height)\n                }}\n              />\n              <UI_RibbonUI_InputLabel label={'縦位置'} />\n              <UI_NumberInput value={documentFrame_top} digit={0} step={positionStepValue} min={minPositionValue} max={maxPositionValue}\n                onChange={(value) => {\n                  set_documentFrame_top(value)\n                  documentFrame_Changed(documentFrame_left, value, documentFrame_width, documentFrame_height)\n                }}\n              />\n            </div>\n            <div className=\"param-row\">\n              <UI_RibbonUI_InputLabel label={'サイズ'} />\n              <UI_NumberInput value={documentFrame_width} digit={0} step={positionStepValue} min={1} max={maxPositionValue}\n                onChange={(value) => {\n                  set_documentFrame_width(value)\n                  documentFrame_Changed(documentFrame_left, documentFrame_top, value, documentFrame_height)\n                }}\n              />\n              <UI_RibbonUI_InputLabel label={'×'} />\n              <UI_NumberInput value={documentFrame_height} digit={0} step={positionStepValue} min={1} max={maxPositionValue}\n                onChange={(value) => {\n                  set_documentFrame_height(value)\n                  documentFrame_Changed(documentFrame_left, documentFrame_top, documentFrame_width, value)\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <UI_RibbonUI_Separator />\n      <div className=\"group-container\">\n        <div className=\"label\">描画</div>\n        <div className=\"group-contents\">\n          <div className=\"vertical-layout document-size-params\">\n            <div className=\"param-row\">\n              <UI_RibbonUI_InputLabel label={'ベース線幅'} />\n              <UI_NumberInput value={lineWidthBiasRate} digit={2} step={0.1} min={0.01} max={10.0}\n                onChange={(value) => {\n                  set_lineWidthBiasRate(value)\n                  numberInput_Changed(RibbonUIControlID.document_lineWidthBiasRate, value, set_lineWidthBiasRate)\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <UI_RibbonUI_Separator />\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { SVGFiles } from '../resource-files'\nimport { MainToolTabID, OperationOriginTypeID, OperationUnitID, SubToolID } from '../tool'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { UI_RibbonUI_InputLabel, UI_RibbonUI_SubToolButton, UI_RibbonUI_ToggleButton, UI_RibbonUI_ToggleButtonGroup } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Edit_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Edit({ ribbonUIRef, isVisible }: UI_RibbonUI_Edit_Param) {\n\n  const [currentSubtoolID, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n  const [operationUnitID, set_operationUnitID] = React.useState(ribbonUIRef.docContext.operationUnitID)\n  const [operationOriginTypeID, set_operationOriginTypeID] = React.useState(ribbonUIRef.docContext.operationOriginTypeID)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.edit],\n    update: (docContext) => {\n\n      set_currentSubtoolID(docContext.subtoolID)\n      set_operationUnitID(docContext.operationUnitID)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function subToolButton_Clicked(subtoolID: SubToolID) {\n\n    if (ribbonUIRef.subtoolButton_Clicked) {\n\n      ribbonUIRef.subtoolButton_Clicked(subtoolID)\n    }\n  }\n\n  function tobbleButton_Clickd(id: RibbonUIControlID, value: number, setFunction: (value: int) => void) {\n\n    setFunction(value)\n\n    if (ribbonUIRef.toggleButton_Clicked) {\n\n      ribbonUIRef.toggleButton_Clicked(id, value)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-edit${!isVisible ? ' hidden': ''}`}>\n      <div className=\"group-container\">\n        <div className=\"label\">編集ツール</div>\n        <div className=\"group-contents grouped-params\">\n          <div className=\"param-column\">\n            <div className=\"param-column-inner\">\n              <UI_RibbonUI_InputLabel label={'編集単位'} />\n              <UI_RibbonUI_ToggleButtonGroup\n                id={RibbonUIControlID.edit_operationUnit}\n                currentValue={operationUnitID}\n                onClick={ (id, value) => tobbleButton_Clickd(id, value, set_operationUnitID) }\n              >\n                <UI_RibbonUI_ToggleButton label=\"線\" value={OperationUnitID.stroke} />\n                <UI_RibbonUI_ToggleButton label=\"線分\" value={OperationUnitID.strokeSegment} />\n                <UI_RibbonUI_ToggleButton label=\"点\" value={OperationUnitID.strokePoint} />\n              </UI_RibbonUI_ToggleButtonGroup>\n              <UI_RibbonUI_InputLabel label={'原点'} />\n              <UI_RibbonUI_ToggleButtonGroup\n                id={RibbonUIControlID.edit_operationOrigin}\n                currentValue={operationOriginTypeID}\n                onClick={ (id, value) => tobbleButton_Clickd(id, value, set_operationOriginTypeID) }\n              >\n                <UI_RibbonUI_ToggleButton label=\"中心\" value={OperationOriginTypeID.medianCenter} />\n                <UI_RibbonUI_ToggleButton label=\"カーソル\" value={OperationOriginTypeID.pivot} />\n              </UI_RibbonUI_ToggleButtonGroup>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UI_RibbonUI_SubToolButton\n        icon={operationUnitID == OperationUnitID.stroke ? SVGFiles.icons.selectLine\n          : (operationUnitID == OperationUnitID.strokeSegment ? SVGFiles.icons.selectSegment\n              : SVGFiles.icons.selectPoint)\n        }\n        label={[\"選択\", \"1\"]}\n        subtoolID={SubToolID.brushSelect} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.editTransform} label={[\"カーソル\", \"2\"]}\n        subtoolID={SubToolID.locateOperatorCursor} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.editTransform} label={[\"移動/変形\", \"3\"]}\n        subtoolID={SubToolID.editModeMain} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.divideLineSegment} label={[\"再分割\", \"4\"]}\n        subtoolID={SubToolID.resampleSegment} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Home_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Home({ ribbonUIRef, isVisible }: UI_RibbonUI_Home_Param) {\n\n  const [, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  React.useEffect(() => {\n  }, [])\n\n  return (\n    <div className={`ribbon-ui-home${!isVisible ? ' hidden': ''}`}>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { DrawLineTypeID, EyesSymmetryInputSideID, FillAreaTypeID, LayerTypeID, VectorLayer } from '../document-data'\nimport { float, int } from '../common-logics'\nimport { MainToolTabID } from '../tool'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { UI_CheckBox, UI_NumberInput } from '../ui-common-controls'\nimport { UI_SelectBox, UI_SelectBoxOption } from '../ui-popover'\nimport {\n  UI_RibbonUI_InputLabel, UI_RibbonUI_Separator, UI_RibbonUI_ToggleButton,\n  UI_RibbonUI_ToggleButtonGroup\n} from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Layer_VectorLayer_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n}\n\nexport function UI_RibbonUI_Layer_VectorLayer({ ribbonUIRef }: UI_RibbonUI_Layer_VectorLayer_Param) {\n\n  const currentVectorLayer = ribbonUIRef.docContext.currentVectorLayer\n  const isVectorLayer = (currentVectorLayer != null)\n\n  const [drawLineType, set_drawLineType] = React.useState(isVectorLayer ? currentVectorLayer.drawLineType : DrawLineTypeID.none)\n  const [fillAreaType, set_fillAreaType] = React.useState(isVectorLayer ? currentVectorLayer.fillAreaType : FillAreaTypeID.none)\n  const [lineWidthBiasRate, set_lineWidthBiasRate] = React.useState(isVectorLayer ? currentVectorLayer.lineWidthBiasRate : 1.0)\n\n  const [eyesSymmetry_visible, set_eyesSymmetry_visible] = React.useState(isVectorLayer && VectorLayer.isVectorStrokeLayer(currentVectorLayer))\n  const [eyesSymmetry_enabled, set_eyesSymmetry_enabled] = React.useState(isVectorLayer && currentVectorLayer.eyesSymmetryEnabled)\n  const [eyesSymmetry_side, set_eyesSymmetry_side] = React.useState(isVectorLayer && currentVectorLayer.eyesSymmetryInputSide)\n  const [eyesSymmetry_layerOptions, set_eyesSymmetry_layerOptions] = React.useState<UI_SelectBoxOption[]>(ribbonUIRef.posingLayerOptions)\n  const [eyesSymmetry_currentOption, set_eyesSymmetry_currentOption] = React.useState<UI_SelectBoxOption[]>(ribbonUIRef.posingLayerOptions_Selected)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.layer],\n    filter: (layer) => { return VectorLayer.isVectorLayerWithOwnData(layer) },\n    update: (docContext) => {\n\n      const vectorLayer = docContext.currentVectorLayer\n\n      set_drawLineType(vectorLayer.drawLineType)\n      set_fillAreaType(vectorLayer.fillAreaType)\n      set_lineWidthBiasRate(vectorLayer.lineWidthBiasRate)\n\n      set_eyesSymmetry_visible(VectorLayer.isVectorStrokeLayer(vectorLayer))\n      set_eyesSymmetry_enabled(vectorLayer.eyesSymmetryEnabled)\n      set_eyesSymmetry_side(vectorLayer.eyesSymmetryInputSide)\n      set_eyesSymmetry_layerOptions(ribbonUIRef.posingLayerOptions)\n      set_eyesSymmetry_currentOption(ribbonUIRef.posingLayerOptions_Selected)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function numberInput_Changed(id: RibbonUIControlID, value: float, setFunction: (value: float) => void) {\n\n    setFunction(value)\n\n    if (ribbonUIRef.numberInput_Changed) {\n\n      ribbonUIRef.numberInput_Changed(id, value)\n    }\n  }\n\n  function eyesSymmetry_enabled_Changed(id: RibbonUIControlID, checked: boolean, value: boolean | number | null) {\n\n    if (ribbonUIRef.checkBox_Changed) {\n\n      ribbonUIRef.checkBox_Changed(id, checked, value)\n    }\n  }\n\n  function eyesSymmetry_layerOptions_Changed(id: RibbonUIControlID, item: UI_SelectBoxOption) {\n\n    if (ribbonUIRef.selectBox_Changed) {\n\n      ribbonUIRef.selectBox_Changed(id, item)\n    }\n  }\n\n  function tobbleButton_Clickd(id: RibbonUIControlID, value: number, setFunction: (value: int) => void) {\n\n    setFunction(value)\n\n    if (ribbonUIRef.toggleButton_Clicked) {\n\n      ribbonUIRef.toggleButton_Clicked(id, value)\n    }\n  }\n\n  return (\n    <div className=\"ribbon-ui-layer\">\n      <div className=\"group-container\">\n        <div className=\"label\">描画</div>\n        <div className=\"group-contents grouped-params\">\n          <div className=\"param-column\">\n            <div className=\"param-column-inner\">\n              <UI_RibbonUI_InputLabel label={'線色'} />\n              <UI_RibbonUI_ToggleButtonGroup id={RibbonUIControlID.vectorLayer_drawLineType} currentValue={drawLineType}\n                onClick={ (id, value) => tobbleButton_Clickd(id, value, set_drawLineType) }\n              >\n                <UI_RibbonUI_ToggleButton label=\"なし\" value={DrawLineTypeID.none} />\n                <UI_RibbonUI_ToggleButton label=\"レイヤー色\" value={DrawLineTypeID.layerColor} />\n                <UI_RibbonUI_ToggleButton label=\"パレット\" value={DrawLineTypeID.paletteColor} />\n              </UI_RibbonUI_ToggleButtonGroup>\n\n              <UI_RibbonUI_InputLabel label={'塗り色'} />\n              <UI_RibbonUI_ToggleButtonGroup id={RibbonUIControlID.vectorLayer_fillAreaType} currentValue={fillAreaType}\n                onClick={ (id, value) => tobbleButton_Clickd(id, value, set_fillAreaType) }\n              >\n                <UI_RibbonUI_ToggleButton label=\"なし\"  value={FillAreaTypeID.none} />\n                <UI_RibbonUI_ToggleButton label=\"レイヤー色\" value={FillAreaTypeID.fillColor} />\n                <UI_RibbonUI_ToggleButton label=\"パレット\" value={FillAreaTypeID.paletteColor} />\n              </UI_RibbonUI_ToggleButtonGroup>\n            </div>\n          </div>\n          <div className=\"param-column\">\n            <div className=\"param-column-inner\">\n              <UI_RibbonUI_InputLabel label={'ベース線幅'} />\n              <UI_NumberInput value={lineWidthBiasRate} digit={2} step={0.1} min={0.01} max={10.0}\n                onChange={(value) => numberInput_Changed(RibbonUIControlID.vectorLayer_lineWidthBiasRate, value, set_lineWidthBiasRate) }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      { eyesSymmetry_visible && <React.Fragment>\n        <UI_RibbonUI_Separator />\n        <div className=\"group-container\">\n            <div className=\"label\">目の左右対称補助</div>\n            <div className=\"group-contents\">\n              <div className=\"checkbox-item\">\n                <div className=\"label\">有効</div>\n                <div className=\"checkbox\">\n                  <UI_CheckBox value={eyesSymmetry_enabled}\n                    onChange={(checked, value) => eyesSymmetry_enabled_Changed(RibbonUIControlID.vectorLayer_enableEyesSymmetry, checked, value)}\n                  />\n                </div>\n              </div>\n              { eyesSymmetry_enabled && <React.Fragment>\n                <div className=\"group-item\">\n                  <div className=\"label\">描きこむ側</div>\n                  <UI_RibbonUI_ToggleButtonGroup\n                    id={RibbonUIControlID.vectorLayer_eyesSymmetryInputSide}\n                    currentValue={eyesSymmetry_side}\n                    onClick={ (id, value) => tobbleButton_Clickd(id, value, set_eyesSymmetry_side) }\n                  >\n                    <UI_RibbonUI_ToggleButton label=\"左\" value={EyesSymmetryInputSideID.left} />\n                    <UI_RibbonUI_ToggleButton label=\"右\" value={EyesSymmetryInputSideID.right} />\n                  </UI_RibbonUI_ToggleButtonGroup>\n                </div>\n                <div className=\"select-item eyes-symmetry\">\n                  <div className=\"label\">ポーズレイヤー</div>\n                  <div className=\"select-box\">\n                    <UI_SelectBox\n                      selectBoxPopoverRef={ribbonUIRef.selectBoxPopoverRef}\n                      border={true}\n                      options={eyesSymmetry_layerOptions}\n                      values={eyesSymmetry_currentOption}\n                      onChange={(item) => eyesSymmetry_layerOptions_Changed(RibbonUIControlID.vectorLayer_posingLayer, item)}\n                    />\n                  </div>\n                </div>\n              </React.Fragment> }\n            </div>\n        </div>\n      </React.Fragment> }\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { Layer, LayerTypeID, VectorLayer } from '../document-data'\nimport { ColorLogic } from '../common-logics'\nimport { MainToolTabID } from '../tool'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { UI_CheckBox } from '../ui-common-controls'\nimport { UI_RibbonUI_InputLabel, UI_RibbonUI_RGBAColor, UI_RibbonUI_Separator, UI_RibbonUI_TextInput } from './ribbon-controls'\nimport { UI_RibbonUI_Layer_VectorLayer } from './ribbon-layer-vector-layer'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Layer_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\ninterface ComponentState {\n\n  currentLayer: Layer\n  isVectorLayer: boolean\n  layerName: string\n  layerColor: string\n  isRenderTarget: boolean\n  isMaskedByBelowLayer: boolean\n  fillColor: string\n}\n\nexport function UI_RibbonUI_Layer({ ribbonUIRef, isVisible }: UI_RibbonUI_Layer_Param) {\n\n  const [state, set_state] = React.useState<ComponentState>(() => {\n\n    return createState(ribbonUIRef.docContext.currentLayer)\n  })\n\n  const layerTypeNames = React.useMemo(() => new Map<LayerTypeID, string>([\n    [LayerTypeID.none, ''],\n    [LayerTypeID.rootLayer, ''],\n    [LayerTypeID.vectorLayer, '線画 レイヤー'],\n    [LayerTypeID.groupLayer, 'グループ レイヤー'],\n    [LayerTypeID.imageFileReferenceLayer, '画像ファイル レイヤー'],\n    [LayerTypeID.posingLayer, '3Dポーズ レイヤー'],\n    [LayerTypeID.vectorLayerReferenceLayer, '線画参照 レイヤー'],\n    [LayerTypeID.autoFillLayer, '自動塗り レイヤー'],\n    [LayerTypeID.surroundingFillLayer, '囲み塗り レイヤー']\n  ]), [])\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.layer],\n    update: (docContext) => {\n\n      set_state(createState(docContext.currentLayer))\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function createState(layer: Layer): ComponentState {\n\n    const isVectorLayer = VectorLayer.isVectorLayer(layer)\n    const vectorLayer = (isVectorLayer ? layer : null) as VectorLayer\n\n    return {\n      currentLayer: layer,\n      isVectorLayer: isVectorLayer,\n      layerName: layer.name,\n      layerColor: ColorLogic.rgbaToRgbaString(layer.layerColor),\n      isRenderTarget: layer.isRenderTarget,\n      isMaskedByBelowLayer: layer.isMaskedByBelowLayer,\n      fillColor: isVectorLayer ? ColorLogic.rgbaToRgbaString(vectorLayer.fillColor) : ''\n    }\n  }\n\n  function updateState(old_state: ComponentState, value: any, propName: keyof ComponentState): ComponentState {\n\n    const new_state = createState(old_state.currentLayer)\n    new_state[String(propName)] = value\n\n    set_state(new_state)\n\n    return new_state\n  }\n\n  function textInput_Changed(id: RibbonUIControlID, value: string, propName: keyof ComponentState) {\n\n    updateState(state, value, propName)\n\n    if (ribbonUIRef.textInput_Changed) {\n\n      ribbonUIRef.textInput_Changed(id, value)\n    }\n  }\n\n  function checkBox_Changed(id: RibbonUIControlID, checked: boolean, value: any, propName: keyof ComponentState) {\n\n    updateState(state, value, propName)\n\n    if (ribbonUIRef.checkBox_Changed) {\n\n      ribbonUIRef.checkBox_Changed(id, checked, value)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-layer${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_Separator />\n      <div className=\"group-container\">\n        <div className=\"label\">{layerTypeNames.has(state.currentLayer.type) ? layerTypeNames.get(state.currentLayer.type) : ''}</div>\n        <div className=\"group-contents\">\n          <div className=\"vertical-layout layer-basic-params\">\n            <div className=\"param-row\">\n              <UI_RibbonUI_TextInput value={state.layerName} maxLength={40}\n                onChange={(value) => {\n                  textInput_Changed(RibbonUIControlID.layer_name, value, 'layerName')\n                }}\n              />\n            </div>\n            <div className=\"param-row\">\n              <div className=\"layer-colors\">\n                <UI_RibbonUI_RGBAColor value={state.currentLayer.layerColor} />\n                { state.isVectorLayer &&\n                  <UI_RibbonUI_RGBAColor value={(state.currentLayer as VectorLayer).fillColor} />\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UI_RibbonUI_Separator />\n      <div className=\"group-container\">\n        <div className=\"label\">処理対象</div>\n        <div className=\"group-contents layer-additional-params\">\n          <div className=\"param-column\">\n            <div className=\"param-column-inner\"\n                onClick={() => checkBox_Changed(RibbonUIControlID.layer_isMaskedByBelowLayer, !state.isMaskedByBelowLayer, !state.isMaskedByBelowLayer, 'isMaskedByBelowLayer')}\n            >\n              <UI_CheckBox value={state.isMaskedByBelowLayer} />\n              <UI_RibbonUI_InputLabel label={'下のレイヤーでマスク'} />\n            </div>\n            <div className=\"param-column-inner\"\n                onClick={() => checkBox_Changed(RibbonUIControlID.layer_isRenderTarget, !state.isRenderTarget, !state.isRenderTarget, 'isRenderTarget')}\n            >\n              <UI_CheckBox value={state.isRenderTarget} />\n              <UI_RibbonUI_InputLabel label={'エクスポート'} />\n            </div>\n          </div>\n        </div>\n      </div>\n      { state.isVectorLayer && <React.Fragment>\n        <UI_RibbonUI_Separator />\n        <UI_RibbonUI_Layer_VectorLayer ribbonUIRef={ribbonUIRef} />\n      </React.Fragment> }\n      <UI_RibbonUI_Separator />\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { SVGFiles } from '../resource-files'\nimport { MainToolTabID, SubToolID } from '../tool'\nimport { UI_BrushPropertyBox } from '../ui-popover/brush-property-box'\nimport { UI_RibbonUI_SubToolButton } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Main_Drawing_NonScroll_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Main_Drawing_NonScroll({ ribbonUIRef, isVisible }: UI_RibbonUI_Main_Drawing_NonScroll_Param) {\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.drawing, MainToolTabID.group, MainToolTabID.pointBrushFill],\n    onActivated: () => {\n\n      ribbonUIRef.brushPropertyBoxRef.resize()\n    },\n    update: () => {\n\n      ribbonUIRef.brushPropertyBoxRef.updateBox()\n\n      ribbonUIRef.brushPropertyBoxRef.updatePopover()\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.brushPropertyBoxRef.numberInput_Changed = (id, value) => {\n\n      if (ribbonUIRef.numberInput_Changed) {\n\n        ribbonUIRef.numberInput_Changed(id, value, true)\n      }\n    }\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.brushPropertyBoxRef.numberInput_Changed = null\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  return (\n    <div className={`${!isVisible ? ' hidden': ''}`}>\n      <UI_BrushPropertyBox\n        uiRef={ribbonUIRef.brushPropertyBoxRef}\n      />\n    </div>\n  )\n}\n\nexport interface UI_RibbonUI_Main_Drawing_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Main_Drawing({ ribbonUIRef, isVisible }: UI_RibbonUI_Main_Drawing_Param) {\n\n  const [currentSubtoolID, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.drawing],\n    update: (docContext) => {\n\n      set_currentSubtoolID(docContext.subtoolID)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function subToolButton_Clicked(subtoolID: SubToolID) {\n\n    if (ribbonUIRef.subtoolButton_Clicked) {\n\n      set_currentSubtoolID(subtoolID)\n      ribbonUIRef.subtoolButton_Clicked(subtoolID)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-main-drawing${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.draw} label={[\"線を描く\", \"1\"]}\n        subtoolID={SubToolID.drawLine} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.eracer} label={[\"消しゴム\", \"2/  E\"]}\n        subtoolID={SubToolID.deletePointBrush} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.scratchLine} label={[\"線の修正\", \"3\"]}\n        subtoolID={SubToolID.scratchLine} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.extrudeLine} label={[\"線の延長\", \"4\"]}\n        subtoolID={SubToolID.extrudeLine} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.drawStrokeWidth} label={[\"太くする\", \"5\"]}\n        subtoolID={SubToolID.scratchLineWidth} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.dummy} label={[\"太さの設定\", \"6\"]}\n        subtoolID={SubToolID.overWriteLineWidth} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\nimport { UI_RibbonUI_SubToolButton } from './ribbon-controls'\nimport { SVGFiles } from '../resource-files'\nimport { MainToolTabID, SubToolID } from '../tool'\n\nexport interface UI_RibbonUI_Main_GroupLayer_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Main_GroupLayer({ ribbonUIRef, isVisible }: UI_RibbonUI_Main_GroupLayer_Param) {\n\n  const [currentSubtoolID, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.group],\n    update: (docContext) => {\n\n      set_currentSubtoolID(docContext.subtoolID)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n    }\n  }, [])\n\n  function subToolButton_Clicked(subtoolID: SubToolID) {\n\n    if (ribbonUIRef.subtoolButton_Clicked) {\n\n      ribbonUIRef.subtoolButton_Clicked(subtoolID)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-edit${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.scratchLine} label={[\"線の修正\", \"1\"]}\n        subtoolID={SubToolID.scratchLine} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.eracer} label={[\"消しゴム\", \"2/  E\"]}\n        subtoolID={SubToolID.deletePointBrush} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.dummy} label={[\"太さの設定\", \"3\"]}\n        subtoolID={SubToolID.overWriteLineWidth} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.divideLineSegment} label={[\"再分割\", \"4\"]}\n        subtoolID={SubToolID.resampleSegment} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { SVGFiles } from '../resource-files'\nimport { MainToolTabID, SubToolID } from '../tool'\nimport { RibbonUIControlID } from '../ui'\nimport { UI_RibbonUI_Button, UI_RibbonUI_SubToolButton } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_Main_ImageFileReferlence_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_Main_ImageFileReferlence({ ribbonUIRef, isVisible }: UI_RibbonUI_Main_ImageFileReferlence_Param) {\n\n  const [currentSubtoolID, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.imageFileReference],\n    update: (docContext) => {\n\n      set_currentSubtoolID(docContext.subtoolID)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function subToolButton_Clicked(subtoolID: SubToolID) {\n\n    if (ribbonUIRef.subtoolButton_Clicked) {\n\n      set_currentSubtoolID(subtoolID)\n      ribbonUIRef.subtoolButton_Clicked(subtoolID)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-main-iamge-file-ref${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_Button ribbonUIRef={ribbonUIRef}\n        icon={SVGFiles.icons.openImage} label={[\"ファイルの選択\"]}\n        id={RibbonUIControlID.imageFileRef_openImageFile}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.move} label={[\"移動\", \"1\"]}\n        subtoolID={SubToolID.image_GrabMove} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.rotate} label={[\"回転\", \"2\"]}\n        subtoolID={SubToolID.image_Rotate} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.scale} label={[\"拡縮\", \"3\"]}\n        subtoolID={SubToolID.image_Scale} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { DocumentContext } from '../context'\nimport { MainToolTab, MainToolTabID } from '../tool'\n\nexport interface UI_RibbonUITabsRef {\n\n  update?(docContext: DocumentContext): void\n  item_Clicked?(tabID: MainToolTabID): void\n}\n\nexport interface UI_RibbonUITabsParam {\n\n  uiRef: UI_RibbonUITabsRef\n}\n\nexport function UI_RibbonUITabs({ uiRef }: UI_RibbonUITabsParam) {\n\n  const [current_tabID, set_current_tabID] = React.useState(MainToolTabID.none)\n  const [mainToolTabs, set_MainToolTabs] = React.useState<MainToolTab[]>([])\n\n  React.useEffect(() => {\n\n    uiRef.update = (docContext) => {\n\n      set_current_tabID(docContext.mainToolTabID)\n      set_MainToolTabs(docContext.mainToolTabs)\n    }\n\n    return function cleanup() {\n\n      uiRef.update = null\n    }\n  }, [])\n\n  function item_Clicked(id: MainToolTabID) {\n\n    if (uiRef.item_Clicked) {\n\n      uiRef.item_Clicked(id)\n    }\n  }\n\n  return (\n    <div className=\"tabs\">\n      { mainToolTabs.map(tab =>\n\n        <React.Fragment key={tab.tabID}>\n          { tab.tabID == MainToolTabID.group &&\n            <UI_RibbonTab tabID={MainToolTabID.group} label=\"グループ\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.drawing &&\n            <UI_RibbonTab tabID={MainToolTabID.drawing} label=\"線画\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.pointBrushFill &&\n            <UI_RibbonTab tabID={MainToolTabID.pointBrushFill} label=\"ブラシ塗り\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.autoFill &&\n            <UI_RibbonTab tabID={MainToolTabID.autoFill} label=\"自動囲み塗り\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.imageFileReference &&\n            <UI_RibbonTab tabID={MainToolTabID.imageFileReference} label=\"画像ファイル\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.posing &&\n            <UI_RibbonTab tabID={MainToolTabID.posing} label=\"3Dポーズ\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { (tab.tabID == MainToolTabID.edit || tab.tabID == MainToolTabID.edit_disabled) &&\n            <UI_RibbonTab tabID={MainToolTabID.edit} label=\"編集\" disabled={tab.tabID == MainToolTabID.edit_disabled} current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.document &&\n            <UI_RibbonTab tabID={MainToolTabID.document} label=\"ドキュメント\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.layer &&\n            <UI_RibbonTab tabID={MainToolTabID.layer} label=\"レイヤー\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n          { tab.tabID == MainToolTabID.view &&\n            <UI_RibbonTab tabID={MainToolTabID.view} label=\"表示/設定\" current_tabID={current_tabID} handleClick={item_Clicked} />\n          }\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n\ninterface UI_MenuButtonParam {\n\n  tabID: MainToolTabID\n  label: string\n  disabled?: boolean\n  current_tabID: MainToolTabID\n  handleClick(id: MainToolTabID)\n}\n\nexport function UI_RibbonTab({ tabID, label, disabled = false, current_tabID, handleClick }: UI_MenuButtonParam) {\n\n  function clicked() {\n\n    if (!disabled) {\n\n      return handleClick(tabID)\n    }\n  }\n\n  return (\n    <div className={`tab${current_tabID == tabID ? ' selected': ''}${disabled ? ' disabled': ''}`} onPointerDown={clicked}>\n      <div className=\"tab-label\">{label}</div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { float } from '../common-logics'\nimport { MainToolTabID } from '../tool'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { UI_CheckBox, UI_NumberInput } from '../ui-common-controls'\nimport { UI_RibbonUI_InputLabel, UI_RibbonUI_Separator } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_View_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_View({ ribbonUIRef, isVisible }: UI_RibbonUI_View_Param) {\n\n  const [defaultViewScale, set_defaultViewScale] = React.useState(ribbonUIRef.docContext.documentData.defaultViewScale)\n  const [hideOuterArea, set_hideOuterArea] = React.useState(ribbonUIRef.docContext.documentData.documentFrame_HideOuterArea)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.view],\n    update: (docContext) => {\n\n      set_defaultViewScale(docContext.documentData.defaultViewScale)\n      set_hideOuterArea(docContext.documentData.documentFrame_HideOuterArea)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function documentViewSettings_Changed(new_defaultViewScale: float) {\n\n    const values = [new_defaultViewScale]\n    if (values.find(value => !Number.isFinite(value))) {\n      return\n    }\n\n    if (ribbonUIRef.documentViewSettings_Changed) {\n\n      ribbonUIRef.documentViewSettings_Changed(new_defaultViewScale)\n    }\n  }\n\n  function checkBox_Changed(id: RibbonUIControlID, checked: boolean, value: any, setFunction: (value: boolean) => void) {\n\n    setFunction(value)\n\n    if (ribbonUIRef.checkBox_Changed) {\n\n      ribbonUIRef.checkBox_Changed(id, checked, value)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-view${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_Separator />\n      <div className=\"group-container\">\n        <div className=\"label\">ビュー</div>\n        <div className=\"group-contents\">\n          <div className=\"vertical-layout view-params\">\n            <div className=\"param-row\">\n              <UI_RibbonUI_InputLabel label={'ベース拡大率'} />\n              <UI_NumberInput value={defaultViewScale} digit={2} step={0.1} min={0.01} max={10.0}\n                onChange={(value) => {\n                  set_defaultViewScale(value)\n                  documentViewSettings_Changed(value)\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <UI_RibbonUI_Separator />\n      <div className=\"group-container\">\n        <div className=\"label\">キャンバス</div>\n        <div className=\"group-contents\">\n          <div className=\"vertical-layout view-params\">\n            <div className=\"param-row\" onClick={() => checkBox_Changed(RibbonUIControlID.document_hideOuterArea, !hideOuterArea, !hideOuterArea, set_hideOuterArea)}>\n              <UI_CheckBox value={hideOuterArea}/>\n              <UI_RibbonUI_InputLabel label={'外側を隠す'} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <UI_RibbonUI_Separator />\n    </div>\n  )\n}\n\n","import * as React from 'react'\nimport { SubToolViewItem } from '../ui'\nimport { UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_SubToolWindowRef {\n\n  items: SubToolViewItem[]\n\n  update?(items: SubToolViewItem[], subToolIndex: number): void\n\n  item_Click?(item: SubToolViewItem): void\n  itemButton_Click?(item: SubToolViewItem): void\n}\n\nexport interface UI_SubToolWindowParam {\n\n  ribbonUIRef: UI_RibbonUIRef\n  subToolWindowUIRef: UI_SubToolWindowRef\n  isVisible: boolean\n}\n\nconst itemScale = 0.9\n\nexport function UI_SubToolWindow({ ribbonUIRef, subToolWindowUIRef, isVisible }: UI_SubToolWindowParam) {\n\n  const [items, setItems] = React.useState(subToolWindowUIRef.items)\n\n  const [active_SubToolIndex, setActive_SubToolIndex] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  React.useEffect(() => {\n\n    subToolWindowUIRef.update = (items: SubToolViewItem[], subToolIndex: number) => {\n\n      setItems(items)\n      setActive_SubToolIndex(subToolIndex)\n    }\n\n    return function cleanup() {\n\n      subToolWindowUIRef.update = null\n    }\n  }, [])\n\n  function item_Clicked(e: React.MouseEvent, item: SubToolViewItem) {\n\n    if (e.button == 0) {\n\n      subToolWindowUIRef.item_Click(item)\n    }\n  }\n\n  function itemButton_Clicked(e: React.MouseEvent, item: SubToolViewItem) {\n\n    if (e.button == 0) {\n\n      subToolWindowUIRef.itemButton_Click(item)\n    }\n  }\n\n  return (\n    <div className={`subtool-window${!isVisible ? ' hidden': ''}`}>\n        {\n          items.map(item => (\n            <div key={item.subToolID}\n              className={`item selectable-item ${active_SubToolIndex == item.subToolID ? 'selected' : ''}`}\n              onMouseDown={(e) => { item_Clicked(e, item) }}\n            >\n              <div\n                className={`item-inner selectable-item-inner ${item.tool.toolBarImage.cssImageClassName}`}\n                style={{ backgroundPosition: `0 -${item.tool.toolBarImageIndex * 64 * itemScale}px`, opacity: (item.isAvailable ? 1.0 : 0.5) }}\n              >\n                <div className='spacer'></div>\n                {item.buttons.length > 0 ?\n                  <div className='command-button image-splite-system'\n                    style={{ backgroundPosition: `-${(item.buttonStateID - 1) * 64 * itemScale}px 0` }}\n                    onMouseDown={(e) => { itemButton_Clicked(e, item) } }\n                  ></div>\n                  :\n                  <div className='command-button'></div>\n                }\n              </div>\n            </div>\n          ))\n          }\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { SVGFiles } from '../resource-files'\nimport { MainToolTabID, SubToolID } from '../tool'\nimport { UI_RibbonUI_SubToolButton } from './ribbon-controls'\nimport { MainToolTabUpdateFunctionInfo, UI_RibbonUIRef } from './ribbon-ui'\n\nexport interface UI_RibbonUI_PointBrushFill_Param {\n\n  ribbonUIRef: UI_RibbonUIRef\n  isVisible: boolean\n}\n\nexport function UI_RibbonUI_PointBrushFill({ ribbonUIRef, isVisible }: UI_RibbonUI_PointBrushFill_Param) {\n\n  const [currentSubtoolID, set_currentSubtoolID] = React.useState(ribbonUIRef.docContext.subtoolID)\n\n  const tabFunctionInfo = React.useMemo<MainToolTabUpdateFunctionInfo>(() => ({\n    tabID: [MainToolTabID.pointBrushFill],\n    update: (docContext) => {\n\n      set_currentSubtoolID(docContext.subtoolID)\n    }\n  }), [])\n\n  React.useEffect(() => {\n\n    ribbonUIRef.registerTabFunctionInfo(tabFunctionInfo)\n\n    return function cleanup() {\n\n      ribbonUIRef.unregisterTabFunctionInfo(tabFunctionInfo)\n    }\n  }, [])\n\n  function subToolButton_Clicked(subtoolID: SubToolID) {\n\n    if (ribbonUIRef.subtoolButton_Clicked) {\n\n      set_currentSubtoolID(subtoolID)\n      ribbonUIRef.subtoolButton_Clicked(subtoolID)\n    }\n  }\n\n  return (\n    <div className={`ribbon-ui-main-drawing${!isVisible ? ' hidden': ''}`}>\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.draw} label={[\"線を描く\", \"1\"]}\n        subtoolID={SubToolID.drawPointBrush} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.eracer} label={[\"消しゴム\", \"2/  E\"]}\n        subtoolID={SubToolID.deletePointBrush} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.scratchLine} label={[\"線の修正\", \"3\"]}\n        subtoolID={SubToolID.scratchLine} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n      <UI_RibbonUI_SubToolButton\n        icon={SVGFiles.icons.extrudeLine} label={[\"線の延長\", \"4\"]}\n        subtoolID={SubToolID.pointBrush_extrudeLine} currentSubtoolID={currentSubtoolID}\n        onClick={subToolButton_Clicked}\n      />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { DocumentContext } from '../context'\nimport { Layer, LayerTypeID } from '../document-data'\nimport { float } from '../common-logics'\nimport { MainToolTabID, SubToolID } from '../tool'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { UI_ScrollView } from '../ui-common-controls'\nimport { UI_BrushPropertyBoxRef, UI_MainMenuButton, UI_MainMenuButtonRef, UI_SelectBoxOption, UI_SelectBoxPopoverRef } from '../ui-popover'\nimport { UI_RibbonUI_AutoFillLayer } from './ribbon-auto-fill-layer'\nimport { UI_RibbonUI_Document } from './ribbon-document'\nimport { UI_RibbonUI_Edit } from './ribbon-edit'\nimport { UI_RibbonUI_Home } from './ribbon-home'\nimport { UI_RibbonUI_Layer } from './ribbon-layer'\nimport { UI_RibbonUI_Main_Drawing, UI_RibbonUI_Main_Drawing_NonScroll } from './ribbon-main-drawing'\nimport { UI_RibbonUI_Main_GroupLayer } from './ribbon-main-group'\nimport { UI_RibbonUI_Main_ImageFileReferlence } from './ribbon-main-image-file-ref'\nimport { UI_RibbonUITabs, UI_RibbonUITabsRef } from './ribbon-ui-tabs'\nimport { UI_RibbonUI_View } from './ribbon-view'\nimport { UI_SubToolWindow, UI_SubToolWindowRef } from './subtool-window'\nimport { UI_RibbonUI_PointBrushFill } from './ribbon-point-brush-fill'\n\nexport interface MainToolTabUpdateFunctionInfo {\n\n  tabID: MainToolTabID[]\n  filter?: (layer: Layer) => boolean\n  update: (docContext: DocumentContext) => void\n  onActivated?: (docContext: DocumentContext) => void\n}\n\nexport interface UI_RibbonUIRef {\n\n  ribbonUITabsRef: UI_RibbonUITabsRef\n  mainMenuButtonRef: UI_MainMenuButtonRef\n  brushPropertyBoxRef: UI_BrushPropertyBoxRef\n  selectBoxPopoverRef: UI_SelectBoxPopoverRef\n\n  setMainToolTab?(tabID: MainToolTabID): void\n\n  updateMainToolTabFunctionInfos: MainToolTabUpdateFunctionInfo[]\n  registerTabFunctionInfo?(info: MainToolTabUpdateFunctionInfo): void\n  unregisterTabFunctionInfo?(info: MainToolTabUpdateFunctionInfo): void\n\n  button_Clicked?(id: RibbonUIControlID): void\n  subtoolButton_Clicked?(subtoolID: SubToolID): void\n  toggleButton_Clicked?(id: RibbonUIControlID, value: number): void\n  textInput_Changed?(id: RibbonUIControlID, value: string): void\n  numberInput_Changed?(id: RibbonUIControlID, value: float, isModal?: boolean): void\n  checkBox_Changed?(id: RibbonUIControlID, checked: boolean, value: boolean | number | null): void\n  selectBox_Changed?(id: RibbonUIControlID, selected_Option: UI_SelectBoxOption): void\n  documentFrame_Changed?(left: float, top: float, width: float, height: float): void\n  documentViewSettings_Changed?(defaultViewScale: float): void\n\n  docContext: DocumentContext\n  posingLayerOptions: UI_SelectBoxOption[]\n  posingLayerOptions_Selected: UI_SelectBoxOption[]\n}\n\nexport interface UI_RibbonUIParam {\n\n  uiRef: UI_RibbonUIRef\n  subToolWindowRef: UI_SubToolWindowRef\n}\n\nexport function UI_RibbonUI({ uiRef, subToolWindowRef }: UI_RibbonUIParam ) {\n\n  const [tabID, set_tabID] = React.useState(MainToolTabID.none)\n\n  React.useEffect(() => {\n\n    uiRef.setMainToolTab = (new_tabID: MainToolTabID) => {\n\n      set_tabID(new_tabID)\n    }\n\n    return function cleanup() {\n\n      uiRef.setMainToolTab = null\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      <div className=\"tool-ribbon\">\n        { uiRef.docContext != null && <div className=\"tool-ribbon-rows\">\n\n          <div className=\"tabs-row\">\n            <UI_MainMenuButton uiRef={uiRef.mainMenuButtonRef}/>\n            <div className=\"centering-spacer\"></div>\n            <UI_ScrollView wheelScrollY={32} direction='horizontal' alignment='center'>\n              <UI_RibbonUITabs uiRef={uiRef.ribbonUITabsRef} />\n            </UI_ScrollView>\n            <div className=\"centering-spacer\"></div>\n            <div className=\"right-menu-button-spacer\"></div>\n          </div>\n\n          <div className=\"ribbon-ui-row\">\n            <div className=\"centering-spacer\"></div>\n            <div className=\"nonscroll-part\">\n              <UI_RibbonUI_Main_Drawing_NonScroll ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.group || tabID == MainToolTabID.drawing || tabID == MainToolTabID.pointBrushFill} />\n            </div>\n            <UI_ScrollView wheelScrollY={32} direction='horizontal' alignment='center'>\n              <UI_RibbonUI_Home ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.none} />\n              <UI_RibbonUI_Main_Drawing ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.drawing} />\n              <UI_RibbonUI_Main_GroupLayer ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.group} />\n              <UI_RibbonUI_AutoFillLayer ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.autoFill} />\n              <UI_RibbonUI_PointBrushFill ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.pointBrushFill} />\n              <UI_RibbonUI_Main_ImageFileReferlence ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.imageFileReference} />\n              <UI_SubToolWindow ribbonUIRef={uiRef} subToolWindowUIRef={subToolWindowRef} isVisible={tabID == MainToolTabID.posing} />\n              <UI_RibbonUI_Edit ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.edit} />\n              <UI_RibbonUI_Layer ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.layer} />\n              <UI_RibbonUI_Document ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.document} />\n              <UI_RibbonUI_View ribbonUIRef={uiRef} isVisible={tabID == MainToolTabID.view} />\n            </UI_ScrollView>\n            <div className=\"centering-spacer\"></div>\n          </div>\n\n        </div> }\n      </div>\n\n    </React.Fragment>\n  )\n}\n","import * as React from 'react'\nimport { ModalWindowRef } from '../ui'\n\nexport interface UI_ModalWindowContainerRef {\n\n  show?(modalRef: ModalWindowRef)\n  hide?(modalRef: ModalWindowRef)\n}\n\nexport interface UI_ModalWindowContainerParam {\n\n  children: any\n  uiRef: UI_ModalWindowContainerRef\n  modalWindowTitle: string\n  onEscape?: () => void\n}\n\nexport function UI_ModalWindowContainer({ children, uiRef, modalWindowTitle, onEscape }: UI_ModalWindowContainerParam) {\n\n  const backdropRef = React.useRef<HTMLDivElement>(null)\n  const windowContainerRef = React.useRef<HTMLDivElement>(null)\n  const backDropClickedRef = React.useRef(false)\n\n  React.useEffect(() => {\n\n    uiRef.show = (modalRef) => {\n\n      backdropRef.current.parentElement.classList.remove('hidden')\n\n      backDropClickedRef.current = false\n\n      modalRef.onModalWindowOpened()\n\n      // for handling keydown event\n      window.setTimeout(() => {\n        windowContainerRef.current.focus()\n      }, 100)\n    }\n\n    uiRef.hide = (modalRef) => {\n\n      backdropRef.current.parentElement.classList.add('hidden')\n\n      modalRef.onModalWindowClosed()\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.hide = null\n    }\n  }, [])\n\n  function container_keyDown(e: React.KeyboardEvent) {\n\n    // console.log(e.key)\n\n    if (e.key == 'Escape') {\n\n      if (onEscape) {\n\n        onEscape()\n\n        e.stopPropagation()\n      }\n    }\n  }\n\n  function backdrop_PointerDown(e: React.PointerEvent) {\n\n    e.preventDefault()\n\n    backDropClickedRef.current = true\n  }\n\n  function backdrop_PointerUp(e: React.PointerEvent) {\n\n    e.preventDefault()\n\n    if (backDropClickedRef.current) {\n\n      backDropClickedRef.current = false\n\n      if (onEscape) {\n\n        onEscape()\n      }\n    }\n  }\n\n  function windowContainer_PointerMove(e: React.PointerEvent) {\n\n    backDropClickedRef.current = false\n  }\n\n  function stopPropagation(e: React.PointerEvent | React.MouseEvent | React.TouchEvent) {\n\n    e.stopPropagation()\n  }\n\n  return (\n    <div className='modal-window-backdrop'\n      ref={backdropRef}\n      onPointerDown={backdrop_PointerDown}\n      onPointerUp={backdrop_PointerUp}\n    >\n      <div ref={windowContainerRef}\n        className={`modal-window-container`}\n        tabIndex={0} // for handling keydown event\n        onClick={stopPropagation} // to prevent same event for backdrop\n        onPointerDown={stopPropagation} // to prevent same event for backdrop\n        onKeyDown={container_keyDown}\n        onPointerMove={windowContainer_PointerMove}\n      >\n        <div className='modal-window-header'>{modalWindowTitle}</div>\n        <div className='modal-window-content'>{children}</div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Platform } from '../../platform'\nimport { float, int, Strings } from '../common-logics'\nimport { DocumentContext } from '../context'\nimport { DocumentBackGroundTypeID, ImageFileTypeID } from '../document-data'\nimport { DocumentFileNameLogic } from '../document-logic'\nimport { ModalWindowRef } from '../ui'\nimport { UI_CheckBox, UI_NumberInput } from '../ui-common-controls'\nimport { UI_RibbonUI_InputLabel, UI_RibbonUI_TextInput, UI_RibbonUI_ToggleButton, UI_RibbonUI_ToggleButtonGroup } from '../ui-ribbon'\nimport { RibbonUIControlID } from '../ui/constants'\nimport { LocalSetting } from '../user-setting'\nimport { UI_ModalWindowContainer, UI_ModalWindowContainerRef } from './modal-window-container'\n\nexport interface UI_Modal_ExportImageRef extends ModalWindowRef {\n\n  show?(docContext: DocumentContext, localSetting: LocalSetting): void\n  hide?(): void\n  onClose?(param: ExportImageFileParam)\n}\n\nexport interface UI_Modal_ExportImageParam {\n\n  uiRef: UI_Modal_ExportImageRef\n}\n\nexport interface ExportImageFileParam {\n\n  fileName: string\n  exportDirectory: string\n  scale: float\n  imageFileType: ImageFileTypeID\n  backGroundType: DocumentBackGroundTypeID\n  autoNumberingEnabled: boolean\n  exportingCount: int\n}\n\nexport function UI_Modal_ExportImage({ uiRef }: UI_Modal_ExportImageParam) {\n\n  const modalWindowContainerRef = React.useMemo<UI_ModalWindowContainerRef>(() => ({}), [])\n\n  const [exportFileName, set_exportFileName] = React.useState('')\n  const [exportDirectory, set_exportDirectory] = React.useState('')\n  const [autoNumberingEnabled, set_autoNumberingEnabled] = React.useState(false)\n  const [exportingCount, set_exportingCount] = React.useState(0)\n  const [imageFileType, set_imageFileType] = React.useState(ImageFileTypeID.png)\n  const [backGroundType, set_backGroundType] = React.useState(DocumentBackGroundTypeID.lastPaletteColor)\n  const [exportScale, set_exportScale] = React.useState<float | null>(null)\n\n  const docContextRef = React.useRef<DocumentContext>(null)\n  const lastExportFileNameRef = React.useRef('')\n\n  const available = React.useMemo<boolean>(() => {\n\n    return (!Strings.isNullOrEmpty(exportFileName) && !Strings.isNullOrEmpty(exportDirectory))\n\n  }, [exportFileName, exportDirectory])\n\n  React.useEffect(() => {\n\n    uiRef.show = (docContext, localSetting) => {\n\n      docContextRef.current = docContext\n\n      if (Strings.isNullOrEmpty(docContext.documentData.exportImageSetting.fileName)) {\n\n        const exportFileName = DocumentFileNameLogic.getExportFileName(docContext.documentFilePath, false, 0)\n        set_exportFileName(exportFileName)\n      }\n      else {\n\n        set_exportFileName(docContext.documentData.exportImageSetting.fileName)\n      }\n\n      if (Strings.isNullOrEmpty(docContext.documentData.exportImageSetting.exportDirectory)\n        && !Strings.isNullOrEmpty(docContext.documentFilePath)) {\n\n        const exportDirectory = Platform.path.getDirectoryPath(docContext.documentFilePath)\n        set_exportDirectory(exportDirectory)\n      }\n      else {\n\n        set_exportDirectory(docContext.documentData.exportImageSetting.exportDirectory)\n      }\n\n      set_imageFileType(docContext.documentData.exportImageSetting.imageFileType)\n      set_backGroundType(docContext.documentData.exportImageSetting.backGroundType)\n      set_exportScale(docContext.documentData.exportImageSetting.scale)\n      set_exportScale(docContext.documentData.exportImageSetting.scale)\n      set_autoNumberingEnabled(docContext.documentData.exportImageSetting.autoNumberingEnabled)\n      set_exportingCount(docContext.documentData.exportImageSetting.exportingCount)\n\n      modalWindowContainerRef.show(uiRef)\n    }\n\n    uiRef.hide = () => {\n\n      modalWindowContainerRef.hide(uiRef)\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.hide = null\n    }\n  }, [])\n\n  function ok_Clicked() {\n\n    if (!available) {\n      return\n    }\n\n    lastExportFileNameRef.current = exportFileName\n\n    uiRef.hide()\n\n    if (uiRef.onClose) {\n\n      const fileName = DocumentFileNameLogic.getExportFileName(exportFileName, autoNumberingEnabled, exportingCount)\n\n      uiRef.onClose(\n        {\n          fileName: fileName,\n          exportDirectory: exportDirectory,\n          imageFileType: imageFileType,\n          backGroundType: backGroundType,\n          scale: (exportScale ?? 1.0),\n          autoNumberingEnabled,\n          exportingCount: exportingCount\n        }\n      )\n    }\n  }\n\n  function cancel_Clicked() {\n\n    uiRef.hide()\n  }\n\n  function modal_Escaped() {\n\n    uiRef.hide()\n  }\n\n  return (\n    <UI_ModalWindowContainer\n      modalWindowTitle='イメージのエクスポート'\n      uiRef={modalWindowContainerRef}\n      onEscape={modal_Escaped}\n    >\n      <div className='modal-export-image'>\n        <div className='section-item'>\n          <div className='label'>ファイル名（拡張子を除く）</div>\n          <UI_RibbonUI_TextInput value={exportFileName}\n            onChange={(value) => {\n              set_exportFileName(value)\n            }}\n          />\n        </div>\n        <div className='section-item auto-nmber-subsection'>\n          <div className='checkbox'\n            onPointerDown={() =>\n              set_autoNumberingEnabled(!autoNumberingEnabled)\n            }\n          >\n            <UI_CheckBox value={autoNumberingEnabled} />\n            <UI_RibbonUI_InputLabel label={'連番を付加'} />\n          </div>\n          <UI_NumberInput value={exportingCount} digit={0} step={1} min={0} max={999}\n            onChange={(value) => {\n              set_exportingCount(value)\n            }}\n          />\n        </div>\n        <div className='section-item'>\n          <div className='label'>エクスポート先</div>\n          <UI_RibbonUI_TextInput value={exportDirectory}\n            onChange={(value) => {\n              set_exportDirectory(value)\n            }}\n          />\n        </div>\n        <div className='section-spacer'></div>\n        <div className='section-item'>\n          <div className='label'>画像形式</div>\n          <UI_RibbonUI_ToggleButtonGroup id={RibbonUIControlID.vectorLayer_drawLineType} currentValue={imageFileType} large={true}\n            onClick={ (id, value) =>\n              set_imageFileType(value)\n            }\n          >\n            <UI_RibbonUI_ToggleButton label=\"png\" value={ImageFileTypeID.png} />\n            <UI_RibbonUI_ToggleButton label=\"jpeg\" value={ImageFileTypeID.jpeg} />\n          </UI_RibbonUI_ToggleButtonGroup>\n        </div>\n        <div className='section-spacer'></div>\n        <div className='section-item'>\n          <div className='label'>背景</div>\n          <UI_RibbonUI_ToggleButtonGroup id={RibbonUIControlID.vectorLayer_drawLineType} currentValue={backGroundType} large={true}\n            onClick={ (id, value) =>\n              set_backGroundType(value)\n            }\n          >\n            <UI_RibbonUI_ToggleButton label=\"最後のパレットの色\" value={DocumentBackGroundTypeID.lastPaletteColor} />\n            <UI_RibbonUI_ToggleButton label=\"透過色\" value={DocumentBackGroundTypeID.transparent} />\n          </UI_RibbonUI_ToggleButtonGroup>\n        </div>\n        <div className='section-spacer'></div>\n        <div className='section-item'>\n          <UI_RibbonUI_InputLabel label={'スケール'} />\n          <UI_NumberInput value={exportScale} digit={2} step={0.01} min={0.1} max={10.0}\n            onChange={(value) => {\n              set_exportScale(value)\n            }}\n          />\n        </div>\n        <div className='ok-cancel-buttons'>\n          <button className={`app-button-primary ${!available ? 'disabled' : ''}`} onClick={ok_Clicked}>エクスポート</button>\n          <button className='app-button-cancel' onClick={cancel_Clicked}>キャンセル</button>\n        </div>\n      </div>\n    </UI_ModalWindowContainer>\n  )\n}\n","import * as React from 'react'\nimport { Platform } from '../../platform'\nimport { ModalWindowRef } from '../ui'\nimport { UI_ModalWindowContainer, UI_ModalWindowContainerRef } from './modal-window-container'\n\nexport interface UI_Modal_ImageFileReferenceRef extends ModalWindowRef {\n\n  show?(): void\n  hide?(): void\n  onClose?(filePath: string, image: HTMLImageElement)\n}\n\nexport interface UI_Modal_ImageFileReferenceParam {\n\n  uiRef: UI_Modal_ImageFileReferenceRef\n}\n\nexport function UI_Modal_ImageFileReference({ uiRef }: UI_Modal_ImageFileReferenceParam) {\n\n  const fileRef = React.useRef<HTMLInputElement>(null)\n  const imageRef = React.useRef<HTMLImageElement>(null)\n  const modalWindowContainerRef = React.useMemo<UI_ModalWindowContainerRef>(() => ({}), [])\n  const [available, set_available] = React.useState(false)\n\n  React.useEffect(() => {\n\n    uiRef.show = () => {\n\n      modalWindowContainerRef.show(uiRef)\n    }\n\n    uiRef.hide = () => {\n\n      modalWindowContainerRef.hide(uiRef)\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.hide = null\n    }\n  }, [])\n\n  function image_Clicked() {\n\n    fileRef.current.click()\n  }\n\n  function file_Changed(e: React.ChangeEvent<HTMLInputElement>) {\n\n    if (e.target.files.length == 0) {\n      return\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n\n      if (typeof(event.target.result) == 'string') {\n\n        imageRef.current.src = event.target.result\n\n        set_available(true)\n      }\n    }\n\n    reader.readAsDataURL(e.target.files[0])\n  }\n\n  function ok_Clicked() {\n\n    if (!available) {\n      return\n    }\n\n    uiRef.hide()\n\n    if (fileRef.current.files.length == 0) {\n      return\n    }\n\n    if (uiRef.onClose) {\n\n      const file = fileRef.current.files[0]\n\n      // TODO: ブラウザで使用できない'path'の使用をやめる。\n      let filePath: string\n      if ('path' in file) {\n\n        filePath = Platform.path.getPlatformIndependentPath(file['path'])\n      }\n      else {\n\n        filePath = file.name\n      }\n\n      uiRef.onClose(filePath, imageRef.current)\n    }\n  }\n\n  function cancel_Clicked() {\n\n    uiRef.hide()\n  }\n\n  function modal_Escaped() {\n\n    uiRef.hide()\n  }\n\n  return (\n    <UI_ModalWindowContainer\n      modalWindowTitle='画像ファイルの選択'\n      uiRef={modalWindowContainerRef}\n      onEscape={modal_Escaped}\n    >\n      <div className='modal-image-file-reference'>\n\n        <input type='file' accept='image/jpeg,image/png,image/gif,image/bmp' ref={fileRef} onChange={file_Changed} />\n\n        <div className='image' onClick={image_Clicked}>\n          <div className={`text ${available ? 'hidden' : ''}`} >\n            クリックして画像ファイルを<br/>選択してください。\n          </div>\n          <img ref={imageRef} className={!available ? 'hidden' : ''} />\n        </div>\n\n        <div className='ok-cancel-buttons'>\n          <button className={`app-button-primary ${!available ? 'disabled' : ''}`} onClick={ok_Clicked}>決定</button>\n          <button className='app-button-cancel' onClick={cancel_Clicked}>キャンセル</button>\n        </div>\n      </div>\n    </UI_ModalWindowContainer>\n  )\n}\n","import * as React from 'react'\nimport { int } from '../common-logics'\nimport { RadioSelectionOption, UI_RadioButtons } from '../ui-common-controls'\nimport { ModalWindowID, ModalWindowRef } from '../ui'\nimport { UI_ModalWindowContainer, UI_ModalWindowContainerRef } from './modal-window-container'\n\nexport interface UI_Modal_RadioSelectionRef extends ModalWindowRef {\n\n  show?(windowTitle: string, options: RadioSelectionOption[], selectedIndex: int): void\n  hide?(): void\n\n  selection_Fixed?: (selectedOption: RadioSelectionOption) => void\n  selection_Cancled?: () => void\n}\n\nexport interface UI_Modal_RadioSelectionParam {\n\n  uiRef: UI_Modal_RadioSelectionRef\n}\n\nexport class ModalWindowParam_RadioSelection {\n\n  modalWindowID = ModalWindowID.openImageReferenceWindow\n  modalWindowTitle = ''\n  uiRef: UI_Modal_RadioSelectionRef = {}\n}\n\nexport function UI_Modal_RadioSelection({ uiRef }: UI_Modal_RadioSelectionParam) {\n\n  const [windowTitle, set_windowTitle] = React.useState('')\n  const [options, set_options] = React.useState<RadioSelectionOption[]>([])\n  const [selectedIndex, set_selectedIndex] = React.useState(0)\n  const modalWindowContainerRef = React.useMemo<UI_ModalWindowContainerRef>(() => ({}), [])\n\n  React.useEffect(() => {\n\n    uiRef.show = (new_WindowTitle, new_Options, new_selectedIndex) => {\n\n      set_windowTitle(new_WindowTitle)\n      set_options(new_Options)\n\n      if (new_Options.find(option => option.index == new_selectedIndex)) {\n\n        set_selectedIndex(new_selectedIndex)\n      }\n      else {\n\n        throw new Error('ERROR 2001:Invalid default selected index')\n      }\n\n      modalWindowContainerRef.show(uiRef)\n    }\n\n    uiRef.hide = () => {\n\n      modalWindowContainerRef.hide(uiRef)\n    }\n\n    return function cleanup() {\n\n      uiRef.show = null\n      uiRef.hide = null\n    }\n  }, [])\n\n  function option_Clicked(option: RadioSelectionOption) {\n\n    set_selectedIndex(option.index)\n  }\n\n  function ok_Clicked() {\n\n    if (uiRef.selection_Fixed) {\n\n      const option = options.find(opt => opt.index == selectedIndex)\n\n      uiRef.selection_Fixed(option)\n    }\n\n    uiRef.hide()\n  }\n\n  function cancel_Clicked() {\n\n    uiRef.hide()\n\n    if (uiRef.selection_Cancled) {\n\n      uiRef.selection_Cancled()\n    }\n  }\n\n  function modal_Escaped() {\n\n    uiRef.hide()\n  }\n\n  return (\n    <UI_ModalWindowContainer\n      modalWindowTitle={windowTitle}\n      uiRef={modalWindowContainerRef}\n      onEscape={modal_Escaped}\n    >\n      <div className='modal-radio-selection'>\n        <div className='options'>\n          <UI_RadioButtons\n            options={options}\n            selectedIndex={selectedIndex}\n            onClick={option_Clicked}\n          />\n        </div>\n        <div className='ok-cancel-buttons'>\n          <button className={`app-button-primary`} onClick={ok_Clicked}>確定</button>\n          <button className='app-button-cancel' onClick={cancel_Clicked}>キャンセル</button>\n        </div>\n      </div>\n    </UI_ModalWindowContainer>\n  )\n}\n","import * as React from 'react';\nimport { MainCommandButtonID } from '../ui/constants';\nimport { UI_CommandButtonItem, UI_CommandButtons, UI_CommandButtonsRef } from '../ui-common-controls';\n\nexport interface UI_FooterOperationPanelRef {\n\n  isForMobile: boolean\n\n  button_Click?: (buttonID: MainCommandButtonID) => void;\n}\n\nexport interface UI_FooterOperationPanelParam {\n\n  uiRef: UI_FooterOperationPanelRef;\n}\n\nexport function UI_FooterOperationPanel({ uiRef }: UI_FooterOperationPanelParam ) {\n\n  const edit_CommandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: MainCommandButtonID.undo, icon: 'undo', title: 'もどに戻す' },\n        { index: MainCommandButtonID.redo, icon: 'redo', title: 'やりなおし' },\n        { index: 9001, icon: '', isSeparator: true },\n        { index: MainCommandButtonID.saveFile, icon: 'save', title: '保存' },\n        { index: 9002, icon: '', isSeparator: true },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        if (uiRef.button_Click) {\n\n          uiRef.button_Click(item.index);\n        }\n      }\n    }\n  }, [])\n\n  const view_CommandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: MainCommandButtonID.touchOperationPanel, icon: 'touchoperationpanel', title: 'タッチ操作パネルの表示' },\n        { index: MainCommandButtonID.layerWindow, icon: 'layers', title: 'レイヤーパネルの表示' },\n        { index: MainCommandButtonID.paletteWindow, icon: 'palette', title: 'パレットパネルの表示' },\n        { index: MainCommandButtonID.colorMixerWindow, icon: 'colorize', title: 'カラーミキサーパネルの表示' },\n        { index: MainCommandButtonID.timeLineWindow, icon: 'playcircle', title: 'タイムラインパネルの表示' },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        if (uiRef.button_Click) {\n\n          uiRef.button_Click(item.index);\n        }\n      }\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      <div className={`footer-ui-container-left ${uiRef.isForMobile ? 'mobile-screen' : ''}`}>\n        <UI_CommandButtons uiRef={edit_CommandButtonsRef}/>\n      </div>\n      <div className={`footer-ui-container-right ${uiRef.isForMobile ? 'mobile-screen' : ''}`}>\n        <UI_CommandButtons uiRef={view_CommandButtonsRef}/>\n      </div>\n    </React.Fragment>\n    );\n}\n","import * as React from 'react'\nimport { MainCommandButtonID } from '../ui/constants'\nimport { UI_CommandButtonItem, UI_CommandButtons, UI_CommandButtonsRef } from '../ui-common-controls'\n\nexport interface UI_HeaderWindowRef {\n\n  update?(): void\n\n  commandButton_Click?: (id: MainCommandButtonID) => void\n}\n\nexport interface UI_HeaderWindowParam {\n\n  uiRef: UI_HeaderWindowRef\n}\n\nexport function UI_HeaderWindow({ uiRef }: UI_HeaderWindowParam) {\n\n  const file_CommandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: MainCommandButtonID.openFile, icon: 'folder', title: 'ファイルを開く' },\n        { index: MainCommandButtonID.saveFile, icon: 'save', title: '保存' },\n        { index: MainCommandButtonID.export, icon: 'export', title: 'エクスポート' },\n        { index: MainCommandButtonID.undo, icon: 'undo', title: '元に戻す' },\n        { index: MainCommandButtonID.redo, icon: 'redo', title: 'やり直し' },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        if (uiRef.commandButton_Click) {\n\n          uiRef.commandButton_Click(item.index)\n        }\n      }\n    }\n  }, [])\n\n  const view_CommandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: MainCommandButtonID.layerWindow, icon: 'layers' },\n        { index: MainCommandButtonID.paletteWindow, icon: 'palette' },\n        { index: MainCommandButtonID.colorMixerWindow, icon: 'colorize' },\n        { index: MainCommandButtonID.timeLineWindow, icon: 'playcircle' },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        if (uiRef.commandButton_Click) {\n\n          uiRef.commandButton_Click(item.index)\n        }\n      }\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n      return function cleanup() {\n\n          uiRef.update = null\n      }\n  }, [])\n\n  return (\n    <React.Fragment>\n\n        <div className='file-commands'>\n          <UI_CommandButtons uiRef={file_CommandButtonsRef} />\n        </div>\n        <div className='file-name'>\n          <input type=\"text\" id=\"fileName\" />\n        </div>\n        <div className='view-commands'>\n          <UI_CommandButtons uiRef={view_CommandButtonsRef} />\n        </div>\n\n    </React.Fragment>\n  )\n}\n","import * as React from 'react'\nimport { DocumentContext } from '../context'\nimport { OnionSkinMode } from '../document-data'\nimport { int } from '../common-logics'\nimport { MainCommandButtonID, NumberInputControlID } from '../ui/constants'\nimport { UI_CommandButtonItem, UI_CommandButtons, UI_CommandButtonsRef, UI_NumberSpinner } from '../ui-common-controls'\nimport { UI_PopoverContainerAlign, UI_SelectBox, UI_SelectBoxOption, UI_SelectBoxPopoverRef } from '../ui-popover'\n\nexport interface UI_TimeLineWindowRef {\n\n  update?: (ctx: DocumentContext) => void\n  commandButton_Clicked?: (item: UI_CommandButtonItem) => void\n  numberInput_Changed?(id: NumberInputControlID, value: int): void\n\n  selectBoxPopoverRef?: UI_SelectBoxPopoverRef\n}\n\nexport interface UI_TimeLineWindowParam {\n\n  uiRef: UI_TimeLineWindowRef\n}\n\nexport function UI_TimeLineWindow({ uiRef }: UI_TimeLineWindowParam) {\n\n  const commandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: MainCommandButtonID.timeLine_inertKeyframe, icon: 'add', title: 'キーフレームを挿入' },\n        { index: MainCommandButtonID.timeLine_deleteKeyframe, icon: 'remove', title: 'キーフレームを削除' },\n        { index: MainCommandButtonID.timeLine_moveKeyframe_minus, icon: 'arrowleft', title: 'キーフレームを前に移動' },\n        { index: MainCommandButtonID.timeLine_moveKeyframe_plus, icon: 'arrowright', title: 'キーフレームを後に移動' },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        if (uiRef.commandButton_Clicked) {\n\n          uiRef.commandButton_Clicked(item)\n        }\n      }\n    }\n  }, [])\n\n  const onionSkinModeOptions = React.useMemo<UI_SelectBoxOption[]>(() => {\n\n    return [\n      { index: OnionSkinMode.disabled, label: '非表示', data: 1 },\n      { index: OnionSkinMode.showOnTopLayer, label: '前面に表示', data: 2 },\n      { index: OnionSkinMode.showOnLowestLayer, label: '背面に表示', data: 3 },\n    ]\n  }, [])\n\n  const [maxFrame, set_maxFrame] = React.useState(0)\n  const [loopStartFrame, set_loopStartFrame] = React.useState(0)\n  const [loopEndFrame, set_loopEndFrame] = React.useState(0)\n  const [selected_OnionSkinModeOptions, set_selected_OnionSkinModeOptions] = React.useState<UI_SelectBoxOption[]>([])\n  const [onionSkinBackwardLevel, set_onionSkinBackwardLevel] = React.useState(0)\n  const [onionSkinForwardLevel, set_onionSkinForwardLevel] = React.useState(0)\n\n  React.useEffect(() => {\n\n    uiRef.update = (ctx: DocumentContext) => {\n\n      set_maxFrame(ctx.documentData.animationSettingData.maxFrame)\n      set_loopStartFrame(ctx.documentData.animationSettingData.loopStartFrame)\n      set_loopEndFrame(ctx.documentData.animationSettingData.loopEndFrame)\n      set_selected_OnionSkinModeOptions(onionSkinModeOptions.filter(option => option.data === ctx.documentData.animationSettingData.onionSkinMode))\n      set_onionSkinBackwardLevel(ctx.documentData.animationSettingData.onionSkinBackwardLevel)\n      set_onionSkinForwardLevel(ctx.documentData.animationSettingData.onionSkinForwardLevel)\n    }\n\n    return function cleanup() {\n\n      uiRef.update = null\n    }\n  }, [])\n\n  function spinnerButton_Clicked(index: int) {\n\n    uiRef.commandButton_Clicked({ index })\n  }\n\n  function onionSkinModeOptions_Changed(item: UI_SelectBoxOption | null) {\n\n    if (uiRef.numberInput_Changed && item) {\n\n      uiRef.numberInput_Changed(NumberInputControlID.onionSkinMode, item.data)\n    }\n  }\n\n  return (\n    <div className='command-buttons'>\n      <UI_CommandButtons uiRef={commandButtonsRef} />\n      <div className='command-button-group'>\n        <UI_NumberSpinner title='最大フレーム'\n          value={maxFrame}\n          buttonIndexs={[\n            MainCommandButtonID.timeLine_changeMaxFrame_minus, MainCommandButtonID.timeLine_changeMaxFrame_plus]}\n          onClick={spinnerButton_Clicked}\n        />\n        <UI_NumberSpinner title='ループ開始フレーム'\n          value={loopStartFrame}\n          buttonIndexs={[\n            MainCommandButtonID.timeLine_changeLoopStartFrame_minus, MainCommandButtonID.timeLine_changeLoopStartFrame_plus]}\n          onClick={spinnerButton_Clicked}\n        />\n        <UI_NumberSpinner title='ループ終了フレーム'\n          value={loopEndFrame}\n          buttonIndexs={[\n            MainCommandButtonID.timeLine_changeLoopEndFrame_minus, MainCommandButtonID.timeLine_changeLoopEndFrame_plus]}\n          onClick={spinnerButton_Clicked}\n        />\n      </div>\n      <div className='command-button-group'>\n        <UI_SelectBox title='オニオンスキン'\n          selectBoxPopoverRef={uiRef.selectBoxPopoverRef}\n          popoberAlign={UI_PopoverContainerAlign.top}\n          options={onionSkinModeOptions}\n          values={selected_OnionSkinModeOptions}\n          onChange={onionSkinModeOptions_Changed}\n        />\n        <UI_NumberSpinner title='オニオンスキン表示レベル（前）'\n          value={onionSkinBackwardLevel}\n          buttonIndexs={[\n            MainCommandButtonID.timeLine_changeOnionSkinBackwardLevel_minus, MainCommandButtonID.timeLine_changeOnionSkinBackwardLevel_plus]}\n          onClick={spinnerButton_Clicked}\n        />\n        <UI_NumberSpinner title='オニオンスキン表示レベル（後）'\n          value={onionSkinForwardLevel}\n          buttonIndexs={[\n            MainCommandButtonID.timeLine_changeOnionSkinForwardLevel_minus, MainCommandButtonID.timeLine_changeOnionSkinForwardLevel_plus]}\n          onClick={spinnerButton_Clicked}\n        />\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ColorLogic, float, int } from '../common-logics'\nimport { UI_ColorSlider, UI_NumberInput } from '../ui-common-controls'\n\nexport interface UI_ColorMixerWindowRef {\n\n  update?(color: Vec4): void\n\n  color_Change?: (newColor: Vec4) => void\n}\n\nexport interface UI_ColorMixerWindowParam {\n\n  uiRef: UI_ColorMixerWindowRef\n}\n\nexport function UI_ColorMixerWindow({ uiRef }: UI_ColorMixerWindowParam) {\n\n  const [rgbaValue, setRGBAValue] = React.useState(() => {\n    return vec4.fromValues(0.0, 0.0, 0.0, 1.0)\n  })\n\n  const [hsvValue, setHSVValue] = React.useState(() => {\n    return vec4.fromValues(0.0, 0.0, 0.0, 0.0)\n  })\n\n  React.useEffect(() => {\n\n    uiRef.update = (color: Vec4) => {\n\n      const newRGBA = vec4.clone(color)\n\n      setValueFromRGBA(newRGBA)\n    }\n\n    return function cleanup() {\n\n      uiRef.update = null\n    }\n  }, [])\n\n  function setValueFromRGBA(newRGBA: Vec4) {\n\n    const newHSV = vec4.create()\n    ColorLogic.rgbToHSVv(newHSV, newRGBA)\n\n    setRGBAValue(newRGBA)\n    setHSVValue(newHSV)\n\n    return newRGBA\n  }\n\n  function setValueFromHSV(newHSV: Vec4) {\n\n    const newRGBA = vec4.clone(rgbaValue)\n    ColorLogic.hsvToRGBv(newRGBA, newHSV)\n\n    setRGBAValue(newRGBA)\n    setHSVValue(newHSV)\n\n    return newRGBA\n  }\n\n  function ARGB_Changed(index: int, value: float) {\n\n    const newRGBA = vec4.clone(rgbaValue)\n    newRGBA[index] = value\n\n    const newRGBAValue = setValueFromRGBA(newRGBA)\n\n    if (uiRef.color_Change) {\n\n      uiRef.color_Change(newRGBAValue)\n    }\n\n    // console.log('onChangeARGB', index, newRGBAValue)\n  }\n\n  function HSV_Changed(index: int, value: float) {\n\n    const newHSV = vec4.clone(hsvValue)\n    newHSV[index] = value\n\n    const newRGBAValue = setValueFromHSV(newHSV)\n\n    if (uiRef.color_Change) {\n\n      uiRef.color_Change(newRGBAValue)\n    }\n\n    // console.log('onChangeHSV', index, newRGBAValue)\n  }\n\n  return (\n    <div className=\"color-mixer-window\">\n      <canvas className=\"color-canvas\" id=\"colorMixer_colorCanvas\"></canvas>\n      <ColorSlider label=\"A\" trackColor=\"#888\" index={3} value={rgbaValue[3]} onChange={ARGB_Changed} />\n      <ColorSlider label=\"R\" trackColor=\"#f55\" index={0} value={rgbaValue[0]} onChange={ARGB_Changed} />\n      <ColorSlider label=\"G\" trackColor=\"#0d0\" index={1} value={rgbaValue[1]} onChange={ARGB_Changed} />\n      <ColorSlider label=\"B\" trackColor=\"#22d\" index={2} value={rgbaValue[2]} onChange={ARGB_Changed} />\n      <ColorSlider label=\"H\" trackColor=\"#dd0\" index={0} value={hsvValue[0]} onChange={HSV_Changed}  />\n      <ColorSlider label=\"S\" trackColor=\"#0dd\" index={1} value={hsvValue[1]} onChange={HSV_Changed}  />\n      <ColorSlider label=\"V\" trackColor=\"#d0d\" index={2} value={hsvValue[2]} onChange={HSV_Changed}  />\n    </div>\n  )\n}\n\ninterface ColorSliderParam {\n\n  label: string\n  trackColor: string\n  index: number\n  value: number\n  onChange?: (index: int, value: float) => void\n}\n\nfunction ColorSlider({label, trackColor, index, value, onChange}: ColorSliderParam) {\n\n  const input_Ref = React.useRef<HTMLInputElement>(null)\n\n  function input_Changed(newValue: number) {\n\n    if (!onChange) {\n      return\n    }\n\n    onChange(index, newValue)\n  }\n\n  function slider_Changed(newValue: number) {\n\n    if (!onChange) {\n      return\n    }\n\n    onChange(index, newValue)\n  }\n\n  return (\n    <div className=\"color-mixer-value-slider\">\n      <div className=\"label\">\n        <div className=\"label-text\">{label}</div>\n      </div>\n      <div className=\"input\" style={{borderBottom: `solid 2px ${trackColor}`}}>\n        <UI_NumberInput\n          digit={2} step={0.01} min={0.0} max={1.0}\n          value={value}\n          onChange={input_Changed}\n        />\n      </div>\n      <div className=\"range\">\n        <UI_ColorSlider\n          min={0.0} max={1.0} step={0.01}\n          value={value}\n          trackColor={trackColor}\n          onChange={slider_Changed}\n        />\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { GroupLayer } from '../document-data'\nimport { MainCommandButtonID } from '../ui/constants'\nimport { UI_CommandButtonItem, UI_CommandButtons, UI_CommandButtonsRef, UI_Icon_MaterialIcon, UI_ScrollView } from '../ui-common-controls'\nimport { ViewLayerListItem } from '../view'\n\nexport interface UI_LayerWindowRef {\n\n  update?(items: ViewLayerListItem[]): void\n  scrollIntoView?(listItem: ViewLayerListItem): void\n\n  commandButton_Clicked?: (item: UI_CommandButtonItem) => void\n  item_Clicked?: (item: ViewLayerListItem) => void\n  visibility_Clicked?: (item: ViewLayerListItem) => void\n  expander_Clicked?: (item: ViewLayerListItem) => void\n}\n\nexport interface UI_LayerWindowParam {\n\n  uiRef: UI_LayerWindowRef\n}\n\nexport function UI_LayerWindow({ uiRef }: UI_LayerWindowParam) {\n\n  const [listItems, set_listItem] = React.useState<ViewLayerListItem[]>([])\n\n  const commandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: MainCommandButtonID.layer_addLayer, icon: 'add', title: 'レイヤーを追加' },\n        { index: MainCommandButtonID.layer_deleteLayer, icon: 'remove', title: 'レイヤーを削除' },\n        { index: MainCommandButtonID.layer_moveUp, icon: 'arrowup', title: 'レイヤーを上に移動' },\n        { index: MainCommandButtonID.layer_moveDown, icon: 'arrowdown', title: 'レイヤーを下に移動' },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        uiRef.commandButton_Clicked(item)\n      }\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    uiRef.update = (items) => {\n\n      set_listItem(items.slice())\n    }\n\n    return function cleanup() {\n\n      uiRef.update = null\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    uiRef.scrollIntoView = (item) => {\n\n      const target_rowItem = listItems.find(rowItem => rowItem == item)\n\n      if (target_rowItem) {\n\n        target_rowItem.scrollIntoView()\n      }\n    }\n\n    return function cleanup() {\n\n      uiRef.scrollIntoView = null\n    }\n  }, [listItems])\n\n  return (\n    <div className=\"layer-window\">\n      <div className='command-buttons-container'>\n        <UI_CommandButtons uiRef={commandButtonsRef} />\n      </div>\n      <UI_ScrollView wheelScrollY={15}>\n        <div className='layer-window-items'>\n          {\n            listItems.map(rowItem => (\n              <LayerWindowRow key={rowItem.index} listItem={rowItem} uiRef={uiRef} />\n            ))\n          }\n        </div>\n      </UI_ScrollView>\n    </div>\n  )\n}\n\ninterface LayerWindowRowParam {\n\n  listItem: ViewLayerListItem\n  uiRef: UI_LayerWindowRef\n}\n\nfunction LayerWindowRow({ listItem, uiRef }: LayerWindowRowParam) {\n\n  const iconSize = 22\n\n  const itemElementRef = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n\n    listItem.scrollIntoView = () => {\n\n      itemElementRef.current?.scrollIntoView({\n        block: 'center'\n      })\n    }\n\n    return function cleanup() {\n\n      listItem.scrollIntoView = () => {}\n    }\n  }, [listItem])\n\n  return (\n    <div\n      ref={itemElementRef}\n      className={`item ${listItem.isCurrentLayer ? 'current' : ''} ${listItem.isSelected ? 'selected' : ''}`}\n    >\n      <div className='expander'\n        style={{ paddingLeft: `${listItem.hierarchyDepth * 0.8}rem` }}\n        onPointerDown={(e) => {\n          // check button to prevent ScrollView scrolling when right mouse click\n          if (e.button == 0) {\n            if (GroupLayer.isGroupLayer(listItem.layer)) {\n              uiRef.expander_Clicked(listItem)\n            }\n            else {\n              uiRef.item_Clicked(listItem)\n            }\n          }\n        }}\n      >\n        <div className='expander-icon'>\n          {\n            GroupLayer.isGroupLayer(listItem.layer)\n              && <UI_Icon_MaterialIcon iconName={ listItem.layer.isListExpanded ? 'expandmore' : 'expandright'} />\n          }\n        </div>\n      </div>\n      <div className='layer-name'\n        onPointerDown={(e) => {\n          // check button to prevent ScrollView scrolling when right mouse click\n          if (e.button == 0) {\n            uiRef.item_Clicked(listItem)\n          }\n        }}\n      >\n        {listItem.layer.name}\n      </div>\n      <div className='layer-visibility'\n        onPointerDown={(e) => {\n          // check button to prevent ScrollView scrolling when right mouse click\n          if (e.button == 0) {\n            uiRef.visibility_Clicked(listItem)\n          }\n        }}\n      >\n        <div className='visibility-icon'>\n          <UI_Icon_MaterialIcon iconName={ listItem.isVisible ? 'visible' : 'invisible'} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { PaletteColor } from '../document-data'\nimport { ColorLogic, int } from '../common-logics'\nimport { UI_CommandButtonItem, UI_CommandButtons, UI_CommandButtonsRef } from '../ui-common-controls'\nimport { PaletteSelectorWindowButtonID } from '../ui'\n\nexport interface UI_PaletteSelectorWindowRef {\n\n  update?(items: PaletteColor[]): void\n\n  setCommandButtonState?: (index: int, isSelected: boolean) => void\n\n  commandButton_Click?: (item: UI_CommandButtonItem) => void\n  item_Click?: (paletteColorIndex: int, item: PaletteColor) => void\n}\n\nexport interface UI_PaletteSelectorWindowParam {\n\n  uiRef: UI_PaletteSelectorWindowRef\n}\n\nexport function UI_PaletteSelectorWindow({ uiRef }: UI_PaletteSelectorWindowParam) {\n\n  const [items, setItems] = React.useState([] as PaletteColor[])\n\n  const commandButtonsRef = React.useMemo<UI_CommandButtonsRef>(() => {\n\n    return {\n      items: [\n        { index: PaletteSelectorWindowButtonID.lineColor, icon: 'pencil', title: '線色' },\n        { index: PaletteSelectorWindowButtonID.fillColor, icon: 'paint', title: '塗り色' },\n        { index: PaletteSelectorWindowButtonID.adjustmentMode, icon: 'tune', title: '現在のレイヤーに関係なく調整' },\n      ],\n\n      commandButton_Clicked: (item: UI_CommandButtonItem) => {\n\n        uiRef.commandButton_Click(item)\n      }\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    uiRef.update = (items: PaletteColor[]) => {\n\n      setItems(items.slice())\n    }\n\n    uiRef.setCommandButtonState = (index: int, isSelected: boolean) => {\n\n      commandButtonsRef.setCommandButtonState(index, isSelected)\n    }\n\n    return function cleanup() {\n\n      uiRef.update = null\n    }\n  }, [])\n\n  return (\n    <div className=\"palette-selector-window\">\n      <div className='command-buttons-container'>\n        <UI_CommandButtons uiRef={commandButtonsRef}/>\n      </div>\n      <div className='items-container'>\n        <div className='items'>\n          {\n            items.map((item, index) => (\n              <UI_PaletteSelectorItem key={index} item={item} index={index} uiRef={uiRef} />\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction UI_PaletteSelectorItem({ item, index, uiRef }: { item: PaletteColor, index: int, uiRef: UI_PaletteSelectorWindowRef }) {\n\n  return (\n    <div className='item-container'\n      onMouseDown={(e) => { if (e.button == 0) { uiRef.item_Click(index, item) } }}\n    >\n      <div className={`item ${item.isSelected ? 'selected' : ''}`}>\n        <div className=\"alpha alpha-checker-background-pallete\">\n          <div className=\"alpha-color\" style={{backgroundColor:`rgba(${ColorLogic.rgbaToRgbaString(item.color)})`}}></div>\n        </div>\n        <div className=\"rgb\" style={{backgroundColor:`#${ColorLogic.rgbToHex2String(item.color)}`}}></div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { SideBarContentID } from '../ui/constants'\n\nexport interface UI_SideBarContentInfo {\n\n  key: number\n  id: SideBarContentID\n  component: any\n  uiRef: any\n  icon: string\n  isOpened?: boolean\n}\n\nexport interface UI_SideBarContainerRef {\n\n  update?: () => void\n  setContentOpened?: (id: SideBarContentID, opened: boolean) => void\n  isContentOpened?: (id: SideBarContentID) => boolean\n  toggleVisibility?: (id: SideBarContentID) => void\n  onContentOpened?: (cotentInfo: UI_SideBarContentInfo) => void\n  onContentClosed?: (cotentInfo: UI_SideBarContentInfo) => void\n}\n\nexport interface UI_SideBarContainerParam {\n\n  dockingTo: 'left' | 'right'\n  isMobileMode: boolean\n  contents: UI_SideBarContentInfo[]\n  uiRef: UI_SideBarContainerRef\n}\n\nexport function UI_SideBarContainer({ dockingTo, isMobileMode, contents, uiRef }: UI_SideBarContainerParam ) {\n\n  const [contentInfos, set_contentInfos] = React.useState(contents)\n\n  React.useEffect(() => {\n\n    uiRef.update = () => {\n\n      updateContents()\n    }\n\n    uiRef.setContentOpened = (id, opened) => {\n\n      const contentInfo = getContentInfo(id)\n\n      setContentOpened(contentInfo, opened)\n    }\n\n    uiRef.isContentOpened = (id) => {\n\n      const contentInfo = getContentInfo(id)\n\n      return contentInfo.isOpened ?? false\n    }\n\n    uiRef.toggleVisibility = (id) => {\n\n      const contentInfo = getContentInfo(id)\n\n      tab_Clicked(contentInfo)\n    }\n\n    return function cleanup() {\n\n      uiRef.update = null\n      uiRef.toggleVisibility = null\n      uiRef.setContentOpened = null\n    }\n  }, [])\n\n  function leftRightClass(): string {\n\n    return (dockingTo == 'left' ? 'left-panel' : 'right-panel')\n  }\n\n  function closedClass(contentInfo: UI_SideBarContentInfo): string {\n\n    return (!contentInfo.isOpened ? 'closed' : '')\n  }\n\n  function getContentInfo(id: SideBarContentID) {\n\n    return contents.find(ct => ct.id == id)\n  }\n\n  function setContentOpened(contentInfo: UI_SideBarContentInfo, open: boolean) {\n\n    contentInfo.isOpened = open\n  }\n\n  function updateContents() {\n\n    set_contentInfos(contentInfos.slice())\n  }\n\n  function tab_Clicked(contentInfo: UI_SideBarContentInfo) {\n\n    const contendOpened = !contentInfo.isOpened\n\n    setContentOpened(contentInfo, !contentInfo.isOpened)\n\n    updateContents()\n\n    if (contendOpened) {\n\n      if (uiRef.onContentOpened) {\n\n        uiRef.onContentOpened(contentInfo)\n      }\n    }\n    else {\n\n      if (uiRef.onContentClosed) {\n\n        uiRef.onContentClosed(contentInfo)\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className={`side-panel-tabs ${contents.length == 0 ? ' hidden': ''} ${isMobileMode ? 'hidden' : ''}`}>\n        {contentInfos.map(contentInfo => (\n            <div key={contentInfo.key} className={`side-panel-tab ${leftRightClass()} ${closedClass(contentInfo)}`}\n              onPointerDown={() => tab_Clicked(contentInfo)}\n            >\n              <i className=\"material-icons\">{contentInfo.icon}</i>\n            </div>\n          )\n        )}\n      </div>\n      <div className={`side-panel-contents ${leftRightClass()} ${isMobileMode ? 'mobile-screen' : ''}`}>\n        {contentInfos.map(contentInfo => (\n            <div key={contentInfo.key} className={`side-panel-content ${leftRightClass()} ${closedClass(contentInfo)}`}>\n              <div className={`content-container ${leftRightClass()}`}>\n                <div className={`content-inner-container ${closedClass(contentInfo)}`}>\n                  <contentInfo.component uiRef={contentInfo.uiRef}></contentInfo.component>\n                </div>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </React.Fragment>\n  )\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { App_Main, MainProcessStateID } from './app/app-main'\nimport { SideBarContentID } from './app/ui'\nimport { UI_Dialog_DocumentFiler, UI_Dialog_ShortcutKeys } from './app/ui-dialog-screen'\nimport { UI_Modal_ExportImage, UI_Modal_ImageFileReference, UI_Modal_RadioSelection } from './app/ui-modal-window'\nimport { UI_FooterOperationPanel, UI_HeaderWindow, UI_TimeLineWindow } from './app/ui-panel'\nimport { UI_PopoverRouter } from './app/ui-popover'\nimport { UI_RibbonUI } from './app/ui-ribbon'\nimport { UI_ColorMixerWindow, UI_LayerWindow, UI_PaletteSelectorWindow, UI_SideBarContainer } from './app/ui-sidebar'\nimport { LocalSetting, UserSettingFileLogic } from './app/user-setting'\nimport { UserUIStateLogic } from './app/user-setting/user-ui-state'\nimport { Platform } from './platform'\nimport { UserStorage } from './platform/user-strage'\n\n// 大改修計画\n// ・直近の仮題と対応\n//   ・リボンＵＩの見た目をそれっぽいレベルにする\n//     ・ポージングレイヤーのとき以外はサブツールウィンドウを非表示  →  OK\n//     ・消しゴムの半径の設定項目を追加、反映する  →  OK\n//     ・アイコンの作成\n//       ・線/線分/点の選択\n//       ・移動/変形\n//       ・再分割\n//       ・太さを足す\n//       ・太さの上書き\n//       ・エクスポート範囲の設定\n//       ・ファイル参照レイヤーのファイル選択\n//   ・顔の左右対称描き機能を作る\n//     ・ベクターレイヤーの機能として作る  →  OK\n//   ・よく使う機能を固める\n//     ・線の修正ツールでドラッグしないクリックをした場合、線を選択する\n//     ・太さの修正ツール  →  もっと直感的にする\n//     ・再分割  →  わかりやすくする…プレビューみたいな表示？\n//     ・選択/編集単位をリボンに入れる\n//     ・選択ブラシの半径をリボンに入れる\n//     ・ビューのリセットを左手用ＵＩでできるようにする\n//     ・ラティス変形ツールで移動や回転をマウスだけでできるようにする  →  フロートボタンを表示する\n//   ・ダイアログのリニューアル、共通化\n//     ・レイヤーの設定\n//       ・変更が即反映されるように、ダイアログではなくウィンドウにする？\n//     ・編集単位などの設定ダイアログは削除\n//     ・ドキュメントの設定  →  可能ならリボンに入れる\n//   ・コンボボックスを別のライブラリにする\n//   ・スライダーを別のライブラリにする\n//   ・oraファイルのサムネイルで左右対称が正しく出ていない\n// ・ビューの状態をドキュメントに保存する\n//   ・ビューの状態を複数管理できるようにする\n// ・新規作成テンプレート、最近使ったファイル、ファイルを開く、保存する画面\n//   ・ソース、フォルダ、ファイルの３階層にする→デスクトップ、モバイルの両方に対応できる\n//   ・ソースにデフォルトで「最近使ったファイル」があるようにする。そこを最初に表示する。\n//   ・デスクトップでは実ディスクのファイルを参照できるようにする→ソールにはお気に入りを登録できるようにする  →  OK\n//   ・モバイルでは仮想的な階層となる→ソースは単なる１階層目のフォルダ、２階層目にはファイルかフォルダを置ける、三階層目はファイルのみ\n//   ・リストを表示できるビューをコンポーネントにする\n//   ・サムネイルを表示できるビューをコンポーネントにする\n//   ・ファイルの保存、エクスポートはフォルダ指定やファイル名の指定という意味では保存と似ている同じだが、違う部分もある。\n//     初期表示の指定はそれぞれ持つほうがよいだろう。\n//     エクスポート先は最近使った場所とは別に記憶されていると便利。\n//     モバイル対応を考えるとファイル名の入力欄は画面の上のほうに置いた方がいい。\n//     エクスポートは毎回保存先の指定画面を出さなくていい。エクスポート画面でＯＫを押したら確認せずに保存していい。保存先の指定ボタンを用意する。\n// ・塗りつぶし機能の拡充\n//   ・描画グループを単位として描画するようにする\n//     ・データ構造の変更\n//                           → VectorDrawingUnit\n//       VectorGroup         → VectorStrokeGroup\n//       VectorLine          → VectorStroke\n//       LinePoint           → VectorPoint\n//       StrokeFillType: fill, holeFill\n//     ・データのコンバート処理を作る\n//       ・連結描画しないLine、連結描画するLineをそれぞれまとめてStrokeGroupに入れ、それをDrawingUnitに入れる（一つのDrawingUnitに一つのStrokeGroupが入った状態になる）\n//     ・DrawingUnitごとに描画するようにする\n//   ・DrawingUnit、StrokeGroupの編集処理\n//     ・DrawingUnit、StrokeGroupを可視化する\n//       ・Drawモードで選択可能にする。選択した瞬間だけ矩形と強調表示で示す。また、画面上部で選択中のユニットの可視化をON/OFF可能にする\n//       ・切り取り、貼り付けなどをしたときの処理を実装する\n//       ・編集単位を画面の上部で変更できるようにする。描画単位、ストロークグループ単位を追加\n//       ・Editモードで描画単位、ストロークグループの可視化\n//         ・マウス移動時に近接する対象を強調表示する\n//     ・DrawingUnitを編集処理のループの中に足す\n//   ・StrokeGroupの頂点や線の削除をしても正しくなるようにする\n//     ・StrokeGroupの中で最も近い位置のStrokeが連結描画されるように再構築する処理を実装する\n//   ・holeFillを描画できるようにする\n//     ・Strokeのがfillのときは右回り、holeFillのときは左回りになるように自動的に再構築する処理を実装する\n//   ・ブラシ塗りの実装\n//  ・ポージング３Ｄ機能の拡充\n//    ・モデルのカスタマイズ\n//      ・パーツモデルのカスタマイズ\n//      ・プロポーションのカスタマイズ\n//      ・フロートボタンの実装\n//        ・手前と奥の切替\n//        ・入力解除\n//     ・人形の移動、回転、拡大縮小を可能にする\n//     ・親の向きに合わせて子も回転してしまう（していい部位もある）のでどうにかする\n// ・線描画ツールで角度がきついところで自動的に線を分割する機能の追加\n// ・文字入れ機能の追加\n//   ・それぞれの文字入れをプロパティパネルとして表示する\n// ・プロパティウィンドウを実装する\n//   ・ドキュメント/レイヤーの種類に応じた設定項目を表示する\n//   ・ドキュメントを選択中の場合、ファイル名やエクスポートの設定などを表示する\n//   ・ベクターレイヤーの場合はその設定を表示する\n//   ・ベクター参照レイヤーの場合はその設定を表示する\n//   ・ポージング3Dレイヤーの場合は各パーツの設定用のパネルを表示する\n// ・ウィンドウの配置を変えられるようにする、またはウィンドウ種類を変更できるようにする\n// ・レイヤーウィンドウをアウトライナーウィンドウにして、レイヤー以外の情報も表示できるようにする\n//   ・ドキュメントをルートに表示し、それを選択しているときにドキュメントフレームなどドキュメント設定を編集できるメインツールにする\n// ・ファイルの読み書きの高速化\n//   ・現状はjsでzip圧縮をしているので速くはない→Electron環境ではNode.jsの機能を使い、モバイルアプリではＯＳの機能を活用するなどして高速化したい\n\n// どこかでやる必要があること (nearest future tasks)\n// ・throwしているエラーコードの整理\n// ・名称の再考。ToolContextをDocumentContext、ToolEnvironmentをSubToolContextに変更する。\n// ・ファイル管理\n//   ・デフォルトの線の太さ設定の保存\n//   ・デフォルトのエクスポート倍率設定の保存\n//   ・デフォルトの設定のプリセットを選択できるようにする\n//   ・指定フォルダ以下のファイルの列挙表示、読み込み\n//   ・ファイルを指定してのドキュメント読み込み\n//   ・ファイルを指定してのドキュメント保存\n//   ・ドキュメントフレームの表示設定\n// ・Web向け仕様\n//   ・Webで保存をダウンロード、読み込みをブロブにする\n// ・グループレイヤーを選択したとき一定時間選択レイヤーだけを表示するときグループレイヤー以下のレイヤー全てを表示対象とする（今はグループレイヤーしか表示されない）\n// ・グループレイヤーを選択したときそれ以下のレイヤーをまとめて編集できるようにする…ベクターレイヤーだけならできるだろうけど他の種類のレイヤーも一緒に編集するのは無理？\n// ・エディットモードの各モードでラティスを表示して変形をすぐできるようにする（今はラティス変形ツールに行かないとできない）\n// ・モバイル対応\n//   ・タッチ操作をきちんとする\n//   ・画面サイズによってはダイアログがまともに表示されない問題の対応\n//   ・safariのタッチ操作の350ms遅延対策をする。wiewportwidthでできるかもしれないし、userscalable=falseかもしれないし、ライブラリを使うのが楽かもしれない。\n// ・collectEditTargetViewKeyframeLayersは何度も実行する必要はないのだが、選択状態が変わったりするたびに更新する必要があり辛いので現状リストを生成しているのでなんとかしたい\n// ・コードの全体的構造の整理\n//   ・ImageResourceがPoing3Dに依存しているのをどうにかしたい\n//   ・複数レイヤー選択、グループレイヤー選択時の全てのツールの動作確認修正\n// ・Render2DのtrnasformMatrixの更新やコピーのタイミングが分かりづらすぎる。というかRender2Dも3Dも描画関係はもうわけわからん…なんとかしる！\n// ・enumを<int>でキャストしているところは厳密といえばそうだがどうなのか\n// ・レイヤーのピッキング時、マスクされている箇所でもヒットするので、マスクも考慮した処理にする必要があるか？描画パスを使用する。\n// ・ドキュメントフレームの設定をリボンUIから変更した場合、アンドゥが実装されていないので実装する。\n\n// 既知のバグ (remaining bugs)\n// ・グループレイヤー\n//   ・グループレイヤー下のレイヤーがレイヤーウィンドウで一番下にあるとき下移動でグループを抜け出せない\n//   ・グループレイヤー選択時に、線の延長ツールでキャンバスをクリックするとエラーになる\n//   ・画面が最初に開いたときに選択されるレイヤーがグループレイヤーだと、メインツールのタブにベクターレイヤーのタブが表示されないが、\n//     メインツールのIDとしてはベクターレイヤーのツールが選択されていて、その状態から別のベクターレイヤーを選択してもメインツールのIDが変わらないのでタブの\n//     更新処理が動かず（setCurrentMainToolの中でif文で制御している）、ベクターレイヤーのメインツールのタブが表示されない\n//     グループレイヤーが選択されたときメインツールをnoneに設定することでタブが切り替わるようにすることは可能だが、リボンが空になり、見た感じが良くない。\n//     とりあえずグループレイヤーをUIの表示に関してはベクターレイヤーと同じ条件文に入れるようにしたが、贅沢をいえばグループレイヤーなりの操作ができるリボンでツールもそれに対応していることが理想だろう。遠い。\n// ・頂点を短い線で描画しているが、ビューの拡大率が大きいと長くなって線であることがわかってしまう\n// ・編集単位が辺のときでも線全体が選択色で表示される\n// ・レイヤーウィンドウでレイヤー移動時にグループの中に入れなくなっている\n// ・点の移動ツールなどで右クリックでキャンセルしたときに点の位置がモーダル中の位置で表示されつづけていた\n// ・線の連続塗りつぶしで後ろの線が削除されたときにフラグを解除していない\n// ・セグメント単位の選択ツールで選択されているセグメント単位に色が変わらず線単位で色が変わっている\n// ・座標計算でzが0.0でなくなる場合があるらしい。どこでそうなっているのか未調査手掛かりなし。\n// ・編集単位が辺単位のときの表示が線単位になっていうｒ\n// ・線のレンダリングで端点は隣の点のエッジをミラーしているが、太さが考慮されたエッジをコピーしているので端点より内側が細いとたぶんおかしくなる\n// ・oraファイルを読み込んだときに最近使ったファイルのリストが更新されていないらしい\n\n// いつかやるかも (anytime tasks)\n// ・アクティブ線、レイヤによる絞り込み処理と可視化\n// ・ミラー（上下反転）表示\n// ・線の太さに変化がある線を品質よく描画する\n// ・筆圧を利用した何か\n// ・パレット機能の拡充\n//   ・パレット編集画面にカラーピッカーを自作する\n//   ・色データを単なるRGBAではなく、表現形式や混色のベースとなる色情報まで持てるようにする\n//   ・メインライト、バックライト、フィルライトのライティングによる色作成機能\n// ・レイヤーカラーをどこかに表示する\n// ・塗りつぶし関連\n//   ・既存の線を連続塗りつぶし設定するツール\n// ・編集操作\n//   ・線の複製\n//   ・グループの複製\n//   ・レイヤーの複製\n//   ・ラティス変形ツール\n//   ・アンカーの表示/非表示をツールで切り替えるようにする\n//   ・角度を指定した後での拡縮操作\n// ・モディファイア\n// ・直線の点削減アルゴリズムの改良\n//   ・直線上の点は削減する\n//   ・曲線が曲がった量が一定を超えたところでそこまでの部分曲線の真ん中に点を配置するという方法、部分曲線に点が一つしかない場合どうするか？\n\n// 終わったもの (done)\n// ・ = new List<T> を = [] にする\n// ・グループレイヤー外のレイヤーを上移動でグループに入れるとき、グループの一番最後に挿入されるのでなく最初に挿入される不具合\n// ・ドローツールで線の最後の点が重複しているときがある？（リサンプリングで最後と同じ位置に点が追加されている？）\n// ・ポージング\n//   ・ポージングレイヤーの透明度\n//   ・ポージングで頭の角度の入力で画面の回転に対応する\n// ・ベクターレイヤー参照レイヤーが参照先のレイヤーのキーフレームの変更に追従しない。キーフレームの配列を参照しているが、配列が置き換わったときに参照を更新していないため。\n// ・バッファリングによる編集中の描画の高速化とレイヤー合成モードの実装\n//   ・isVisibleの階層を考慮した反映\n//   ・合成モード\n//   ・描画計画の作成…バッファの持ち方…枝分かれしているところは全てバッファが必要\n//       …枝分かれしているところは全てバッファが必要\n//       …並列でも合成モードが変化しているところはバッファが必要\n//       …非表示だとしてもバッファは作っておく…あるいはもう全てのレイヤーごとにバッファを用意しておくか\n//       …そうすれば常に合成モードが実現可能…ひとまずそれでいいか\n//       …バッファのサイズが問題？…画面のサイズと同じでよく、ビューの変更時に全再描画する\n//       …あくまで作業の高速化であるならば、編集中のレイヤーの上下だけレイヤーであればよい\n// ・パレット１、２ボタンをレイヤーウィンドウに置く→パレット選択ウィンドウ実装により不要となった\n// ・ファイル管理\n//   ・デフォルトのズーム倍率の設定の保存\n//   ・線の基本幅の倍率\n// ・ミラー（左右反転）表示\n//   ・キーフレームの編集がレイヤーごとにきちんと適用されているか確認\n// ・不具合\n//   ・ポージングツール以外のツールでパンしたとき３Ⅾが更新されない\n//   ・非表示時に入力スフィアをも非表示にする（不具合）\n//   ・点が一つしかない（あるいは同じ座標にある？）線が残ることがあるのを直したい\n// ・PNG出力、jpeg出力\n//   ・出力倍率を指定できるようにする、ドキュメントに記録する\n//   ・出力ファイル名を指定するダイアログを実装する。ついでに出力範囲の値指定も同じダイアログでできるようにする\n// ・編集ツールの整備\n//   ・グループレイヤーによる複数レイヤー同時編集\n//     ・編集モード表示の複数レイヤー対応\n//     ・編集モード用のツールを作成、モーダル状態にして複合した編集操作をまとめたコマンドにまとめるようにする。Enterで確定？\n//     ・選択矩形の辺を掴んでの変形の実装\n//       ・ついでにドキュメントフレームの設定も同じ仕組みを利用して指定できるように考える\n//   ・複数レイヤー選択による複数レイヤー同時編集\n// ・メインツールUIの仕様変更\n//   ・現在のレイヤーが変わったときにメインツールを自動で変更する\n//   ・ヘッダ部のコントロールを「Drawing」「Edit」「Misc」の三つに変更、Editのとき今までの編集モードにする。ヘッダ部クリックかTabで切り替わるようにする。\n// ・線の太さを変えられるツールを追加\n//   ・固定の太さで上書きする機能、選択中の点に上書きする\n//   ・筆圧を線の太さに影響できるようにするとどうなるか試す\n// ・アニメーション機能\n//   ・キーフレームウィンドウを追加\n//     ・キーフレームを削除できるようにする\n//     ・キーフレームを移動できるようにする\n//   ・ドキュメントにキーフレーム情報を追加\n//   ・レイヤーのジオメトリにキーフレーム情報を追加\n// ・エクスポートの整備\n//   ・ファイル名を指定してのエクスポート\n//   ・拡大率を指定してエクスポート\n//   ・背景色を指定する\n//   ・エクスポートの描画位置がバグっているので直す（不具合）\n// ・ポージングツールの整備\n//   ・ポージングツール以外のツールでパンしたとき３Ⅾを更新する\n//   ・複数のポージングレイヤーの描画\n// ・塗りつぶし機能の追加\n//   ・連続する線として設定した線を接続して塗りつぶすことができる機能（複数の線の間を塗りつぶす機能の簡易版ともいえる）\n// ・描画ツールの追加\n//   ・点削除ブラシツール（線の点をブラシ選択の要領で削除できる）\n//   ・線の非表示ツール（線の幅を0にして描画のみしないようにできる）\n// ・ツールの整理\n//   ・ポージングツールのツールが表示しきれていないのでサブツールウィンドウをスクロール可能にする\n// ・パレット機能の実装\n//   ・線色と塗りつぶし色それぞれパレット色モードを選択できるようにする\n//   ・パレット編集ダイアログを実装する。２５色最初から生成されていて、そこから選ぶ。\n// ・レイヤーに線と塗りつぶしの描画オプションを実装する\n// ・頂点ごとの全選択、全選択解除\n// ・変形ツール\n//   平行移動、回転、拡大縮小\n//     モーダルツールの仕組みを作る→currentToolを一時的に変える→現在のツールを一時対比する変数→モーダル用のツールイベントを用意\n// ・スクラッチツールで選択中の点のみ対象にできるよう修正\n// ・編集単位ロジック\n//   ・共通のアクティブ線\n// ・線が１本もないときにエラーが出るためなんとかしる！→線の削除処理でグループの線のリストがnullになる場合があったため。直した。\n// ・編集単位選択UIの作成\n// ・編集単位ロジック\n//   ・点、線、変、レイヤーそれぞれの選択ツールクラスの作成\n//   ・編集単位選択UIの状態で選択ツールを切り替える\n// ・レイヤーカラーの設定（カラーピッカー）→レイヤーの設定ウィンドウを出して設定するようにしてみた→モーダルウィンドウの中身を実装する→絵を見ながら設定できるように\n// ・レイヤーの表示/非表示の切り替え（レイヤー名の左に目のマークを表示）\n// ・メインツールを変更したときレイヤーに応じたコンテキストの状態になるようにする\n// ・アフィン変換ツール\n// ・点の移動ツール\n// ・線スクラッチの線修正ツールの編集線のサンプリングにビューのスケールを反映\n// ・線の延長にビューのスケールが反映されていないらしい？\n// ・現在のツールに応じた全選択、全選択解除処理\n// ・移動ツールなどで操作をするたびに縦方向に小さくなっていくバグを直す\n//   ・線の延長を別ツールにする\n// ・線スクラッチの線修正ツールを実用的な使いやすさにする\n//   ・編集線上に近接位置がない点への影響度のフォールオフを無くしたり、大きくしたりしてみる\n//   ・線の延長の最初の点の扱いを調整する\n//   ・スクラッチツールで途中の点が一部だけギリギリ遠いために編集の対象にならないときがあるが、それをどうにかしたい→法線方向の影響範囲を大きくとることにした\n// ・線の太さを変えられるツールを追加\n//   ・基本の線の太さ、筆圧での最小最大幅（割合）を設定できるようにする。設定ダイアログに追加。\n// ・ファイル保存、読み込み\n//   ・ローカルストレージの設定のファイルに書き込む\n//   ・出力する範囲を設定するツールを実装する\n// ・PNG出力、jpeg出力\n//   ・出力用のCanvasを用意し、出力サイズにサイズを変更し、画像ファイルを保存する\n// ・リサンプリングツールで線の太さがビューのスケールに応じて変わってしまっている？→スムージング処理中の不具合だった\n// ・線スクラッチの点削減ツールの実現\n\nlet _Main: App_Main\n\nwindow.onload = () => {\n\n  loadSetings()\n   .then(() => {\n      initializeMain()\n      setTimeout(run, 1000 / 30)\n   })\n}\n\nasync function loadSetings() {\n\n  const currentDirectoryPath = await Platform.fileSystem.getUserDefaultDocumentDirectory()\n\n  const localSetting: LocalSetting = {\n    currentDirectoryPath,\n    referenceDirectoryPath: './test',\n    exportPath: './',\n    autoNumberingEnabled: false,\n    maxLastUsedFilePaths: 10,\n    lastUsedFilePaths: [\n      './test/test01-app-demo.v.ora',\n      './test/test02-eyes-symmetry-colored.v.ora',\n    ],\n    fileSections: [],\n    uiStates: UserUIStateLogic.createDefaultUIStates(),\n    shortcutKeySettings: []\n  }\n\n  const defaultUserStrageData = {\n    version: '0.1.1',\n    [UserSettingFileLogic.localStorage_ActiveSettingNameKey]: 'setting1',\n    setting1: localSetting\n  }\n\n  await UserStorage.load(defaultUserStrageData)\n}\n\nfunction initializeMain() {\n\n  _Main = new App_Main()\n  _Main.appView.mainWindow.attachCanvas(<HTMLCanvasElement>document.getElementById(_Main.appView.dom.ID.mainCanvas))\n  _Main.appView.editorWindow.attachCanvas(<HTMLCanvasElement>document.getElementById(_Main.appView.dom.ID.editorCanvas))\n  _Main.appView.webglWindow.attachCanvas(<HTMLCanvasElement>document.getElementById(_Main.appView.dom.ID.webglCanvas))\n  _Main.appView.timeLineWindow.canvasWindow.attachCanvas(<HTMLCanvasElement>document.getElementById(_Main.appView.dom.ID.timeLineCanvas))\n\n  const ua = navigator.userAgent;\n  _Main.appView.isForMobile = ((ua.indexOf('iPhone') > 0 || ua.indexOf('iPad') > 0 || ua.indexOf('Android') > 0 || ua.indexOf('Mobile') > 0 ))\n  _Main.appView.footerWindow.uiFooterOperationpanelRef.isForMobile = _Main.appView.isForMobile\n\n  _Main.appView.setMobileMode()\n\n  ReactDOM.render(\n    React.createElement(UI_HeaderWindow, { uiRef: _Main.appView.headerWindow.uiHeaderWindowRef }),\n    document.getElementById(_Main.appView.dom.ID.header)\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_RibbonUI, {\n      uiRef: _Main.appView.ribbonUIWindow.uiRibbonUIRef,\n      subToolWindowRef: _Main.appView.subToolWindow.uiSubToolWindowRef,\n    })\n    , document.getElementById(_Main.appView.dom.ID.ribbonUI)\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_FooterOperationPanel, {\n      uiRef: _Main.appView.footerWindow.uiFooterOperationpanelRef\n    })\n    , document.getElementById(_Main.appView.dom.ID.footerUI)\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_SideBarContainer,\n      {\n        dockingTo: 'left',\n        isMobileMode: _Main.appView.isForMobile,\n        contents: [\n        ],\n        uiRef: _Main.appView.left_SideBarContainerRef,\n      })\n    , document.getElementById(_Main.appView.dom.ID.leftSidePanel)\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_SideBarContainer,\n      {\n        dockingTo: 'right',\n        isMobileMode: _Main.appView.isForMobile,\n        contents: [\n          { key: 1, id: SideBarContentID.layerWindow, component: UI_LayerWindow, uiRef: _Main.appView.layerWindow.uiRef, icon: 'layers', isOpened: false },\n          { key: 2, id: SideBarContentID.paletteWindow, component: UI_PaletteSelectorWindow, uiRef: _Main.appView.paletteSelectorWindow.uiRef, icon: 'palette', isOpened: false },\n          { key: 3, id: SideBarContentID.colorMixerWindow, component: UI_ColorMixerWindow, uiRef: _Main.appView.colorMixerWindow.uiRef, icon: 'colorize', isOpened: false }\n        ],\n        uiRef: _Main.appView.right_SideBarContainerRef,\n      }),\n    document.getElementById(_Main.appView.dom.ID.rightSidePanel)\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_TimeLineWindow, { uiRef: _Main.appView.timeLineWindow.uiTimeLineWindowRef }),\n    document.getElementById(\"time-line-ui\")\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_PopoverRouter, {\n      mainMenuUIRef: _Main.appView.popover.mainMenuUIRef,\n      brushPropertyBoxRef: _Main.appView.popover.brushPropertyBoxRef,\n      selectBoxRef: _Main.appView.popover.selectBoxPopoverRef\n    }),\n    document.getElementById(\"popover-dock-container\")\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_Modal_RadioSelection, { uiRef: _Main.appView.modalWindow.uiRadioSelectionRef }),\n    document.getElementById(\"modal-radio-selection\")\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_Modal_ImageFileReference, { uiRef: _Main.appView.modalWindow.uiImageFileReferenceRef }),\n    document.getElementById(\"modal-image-file-ref\")\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_Modal_ExportImage, { uiRef: _Main.appView.modalWindow.uiExportImageRef }),\n    document.getElementById(\"modal-export-image\")\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_Dialog_DocumentFiler, { uiRef: _Main.appView.dialogScreen.uiDocumentFilerRef }),\n    document.getElementById(\"dialog-document-filer\")\n  )\n\n  ReactDOM.render(\n    React.createElement(UI_Dialog_ShortcutKeys, { uiRef: _Main.appView.dialogScreen.uiShortcutKeysRef }),\n    document.getElementById(\"dialog-shortcut-keys\")\n  )\n\n  _Main.appView.colorMixerWindow.colorCanvas.canvas = <HTMLCanvasElement>document.getElementById(_Main.appView.dom.ID.colorMixerWindow_colorCanvas)\n\n  _Main.onInitializeSystemDevices()\n}\n\nfunction run() {\n\n  try {\n\n    if (_Main.mainProcessState == MainProcessStateID.pause) {\n\n      setTimeout(run, 1000)\n      return\n    }\n    else if (_Main.mainProcessState == MainProcessStateID.running) {\n\n      _Main.run()\n      _Main.draw()\n    }\n    else if (_Main.mainProcessState == MainProcessStateID.systemResourceLoading) {\n\n      _Main.processLoadingSystemResources()\n    }\n    else if (_Main.mainProcessState == MainProcessStateID.documentJSONLoading) {\n\n      _Main.processLoadingDocumentFile()\n    }\n    else if (_Main.mainProcessState == MainProcessStateID.documentResourceLoading) {\n\n      _Main.processLoadingDocumentResources()\n    }\n\n    if (_Main.docContext != null && _Main.docContext.animationPlaying) {\n\n      setTimeout(run, 1000 / _Main.docContext.animationPlayingFPS)\n    }\n    else {\n\n      window.requestAnimationFrame(run)\n    }\n  }\n  catch (e) {\n    console.log(e)\n    setTimeout(run, 1000)\n  }\n}\n"],"names":["n","require$$0","r","y","B","D","E","F","G","H","I","m","a","M","N","O","P","b","R","S","T","l","p","q","t","u","x","z","A","C","J","K","v","L","Q","U","V","W","require$$1","require$$2","d","e","g","h","k","c","f","w","index","row","OnionSkinMode","LayerTypeID","FillAreaTypeID","CanvasRenderBlendMode","CanvasRenderLineCap","WebGLRenderBlendType","EditModeID","OperationUnitID","OperationOriginTypeID","SubToolID","PointerTypeID","PointerParameterID","BrushParameterID","BrushTypeID","SubToolParameterID","MainToolID","MainToolTabID","MainToolTabTypeID","DrawLineTypeID","VectorPointModifyFlagID","VectorStrokeModifyFlagID","VectorStrokeGroupModifyFlagID","VectorStrokeDrawingUnitModifyFlagID","VectorLayerGeometryModifyFlagID","VectorLayerGeometryTypeID","EyesSymmetryInputSideID","DocumentFileType","ImageFileTypeID","DocumentBackGroundTypeID","InputSideID","PostUpdateSituationTypeID","ViewPointerPressedState","ViewOperationMode","SelectionEditMode","editLayer","MainCommandButtonID","NumberInputControlID","RibbonUIControlID","SideBarContentID","NewLayerTypeID","NewKeyframeTypeID","DeleteKeyframeTypeID","OpenFileDialogTargetID","PaletteSelectorWindowButtonID","id","React.createElement","React.useRef","React.useEffect","React.Fragment","React.useCallback","UI_PopoverContainerAlign","React.useState","React.useMemo","ShortcutCommandID","lineNumber","sk","mk","documentData","buffer","cache","DrawPathOperationTypeID","DrawPathModeID","mat2d","CanvasRulerOrientation","OperationPanelButtonID","UI_Dialog_DocumentFiler_DialogType","fileSectionItems","fileItems","option","keyOptions","modifierOptions","commandOptions","LatticePointEditTypeID","TransformType","TransformModifyType","Tool_EditLinePointWidth_BrushSelect","mainTool","tab","MainProcessStateID","document","React.Children","React.cloneElement","layout","items","exportFileName","exportDirectory","ua","ReactDOM.render"],"mappings":"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CjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,KAAK,WAAW,KAAK,YAAY,EAAE;AAAA,MACjE,EAAE,eAAe,IAAI,SAAS,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"}